
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `read_verilog rtl.v; synth; write_verilog -noattr syn_yosys.v' --

1. Executing Verilog-2005 frontend: rtl.v
Parsing Verilog input from `rtl.v' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\module107'.
Generating RTLIL representation for module `\module4'.
Generating RTLIL representation for module `\module63'.
Generating RTLIL representation for module `\module11'.
Generating RTLIL representation for module `\module133'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).
Mapping positional arguments of cell module4.modinst39 (module11).
Mapping positional arguments of cell module107.modinst218 (module133).
Mapping positional arguments of cell top.modinst89 (module4).
Warning: Resizing cell port module4.modinst84.y from 17 bits to 120 bits.
Warning: Resizing cell port module4.modinst84.wire67 from 9 bits to 3 bits.
Warning: Resizing cell port module4.modinst84.wire64 from 14 bits to 12 bits.
Warning: Resizing cell port module4.modinst84.wire68 from 7 bits to 5 bits.
Warning: Resizing cell port module4.modinst39.y from 16 bits to 288 bits.
Warning: Resizing cell port module4.modinst39.wire15 from 21 bits to 3 bits.
Warning: Resizing cell port module4.modinst39.wire14 from 19 bits to 10 bits.
Warning: Resizing cell port module4.modinst39.wire12 from 21 bits to 10 bits.
Warning: Resizing cell port module107.modinst218.y from 9 bits to 854 bits.
Warning: Resizing cell port module107.modinst218.wire137 from 15 bits to 11 bits.
Warning: Resizing cell port module107.modinst218.wire134 from 14 bits to 10 bits.
Warning: Resizing cell port top.modinst245.wire109 from 16 bits to 11 bits.
Warning: Resizing cell port top.modinst245.y from 16 bits to 478 bits.
Warning: Resizing cell port top.modinst245.wire111 from 12 bits to 4 bits.
Warning: Resizing cell port top.modinst243.wire109 from 22 bits to 11 bits.
Warning: Resizing cell port top.modinst243.wire108 from 16 bits to 15 bits.
Warning: Resizing cell port top.modinst243.wire111 from 17 bits to 4 bits.
Warning: Resizing cell port top.modinst243.y from 22 bits to 478 bits.
Warning: Resizing cell port top.modinst89.y from 18 bits to 310 bits.
Warning: Resizing cell port top.modinst89.wire6 from 22 bits to 7 bits.
Warning: Resizing cell port top.modinst89.wire5 from 22 bits to 21 bits.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\module107.$proc$rtl.v:393$347'.
Cleaned up 1 empty switch.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 6 switch rules as full_case in process $proc$rtl.v:1309$1294 in module module133.
Marked 5 switch rules as full_case in process $proc$rtl.v:1219$1185 in module module133.
Marked 8 switch rules as full_case in process $proc$rtl.v:1052$926 in module module133.
Marked 2 switch rules as full_case in process $proc$rtl.v:779$720 in module module11.
Marked 3 switch rules as full_case in process $proc$rtl.v:662$639 in module module63.
Marked 2 switch rules as full_case in process $proc$rtl.v:545$495 in module module4.
Marked 1 switch rules as full_case in process $proc$rtl.v:431$382 in module module107.
Marked 1 switch rules as full_case in process $proc$rtl.v:393$347 in module module107.
Marked 4 switch rules as full_case in process $proc$rtl.v:294$194 in module module107.
Marked 4 switch rules as full_case in process $proc$rtl.v:81$11 in module top.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\module133.$proc$rtl.v:933$1524'.
  Set init value: \reg145 = 13'0000000000000
Found init rule in `\module133.$proc$rtl.v:932$1523'.
  Set init value: \reg146 = 4'0000
Found init rule in `\module133.$proc$rtl.v:931$1522'.
  Set init value: \reg147 = 22'0000000000000000000000
Found init rule in `\module133.$proc$rtl.v:930$1521'.
  Set init value: \reg148 = 16'0000000000000000
Found init rule in `\module133.$proc$rtl.v:928$1520'.
  Set init value: \reg150 = 13'0000000000000
Found init rule in `\module133.$proc$rtl.v:927$1519'.
  Set init value: \reg151 = 4'0000
Found init rule in `\module133.$proc$rtl.v:926$1518'.
  Set init value: \reg152 = 16'0000000000000000
Found init rule in `\module133.$proc$rtl.v:925$1517'.
  Set init value: \reg153 = 16'0000000000000000
Found init rule in `\module133.$proc$rtl.v:924$1516'.
  Set init value: \reg154 = 4'0000
Found init rule in `\module133.$proc$rtl.v:923$1515'.
  Set init value: \reg155 = 21'000000000000000000000
Found init rule in `\module133.$proc$rtl.v:922$1514'.
  Set init value: \reg156 = 3'000
Found init rule in `\module133.$proc$rtl.v:921$1513'.
  Set init value: \reg157 = 19'0000000000000000000
Found init rule in `\module133.$proc$rtl.v:920$1512'.
  Set init value: \reg158 = 22'0000000000000000000000
Found init rule in `\module133.$proc$rtl.v:919$1511'.
  Set init value: \reg159 = 4'0000
Found init rule in `\module133.$proc$rtl.v:918$1510'.
  Set init value: \reg160 = 13'0000000000000
Found init rule in `\module133.$proc$rtl.v:917$1509'.
  Set init value: \reg161 = 19'0000000000000000000
Found init rule in `\module133.$proc$rtl.v:916$1508'.
  Set init value: \reg162 = 17'00000000000000000
Found init rule in `\module133.$proc$rtl.v:915$1507'.
  Set init value: \reg163 = 22'0000000000000000000000
Found init rule in `\module133.$proc$rtl.v:914$1506'.
  Set init value: \reg164 = 19'0000000000000000000
Found init rule in `\module133.$proc$rtl.v:913$1505'.
  Set init value: \reg165 = 22'0000000000000000000000
Found init rule in `\module133.$proc$rtl.v:912$1504'.
  Set init value: \reg166 = 21'000000000000000000000
Found init rule in `\module133.$proc$rtl.v:911$1503'.
  Set init value: \reg167 = 4'0000
Found init rule in `\module133.$proc$rtl.v:910$1502'.
  Set init value: \reg168 = 17'00000000000000000
Found init rule in `\module133.$proc$rtl.v:909$1501'.
  Set init value: \reg169 = 17'00000000000000000
Found init rule in `\module133.$proc$rtl.v:908$1500'.
  Set init value: \reg170 = 4'0000
Found init rule in `\module133.$proc$rtl.v:907$1499'.
  Set init value: \reg171 = 7'0000000
Found init rule in `\module133.$proc$rtl.v:906$1498'.
  Set init value: \reg172 = 7'0000000
Found init rule in `\module133.$proc$rtl.v:905$1497'.
  Set init value: \reg173 = 5'00000
Found init rule in `\module133.$proc$rtl.v:899$1496'.
  Set init value: \reg179 = 5'00000
Found init rule in `\module133.$proc$rtl.v:898$1495'.
  Set init value: \reg180 = 13'0000000000000
Found init rule in `\module133.$proc$rtl.v:897$1494'.
  Set init value: \reg181 = 4'0000
Found init rule in `\module133.$proc$rtl.v:896$1493'.
  Set init value: \reg182 = 7'0000000
Found init rule in `\module133.$proc$rtl.v:895$1492'.
  Set init value: \reg183 = 5'00000
Found init rule in `\module133.$proc$rtl.v:894$1491'.
  Set init value: \reg184 = 18'000000000000000000
Found init rule in `\module133.$proc$rtl.v:893$1490'.
  Set init value: \reg185 = 20'00000000000000000000
Found init rule in `\module133.$proc$rtl.v:892$1489'.
  Set init value: \reg186 = 11'00000000000
Found init rule in `\module133.$proc$rtl.v:891$1488'.
  Set init value: \reg187 = 7'0000000
Found init rule in `\module133.$proc$rtl.v:890$1487'.
  Set init value: \reg188 = 8'00000000
Found init rule in `\module133.$proc$rtl.v:889$1486'.
  Set init value: \reg189 = 12'000000000000
Found init rule in `\module133.$proc$rtl.v:888$1485'.
  Set init value: \reg190 = 5'00000
Found init rule in `\module133.$proc$rtl.v:887$1484'.
  Set init value: \reg191 = 9'000000000
Found init rule in `\module133.$proc$rtl.v:886$1483'.
  Set init value: \reg192 = 18'000000000000000000
Found init rule in `\module133.$proc$rtl.v:885$1482'.
  Set init value: \reg193 = 12'000000000000
Found init rule in `\module133.$proc$rtl.v:883$1481'.
  Set init value: \reg195 = 13'0000000000000
Found init rule in `\module133.$proc$rtl.v:882$1480'.
  Set init value: \reg196 = 11'00000000000
Found init rule in `\module133.$proc$rtl.v:881$1479'.
  Set init value: \reg197 = 15'000000000000000
Found init rule in `\module133.$proc$rtl.v:880$1478'.
  Set init value: \reg198 = 3'000
Found init rule in `\module133.$proc$rtl.v:879$1477'.
  Set init value: \reg199 = 7'0000000
Found init rule in `\module133.$proc$rtl.v:878$1476'.
  Set init value: \reg200 = 22'0000000000000000000000
Found init rule in `\module133.$proc$rtl.v:877$1475'.
  Set init value: \reg201 = 3'000
Found init rule in `\module133.$proc$rtl.v:876$1474'.
  Set init value: \reg202 = 7'0000000
Found init rule in `\module133.$proc$rtl.v:875$1473'.
  Set init value: \reg203 = 13'0000000000000
Found init rule in `\module133.$proc$rtl.v:874$1472'.
  Set init value: \reg204 = 6'000000
Found init rule in `\module133.$proc$rtl.v:873$1471'.
  Set init value: \reg205 = 15'000000000000000
Found init rule in `\module133.$proc$rtl.v:872$1470'.
  Set init value: \reg206 = 20'00000000000000000000
Found init rule in `\module133.$proc$rtl.v:871$1469'.
  Set init value: \reg207 = 11'00000000000
Found init rule in `\module133.$proc$rtl.v:870$1468'.
  Set init value: \reg208 = 4'0000
Found init rule in `\module133.$proc$rtl.v:869$1467'.
  Set init value: \reg209 = 14'00000000000000
Found init rule in `\module133.$proc$rtl.v:868$1466'.
  Set init value: \reg210 = 20'00000000000000000000
Found init rule in `\module133.$proc$rtl.v:867$1465'.
  Set init value: \reg211 = 19'0000000000000000000
Found init rule in `\module133.$proc$rtl.v:866$1464'.
  Set init value: \reg212 = 11'00000000000
Found init rule in `\module133.$proc$rtl.v:865$1463'.
  Set init value: \reg213 = 16'0000000000000000
Found init rule in `\module133.$proc$rtl.v:864$1462'.
  Set init value: \reg214 = 10'0000000000
Found init rule in `\module11.$proc$rtl.v:742$856'.
  Set init value: \reg18 = 11'00000000000
Found init rule in `\module11.$proc$rtl.v:741$855'.
  Set init value: \reg19 = 8'00000000
Found init rule in `\module11.$proc$rtl.v:740$854'.
  Set init value: \reg20 = 3'000
Found init rule in `\module11.$proc$rtl.v:737$853'.
  Set init value: \reg23 = 20'00000000000000000000
Found init rule in `\module11.$proc$rtl.v:736$852'.
  Set init value: \reg24 = 22'0000000000000000000000
Found init rule in `\module11.$proc$rtl.v:735$851'.
  Set init value: \reg25 = 10'0000000000
Found init rule in `\module11.$proc$rtl.v:734$850'.
  Set init value: \reg26 = 4'0000
Found init rule in `\module11.$proc$rtl.v:733$849'.
  Set init value: \reg27 = 17'00000000000000000
Found init rule in `\module11.$proc$rtl.v:732$848'.
  Set init value: \reg28 = 11'00000000000
Found init rule in `\module11.$proc$rtl.v:731$847'.
  Set init value: \reg29 = 17'00000000000000000
Found init rule in `\module11.$proc$rtl.v:730$846'.
  Set init value: \reg30 = 17'00000000000000000
Found init rule in `\module11.$proc$rtl.v:729$845'.
  Set init value: \reg31 = 22'0000000000000000000000
Found init rule in `\module11.$proc$rtl.v:728$844'.
  Set init value: \reg32 = 10'0000000000
Found init rule in `\module11.$proc$rtl.v:727$843'.
  Set init value: \reg33 = 19'0000000000000000000
Found init rule in `\module11.$proc$rtl.v:724$842'.
  Set init value: \reg36 = 15'000000000000000
Found init rule in `\module11.$proc$rtl.v:723$841'.
  Set init value: \reg37 = 17'00000000000000000
Found init rule in `\module63.$proc$rtl.v:640$697'.
  Set init value: \reg73 = 15'000000000000000
Found init rule in `\module63.$proc$rtl.v:639$696'.
  Set init value: \reg74 = 22'0000000000000000000000
Found init rule in `\module63.$proc$rtl.v:638$695'.
  Set init value: \reg75 = 6'000000
Found init rule in `\module63.$proc$rtl.v:637$694'.
  Set init value: \reg76 = 10'0000000000
Found init rule in `\module63.$proc$rtl.v:636$693'.
  Set init value: \reg77 = 5'00000
Found init rule in `\module4.$proc$rtl.v:498$634'.
  Set init value: \reg51 = 22'0000000000000000000000
Found init rule in `\module4.$proc$rtl.v:497$633'.
  Set init value: \reg50 = 21'000000000000000000000
Found init rule in `\module4.$proc$rtl.v:496$632'.
  Set init value: \reg49 = 9'000000000
Found init rule in `\module4.$proc$rtl.v:495$631'.
  Set init value: \reg48 = 11'00000000000
Found init rule in `\module4.$proc$rtl.v:494$630'.
  Set init value: \reg47 = 8'00000000
Found init rule in `\module4.$proc$rtl.v:493$629'.
  Set init value: \reg46 = 18'000000000000000000
Found init rule in `\module4.$proc$rtl.v:492$628'.
  Set init value: \reg45 = 3'000
Found init rule in `\module4.$proc$rtl.v:491$627'.
  Set init value: \reg44 = 16'0000000000000000
Found init rule in `\module4.$proc$rtl.v:490$626'.
  Set init value: \reg43 = 11'00000000000
Found init rule in `\module4.$proc$rtl.v:489$625'.
  Set init value: \reg42 = 3'000
Found init rule in `\module4.$proc$rtl.v:488$624'.
  Set init value: \reg41 = 22'0000000000000000000000
Found init rule in `\module107.$proc$rtl.v:236$490'.
  Set init value: \reg115 = 12'000000000000
Found init rule in `\module107.$proc$rtl.v:235$489'.
  Set init value: \reg116 = 14'00000000000000
Found init rule in `\module107.$proc$rtl.v:234$488'.
  Set init value: \reg117 = 22'0000000000000000000000
Found init rule in `\module107.$proc$rtl.v:233$487'.
  Set init value: \reg118 = 14'00000000000000
Found init rule in `\module107.$proc$rtl.v:232$486'.
  Set init value: \reg119 = 15'000000000000000
Found init rule in `\module107.$proc$rtl.v:231$485'.
  Set init value: \reg120 = 17'00000000000000000
Found init rule in `\module107.$proc$rtl.v:230$484'.
  Set init value: \reg121 = 4'0000
Found init rule in `\module107.$proc$rtl.v:229$483'.
  Set init value: \reg122 = 7'0000000
Found init rule in `\module107.$proc$rtl.v:228$482'.
  Set init value: \reg123 = 9'000000000
Found init rule in `\module107.$proc$rtl.v:227$481'.
  Set init value: \reg124 = 9'000000000
Found init rule in `\module107.$proc$rtl.v:226$480'.
  Set init value: \reg125 = 21'000000000000000000000
Found init rule in `\module107.$proc$rtl.v:225$479'.
  Set init value: \reg126 = 21'000000000000000000000
Found init rule in `\module107.$proc$rtl.v:224$478'.
  Set init value: \reg127 = 3'000
Found init rule in `\module107.$proc$rtl.v:223$477'.
  Set init value: \reg128 = 17'00000000000000000
Found init rule in `\module107.$proc$rtl.v:222$476'.
  Set init value: \reg129 = 5'00000
Found init rule in `\module107.$proc$rtl.v:221$475'.
  Set init value: \reg130 = 14'00000000000000
Found init rule in `\module107.$proc$rtl.v:216$474'.
  Set init value: \reg220 = 3'000
Found init rule in `\module107.$proc$rtl.v:215$473'.
  Set init value: \reg221 = 13'0000000000000
Found init rule in `\module107.$proc$rtl.v:214$472'.
  Set init value: \reg222 = 7'0000000
Found init rule in `\module107.$proc$rtl.v:213$471'.
  Set init value: \reg223 = 6'000000
Found init rule in `\module107.$proc$rtl.v:212$470'.
  Set init value: \reg224 = 10'0000000000
Found init rule in `\module107.$proc$rtl.v:211$469'.
  Set init value: \reg225 = 4'0000
Found init rule in `\module107.$proc$rtl.v:209$467'.
  Set init value: \reg227 = 20'00000000000000000000
Found init rule in `\module107.$proc$rtl.v:208$466'.
  Set init value: \reg228 = 21'000000000000000000000
Found init rule in `\module107.$proc$rtl.v:206$465'.
  Set init value: \reg230 = 21'000000000000000000000
Found init rule in `\module107.$proc$rtl.v:205$464'.
  Set init value: \reg231 = 11'00000000000
Found init rule in `\module107.$proc$rtl.v:204$463'.
  Set init value: \reg232 = 9'000000000
Found init rule in `\module107.$proc$rtl.v:203$462'.
  Set init value: \reg233 = 9'000000000
Found init rule in `\module107.$proc$rtl.v:202$461'.
  Set init value: \reg234 = 13'0000000000000
Found init rule in `\module107.$proc$rtl.v:201$460'.
  Set init value: \reg235 = 7'0000000
Found init rule in `\module107.$proc$rtl.v:200$459'.
  Set init value: \reg236 = 19'0000000000000000000
Found init rule in `\top.$proc$rtl.v:37$166'.
  Set init value: \reg92 = 22'0000000000000000000000
Found init rule in `\top.$proc$rtl.v:36$165'.
  Set init value: \reg93 = 17'00000000000000000
Found init rule in `\top.$proc$rtl.v:35$164'.
  Set init value: \reg94 = 11'00000000000
Found init rule in `\top.$proc$rtl.v:34$163'.
  Set init value: \reg95 = 14'00000000000000
Found init rule in `\top.$proc$rtl.v:33$162'.
  Set init value: \reg96 = 16'0000000000000000
Found init rule in `\top.$proc$rtl.v:32$161'.
  Set init value: \reg97 = 11'00000000000
Found init rule in `\top.$proc$rtl.v:31$160'.
  Set init value: \reg98 = 18'000000000000000000
Found init rule in `\top.$proc$rtl.v:30$159'.
  Set init value: \reg99 = 6'000000
Found init rule in `\top.$proc$rtl.v:29$158'.
  Set init value: \reg100 = 16'0000000000000000
Found init rule in `\top.$proc$rtl.v:28$157'.
  Set init value: \reg101 = 17'00000000000000000
Found init rule in `\top.$proc$rtl.v:27$156'.
  Set init value: \reg102 = 20'00000000000000000000
Found init rule in `\top.$proc$rtl.v:26$155'.
  Set init value: \reg103 = 15'000000000000000
Found init rule in `\top.$proc$rtl.v:25$154'.
  Set init value: \reg104 = 20'00000000000000000000
Found init rule in `\top.$proc$rtl.v:24$153'.
  Set init value: \reg105 = 12'000000000000
Found init rule in `\top.$proc$rtl.v:23$152'.
  Set init value: \reg106 = 5'00000
Found init rule in `\top.$proc$rtl.v:17$151'.
  Set init value: \reg250 = 8'00000000
Found init rule in `\top.$proc$rtl.v:16$150'.
  Set init value: \reg251 = 8'00000000
Found init rule in `\top.$proc$rtl.v:15$149'.
  Set init value: \reg252 = 7'0000000
Found init rule in `\top.$proc$rtl.v:14$148'.
  Set init value: \reg253 = 14'00000000000000

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module133.$proc$rtl.v:933$1524'.
     1/1: $1\reg145[12:0]
Creating decoders for process `\module133.$proc$rtl.v:932$1523'.
     1/1: $1\reg146[3:0]
Creating decoders for process `\module133.$proc$rtl.v:931$1522'.
     1/1: $1\reg147[21:0]
Creating decoders for process `\module133.$proc$rtl.v:930$1521'.
     1/1: $1\reg148[15:0]
Creating decoders for process `\module133.$proc$rtl.v:928$1520'.
     1/1: $1\reg150[12:0]
Creating decoders for process `\module133.$proc$rtl.v:927$1519'.
     1/1: $1\reg151[3:0]
Creating decoders for process `\module133.$proc$rtl.v:926$1518'.
     1/1: $1\reg152[15:0]
Creating decoders for process `\module133.$proc$rtl.v:925$1517'.
     1/1: $1\reg153[15:0]
Creating decoders for process `\module133.$proc$rtl.v:924$1516'.
     1/1: $1\reg154[3:0]
Creating decoders for process `\module133.$proc$rtl.v:923$1515'.
     1/1: $1\reg155[20:0]
Creating decoders for process `\module133.$proc$rtl.v:922$1514'.
     1/1: $1\reg156[2:0]
Creating decoders for process `\module133.$proc$rtl.v:921$1513'.
     1/1: $1\reg157[18:0]
Creating decoders for process `\module133.$proc$rtl.v:920$1512'.
     1/1: $1\reg158[21:0]
Creating decoders for process `\module133.$proc$rtl.v:919$1511'.
     1/1: $1\reg159[3:0]
Creating decoders for process `\module133.$proc$rtl.v:918$1510'.
     1/1: $1\reg160[12:0]
Creating decoders for process `\module133.$proc$rtl.v:917$1509'.
     1/1: $1\reg161[18:0]
Creating decoders for process `\module133.$proc$rtl.v:916$1508'.
     1/1: $1\reg162[16:0]
Creating decoders for process `\module133.$proc$rtl.v:915$1507'.
     1/1: $1\reg163[21:0]
Creating decoders for process `\module133.$proc$rtl.v:914$1506'.
     1/1: $1\reg164[18:0]
Creating decoders for process `\module133.$proc$rtl.v:913$1505'.
     1/1: $1\reg165[21:0]
Creating decoders for process `\module133.$proc$rtl.v:912$1504'.
     1/1: $1\reg166[20:0]
Creating decoders for process `\module133.$proc$rtl.v:911$1503'.
     1/1: $1\reg167[3:0]
Creating decoders for process `\module133.$proc$rtl.v:910$1502'.
     1/1: $1\reg168[16:0]
Creating decoders for process `\module133.$proc$rtl.v:909$1501'.
     1/1: $1\reg169[16:0]
Creating decoders for process `\module133.$proc$rtl.v:908$1500'.
     1/1: $1\reg170[3:0]
Creating decoders for process `\module133.$proc$rtl.v:907$1499'.
     1/1: $1\reg171[6:0]
Creating decoders for process `\module133.$proc$rtl.v:906$1498'.
     1/1: $1\reg172[6:0]
Creating decoders for process `\module133.$proc$rtl.v:905$1497'.
     1/1: $1\reg173[4:0]
Creating decoders for process `\module133.$proc$rtl.v:899$1496'.
     1/1: $1\reg179[4:0]
Creating decoders for process `\module133.$proc$rtl.v:898$1495'.
     1/1: $1\reg180[12:0]
Creating decoders for process `\module133.$proc$rtl.v:897$1494'.
     1/1: $1\reg181[3:0]
Creating decoders for process `\module133.$proc$rtl.v:896$1493'.
     1/1: $1\reg182[6:0]
Creating decoders for process `\module133.$proc$rtl.v:895$1492'.
     1/1: $1\reg183[4:0]
Creating decoders for process `\module133.$proc$rtl.v:894$1491'.
     1/1: $1\reg184[17:0]
Creating decoders for process `\module133.$proc$rtl.v:893$1490'.
     1/1: $1\reg185[19:0]
Creating decoders for process `\module133.$proc$rtl.v:892$1489'.
     1/1: $1\reg186[10:0]
Creating decoders for process `\module133.$proc$rtl.v:891$1488'.
     1/1: $1\reg187[6:0]
Creating decoders for process `\module133.$proc$rtl.v:890$1487'.
     1/1: $1\reg188[7:0]
Creating decoders for process `\module133.$proc$rtl.v:889$1486'.
     1/1: $1\reg189[11:0]
Creating decoders for process `\module133.$proc$rtl.v:888$1485'.
     1/1: $1\reg190[4:0]
Creating decoders for process `\module133.$proc$rtl.v:887$1484'.
     1/1: $1\reg191[8:0]
Creating decoders for process `\module133.$proc$rtl.v:886$1483'.
     1/1: $1\reg192[17:0]
Creating decoders for process `\module133.$proc$rtl.v:885$1482'.
     1/1: $1\reg193[11:0]
Creating decoders for process `\module133.$proc$rtl.v:883$1481'.
     1/1: $1\reg195[12:0]
Creating decoders for process `\module133.$proc$rtl.v:882$1480'.
     1/1: $1\reg196[10:0]
Creating decoders for process `\module133.$proc$rtl.v:881$1479'.
     1/1: $1\reg197[14:0]
Creating decoders for process `\module133.$proc$rtl.v:880$1478'.
     1/1: $1\reg198[2:0]
Creating decoders for process `\module133.$proc$rtl.v:879$1477'.
     1/1: $1\reg199[6:0]
Creating decoders for process `\module133.$proc$rtl.v:878$1476'.
     1/1: $1\reg200[21:0]
Creating decoders for process `\module133.$proc$rtl.v:877$1475'.
     1/1: $1\reg201[2:0]
Creating decoders for process `\module133.$proc$rtl.v:876$1474'.
     1/1: $1\reg202[6:0]
Creating decoders for process `\module133.$proc$rtl.v:875$1473'.
     1/1: $1\reg203[12:0]
Creating decoders for process `\module133.$proc$rtl.v:874$1472'.
     1/1: $1\reg204[5:0]
Creating decoders for process `\module133.$proc$rtl.v:873$1471'.
     1/1: $1\reg205[14:0]
Creating decoders for process `\module133.$proc$rtl.v:872$1470'.
     1/1: $1\reg206[19:0]
Creating decoders for process `\module133.$proc$rtl.v:871$1469'.
     1/1: $1\reg207[10:0]
Creating decoders for process `\module133.$proc$rtl.v:870$1468'.
     1/1: $1\reg208[3:0]
Creating decoders for process `\module133.$proc$rtl.v:869$1467'.
     1/1: $1\reg209[13:0]
Creating decoders for process `\module133.$proc$rtl.v:868$1466'.
     1/1: $1\reg210[19:0]
Creating decoders for process `\module133.$proc$rtl.v:867$1465'.
     1/1: $1\reg211[18:0]
Creating decoders for process `\module133.$proc$rtl.v:866$1464'.
     1/1: $1\reg212[10:0]
Creating decoders for process `\module133.$proc$rtl.v:865$1463'.
     1/1: $1\reg213[15:0]
Creating decoders for process `\module133.$proc$rtl.v:864$1462'.
     1/1: $1\reg214[9:0]
Creating decoders for process `\module133.$proc$rtl.v:1309$1294'.
     1/20: $0\reg199[6:0]
     2/20: $0\reg198[2:0]
     3/20: $0\reg195[12:0]
     4/20: $0\reg196[10:0]
     5/20: $0\reg197[14:0]
     6/20: $0\reg200[21:0]
     7/20: $0\reg201[2:0]
     8/20: $0\reg202[6:0]
     9/20: $0\reg203[12:0]
    10/20: $0\reg204[5:0]
    11/20: $0\reg205[14:0]
    12/20: $0\reg206[19:0]
    13/20: $0\reg207[10:0]
    14/20: $0\reg208[3:0]
    15/20: $0\reg209[13:0]
    16/20: $0\reg210[19:0]
    17/20: $0\reg211[18:0]
    18/20: $0\reg212[10:0]
    19/20: $0\reg213[15:0]
    20/20: $0\reg214[9:0]
Creating decoders for process `\module133.$proc$rtl.v:1302$1287'.
     1/1: $0\reg193[11:0]
Creating decoders for process `\module133.$proc$rtl.v:1219$1185'.
     1/14: $0\reg179[4:0]
     2/14: $0\reg180[12:0]
     3/14: $0\reg181[3:0]
     4/14: $0\reg182[6:0]
     5/14: $0\reg183[4:0]
     6/14: $0\reg184[17:0]
     7/14: $0\reg185[19:0]
     8/14: $0\reg186[10:0]
     9/14: $0\reg187[6:0]
    10/14: $0\reg188[7:0]
    11/14: $0\reg189[11:0]
    12/14: $0\reg190[4:0]
    13/14: $0\reg191[8:0]
    14/14: $0\reg192[17:0]
Creating decoders for process `\module133.$proc$rtl.v:1052$926'.
     1/24: $0\reg150[12:0]
     2/24: $0\reg151[3:0]
     3/24: $0\reg152[15:0]
     4/24: $0\reg153[15:0]
     5/24: $0\reg154[3:0]
     6/24: $0\reg155[20:0]
     7/24: $0\reg156[2:0]
     8/24: $0\reg157[18:0]
     9/24: $0\reg158[21:0]
    10/24: $0\reg159[3:0]
    11/24: $0\reg160[12:0]
    12/24: $0\reg161[18:0]
    13/24: $0\reg162[16:0]
    14/24: $0\reg163[21:0]
    15/24: $0\reg164[18:0]
    16/24: $0\reg165[21:0]
    17/24: $0\reg166[20:0]
    18/24: $0\reg167[3:0]
    19/24: $0\reg168[16:0]
    20/24: $0\reg169[16:0]
    21/24: $0\reg170[3:0]
    22/24: $0\reg171[6:0]
    23/24: $0\reg172[6:0]
    24/24: $0\reg173[4:0]
Creating decoders for process `\module133.$proc$rtl.v:1035$895'.
     1/4: $0\reg148[15:0]
     2/4: $0\reg147[21:0]
     3/4: $0\reg146[3:0]
     4/4: $0\reg145[12:0]
Creating decoders for process `\module11.$proc$rtl.v:742$856'.
     1/1: $1\reg18[10:0]
Creating decoders for process `\module11.$proc$rtl.v:741$855'.
     1/1: $1\reg19[7:0]
Creating decoders for process `\module11.$proc$rtl.v:740$854'.
     1/1: $1\reg20[2:0]
Creating decoders for process `\module11.$proc$rtl.v:737$853'.
     1/1: $1\reg23[19:0]
Creating decoders for process `\module11.$proc$rtl.v:736$852'.
     1/1: $1\reg24[21:0]
Creating decoders for process `\module11.$proc$rtl.v:735$851'.
     1/1: $1\reg25[9:0]
Creating decoders for process `\module11.$proc$rtl.v:734$850'.
     1/1: $1\reg26[3:0]
Creating decoders for process `\module11.$proc$rtl.v:733$849'.
     1/1: $1\reg27[16:0]
Creating decoders for process `\module11.$proc$rtl.v:732$848'.
     1/1: $1\reg28[10:0]
Creating decoders for process `\module11.$proc$rtl.v:731$847'.
     1/1: $1\reg29[16:0]
Creating decoders for process `\module11.$proc$rtl.v:730$846'.
     1/1: $1\reg30[16:0]
Creating decoders for process `\module11.$proc$rtl.v:729$845'.
     1/1: $1\reg31[21:0]
Creating decoders for process `\module11.$proc$rtl.v:728$844'.
     1/1: $1\reg32[9:0]
Creating decoders for process `\module11.$proc$rtl.v:727$843'.
     1/1: $1\reg33[18:0]
Creating decoders for process `\module11.$proc$rtl.v:724$842'.
     1/1: $1\reg36[14:0]
Creating decoders for process `\module11.$proc$rtl.v:723$841'.
     1/1: $1\reg37[16:0]
Creating decoders for process `\module11.$proc$rtl.v:848$840'.
     1/2: $0\reg37[16:0]
     2/2: $0\reg36[14:0]
Creating decoders for process `\module11.$proc$rtl.v:838$826'.
     1/1: $0\reg33[18:0]
Creating decoders for process `\module11.$proc$rtl.v:779$720'.
     1/10: $0\reg32[9:0]
     2/10: $0\reg24[21:0]
     3/10: $0\reg23[19:0]
     4/10: $0\reg25[9:0]
     5/10: $0\reg26[3:0]
     6/10: $0\reg27[16:0]
     7/10: $0\reg28[10:0]
     8/10: $0\reg29[16:0]
     9/10: $0\reg30[16:0]
    10/10: $0\reg31[21:0]
Creating decoders for process `\module11.$proc$rtl.v:767$701'.
     1/3: $0\reg20[2:0]
     2/3: $0\reg19[7:0]
     3/3: $0\reg18[10:0]
Creating decoders for process `\module63.$proc$rtl.v:640$697'.
     1/1: $1\reg73[14:0]
Creating decoders for process `\module63.$proc$rtl.v:639$696'.
     1/1: $1\reg74[21:0]
Creating decoders for process `\module63.$proc$rtl.v:638$695'.
     1/1: $1\reg75[5:0]
Creating decoders for process `\module63.$proc$rtl.v:637$694'.
     1/1: $1\reg76[9:0]
Creating decoders for process `\module63.$proc$rtl.v:636$693'.
     1/1: $1\reg77[4:0]
Creating decoders for process `\module63.$proc$rtl.v:662$639'.
     1/5: $0\reg77[4:0]
     2/5: $0\reg74[21:0]
     3/5: $0\reg75[5:0]
     4/5: $0\reg76[9:0]
     5/5: $0\reg73[14:0]
Creating decoders for process `\module4.$proc$rtl.v:498$634'.
     1/1: $1\reg51[21:0]
Creating decoders for process `\module4.$proc$rtl.v:497$633'.
     1/1: $1\reg50[20:0]
Creating decoders for process `\module4.$proc$rtl.v:496$632'.
     1/1: $1\reg49[8:0]
Creating decoders for process `\module4.$proc$rtl.v:495$631'.
     1/1: $1\reg48[10:0]
Creating decoders for process `\module4.$proc$rtl.v:494$630'.
     1/1: $1\reg47[7:0]
Creating decoders for process `\module4.$proc$rtl.v:493$629'.
     1/1: $1\reg46[17:0]
Creating decoders for process `\module4.$proc$rtl.v:492$628'.
     1/1: $1\reg45[2:0]
Creating decoders for process `\module4.$proc$rtl.v:491$627'.
     1/1: $1\reg44[15:0]
Creating decoders for process `\module4.$proc$rtl.v:490$626'.
     1/1: $1\reg43[10:0]
Creating decoders for process `\module4.$proc$rtl.v:489$625'.
     1/1: $1\reg42[2:0]
Creating decoders for process `\module4.$proc$rtl.v:488$624'.
     1/1: $1\reg41[21:0]
Creating decoders for process `\module4.$proc$rtl.v:545$495'.
     1/11: $0\reg51[21:0]
     2/11: $0\reg43[10:0]
     3/11: $0\reg42[2:0]
     4/11: $0\reg41[21:0]
     5/11: $0\reg50[20:0]
     6/11: $0\reg49[8:0]
     7/11: $0\reg48[10:0]
     8/11: $0\reg47[7:0]
     9/11: $0\reg46[17:0]
    10/11: $0\reg45[2:0]
    11/11: $0\reg44[15:0]
Creating decoders for process `\module107.$proc$rtl.v:236$490'.
     1/1: $1\reg115[11:0]
Creating decoders for process `\module107.$proc$rtl.v:235$489'.
     1/1: $1\reg116[13:0]
Creating decoders for process `\module107.$proc$rtl.v:234$488'.
     1/1: $1\reg117[21:0]
Creating decoders for process `\module107.$proc$rtl.v:233$487'.
     1/1: $1\reg118[13:0]
Creating decoders for process `\module107.$proc$rtl.v:232$486'.
     1/1: $1\reg119[14:0]
Creating decoders for process `\module107.$proc$rtl.v:231$485'.
     1/1: $1\reg120[16:0]
Creating decoders for process `\module107.$proc$rtl.v:230$484'.
     1/1: $1\reg121[3:0]
Creating decoders for process `\module107.$proc$rtl.v:229$483'.
     1/1: $1\reg122[6:0]
Creating decoders for process `\module107.$proc$rtl.v:228$482'.
     1/1: $1\reg123[8:0]
Creating decoders for process `\module107.$proc$rtl.v:227$481'.
     1/1: $1\reg124[8:0]
Creating decoders for process `\module107.$proc$rtl.v:226$480'.
     1/1: $1\reg125[20:0]
Creating decoders for process `\module107.$proc$rtl.v:225$479'.
     1/1: $1\reg126[20:0]
Creating decoders for process `\module107.$proc$rtl.v:224$478'.
     1/1: $1\reg127[2:0]
Creating decoders for process `\module107.$proc$rtl.v:223$477'.
     1/1: $1\reg128[16:0]
Creating decoders for process `\module107.$proc$rtl.v:222$476'.
     1/1: $1\reg129[4:0]
Creating decoders for process `\module107.$proc$rtl.v:221$475'.
     1/1: $1\reg130[13:0]
Creating decoders for process `\module107.$proc$rtl.v:216$474'.
     1/1: $1\reg220[2:0]
Creating decoders for process `\module107.$proc$rtl.v:215$473'.
     1/1: $1\reg221[12:0]
Creating decoders for process `\module107.$proc$rtl.v:214$472'.
     1/1: $1\reg222[6:0]
Creating decoders for process `\module107.$proc$rtl.v:213$471'.
     1/1: $1\reg223[5:0]
Creating decoders for process `\module107.$proc$rtl.v:212$470'.
     1/1: $1\reg224[9:0]
Creating decoders for process `\module107.$proc$rtl.v:211$469'.
     1/1: $1\reg225[3:0]
Creating decoders for process `\module107.$proc$rtl.v:210$468'.
     1/1: $0\reg226[8:0]
Creating decoders for process `\module107.$proc$rtl.v:209$467'.
     1/1: $1\reg227[19:0]
Creating decoders for process `\module107.$proc$rtl.v:208$466'.
     1/1: $1\reg228[20:0]
Creating decoders for process `\module107.$proc$rtl.v:206$465'.
     1/1: $1\reg230[20:0]
Creating decoders for process `\module107.$proc$rtl.v:205$464'.
     1/1: $1\reg231[10:0]
Creating decoders for process `\module107.$proc$rtl.v:204$463'.
     1/1: $1\reg232[8:0]
Creating decoders for process `\module107.$proc$rtl.v:203$462'.
     1/1: $1\reg233[8:0]
Creating decoders for process `\module107.$proc$rtl.v:202$461'.
     1/1: $1\reg234[12:0]
Creating decoders for process `\module107.$proc$rtl.v:201$460'.
     1/1: $1\reg235[6:0]
Creating decoders for process `\module107.$proc$rtl.v:200$459'.
     1/1: $1\reg236[18:0]
Creating decoders for process `\module107.$proc$rtl.v:431$382'.
     1/7: $0\reg236[18:0]
     2/7: $0\reg230[20:0]
     3/7: $0\reg231[10:0]
     4/7: $0\reg234[12:0]
     5/7: $0\reg235[6:0]
     6/7: $0\reg232[8:0]
     7/7: $0\reg233[8:0]
Creating decoders for process `\module107.$proc$rtl.v:393$347'.
     1/7: $0\reg228[20:0]
     2/7: $0\reg227[19:0]
     3/7: $0\reg221[12:0]
     4/7: $0\reg222[6:0]
     5/7: $0\reg223[5:0]
     6/7: $0\reg224[9:0]
     7/7: $0\reg225[3:0]
Creating decoders for process `\module107.$proc$rtl.v:388$341'.
     1/1: $0\reg220[2:0]
Creating decoders for process `\module107.$proc$rtl.v:294$194'.
     1/16: $0\reg116[13:0]
     2/16: $0\reg115[11:0]
     3/16: $0\reg117[21:0]
     4/16: $0\reg118[13:0]
     5/16: $0\reg119[14:0]
     6/16: $0\reg120[16:0]
     7/16: $0\reg121[3:0]
     8/16: $0\reg122[6:0]
     9/16: $0\reg123[8:0]
    10/16: $0\reg124[8:0]
    11/16: $0\reg125[20:0]
    12/16: $0\reg126[20:0]
    13/16: $0\reg127[2:0]
    14/16: $0\reg128[16:0]
    15/16: $0\reg129[4:0]
    16/16: $0\reg130[13:0]
Creating decoders for process `\top.$proc$rtl.v:37$166'.
     1/1: $1\reg92[21:0]
Creating decoders for process `\top.$proc$rtl.v:36$165'.
     1/1: $1\reg93[16:0]
Creating decoders for process `\top.$proc$rtl.v:35$164'.
     1/1: $1\reg94[10:0]
Creating decoders for process `\top.$proc$rtl.v:34$163'.
     1/1: $1\reg95[13:0]
Creating decoders for process `\top.$proc$rtl.v:33$162'.
     1/1: $1\reg96[15:0]
Creating decoders for process `\top.$proc$rtl.v:32$161'.
     1/1: $1\reg97[10:0]
Creating decoders for process `\top.$proc$rtl.v:31$160'.
     1/1: $1\reg98[17:0]
Creating decoders for process `\top.$proc$rtl.v:30$159'.
     1/1: $1\reg99[5:0]
Creating decoders for process `\top.$proc$rtl.v:29$158'.
     1/1: $1\reg100[15:0]
Creating decoders for process `\top.$proc$rtl.v:28$157'.
     1/1: $1\reg101[16:0]
Creating decoders for process `\top.$proc$rtl.v:27$156'.
     1/1: $1\reg102[19:0]
Creating decoders for process `\top.$proc$rtl.v:26$155'.
     1/1: $1\reg103[14:0]
Creating decoders for process `\top.$proc$rtl.v:25$154'.
     1/1: $1\reg104[19:0]
Creating decoders for process `\top.$proc$rtl.v:24$153'.
     1/1: $1\reg105[11:0]
Creating decoders for process `\top.$proc$rtl.v:23$152'.
     1/1: $1\reg106[4:0]
Creating decoders for process `\top.$proc$rtl.v:17$151'.
     1/1: $1\reg250[7:0]
Creating decoders for process `\top.$proc$rtl.v:16$150'.
     1/1: $1\reg251[7:0]
Creating decoders for process `\top.$proc$rtl.v:15$149'.
     1/1: $1\reg252[6:0]
Creating decoders for process `\top.$proc$rtl.v:14$148'.
     1/1: $1\reg253[13:0]
Creating decoders for process `\top.$proc$rtl.v:169$132'.
     1/4: $0\reg253[13:0]
     2/4: $0\reg252[6:0]
     3/4: $0\reg251[7:0]
     4/4: $0\reg250[7:0]
Creating decoders for process `\top.$proc$rtl.v:81$11'.
     1/15: $0\reg106[4:0]
     2/15: $0\reg94[10:0]
     3/15: $0\reg93[16:0]
     4/15: $0\reg92[21:0]
     5/15: $0\reg95[13:0]
     6/15: $0\reg96[15:0]
     7/15: $0\reg97[10:0]
     8/15: $0\reg98[17:0]
     9/15: $0\reg99[5:0]
    10/15: $0\reg100[15:0]
    11/15: $0\reg101[16:0]
    12/15: $0\reg102[19:0]
    13/15: $0\reg103[14:0]
    14/15: $0\reg104[19:0]
    15/15: $0\reg105[11:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\module107.\reg226' from process `\module107.$proc$rtl.v:210$468'.

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\module133.\reg214' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2140' with positive edge clock.
Creating register for signal `\module133.\reg213' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2141' with positive edge clock.
Creating register for signal `\module133.\reg212' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2142' with positive edge clock.
Creating register for signal `\module133.\reg211' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2143' with positive edge clock.
Creating register for signal `\module133.\reg210' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2144' with positive edge clock.
Creating register for signal `\module133.\reg209' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2145' with positive edge clock.
Creating register for signal `\module133.\reg208' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2146' with positive edge clock.
Creating register for signal `\module133.\reg207' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2147' with positive edge clock.
Creating register for signal `\module133.\reg206' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2148' with positive edge clock.
Creating register for signal `\module133.\reg205' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2149' with positive edge clock.
Creating register for signal `\module133.\reg204' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2150' with positive edge clock.
Creating register for signal `\module133.\reg203' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2151' with positive edge clock.
Creating register for signal `\module133.\reg202' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2152' with positive edge clock.
Creating register for signal `\module133.\reg201' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2153' with positive edge clock.
Creating register for signal `\module133.\reg200' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2154' with positive edge clock.
Creating register for signal `\module133.\reg199' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2155' with positive edge clock.
Creating register for signal `\module133.\reg198' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2156' with positive edge clock.
Creating register for signal `\module133.\reg197' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2157' with positive edge clock.
Creating register for signal `\module133.\reg196' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2158' with positive edge clock.
Creating register for signal `\module133.\reg195' using process `\module133.$proc$rtl.v:1309$1294'.
  created $dff cell `$procdff$2159' with positive edge clock.
Creating register for signal `\module133.\reg193' using process `\module133.$proc$rtl.v:1302$1287'.
  created $dff cell `$procdff$2160' with positive edge clock.
Creating register for signal `\module133.\reg192' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2161' with positive edge clock.
Creating register for signal `\module133.\reg191' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2162' with positive edge clock.
Creating register for signal `\module133.\reg190' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2163' with positive edge clock.
Creating register for signal `\module133.\reg189' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2164' with positive edge clock.
Creating register for signal `\module133.\reg188' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2165' with positive edge clock.
Creating register for signal `\module133.\reg187' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2166' with positive edge clock.
Creating register for signal `\module133.\reg186' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2167' with positive edge clock.
Creating register for signal `\module133.\reg185' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2168' with positive edge clock.
Creating register for signal `\module133.\reg184' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2169' with positive edge clock.
Creating register for signal `\module133.\reg183' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2170' with positive edge clock.
Creating register for signal `\module133.\reg182' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2171' with positive edge clock.
Creating register for signal `\module133.\reg181' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2172' with positive edge clock.
Creating register for signal `\module133.\reg180' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2173' with positive edge clock.
Creating register for signal `\module133.\reg179' using process `\module133.$proc$rtl.v:1219$1185'.
  created $dff cell `$procdff$2174' with positive edge clock.
Creating register for signal `\module133.\reg173' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2175' with positive edge clock.
Creating register for signal `\module133.\reg172' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2176' with positive edge clock.
Creating register for signal `\module133.\reg171' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2177' with positive edge clock.
Creating register for signal `\module133.\reg170' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2178' with positive edge clock.
Creating register for signal `\module133.\reg169' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2179' with positive edge clock.
Creating register for signal `\module133.\reg168' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2180' with positive edge clock.
Creating register for signal `\module133.\reg167' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2181' with positive edge clock.
Creating register for signal `\module133.\reg166' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2182' with positive edge clock.
Creating register for signal `\module133.\reg165' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2183' with positive edge clock.
Creating register for signal `\module133.\reg164' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2184' with positive edge clock.
Creating register for signal `\module133.\reg163' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2185' with positive edge clock.
Creating register for signal `\module133.\reg162' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2186' with positive edge clock.
Creating register for signal `\module133.\reg161' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2187' with positive edge clock.
Creating register for signal `\module133.\reg160' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2188' with positive edge clock.
Creating register for signal `\module133.\reg159' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2189' with positive edge clock.
Creating register for signal `\module133.\reg158' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2190' with positive edge clock.
Creating register for signal `\module133.\reg157' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2191' with positive edge clock.
Creating register for signal `\module133.\reg156' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2192' with positive edge clock.
Creating register for signal `\module133.\reg155' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2193' with positive edge clock.
Creating register for signal `\module133.\reg154' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2194' with positive edge clock.
Creating register for signal `\module133.\reg153' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2195' with positive edge clock.
Creating register for signal `\module133.\reg152' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2196' with positive edge clock.
Creating register for signal `\module133.\reg151' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2197' with positive edge clock.
Creating register for signal `\module133.\reg150' using process `\module133.$proc$rtl.v:1052$926'.
  created $dff cell `$procdff$2198' with positive edge clock.
Creating register for signal `\module133.\reg148' using process `\module133.$proc$rtl.v:1035$895'.
  created $dff cell `$procdff$2199' with positive edge clock.
Creating register for signal `\module133.\reg147' using process `\module133.$proc$rtl.v:1035$895'.
  created $dff cell `$procdff$2200' with positive edge clock.
Creating register for signal `\module133.\reg146' using process `\module133.$proc$rtl.v:1035$895'.
  created $dff cell `$procdff$2201' with positive edge clock.
Creating register for signal `\module133.\reg145' using process `\module133.$proc$rtl.v:1035$895'.
  created $dff cell `$procdff$2202' with positive edge clock.
Creating register for signal `\module11.\reg37' using process `\module11.$proc$rtl.v:848$840'.
  created $dff cell `$procdff$2203' with positive edge clock.
Creating register for signal `\module11.\reg36' using process `\module11.$proc$rtl.v:848$840'.
  created $dff cell `$procdff$2204' with positive edge clock.
Creating register for signal `\module11.\reg33' using process `\module11.$proc$rtl.v:838$826'.
  created $dff cell `$procdff$2205' with positive edge clock.
Creating register for signal `\module11.\reg32' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2206' with positive edge clock.
Creating register for signal `\module11.\reg31' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2207' with positive edge clock.
Creating register for signal `\module11.\reg30' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2208' with positive edge clock.
Creating register for signal `\module11.\reg29' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2209' with positive edge clock.
Creating register for signal `\module11.\reg28' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2210' with positive edge clock.
Creating register for signal `\module11.\reg27' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2211' with positive edge clock.
Creating register for signal `\module11.\reg26' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2212' with positive edge clock.
Creating register for signal `\module11.\reg25' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2213' with positive edge clock.
Creating register for signal `\module11.\reg24' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2214' with positive edge clock.
Creating register for signal `\module11.\reg23' using process `\module11.$proc$rtl.v:779$720'.
  created $dff cell `$procdff$2215' with positive edge clock.
Creating register for signal `\module11.\reg20' using process `\module11.$proc$rtl.v:767$701'.
  created $dff cell `$procdff$2216' with positive edge clock.
Creating register for signal `\module11.\reg19' using process `\module11.$proc$rtl.v:767$701'.
  created $dff cell `$procdff$2217' with positive edge clock.
Creating register for signal `\module11.\reg18' using process `\module11.$proc$rtl.v:767$701'.
  created $dff cell `$procdff$2218' with positive edge clock.
Creating register for signal `\module63.\reg73' using process `\module63.$proc$rtl.v:662$639'.
  created $dff cell `$procdff$2219' with positive edge clock.
Creating register for signal `\module63.\reg76' using process `\module63.$proc$rtl.v:662$639'.
  created $dff cell `$procdff$2220' with positive edge clock.
Creating register for signal `\module63.\reg75' using process `\module63.$proc$rtl.v:662$639'.
  created $dff cell `$procdff$2221' with positive edge clock.
Creating register for signal `\module63.\reg74' using process `\module63.$proc$rtl.v:662$639'.
  created $dff cell `$procdff$2222' with positive edge clock.
Creating register for signal `\module63.\reg77' using process `\module63.$proc$rtl.v:662$639'.
  created $dff cell `$procdff$2223' with positive edge clock.
Creating register for signal `\module4.\reg41' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2224' with positive edge clock.
Creating register for signal `\module4.\reg42' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2225' with positive edge clock.
Creating register for signal `\module4.\reg43' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2226' with positive edge clock.
Creating register for signal `\module4.\reg44' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2227' with positive edge clock.
Creating register for signal `\module4.\reg45' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2228' with positive edge clock.
Creating register for signal `\module4.\reg46' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2229' with positive edge clock.
Creating register for signal `\module4.\reg47' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2230' with positive edge clock.
Creating register for signal `\module4.\reg48' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2231' with positive edge clock.
Creating register for signal `\module4.\reg49' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2232' with positive edge clock.
Creating register for signal `\module4.\reg50' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2233' with positive edge clock.
Creating register for signal `\module4.\reg51' using process `\module4.$proc$rtl.v:545$495'.
  created $dff cell `$procdff$2234' with positive edge clock.
Creating register for signal `\module107.\reg233' using process `\module107.$proc$rtl.v:431$382'.
  created $dff cell `$procdff$2235' with positive edge clock.
Creating register for signal `\module107.\reg232' using process `\module107.$proc$rtl.v:431$382'.
  created $dff cell `$procdff$2236' with positive edge clock.
Creating register for signal `\module107.\reg236' using process `\module107.$proc$rtl.v:431$382'.
  created $dff cell `$procdff$2237' with positive edge clock.
Creating register for signal `\module107.\reg235' using process `\module107.$proc$rtl.v:431$382'.
  created $dff cell `$procdff$2238' with positive edge clock.
Creating register for signal `\module107.\reg234' using process `\module107.$proc$rtl.v:431$382'.
  created $dff cell `$procdff$2239' with positive edge clock.
Creating register for signal `\module107.\reg231' using process `\module107.$proc$rtl.v:431$382'.
  created $dff cell `$procdff$2240' with positive edge clock.
Creating register for signal `\module107.\reg230' using process `\module107.$proc$rtl.v:431$382'.
  created $dff cell `$procdff$2241' with positive edge clock.
Creating register for signal `\module107.\reg228' using process `\module107.$proc$rtl.v:393$347'.
  created $dff cell `$procdff$2242' with positive edge clock.
Creating register for signal `\module107.\reg227' using process `\module107.$proc$rtl.v:393$347'.
  created $dff cell `$procdff$2243' with positive edge clock.
Creating register for signal `\module107.\reg225' using process `\module107.$proc$rtl.v:393$347'.
  created $dff cell `$procdff$2244' with positive edge clock.
Creating register for signal `\module107.\reg224' using process `\module107.$proc$rtl.v:393$347'.
  created $dff cell `$procdff$2245' with positive edge clock.
Creating register for signal `\module107.\reg223' using process `\module107.$proc$rtl.v:393$347'.
  created $dff cell `$procdff$2246' with positive edge clock.
Creating register for signal `\module107.\reg222' using process `\module107.$proc$rtl.v:393$347'.
  created $dff cell `$procdff$2247' with positive edge clock.
Creating register for signal `\module107.\reg221' using process `\module107.$proc$rtl.v:393$347'.
  created $dff cell `$procdff$2248' with positive edge clock.
Creating register for signal `\module107.\reg220' using process `\module107.$proc$rtl.v:388$341'.
  created $dff cell `$procdff$2249' with positive edge clock.
Creating register for signal `\module107.\reg130' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2250' with positive edge clock.
Creating register for signal `\module107.\reg129' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2251' with positive edge clock.
Creating register for signal `\module107.\reg128' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2252' with positive edge clock.
Creating register for signal `\module107.\reg127' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2253' with positive edge clock.
Creating register for signal `\module107.\reg126' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2254' with positive edge clock.
Creating register for signal `\module107.\reg125' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2255' with positive edge clock.
Creating register for signal `\module107.\reg124' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2256' with positive edge clock.
Creating register for signal `\module107.\reg123' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2257' with positive edge clock.
Creating register for signal `\module107.\reg122' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2258' with positive edge clock.
Creating register for signal `\module107.\reg121' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2259' with positive edge clock.
Creating register for signal `\module107.\reg120' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2260' with positive edge clock.
Creating register for signal `\module107.\reg119' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2261' with positive edge clock.
Creating register for signal `\module107.\reg118' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2262' with positive edge clock.
Creating register for signal `\module107.\reg117' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2263' with positive edge clock.
Creating register for signal `\module107.\reg116' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2264' with positive edge clock.
Creating register for signal `\module107.\reg115' using process `\module107.$proc$rtl.v:294$194'.
  created $dff cell `$procdff$2265' with positive edge clock.
Creating register for signal `\top.\reg253' using process `\top.$proc$rtl.v:169$132'.
  created $dff cell `$procdff$2266' with positive edge clock.
Creating register for signal `\top.\reg252' using process `\top.$proc$rtl.v:169$132'.
  created $dff cell `$procdff$2267' with positive edge clock.
Creating register for signal `\top.\reg251' using process `\top.$proc$rtl.v:169$132'.
  created $dff cell `$procdff$2268' with positive edge clock.
Creating register for signal `\top.\reg250' using process `\top.$proc$rtl.v:169$132'.
  created $dff cell `$procdff$2269' with positive edge clock.
Creating register for signal `\top.\reg106' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2270' with positive edge clock.
Creating register for signal `\top.\reg105' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2271' with positive edge clock.
Creating register for signal `\top.\reg104' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2272' with positive edge clock.
Creating register for signal `\top.\reg103' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2273' with positive edge clock.
Creating register for signal `\top.\reg102' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2274' with positive edge clock.
Creating register for signal `\top.\reg101' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2275' with positive edge clock.
Creating register for signal `\top.\reg100' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2276' with positive edge clock.
Creating register for signal `\top.\reg99' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2277' with positive edge clock.
Creating register for signal `\top.\reg98' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2278' with positive edge clock.
Creating register for signal `\top.\reg97' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2279' with positive edge clock.
Creating register for signal `\top.\reg96' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2280' with positive edge clock.
Creating register for signal `\top.\reg95' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2281' with positive edge clock.
Creating register for signal `\top.\reg94' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2282' with positive edge clock.
Creating register for signal `\top.\reg93' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2283' with positive edge clock.
Creating register for signal `\top.\reg92' using process `\top.$proc$rtl.v:81$11'.
  created $dff cell `$procdff$2284' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `module133.$proc$rtl.v:933$1524'.
Removing empty process `module133.$proc$rtl.v:932$1523'.
Removing empty process `module133.$proc$rtl.v:931$1522'.
Removing empty process `module133.$proc$rtl.v:930$1521'.
Removing empty process `module133.$proc$rtl.v:928$1520'.
Removing empty process `module133.$proc$rtl.v:927$1519'.
Removing empty process `module133.$proc$rtl.v:926$1518'.
Removing empty process `module133.$proc$rtl.v:925$1517'.
Removing empty process `module133.$proc$rtl.v:924$1516'.
Removing empty process `module133.$proc$rtl.v:923$1515'.
Removing empty process `module133.$proc$rtl.v:922$1514'.
Removing empty process `module133.$proc$rtl.v:921$1513'.
Removing empty process `module133.$proc$rtl.v:920$1512'.
Removing empty process `module133.$proc$rtl.v:919$1511'.
Removing empty process `module133.$proc$rtl.v:918$1510'.
Removing empty process `module133.$proc$rtl.v:917$1509'.
Removing empty process `module133.$proc$rtl.v:916$1508'.
Removing empty process `module133.$proc$rtl.v:915$1507'.
Removing empty process `module133.$proc$rtl.v:914$1506'.
Removing empty process `module133.$proc$rtl.v:913$1505'.
Removing empty process `module133.$proc$rtl.v:912$1504'.
Removing empty process `module133.$proc$rtl.v:911$1503'.
Removing empty process `module133.$proc$rtl.v:910$1502'.
Removing empty process `module133.$proc$rtl.v:909$1501'.
Removing empty process `module133.$proc$rtl.v:908$1500'.
Removing empty process `module133.$proc$rtl.v:907$1499'.
Removing empty process `module133.$proc$rtl.v:906$1498'.
Removing empty process `module133.$proc$rtl.v:905$1497'.
Removing empty process `module133.$proc$rtl.v:899$1496'.
Removing empty process `module133.$proc$rtl.v:898$1495'.
Removing empty process `module133.$proc$rtl.v:897$1494'.
Removing empty process `module133.$proc$rtl.v:896$1493'.
Removing empty process `module133.$proc$rtl.v:895$1492'.
Removing empty process `module133.$proc$rtl.v:894$1491'.
Removing empty process `module133.$proc$rtl.v:893$1490'.
Removing empty process `module133.$proc$rtl.v:892$1489'.
Removing empty process `module133.$proc$rtl.v:891$1488'.
Removing empty process `module133.$proc$rtl.v:890$1487'.
Removing empty process `module133.$proc$rtl.v:889$1486'.
Removing empty process `module133.$proc$rtl.v:888$1485'.
Removing empty process `module133.$proc$rtl.v:887$1484'.
Removing empty process `module133.$proc$rtl.v:886$1483'.
Removing empty process `module133.$proc$rtl.v:885$1482'.
Removing empty process `module133.$proc$rtl.v:883$1481'.
Removing empty process `module133.$proc$rtl.v:882$1480'.
Removing empty process `module133.$proc$rtl.v:881$1479'.
Removing empty process `module133.$proc$rtl.v:880$1478'.
Removing empty process `module133.$proc$rtl.v:879$1477'.
Removing empty process `module133.$proc$rtl.v:878$1476'.
Removing empty process `module133.$proc$rtl.v:877$1475'.
Removing empty process `module133.$proc$rtl.v:876$1474'.
Removing empty process `module133.$proc$rtl.v:875$1473'.
Removing empty process `module133.$proc$rtl.v:874$1472'.
Removing empty process `module133.$proc$rtl.v:873$1471'.
Removing empty process `module133.$proc$rtl.v:872$1470'.
Removing empty process `module133.$proc$rtl.v:871$1469'.
Removing empty process `module133.$proc$rtl.v:870$1468'.
Removing empty process `module133.$proc$rtl.v:869$1467'.
Removing empty process `module133.$proc$rtl.v:868$1466'.
Removing empty process `module133.$proc$rtl.v:867$1465'.
Removing empty process `module133.$proc$rtl.v:866$1464'.
Removing empty process `module133.$proc$rtl.v:865$1463'.
Removing empty process `module133.$proc$rtl.v:864$1462'.
Found and cleaned up 6 empty switches in `\module133.$proc$rtl.v:1309$1294'.
Removing empty process `module133.$proc$rtl.v:1309$1294'.
Removing empty process `module133.$proc$rtl.v:1302$1287'.
Found and cleaned up 5 empty switches in `\module133.$proc$rtl.v:1219$1185'.
Removing empty process `module133.$proc$rtl.v:1219$1185'.
Found and cleaned up 8 empty switches in `\module133.$proc$rtl.v:1052$926'.
Removing empty process `module133.$proc$rtl.v:1052$926'.
Removing empty process `module133.$proc$rtl.v:1035$895'.
Removing empty process `module11.$proc$rtl.v:742$856'.
Removing empty process `module11.$proc$rtl.v:741$855'.
Removing empty process `module11.$proc$rtl.v:740$854'.
Removing empty process `module11.$proc$rtl.v:737$853'.
Removing empty process `module11.$proc$rtl.v:736$852'.
Removing empty process `module11.$proc$rtl.v:735$851'.
Removing empty process `module11.$proc$rtl.v:734$850'.
Removing empty process `module11.$proc$rtl.v:733$849'.
Removing empty process `module11.$proc$rtl.v:732$848'.
Removing empty process `module11.$proc$rtl.v:731$847'.
Removing empty process `module11.$proc$rtl.v:730$846'.
Removing empty process `module11.$proc$rtl.v:729$845'.
Removing empty process `module11.$proc$rtl.v:728$844'.
Removing empty process `module11.$proc$rtl.v:727$843'.
Removing empty process `module11.$proc$rtl.v:724$842'.
Removing empty process `module11.$proc$rtl.v:723$841'.
Removing empty process `module11.$proc$rtl.v:848$840'.
Removing empty process `module11.$proc$rtl.v:838$826'.
Found and cleaned up 2 empty switches in `\module11.$proc$rtl.v:779$720'.
Removing empty process `module11.$proc$rtl.v:779$720'.
Removing empty process `module11.$proc$rtl.v:767$701'.
Removing empty process `module63.$proc$rtl.v:640$697'.
Removing empty process `module63.$proc$rtl.v:639$696'.
Removing empty process `module63.$proc$rtl.v:638$695'.
Removing empty process `module63.$proc$rtl.v:637$694'.
Removing empty process `module63.$proc$rtl.v:636$693'.
Found and cleaned up 3 empty switches in `\module63.$proc$rtl.v:662$639'.
Removing empty process `module63.$proc$rtl.v:662$639'.
Removing empty process `module4.$proc$rtl.v:498$634'.
Removing empty process `module4.$proc$rtl.v:497$633'.
Removing empty process `module4.$proc$rtl.v:496$632'.
Removing empty process `module4.$proc$rtl.v:495$631'.
Removing empty process `module4.$proc$rtl.v:494$630'.
Removing empty process `module4.$proc$rtl.v:493$629'.
Removing empty process `module4.$proc$rtl.v:492$628'.
Removing empty process `module4.$proc$rtl.v:491$627'.
Removing empty process `module4.$proc$rtl.v:490$626'.
Removing empty process `module4.$proc$rtl.v:489$625'.
Removing empty process `module4.$proc$rtl.v:488$624'.
Found and cleaned up 2 empty switches in `\module4.$proc$rtl.v:545$495'.
Removing empty process `module4.$proc$rtl.v:545$495'.
Removing empty process `module107.$proc$rtl.v:236$490'.
Removing empty process `module107.$proc$rtl.v:235$489'.
Removing empty process `module107.$proc$rtl.v:234$488'.
Removing empty process `module107.$proc$rtl.v:233$487'.
Removing empty process `module107.$proc$rtl.v:232$486'.
Removing empty process `module107.$proc$rtl.v:231$485'.
Removing empty process `module107.$proc$rtl.v:230$484'.
Removing empty process `module107.$proc$rtl.v:229$483'.
Removing empty process `module107.$proc$rtl.v:228$482'.
Removing empty process `module107.$proc$rtl.v:227$481'.
Removing empty process `module107.$proc$rtl.v:226$480'.
Removing empty process `module107.$proc$rtl.v:225$479'.
Removing empty process `module107.$proc$rtl.v:224$478'.
Removing empty process `module107.$proc$rtl.v:223$477'.
Removing empty process `module107.$proc$rtl.v:222$476'.
Removing empty process `module107.$proc$rtl.v:221$475'.
Removing empty process `module107.$proc$rtl.v:216$474'.
Removing empty process `module107.$proc$rtl.v:215$473'.
Removing empty process `module107.$proc$rtl.v:214$472'.
Removing empty process `module107.$proc$rtl.v:213$471'.
Removing empty process `module107.$proc$rtl.v:212$470'.
Removing empty process `module107.$proc$rtl.v:211$469'.
Removing empty process `module107.$proc$rtl.v:210$468'.
Removing empty process `module107.$proc$rtl.v:209$467'.
Removing empty process `module107.$proc$rtl.v:208$466'.
Removing empty process `module107.$proc$rtl.v:206$465'.
Removing empty process `module107.$proc$rtl.v:205$464'.
Removing empty process `module107.$proc$rtl.v:204$463'.
Removing empty process `module107.$proc$rtl.v:203$462'.
Removing empty process `module107.$proc$rtl.v:202$461'.
Removing empty process `module107.$proc$rtl.v:201$460'.
Removing empty process `module107.$proc$rtl.v:200$459'.
Found and cleaned up 1 empty switch in `\module107.$proc$rtl.v:431$382'.
Removing empty process `module107.$proc$rtl.v:431$382'.
Found and cleaned up 1 empty switch in `\module107.$proc$rtl.v:393$347'.
Removing empty process `module107.$proc$rtl.v:393$347'.
Removing empty process `module107.$proc$rtl.v:388$341'.
Found and cleaned up 4 empty switches in `\module107.$proc$rtl.v:294$194'.
Removing empty process `module107.$proc$rtl.v:294$194'.
Removing empty process `top.$proc$rtl.v:37$166'.
Removing empty process `top.$proc$rtl.v:36$165'.
Removing empty process `top.$proc$rtl.v:35$164'.
Removing empty process `top.$proc$rtl.v:34$163'.
Removing empty process `top.$proc$rtl.v:33$162'.
Removing empty process `top.$proc$rtl.v:32$161'.
Removing empty process `top.$proc$rtl.v:31$160'.
Removing empty process `top.$proc$rtl.v:30$159'.
Removing empty process `top.$proc$rtl.v:29$158'.
Removing empty process `top.$proc$rtl.v:28$157'.
Removing empty process `top.$proc$rtl.v:27$156'.
Removing empty process `top.$proc$rtl.v:26$155'.
Removing empty process `top.$proc$rtl.v:25$154'.
Removing empty process `top.$proc$rtl.v:24$153'.
Removing empty process `top.$proc$rtl.v:23$152'.
Removing empty process `top.$proc$rtl.v:17$151'.
Removing empty process `top.$proc$rtl.v:16$150'.
Removing empty process `top.$proc$rtl.v:15$149'.
Removing empty process `top.$proc$rtl.v:14$148'.
Removing empty process `top.$proc$rtl.v:169$132'.
Found and cleaned up 4 empty switches in `\top.$proc$rtl.v:81$11'.
Removing empty process `top.$proc$rtl.v:81$11'.
Cleaned up 36 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
<suppressed ~98 debug messages>
Optimizing module module11.
<suppressed ~13 debug messages>
Optimizing module module63.
<suppressed ~17 debug messages>
Optimizing module module4.
<suppressed ~25 debug messages>
Optimizing module module107.
<suppressed ~29 debug messages>
Optimizing module top.
<suppressed ~24 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \top..
Removed 108 unused cells and 959 unused wires.
<suppressed ~279 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module module107..
checking module module11..
checking module module133..
checking module module4..
checking module module63..
checking module top..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~1 debug messages>
Optimizing module module11.
Optimizing module module133.
<suppressed ~3 debug messages>
Optimizing module module4.
<suppressed ~1 debug messages>
Optimizing module module63.
Optimizing module top.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
<suppressed ~24 debug messages>
Finding identical cells in module `\module11'.
<suppressed ~36 debug messages>
Finding identical cells in module `\module133'.
<suppressed ~51 debug messages>
Finding identical cells in module `\module4'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 42 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module107..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $ternary$rtl.v:287$176.
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$rtl.v:1072$946: \wire136 -> { \wire136 [20:1] 1'0 }
      Replacing known input bits on port B of cell $ternary$rtl.v:1072$946: { 17'00000000000000000 \wire140 } -> { 17'00000000000000000 \wire140 [3:2] 1'1 \wire140 [0] }
      Replacing known input bits on port A of cell $ternary$rtl.v:1100$1003: { \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] } -> 19'0000000000000000000
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1075$954.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$2114: \wire3 [16:0] -> { \wire3 [16:10] 1'1 \wire3 [8:0] }
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~240 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module107.
    New input vector for $reduce_or cell $reduce_or$rtl.v:452$431: { \reg129 [0] \reg129 [1] \reg129 [2] \reg129 [3] \reg129 [4] $ternary$rtl.v:450$420_Y [0] $ternary$rtl.v:450$420_Y [1] $ternary$rtl.v:450$420_Y [2] $ternary$rtl.v:450$420_Y [3] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:448$416: { $ternary$rtl.v:448$415_Y [0] $ternary$rtl.v:448$415_Y [1] $ternary$rtl.v:448$415_Y [2] $ternary$rtl.v:448$415_Y [3] $ternary$rtl.v:448$415_Y [4] $ternary$rtl.v:448$415_Y [5] $ternary$rtl.v:448$415_Y [6] $ternary$rtl.v:448$415_Y [7] $ternary$rtl.v:448$415_Y [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:442$411: { \reg127 [0] \reg127 [1] \reg127 [2] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:438$397: { \wire219 [0] \wire219 [1] \wire219 [2] \wire219 [3] \wire219 [4] \wire219 [5] \wire219 [6] \wire219 [7] \wire219 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:433$386: { \wire110 [0] \wire110 [1] \wire110 [2] \wire110 [3] \wire110 [4] \wire110 [5] \wire110 [6] \wire110 [7] \wire110 [8] \wire110 [9] \wire110 [10] \wire110 [11] \wire110 [12] \wire110 [13] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:396$348: { \reg119 [0] \reg119 [1] \reg119 [2] \reg119 [3] \reg119 [4] \reg119 [5] \reg119 [6] \reg119 [7] \reg119 [8] \reg119 [9] \reg119 [10] \reg119 [11] \reg119 [12] \reg119 [13] \reg119 [14] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:356$292: { \wire111 [0] \wire111 [1] \wire111 [2] \wire111 [3] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:331$245: { \wire111 [0] \wire111 [1] \wire111 [2] \wire111 [3] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:328$238: { \reg118 [0] \reg118 [1] \reg118 [2] \reg118 [3] \reg118 [4] \reg118 [5] \reg118 [6] \reg118 [7] \reg118 [8] \reg118 [9] \reg118 [10] \reg118 [11] \reg118 [12] \reg118 [13] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:325$228: { $ternary$rtl.v:325$227_Y [0] $ternary$rtl.v:325$227_Y [1] $ternary$rtl.v:325$227_Y [2] $ternary$rtl.v:325$227_Y [3] $ternary$rtl.v:325$227_Y [4] $ternary$rtl.v:325$227_Y [5] $ternary$rtl.v:325$227_Y [6] $ternary$rtl.v:325$227_Y [7] $ternary$rtl.v:325$227_Y [8] $ternary$rtl.v:325$227_Y [9] $ternary$rtl.v:325$227_Y [10] $ternary$rtl.v:325$227_Y [11] $ternary$rtl.v:325$227_Y [12] $ternary$rtl.v:325$227_Y [13] $ternary$rtl.v:325$227_Y [14] $ternary$rtl.v:325$227_Y [15] $ternary$rtl.v:325$227_Y [16] $ternary$rtl.v:325$227_Y [17] $ternary$rtl.v:325$227_Y [18] $ternary$rtl.v:325$227_Y [19] $ternary$rtl.v:325$227_Y [20] $ternary$rtl.v:325$227_Y [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:319$217: { \wire113 [0] \wire113 [1] \wire113 [2] \wire113 [3] \wire113 [4] \wire113 [5] \wire113 [6] \wire113 [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:403$360: { \reg117 [4] \reg117 [5] \reg117 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:384$333: { \reg116 [7] \reg116 [8] \reg116 [9] \reg116 [10] \reg116 [11] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:374$318: { \reg116 [0] \reg116 [1] \reg116 [2] \reg116 [3] \reg116 [4] \reg116 [5] \reg116 [6] \reg116 [7] \reg116 [8] \reg116 [9] \reg116 [10] \reg116 [11] \reg116 [12] \reg116 [13] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:362$299: { \reg122 [0] \reg122 [1] \reg122 [2] \reg122 [3] \reg122 [4] \reg122 [5] \reg122 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:332$247: { \wire110 [4] \wire110 [5] \wire110 [6] \wire110 [7] \wire110 [8] \wire110 [9] }
  Optimizing cells in module \module107.
  Optimizing cells in module \module11.
    New input vector for $reduce_or cell $reduce_or$rtl.v:840$827: { \wire12 [0] \wire12 [1] \wire12 [2] \wire12 [3] \wire12 [4] \wire12 [5] \wire12 [6] \wire12 [7] \wire12 [8] \wire12 [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:799$766: { $sshr$rtl.v:799$765_Y [0] $sshr$rtl.v:799$765_Y [1] $sshr$rtl.v:799$765_Y [2] $sshr$rtl.v:799$765_Y [3] $sshr$rtl.v:799$765_Y [4] $sshr$rtl.v:799$765_Y [5] $sshr$rtl.v:799$765_Y [6] $sshr$rtl.v:799$765_Y [7] $sshr$rtl.v:799$765_Y [8] $sshr$rtl.v:799$765_Y [9] $sshr$rtl.v:799$765_Y [10] $sshr$rtl.v:799$765_Y [11] $sshr$rtl.v:799$765_Y [12] $sshr$rtl.v:799$765_Y [13] $sshr$rtl.v:799$765_Y [14] $sshr$rtl.v:799$765_Y [15] $sshr$rtl.v:799$765_Y [16] $sshr$rtl.v:799$765_Y [17] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:790$736: { \reg20 [0] \reg20 [1] \reg20 [2] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:781$722: { $and$rtl.v:781$721_Y [0] $and$rtl.v:781$721_Y [1] $and$rtl.v:781$721_Y [2] $and$rtl.v:781$721_Y [3] $and$rtl.v:781$721_Y [4] $and$rtl.v:781$721_Y [5] $and$rtl.v:781$721_Y [6] $and$rtl.v:781$721_Y [7] $and$rtl.v:781$721_Y [8] $and$rtl.v:781$721_Y [9] $and$rtl.v:781$721_Y [10] $and$rtl.v:781$721_Y [11] $and$rtl.v:781$721_Y [12] $and$rtl.v:781$721_Y [13] $and$rtl.v:781$721_Y [14] $and$rtl.v:781$721_Y [15] $and$rtl.v:781$721_Y [16] $and$rtl.v:781$721_Y [17] $and$rtl.v:781$721_Y [18] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:772$708: { \wire14 [0] \wire14 [1] \wire14 [2] \wire14 [3] \wire14 [4] \wire14 [5] \wire14 [6] \wire14 [7] \wire14 [8] \wire14 [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:766$698: { \wire16 [0] \wire16 [1] \wire16 [2] \wire16 [3] \wire16 [4] \wire16 [5] \wire16 [6] }
  Optimizing cells in module \module11.
  Optimizing cells in module \module133.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1398$1425: { \wire137 [0] \wire137 [1] \wire137 [2] \wire137 [3] \wire137 [4] \wire137 [5] \wire137 [6] \wire137 [7] \wire137 [8] \wire137 [9] \wire137 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1365$1376: { \wire137 [0] \wire137 [1] \wire137 [2] \wire137 [3] \wire137 [4] \wire137 [5] \wire137 [6] \wire137 [7] \wire137 [8] \wire137 [9] \wire137 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1346$1360: { $lt$rtl.v:1346$1357_Y $ternary$rtl.v:1345$1359_Y [0] $ternary$rtl.v:1345$1359_Y [1] $ternary$rtl.v:1345$1359_Y [2] $ternary$rtl.v:1345$1359_Y [3] $ternary$rtl.v:1345$1359_Y [4] $ternary$rtl.v:1345$1359_Y [5] $ternary$rtl.v:1345$1359_Y [6] $ternary$rtl.v:1345$1359_Y [7] $ternary$rtl.v:1345$1359_Y [8] $ternary$rtl.v:1345$1359_Y [9] $ternary$rtl.v:1345$1359_Y [10] $ternary$rtl.v:1345$1359_Y [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1330$1326: { \reg189 [0] \reg189 [1] \reg189 [2] \reg189 [3] \reg189 [4] \reg189 [5] \reg189 [6] \reg189 [7] \reg189 [8] \reg189 [9] \reg189 [10] \reg189 [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1323$1314: { $ternary$rtl.v:1323$1313_Y [0] $ternary$rtl.v:1323$1313_Y [1] $ternary$rtl.v:1323$1313_Y [2] $ternary$rtl.v:1323$1313_Y [3] $ternary$rtl.v:1323$1313_Y [4] $ternary$rtl.v:1323$1313_Y [5] $ternary$rtl.v:1323$1313_Y [6] $ternary$rtl.v:1323$1313_Y [7] $ternary$rtl.v:1323$1313_Y [8] $ternary$rtl.v:1323$1313_Y [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1184$1129: { \reg162 [0] \reg162 [1] \reg162 [2] \reg162 [3] \reg162 [4] \reg162 [5] \reg162 [6] \reg162 [7] \reg162 [8] \reg162 [9] \reg162 [10] \reg162 [11] \reg162 [12] \reg162 [13] \reg162 [14] \reg162 [15] \reg162 [16] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1110$1027: { $ternary$rtl.v:1110$1026_Y [0] $ternary$rtl.v:1110$1026_Y [1] $ternary$rtl.v:1110$1026_Y [2] $ternary$rtl.v:1110$1026_Y [3] $ternary$rtl.v:1110$1026_Y [4] $ternary$rtl.v:1110$1026_Y [5] $ternary$rtl.v:1110$1026_Y [6] $ternary$rtl.v:1110$1026_Y [7] $ternary$rtl.v:1110$1026_Y [8] $ternary$rtl.v:1110$1026_Y [9] $ternary$rtl.v:1110$1026_Y [10] $ternary$rtl.v:1110$1026_Y [11] $ternary$rtl.v:1110$1026_Y [12] $ternary$rtl.v:1110$1026_Y [13] $ternary$rtl.v:1110$1026_Y [14] $ternary$rtl.v:1110$1026_Y [15] $ternary$rtl.v:1110$1026_Y [16] $ternary$rtl.v:1110$1026_Y [17] $ternary$rtl.v:1110$1026_Y [18] $ternary$rtl.v:1110$1026_Y [19] $ternary$rtl.v:1110$1026_Y [20] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1098$994: { \wire136 [0] \wire136 [1] \wire136 [2] \wire136 [3] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1083$973: { $and$rtl.v:1083$972_Y [0] $and$rtl.v:1083$972_Y [1] $and$rtl.v:1083$972_Y [2] $and$rtl.v:1083$972_Y [3] $and$rtl.v:1083$972_Y [4] $and$rtl.v:1083$972_Y [5] $and$rtl.v:1083$972_Y [6] $and$rtl.v:1083$972_Y [7] $and$rtl.v:1083$972_Y [8] $and$rtl.v:1083$972_Y [9] $and$rtl.v:1083$972_Y [10] $and$rtl.v:1083$972_Y [11] $and$rtl.v:1083$972_Y [12] $and$rtl.v:1083$972_Y [13] $and$rtl.v:1083$972_Y [14] $and$rtl.v:1083$972_Y [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1062$937: { \reg150 [0] \reg150 [1] \reg150 [2] \reg150 [3] \reg150 [4] \reg150 [5] \reg150 [6] \reg150 [7] \reg150 [8] \reg150 [9] \reg150 [10] \reg150 [11] \reg150 [12] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1056$931: { \wire143 [0] \wire143 [1] \wire143 [2] \wire143 [3] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1401$1433: { \reg203 [0] \reg203 [1] \reg203 [2] \reg203 [3] \reg203 [4] \reg203 [5] \reg203 [6] \reg203 [7] \reg203 [8] \reg203 [9] \reg203 [10] \reg203 [11] \reg203 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1366$1381: { $ternary$rtl.v:1366$1380_Y [0] $ternary$rtl.v:1366$1380_Y [1] $ternary$rtl.v:1366$1380_Y [2] $ternary$rtl.v:1366$1380_Y [3] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1335$1342: { \reg185 [0] \reg185 [1] \reg185 [2] \reg185 [3] \reg185 [4] \reg185 [5] \reg185 [6] \reg185 [7] \reg185 [8] \reg185 [9] \reg185 [10] \reg185 [11] \reg185 [12] \reg185 [13] \reg185 [14] \reg185 [15] \reg185 [16] \reg185 [17] \reg185 [18] \reg185 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1332$1336: { \reg186 [0] \reg186 [1] \reg186 [2] \reg186 [3] \reg186 [4] \reg186 [5] \reg186 [6] \reg186 [7] \reg186 [8] \reg186 [9] \reg186 [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1324$1319: { $not$rtl.v:1324$1318_Y [0] $not$rtl.v:1324$1318_Y [1] $not$rtl.v:1324$1318_Y [2] $not$rtl.v:1324$1318_Y [3] $not$rtl.v:1324$1318_Y [4] $not$rtl.v:1324$1318_Y [5] $not$rtl.v:1324$1318_Y [6] $not$rtl.v:1324$1318_Y [7] $not$rtl.v:1324$1318_Y [8] $not$rtl.v:1324$1318_Y [9] $not$rtl.v:1324$1318_Y [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1291$1283: { $xnor$rtl.v:1291$1282_Y [0] $xnor$rtl.v:1291$1282_Y [1] $xnor$rtl.v:1291$1282_Y [2] $xnor$rtl.v:1291$1282_Y [3] $xnor$rtl.v:1291$1282_Y [4] $xnor$rtl.v:1291$1282_Y [5] $xnor$rtl.v:1291$1282_Y [6] $xnor$rtl.v:1291$1282_Y [7] $xnor$rtl.v:1291$1282_Y [8] $xnor$rtl.v:1291$1282_Y [9] $xnor$rtl.v:1291$1282_Y [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1266$1250: { $xnor$rtl.v:1266$1249_Y [0] $xnor$rtl.v:1266$1249_Y [1] $xnor$rtl.v:1266$1249_Y [2] $xnor$rtl.v:1266$1249_Y [3] $xnor$rtl.v:1266$1249_Y [4] $xnor$rtl.v:1266$1249_Y [5] $xnor$rtl.v:1266$1249_Y [6] $xnor$rtl.v:1266$1249_Y [7] $xnor$rtl.v:1266$1249_Y [8] $xnor$rtl.v:1266$1249_Y [9] $xnor$rtl.v:1266$1249_Y [10] $xnor$rtl.v:1266$1249_Y [11] $xnor$rtl.v:1266$1249_Y [12] $xnor$rtl.v:1266$1249_Y [13] $xnor$rtl.v:1266$1249_Y [14] $xnor$rtl.v:1266$1249_Y [15] $xnor$rtl.v:1266$1249_Y [16] $xnor$rtl.v:1266$1249_Y [17] $xnor$rtl.v:1266$1249_Y [18] $xnor$rtl.v:1266$1249_Y [19] $xnor$rtl.v:1266$1249_Y [20] $xnor$rtl.v:1266$1249_Y [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1260$1247: { \reg150 [0] \reg150 [1] \reg150 [2] \reg150 [3] \reg150 [4] \reg150 [5] \reg150 [6] \reg150 [7] \reg150 [8] \reg150 [9] \reg150 [10] \reg150 [11] \reg150 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1207$1171: { \reg171 [0] \reg171 [1] \reg171 [2] \reg171 [3] \reg171 [4] \reg171 [5] \reg171 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1150$1094: { \reg165 [0] \reg165 [1] \reg165 [2] \reg165 [3] \reg165 [4] \reg165 [5] \reg165 [6] \reg165 [7] \reg165 [8] \reg165 [9] \reg165 [10] \reg165 [11] \reg165 [12] \reg165 [13] \reg165 [14] \reg165 [15] \reg165 [16] \reg165 [17] \reg165 [18] \reg165 [19] \reg165 [20] \reg165 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1134$1065: { \wire137 [0] \wire137 [1] \wire137 [2] \wire137 [3] \wire137 [4] \wire137 [5] \wire137 [6] \wire137 [7] \wire137 [8] \wire137 [9] \wire137 [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1097$992: { \reg147 [0] \reg147 [1] \reg147 [2] \reg147 [3] \reg147 [4] \reg147 [5] \reg147 [6] \reg147 [7] \reg147 [8] \reg147 [9] \reg147 [10] \reg147 [11] \reg147 [12] \reg147 [13] \reg147 [14] \reg147 [15] \reg147 [16] \reg147 [17] \reg147 [18] \reg147 [19] \reg147 [20] \reg147 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1025$866: { \wire136 [2] \wire136 [3] \wire136 [4] \wire136 [5] \wire136 [6] \wire136 [7] \wire136 [8] \wire136 [9] \wire136 [10] \wire136 [11] \wire136 [12] \wire136 [13] \wire136 [14] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1023$864: { \wire134 [0] \wire134 [1] \wire134 [2] \wire134 [3] \wire134 [4] \wire134 [5] \wire134 [6] \wire134 [7] \wire134 [8] \wire134 [9] }
  Optimizing cells in module \module133.
  Optimizing cells in module \module4.
    New input vector for $reduce_or cell $reduce_or$rtl.v:609$600: { \reg46 [0] \reg46 [1] \reg46 [2] \reg46 [3] \reg46 [4] \reg46 [5] \reg46 [6] \reg46 [7] \reg46 [8] \reg46 [9] \reg46 [10] \reg46 [11] \reg46 [12] \reg46 [13] \reg46 [14] \reg46 [15] \reg46 [16] \reg46 [17] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:551$503: { $ternary$rtl.v:551$502_Y [0] $ternary$rtl.v:551$502_Y [1] $ternary$rtl.v:551$502_Y [2] $ternary$rtl.v:551$502_Y [3] $ternary$rtl.v:551$502_Y [4] $ternary$rtl.v:551$502_Y [5] $ternary$rtl.v:551$502_Y [6] $ternary$rtl.v:551$502_Y [7] $ternary$rtl.v:551$502_Y [8] $ternary$rtl.v:551$502_Y [9] $ternary$rtl.v:551$502_Y [10] $ternary$rtl.v:551$502_Y [11] $ternary$rtl.v:551$502_Y [12] $ternary$rtl.v:551$502_Y [13] $ternary$rtl.v:551$502_Y [14] $ternary$rtl.v:551$502_Y [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:548$496: { \wire7 [2] \wire7 [3] \wire7 [4] \wire7 [5] \wire7 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:597$573: { \wire52 [0] \wire52 [1] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:584$560: { \reg47 [0] \reg47 [1] \reg47 [2] \reg47 [3] \reg47 [4] \reg47 [5] \reg47 [6] \reg47 [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:583$557: { \wire6 [0] \wire6 [1] \wire6 [2] \wire6 [3] \wire6 [4] \wire5 [1] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:581$555: { $ternary$rtl.v:581$554_Y [0] $ternary$rtl.v:581$554_Y [1] $ternary$rtl.v:581$554_Y [2] $ternary$rtl.v:581$554_Y [3] $ternary$rtl.v:581$554_Y [4] $ternary$rtl.v:581$554_Y [5] $ternary$rtl.v:581$554_Y [6] $ternary$rtl.v:581$554_Y [7] $ternary$rtl.v:581$554_Y [8] $ternary$rtl.v:581$554_Y [9] $ternary$rtl.v:581$554_Y [10] }
  Optimizing cells in module \module4.
  Optimizing cells in module \module63.
    New input vector for $reduce_or cell $reduce_or$rtl.v:703$683: { \wire65 [1] \wire65 [2] \wire65 [3] \wire65 [4] \wire65 [5] \wire65 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:705$685: { \reg73 [0] \reg73 [1] \reg73 [2] \reg73 [3] \reg73 [4] \reg73 [5] \reg73 [6] \reg73 [7] \reg73 [8] \reg73 [9] \reg73 [10] \reg73 [11] \reg73 [12] \reg73 [13] \reg73 [14] }
  Optimizing cells in module \module63.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:96$30: { \reg96 [0] \reg96 [1] \reg96 [2] \reg96 [3] \reg96 [4] \reg96 [5] \reg96 [6] \reg96 [7] \reg96 [8] \reg96 [9] \reg96 [10] \reg96 [11] \reg96 [12] \reg96 [13] \reg96 [14] \reg96 [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:179$141: { \wire249 [0] \wire249 [1] \wire249 [2] \wire249 [3] \wire249 [4] \wire249 [5] \wire249 [6] \wire249 [7] \wire249 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:166$121: { \wire244 [0] \wire244 [1] \wire244 [2] \wire244 [3] \wire244 [4] \wire244 [5] \wire244 [6] \wire244 [7] \wire244 [8] \wire244 [9] \wire244 [10] \wire244 [11] \wire244 [12] \wire244 [13] \wire244 [14] \wire244 [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:119$63: { \reg100 [0] \reg100 [1] \reg100 [2] \reg100 [3] \reg100 [4] \reg100 [5] \reg100 [6] \reg100 [7] \reg100 [8] \reg100 [9] \reg100 [10] \reg100 [11] \reg100 [12] \reg100 [13] \reg100 [14] \reg100 [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:110$42: { \reg97 [0] \reg97 [1] \reg97 [2] \reg97 [3] \reg97 [4] \reg97 [5] \reg97 [6] \reg97 [7] \reg97 [8] \reg97 [9] \reg97 [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:110$45: { $ternary$rtl.v:110$44_Y [0] $ternary$rtl.v:110$44_Y [1] $ternary$rtl.v:110$44_Y [2] $ternary$rtl.v:110$44_Y [3] $ternary$rtl.v:110$44_Y [4] $ternary$rtl.v:110$44_Y [5] $ternary$rtl.v:110$44_Y [6] $ternary$rtl.v:110$44_Y [7] $ternary$rtl.v:110$44_Y [8] $ternary$rtl.v:110$44_Y [9] $ternary$rtl.v:110$44_Y [10] $ternary$rtl.v:110$44_Y [11] $ternary$rtl.v:110$44_Y [12] $ternary$rtl.v:110$44_Y [13] $ternary$rtl.v:110$44_Y [14] $ternary$rtl.v:110$44_Y [15] $ternary$rtl.v:110$44_Y [16] $ternary$rtl.v:110$44_Y [17] }
  Optimizing cells in module \top.
Performed a total of 62 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2237 ($dff) from module module107.
Promoting init spec \reg37 = 17'00000000000000000 to constant driver in module module11.
Promoting init spec \reg214 = 10'0000000000 to constant driver in module module133.
Promoting init spec \reg212 = 11'00000000000 to constant driver in module module133.
Promoted 3 init specs to constant drivers.
Replaced 1 DFF cells.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 2 unused cells and 50 unused wires.
<suppressed ~7 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module107..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module107.
  Optimizing cells in module \module11.
  Optimizing cells in module \module133.
  Optimizing cells in module \module4.
  Optimizing cells in module \module63.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.6.16. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 9 bits (of 20) from port A of cell module107.$xor$rtl.v:285$170 ($xor).
Removed top 7 bits (of 15) from mux cell module107.$ternary$rtl.v:292$193 ($mux).
Removed top 1 bits (of 15) from port B of cell module107.$ne$rtl.v:298$196 ($ne).
Removed top 13 bits (of 14) from port A of cell module107.$and$rtl.v:311$203 ($and).
Removed top 13 bits (of 14) from port B of cell module107.$and$rtl.v:311$203 ($and).
Removed top 13 bits (of 14) from port Y of cell module107.$and$rtl.v:311$203 ($and).
Removed top 12 bits (of 14) from port A of cell module107.$sshl$rtl.v:313$213 ($sshl).
Removed top 7 bits (of 8) from port B of cell module107.$eq$rtl.v:325$230 ($eq).
Removed top 4 bits (of 8) from mux cell module107.$ternary$rtl.v:326$237 ($mux).
Removed top 2 bits (of 7) from port A of cell module107.$sshr$rtl.v:330$244 ($sshr).
Removed top 10 bits (of 11) from port A of cell module107.$or$rtl.v:331$246 ($or).
Removed top 2 bits (of 11) from port Y of cell module107.$or$rtl.v:331$246 ($or).
Removed top 2 bits (of 11) from port B of cell module107.$or$rtl.v:331$246 ($or).
Removed top 7 bits (of 11) from port A of cell module107.$xor$rtl.v:332$249 ($xor).
Removed top 10 bits (of 11) from port A of cell module107.$sub$rtl.v:332$250 ($sub).
Removed top 6 bits (of 22) from port B of cell module107.$and$rtl.v:333$252 ($and).
Removed top 3 bits (of 21) from mux cell module107.$ternary$rtl.v:336$260 ($mux).
Removed top 3 bits (of 21) from port B of cell module107.$and$rtl.v:336$261 ($and).
Removed top 3 bits (of 21) from port Y of cell module107.$and$rtl.v:336$261 ($and).
Removed top 7 bits (of 21) from mux cell module107.$ternary$rtl.v:345$274 ($mux).
Removed top 10 bits (of 14) from port A of cell module107.$gt$rtl.v:338$262 ($gt).
Removed top 5 bits (of 21) from port B of cell module107.$or$rtl.v:346$275 ($or).
Removed top 5 bits (of 21) from port Y of cell module107.$or$rtl.v:346$275 ($or).
Removed top 5 bits (of 21) from port B of cell module107.$sub$rtl.v:346$276 ($sub).
Removed top 17 bits (of 21) from port B of cell module107.$and$rtl.v:346$277 ($and).
Removed top 3 bits (of 20) from mux cell module107.$ternary$rtl.v:352$289 ($mux).
Removed top 1 bits (of 4) from mux cell module107.$ternary$rtl.v:349$283 ($mux).
Removed top 12 bits (of 20) from port B of cell module107.$or$rtl.v:352$287 ($or).
Removed top 12 bits (of 20) from port Y of cell module107.$or$rtl.v:352$287 ($or).
Removed top 4 bits (of 5) from port A of cell module107.$xnor$rtl.v:356$298 ($xnor).
Removed top 4 bits (of 5) from port B of cell module107.$xnor$rtl.v:356$298 ($xnor).
Removed top 17 bits (of 21) from port B of cell module107.$eq$rtl.v:356$297 ($eq).
Removed top 11 bits (of 14) from mux cell module107.$ternary$rtl.v:362$301 ($mux).
Removed top 5 bits (of 9) from port B of cell module107.$lt$rtl.v:363$302 ($lt).
Removed top 2 bits (of 22) from port B of cell module107.$sub$rtl.v:365$307 ($sub).
Removed top 3 bits (of 17) from port B of cell module107.$sub$rtl.v:366$310 ($sub).
Removed top 16 bits (of 17) from port A of cell module107.$not$rtl.v:366$312 ($not).
Removed top 11 bits (of 22) from mux cell module107.$ternary$rtl.v:384$336 ($mux).
Removed top 2 bits (of 22) from mux cell module107.$ternary$rtl.v:384$337 ($mux).
Removed top 6 bits (of 9) from port A of cell module107.$not$rtl.v:387$340 ($not).
Removed top 15 bits (of 17) from port A of cell module107.$gt$rtl.v:395$355 ($gt).
Removed top 3 bits (of 17) from port B of cell module107.$gt$rtl.v:395$355 ($gt).
Removed top 6 bits (of 7) from port A of cell module107.$not$rtl.v:402$359 ($not).
Removed top 5 bits (of 6) from port A of cell module107.$shr$rtl.v:403$362 ($shr).
Removed top 8 bits (of 15) from port Y of cell module107.$neg$rtl.v:419$368 ($neg).
Removed top 8 bits (of 15) from port A of cell module107.$neg$rtl.v:419$368 ($neg).
Removed top 6 bits (of 12) from mux cell module107.$ternary$rtl.v:422$374 ($mux).
Removed top 12 bits (of 14) from port A of cell module107.$ne$rtl.v:427$378 ($ne).
Removed top 14 bits (of 15) from port A of cell module107.$sshl$rtl.v:436$391 ($sshl).
Removed top 6 bits (of 10) from port B of cell module107.$sshl$rtl.v:436$391 ($sshl).
Removed top 7 bits (of 15) from mux cell module107.$ternary$rtl.v:440$402 ($mux).
Removed top 7 bits (of 15) from mux cell module107.$ternary$rtl.v:441$409 ($mux).
Removed top 14 bits (of 15) from port A of cell module107.$lt$rtl.v:441$410 ($lt).
Removed top 7 bits (of 15) from port B of cell module107.$lt$rtl.v:441$410 ($lt).
Removed top 5 bits (of 9) from mux cell module107.$ternary$rtl.v:448$415 ($mux).
Removed top 8 bits (of 9) from mux cell module107.$procmux$1979 ($mux).
Removed top 11 bits (of 22) from mux cell module107.$procmux$1997 ($mux).
Removed top 8 bits (of 9) from FF cell module107.$procdff$2235 ($dff).
Removed top 20 bits (of 21) from FF cell module107.$procdff$2241 ($dff).
Removed top 20 bits (of 21) from FF cell module107.$procdff$2242 ($dff).
Removed top 19 bits (of 20) from FF cell module107.$procdff$2243 ($dff).
Removed top 2 bits (of 3) from FF cell module107.$procdff$2249 ($dff).
Removed top 9 bits (of 14) from FF cell module107.$procdff$2264 ($dff).
Removed top 11 bits (of 12) from FF cell module107.$procdff$2265 ($dff).
Removed top 7 bits (of 15) from mux cell module107.$ternary$rtl.v:292$190 ($mux).
Removed top 9 bits (of 14) from port B of cell module107.$ne$rtl.v:298$196 ($ne).
Removed top 10 bits (of 12) from port B of cell module107.$ge$rtl.v:311$201 ($ge).
Removed top 11 bits (of 12) from port A of cell module107.$eq$rtl.v:311$202 ($eq).
Removed top 4 bits (of 8) from port Y of cell module107.$sshr$rtl.v:326$236 ($sshr).
Removed top 11 bits (of 16) from port B of cell module107.$and$rtl.v:333$252 ($and).
Removed top 9 bits (of 14) from port B of cell module107.$sub$rtl.v:366$310 ($sub).
Removed top 8 bits (of 15) from port Y of cell module107.$sub$rtl.v:419$367 ($sub).
Removed top 8 bits (of 15) from port B of cell module107.$sub$rtl.v:419$367 ($sub).
Removed top 5 bits (of 6) from mux cell module107.$ternary$rtl.v:422$374 ($mux).
Removed top 10 bits (of 12) from port B of cell module107.$lt$rtl.v:427$375 ($lt).
Removed top 7 bits (of 15) from mux cell module107.$ternary$rtl.v:292$187 ($mux).
Removed top 3 bits (of 11) from mux cell module107.$ternary$rtl.v:292$185 ($mux).
Removed top 11 bits (of 12) from wire module107.$0\reg115[11:0].
Removed top 2 bits (of 3) from wire module107.$0\reg220[2:0].
Removed top 19 bits (of 20) from wire module107.$0\reg227[19:0].
Removed top 20 bits (of 21) from wire module107.$0\reg228[20:0].
Removed top 20 bits (of 21) from wire module107.$0\reg230[20:0].
Removed top 8 bits (of 9) from wire module107.$0\reg233[8:0].
Removed top 13 bits (of 14) from wire module107.$and$rtl.v:311$203_Y.
Removed top 3 bits (of 21) from wire module107.$and$rtl.v:336$261_Y.
Removed top 14 bits (of 15) from wire module107.$eq$rtl.v:303$200_Y.
Removed top 13 bits (of 14) from wire module107.$eq$rtl.v:311$202_Y.
Removed top 7 bits (of 8) from wire module107.$eq$rtl.v:325$230_Y.
Removed top 4 bits (of 5) from wire module107.$eq$rtl.v:356$297_Y.
Removed top 8 bits (of 9) from wire module107.$eq$rtl.v:443$412_Y.
Removed top 4 bits (of 5) from wire module107.$ge$rtl.v:356$296_Y.
Removed top 21 bits (of 22) from wire module107.$gt$rtl.v:365$303_Y.
Removed top 6 bits (of 7) from wire module107.$le$rtl.v:402$358_Y.
Removed top 10 bits (of 11) from wire module107.$logic_not$rtl.v:332$248_Y.
Removed top 10 bits (of 11) from wire module107.$lt$rtl.v:441$410_Y.
Removed top 8 bits (of 15) from wire module107.$neg$rtl.v:419$368_Y.
Removed top 2 bits (of 11) from wire module107.$or$rtl.v:331$246_Y.
Removed top 5 bits (of 21) from wire module107.$or$rtl.v:346$275_Y.
Removed top 12 bits (of 20) from wire module107.$or$rtl.v:352$287_Y.
Removed top 11 bits (of 22) from wire module107.$procmux$1997_Y.
Removed top 21 bits (of 22) from wire module107.$reduce_and$rtl.v:384$333_Y.
Removed top 10 bits (of 11) from wire module107.$reduce_or$rtl.v:331$245_Y.
Removed top 2 bits (of 3) from wire module107.$reduce_xnor$rtl.v:330$242_Y.
Removed top 16 bits (of 17) from wire module107.$reduce_xor$rtl.v:366$309_Y.
Removed top 16 bits (of 17) from wire module107.$reduce_xor$rtl.v:366$311_Y.
Removed top 4 bits (of 8) from wire module107.$sshr$rtl.v:326$236_Y.
Removed top 8 bits (of 15) from wire module107.$sub$rtl.v:419$367_Y.
Removed top 3 bits (of 11) from wire module107.$ternary$rtl.v:292$185_Y.
Removed top 7 bits (of 15) from wire module107.$ternary$rtl.v:292$187_Y.
Removed top 7 bits (of 15) from wire module107.$ternary$rtl.v:292$190_Y.
Removed top 3 bits (of 21) from wire module107.$ternary$rtl.v:336$260_Y.
Removed top 7 bits (of 21) from wire module107.$ternary$rtl.v:345$274_Y.
Removed top 1 bits (of 4) from wire module107.$ternary$rtl.v:349$283_Y.
Removed top 11 bits (of 14) from wire module107.$ternary$rtl.v:362$301_Y.
Removed top 11 bits (of 22) from wire module107.$ternary$rtl.v:384$336_Y.
Removed top 16 bits (of 17) from wire module107.wire131.
Removed top 2 bits (of 4) from wire module107.wire238.
Removed top 10 bits (of 19) from port Y of cell module11.$xnor$rtl.v:766$700 ($xnor).
Removed top 10 bits (of 18) from mux cell module11.$ternary$rtl.v:772$713 ($mux).
Removed top 1 bits (of 10) from port A of cell module11.$xor$rtl.v:776$717 ($xor).
Removed top 18 bits (of 19) from port B of cell module11.$and$rtl.v:781$721 ($and).
Removed top 16 bits (of 19) from port Y of cell module11.$and$rtl.v:781$721 ($and).
Removed top 17 bits (of 20) from port A of cell module11.$xor$rtl.v:783$725 ($xor).
Removed top 14 bits (of 20) from port B of cell module11.$xor$rtl.v:783$725 ($xor).
Removed top 14 bits (of 20) from port Y of cell module11.$xor$rtl.v:783$725 ($xor).
Removed top 18 bits (of 22) from mux cell module11.$ternary$rtl.v:786$733 ($mux).
Removed top 11 bits (of 18) from port A of cell module11.$lt$rtl.v:784$729 ($lt).
Removed top 14 bits (of 20) from mux cell module11.$ternary$rtl.v:784$730 ($mux).
Removed top 7 bits (of 8) from port B of cell module11.$lt$rtl.v:790$737 ($lt).
Removed top 11 bits (of 21) from mux cell module11.$ternary$rtl.v:797$764 ($mux).
Removed top 8 bits (of 18) from mux cell module11.$ternary$rtl.v:796$755 ($mux).
Removed top 14 bits (of 18) from port B of cell module11.$mul$rtl.v:796$756 ($mul).
Removed top 20 bits (of 21) from mux cell module11.$ternary$rtl.v:796$759 ($mux).
Removed top 7 bits (of 10) from port B of cell module11.$xnor$rtl.v:796$762 ($xnor).
Removed cell module11.$xnor$rtl.v:796$762 ($xnor).
Removed top 14 bits (of 18) from port A of cell module11.$sshr$rtl.v:799$765 ($sshr).
Removed top 16 bits (of 17) from port B of cell module11.$sub$rtl.v:799$767 ($sub).
Removed top 11 bits (of 12) from port B of cell module11.$lt$rtl.v:801$768 ($lt).
Removed top 13 bits (of 17) from port A of cell module11.$sshl$rtl.v:810$782 ($sshl).
Removed top 5 bits (of 27) from mux cell module11.$ternary$rtl.v:815$791 ($mux).
Removed top 18 bits (of 19) from port A of cell module11.$xnor$rtl.v:823$806 ($xnor).
Removed top 2 bits (of 19) from port Y of cell module11.$xnor$rtl.v:823$806 ($xnor).
Removed top 17 bits (of 19) from mux cell module11.$ternary$rtl.v:823$805 ($mux).
Removed top 2 bits (of 19) from port B of cell module11.$xnor$rtl.v:842$831 ($xnor).
Removed top 1 bits (of 19) from mux cell module11.$ternary$rtl.v:844$838 ($mux).
Removed top 2 bits (of 4) from mux cell module11.$procmux$1865 ($mux).
Removed top 5 bits (of 15) from FF cell module11.$procdff$2204 ($dff).
Removed top 9 bits (of 10) from FF cell module11.$procdff$2206 ($dff).
Removed top 2 bits (of 4) from FF cell module11.$procdff$2212 ($dff).
Removed top 18 bits (of 22) from FF cell module11.$procdff$2214 ($dff).
Removed top 14 bits (of 20) from FF cell module11.$procdff$2215 ($dff).
Removed top 4 bits (of 11) from FF cell module11.$procdff$2218 ($dff).
Removed top 2 bits (of 11) from mux cell module11.$ternary$rtl.v:770$704 ($mux).
Removed top 10 bits (of 18) from mux cell module11.$ternary$rtl.v:772$707 ($mux).
Removed top 3 bits (of 10) from mux cell module11.$ternary$rtl.v:797$764 ($mux).
Removed top 13 bits (of 20) from port A of cell module11.$mul$rtl.v:796$756 ($mul).
Converting cell module11.$mul$rtl.v:796$756 ($mul) from signed to unsigned.
Removed top 9 bits (of 20) from port Y of cell module11.$mul$rtl.v:796$756 ($mul).
Removed top 1 bits (of 7) from port A of cell module11.$mul$rtl.v:796$756 ($mul).
Removed top 1 bits (of 4) from port B of cell module11.$mul$rtl.v:796$756 ($mul).
Removed top 2 bits (of 11) from port Y of cell module11.$mul$rtl.v:796$756 ($mul).
Removed top 4 bits (of 11) from port B of cell module11.$sshr$rtl.v:799$765 ($sshr).
Removed top 10 bits (of 20) from mux cell module11.$ternary$rtl.v:807$774 ($mux).
Removed top 15 bits (of 22) from mux cell module11.$ternary$rtl.v:810$777 ($mux).
Removed top 2 bits (of 4) from port A of cell module11.$sshl$rtl.v:810$782 ($sshl).
Removed top 3 bits (of 8) from port A of cell module11.$sshl$rtl.v:815$789 ($sshl).
Removed top 2 bits (of 4) from port B of cell module11.$xor$rtl.v:821$797 ($xor).
Removed top 4 bits (of 11) from mux cell module11.$ternary$rtl.v:822$800 ($mux).
Removed top 14 bits (of 20) from wire module11.$0\reg23[19:0].
Removed top 18 bits (of 22) from wire module11.$0\reg24[21:0].
Removed top 2 bits (of 4) from wire module11.$0\reg26[3:0].
Removed top 16 bits (of 19) from wire module11.$and$rtl.v:781$721_Y.
Removed top 9 bits (of 10) from wire module11.$logic_and$rtl.v:792$746_Y.
Removed top 17 bits (of 18) from wire module11.$logic_or$rtl.v:844$833_Y.
Removed top 7 bits (of 8) from wire module11.$lt$rtl.v:790$737_Y.
Removed top 11 bits (of 20) from wire module11.$mul$rtl.v:796$756_Y.
Removed top 7 bits (of 8) from wire module11.$reduce_or$rtl.v:790$736_Y.
Removed top 16 bits (of 17) from wire module11.$reduce_or$rtl.v:799$766_Y.
Removed top 3 bits (of 4) from wire module11.$reduce_xnor$rtl.v:833$818_Y.
Removed top 18 bits (of 19) from wire module11.$reduce_xor$rtl.v:822$801_Y.
Removed top 2 bits (of 11) from wire module11.$ternary$rtl.v:770$704_Y.
Removed top 10 bits (of 18) from wire module11.$ternary$rtl.v:772$707_Y.
Removed top 8 bits (of 18) from wire module11.$ternary$rtl.v:796$755_Y.
Removed top 5 bits (of 27) from wire module11.$ternary$rtl.v:815$791_Y.
Removed top 4 bits (of 11) from wire module11.$ternary$rtl.v:822$800_Y.
Removed top 17 bits (of 19) from wire module11.$ternary$rtl.v:823$805_Y.
Removed top 1 bits (of 19) from wire module11.$ternary$rtl.v:844$838_Y.
Removed top 2 bits (of 19) from wire module11.$xnor$rtl.v:823$806_Y.
Removed top 14 bits (of 20) from wire module11.$xor$rtl.v:783$725_Y.
Removed top 18 bits (of 19) from wire module11.wire21.
Removed top 10 bits (of 11) from mux cell module133.$procmux$1532 ($mux).
Removed top 9 bits (of 10) from port B of cell module133.$lt$rtl.v:1023$865 ($lt).
Removed top 1 bits (of 5) from mux cell module133.$ternary$rtl.v:1025$869 ($mux).
Removed top 5 bits (of 6) from port A of cell module133.$mul$rtl.v:1027$871 ($mul).
Removed top 3 bits (of 6) from port Y of cell module133.$mul$rtl.v:1027$871 ($mul).
Removed top 3 bits (of 6) from port A of cell module133.$not$rtl.v:1027$872 ($not).
Removed top 3 bits (of 14) from mux cell module133.$ternary$rtl.v:1032$885 ($mux).
Removed top 3 bits (of 14) from port A of cell module133.$mul$rtl.v:1033$888 ($mul).
Removed top 10 bits (of 14) from port A of cell module133.$lt$rtl.v:1033$889 ($lt).
Removed top 6 bits (of 10) from mux cell module133.$ternary$rtl.v:1033$891 ($mux).
Removed top 16 bits (of 19) from port Y of cell module133.$neg$rtl.v:1038$897 ($neg).
Removed top 16 bits (of 19) from port A of cell module133.$neg$rtl.v:1038$897 ($neg).
Removed top 18 bits (of 22) from port B of cell module133.$ne$rtl.v:1042$901 ($ne).
Removed top 7 bits (of 8) from port A of cell module133.$xnor$rtl.v:1043$907 ($xnor).
Removed top 13 bits (of 14) from port B of cell module133.$mul$rtl.v:1045$911 ($mul).
Removed top 11 bits (of 21) from port A of cell module133.$lt$rtl.v:1047$917 ($lt).
Removed top 14 bits (of 18) from mux cell module133.$ternary$rtl.v:1049$920 ($mux).
Removed top 17 bits (of 21) from mux cell module133.$ternary$rtl.v:1049$921 ($mux).
Removed top 5 bits (of 21) from mux cell module133.$ternary$rtl.v:1049$925 ($mux).
Removed top 13 bits (of 14) from port B of cell module133.$lt$rtl.v:1057$935 ($lt).
Removed top 31 bits (of 35) from port A of cell module133.$ge$rtl.v:1057$933 ($ge).
Removed top 10 bits (of 26) from mux cell module133.$ternary$rtl.v:1075$955 ($mux).
Removed top 8 bits (of 12) from mux cell module133.$ternary$rtl.v:1079$964 ($mux).
Removed top 4 bits (of 5) from port A of cell module133.$gt$rtl.v:1087$974 ($gt).
Removed top 14 bits (of 18) from mux cell module133.$ternary$rtl.v:1088$980 ($mux).
Removed top 17 bits (of 18) from port A of cell module133.$eq$rtl.v:1088$981 ($eq).
Removed top 14 bits (of 18) from port B of cell module133.$eq$rtl.v:1088$981 ($eq).
Removed top 9 bits (of 21) from port A of cell module133.$xor$rtl.v:1091$982 ($xor).
Removed top 17 bits (of 21) from port B of cell module133.$xor$rtl.v:1091$982 ($xor).
Removed top 9 bits (of 21) from port Y of cell module133.$xor$rtl.v:1091$982 ($xor).
Removed top 9 bits (of 21) from port A of cell module133.$xor$rtl.v:1091$984 ($xor).
Removed top 12 bits (of 16) from port A of cell module133.$neg$rtl.v:1093$985 ($neg).
Removed top 18 bits (of 19) from port A of cell module133.$xor$rtl.v:1099$1000 ($xor).
Removed top 5 bits (of 19) from mux cell module133.$ternary$rtl.v:1100$1003 ($mux).
Removed top 5 bits (of 19) from port A of cell module133.$not$rtl.v:1100$1004 ($not).
Removed top 3 bits (of 4) from port B of cell module133.$add$rtl.v:1102$1012 ($add).
Removed top 29 bits (of 30) from port B of cell module133.$xor$rtl.v:1103$1014 ($xor).
Removed top 22 bits (of 30) from port Y of cell module133.$xor$rtl.v:1103$1014 ($xor).
Removed top 17 bits (of 18) from mux cell module133.$ternary$rtl.v:1110$1029 ($mux).
Removed top 15 bits (of 18) from mux cell module133.$ternary$rtl.v:1110$1031 ($mux).
Removed top 15 bits (of 19) from mux cell module133.$ternary$rtl.v:1115$1041 ($mux).
Removed top 9 bits (of 10) from port B of cell module133.$add$rtl.v:1113$1038 ($add).
Removed top 4 bits (of 5) from port A of cell module133.$gt$rtl.v:1115$1042 ($gt).
Removed top 15 bits (of 19) from mux cell module133.$ternary$rtl.v:1115$1044 ($mux).
Removed top 13 bits (of 21) from port A of cell module133.$mul$rtl.v:1127$1053 ($mul).
Removed top 13 bits (of 21) from port B of cell module133.$mul$rtl.v:1127$1053 ($mul).
Removed top 5 bits (of 21) from port Y of cell module133.$mul$rtl.v:1127$1053 ($mul).
Removed top 6 bits (of 25) from mux cell module133.$ternary$rtl.v:1131$1062 ($mux).
Removed top 4 bits (of 8) from port Y of cell module133.$not$rtl.v:1135$1071 ($not).
Removed top 4 bits (of 8) from port A of cell module133.$not$rtl.v:1135$1071 ($not).
Removed top 6 bits (of 22) from port B of cell module133.$mul$rtl.v:1137$1075 ($mul).
Removed top 5 bits (of 22) from port Y of cell module133.$mul$rtl.v:1137$1075 ($mul).
Removed top 4 bits (of 5) from port A of cell module133.$lt$rtl.v:1143$1079 ($lt).
Removed top 17 bits (of 18) from port A of cell module133.$not$rtl.v:1161$1103 ($not).
Removed top 1 bits (of 18) from mux cell module133.$ternary$rtl.v:1162$1109 ($mux).
Removed top 1 bits (of 18) from port A of cell module133.$and$rtl.v:1162$1110 ($and).
Removed top 1 bits (of 18) from port Y of cell module133.$and$rtl.v:1162$1110 ($and).
Removed top 1 bits (of 18) from port B of cell module133.$gt$rtl.v:1162$1111 ($gt).
Removed top 20 bits (of 21) from port B of cell module133.$mul$rtl.v:1171$1117 ($mul).
Removed top 25 bits (of 26) from port B of cell module133.$xnor$rtl.v:1184$1131 ($xnor).
Removed top 12 bits (of 13) from port B of cell module133.$xor$rtl.v:1175$1121 ($xor).
Removed top 12 bits (of 13) from port Y of cell module133.$xor$rtl.v:1175$1121 ($xor).
Removed top 22 bits (of 26) from port A of cell module133.$not$rtl.v:1184$1128 ($not).
Removed top 7 bits (of 26) from mux cell module133.$ternary$rtl.v:1184$1133 ($mux).
Removed top 20 bits (of 22) from mux cell module133.$ternary$rtl.v:1189$1142 ($mux).
Removed top 17 bits (of 18) from port A of cell module133.$xor$rtl.v:1187$1138 ($xor).
Removed top 17 bits (of 18) from port B of cell module133.$xor$rtl.v:1187$1138 ($xor).
Removed top 17 bits (of 18) from port Y of cell module133.$xor$rtl.v:1187$1138 ($xor).
Removed top 20 bits (of 22) from port A of cell module133.$mul$rtl.v:1190$1146 ($mul).
Removed top 33 bits (of 34) from mux cell module133.$ternary$rtl.v:1194$1152 ($mux).
Removed top 16 bits (of 17) from port B of cell module133.$xor$rtl.v:1193$1148 ($xor).
Removed top 4 bits (of 17) from port Y of cell module133.$xor$rtl.v:1193$1148 ($xor).
Removed top 13 bits (of 34) from port A of cell module133.$not$rtl.v:1194$1154 ($not).
Removed top 33 bits (of 34) from port A of cell module133.$mul$rtl.v:1194$1156 ($mul).
Removed top 15 bits (of 34) from mux cell module133.$ternary$rtl.v:1196$1160 ($mux).
Removed top 18 bits (of 22) from mux cell module133.$ternary$rtl.v:1198$1163 ($mux).
Removed top 18 bits (of 22) from port A of cell module133.$and$rtl.v:1198$1164 ($and).
Removed top 3 bits (of 22) from port Y of cell module133.$and$rtl.v:1198$1164 ($and).
Removed top 15 bits (of 19) from mux cell module133.$ternary$rtl.v:1206$1170 ($mux).
Removed top 3 bits (of 4) from mux cell module133.$ternary$rtl.v:1201$1167 ($mux).
Removed top 1 bits (of 22) from mux cell module133.$ternary$rtl.v:1208$1173 ($mux).
Removed top 9 bits (of 11) from mux cell module133.$ternary$rtl.v:1215$1179 ($mux).
Removed top 18 bits (of 21) from mux cell module133.$ternary$rtl.v:1216$1182 ($mux).
Removed top 18 bits (of 21) from port A of cell module133.$xnor$rtl.v:1216$1183 ($xnor).
Removed top 11 bits (of 12) from port A of cell module133.$le$rtl.v:1221$1187 ($le).
Removed top 20 bits (of 21) from port A of cell module133.$gt$rtl.v:1224$1198 ($gt).
Removed top 12 bits (of 17) from mux cell module133.$ternary$rtl.v:1227$1201 ($mux).
Removed top 8 bits (of 9) from port B of cell module133.$le$rtl.v:1240$1209 ($le).
Removed top 17 bits (of 18) from port A of cell module133.$sub$rtl.v:1239$1210 ($sub).
Removed top 14 bits (of 15) from port B of cell module133.$sub$rtl.v:1239$1210 ($sub).
Removed top 17 bits (of 18) from port A of cell module133.$add$rtl.v:1242$1213 ($add).
Removed top 7 bits (of 18) from port Y of cell module133.$add$rtl.v:1242$1213 ($add).
Removed top 7 bits (of 18) from port B of cell module133.$add$rtl.v:1242$1213 ($add).
Removed top 8 bits (of 14) from mux cell module133.$ternary$rtl.v:1247$1219 ($mux).
Removed top 11 bits (of 19) from port B of cell module133.$eq$rtl.v:1247$1220 ($eq).
Removed top 8 bits (of 30) from mux cell module133.$ternary$rtl.v:1253$1230 ($mux).
Removed top 16 bits (of 30) from port A of cell module133.$ge$rtl.v:1253$1231 ($ge).
Removed top 8 bits (of 30) from port B of cell module133.$ge$rtl.v:1253$1231 ($ge).
Removed top 10 bits (of 11) from port B of cell module133.$and$rtl.v:1253$1232 ($and).
Removed top 3 bits (of 11) from port Y of cell module133.$and$rtl.v:1253$1232 ($and).
Removed top 10 bits (of 11) from port A of cell module133.$xnor$rtl.v:1256$1237 ($xnor).
Removed top 11 bits (of 16) from mux cell module133.$ternary$rtl.v:1259$1246 ($mux).
Removed top 3 bits (of 22) from port B of cell module133.$xnor$rtl.v:1266$1249 ($xnor).
Removed top 11 bits (of 15) from mux cell module133.$ternary$rtl.v:1267$1254 ($mux).
Removed top 4 bits (of 6) from port A of cell module133.$sshl$rtl.v:1273$1260 ($sshl).
Removed top 12 bits (of 13) from port B of cell module133.$sub$rtl.v:1284$1269 ($sub).
Removed top 6 bits (of 13) from port Y of cell module133.$sub$rtl.v:1284$1269 ($sub).
Removed top 6 bits (of 13) from port A of cell module133.$sub$rtl.v:1284$1269 ($sub).
Removed top 3 bits (of 11) from mux cell module133.$ternary$rtl.v:1291$1278 ($mux).
Removed top 3 bits (of 11) from mux cell module133.$ternary$rtl.v:1291$1281 ($mux).
Removed top 8 bits (of 9) from mux cell module133.$ternary$rtl.v:1293$1286 ($mux).
Removed top 3 bits (of 11) from port A of cell module133.$xnor$rtl.v:1291$1282 ($xnor).
Removed top 6 bits (of 17) from mux cell module133.$ternary$rtl.v:1305$1292 ($mux).
Removed top 2 bits (of 10) from port B of cell module133.$sub$rtl.v:1323$1310 ($sub).
Removed top 5 bits (of 6) from port B of cell module133.$mul$rtl.v:1327$1320 ($mul).
Removed top 3 bits (of 6) from port Y of cell module133.$mul$rtl.v:1327$1320 ($mul).
Removed top 13 bits (of 14) from port A of cell module133.$mul$rtl.v:1330$1328 ($mul).
Removed top 6 bits (of 14) from port B of cell module133.$mul$rtl.v:1330$1328 ($mul).
Removed top 5 bits (of 14) from port Y of cell module133.$mul$rtl.v:1330$1328 ($mul).
Removed top 4 bits (of 22) from port A of cell module133.$neg$rtl.v:1330$1330 ($neg).
Removed top 3 bits (of 4) from port A of cell module133.$eq$rtl.v:1336$1346 ($eq).
Removed top 5 bits (of 13) from port Y of cell module133.$add$rtl.v:1332$1338 ($add).
Removed top 16 bits (of 17) from port B of cell module133.$eq$rtl.v:1336$1347 ($eq).
Removed top 8 bits (of 21) from port Y of cell module133.$xor$rtl.v:1339$1353 ($xor).
Removed top 8 bits (of 21) from port A of cell module133.$xor$rtl.v:1339$1353 ($xor).
Removed top 12 bits (of 20) from port B of cell module133.$lt$rtl.v:1346$1357 ($lt).
Removed top 2 bits (of 11) from port B of cell module133.$sub$rtl.v:1352$1365 ($sub).
Removed top 17 bits (of 18) from port A of cell module133.$xnor$rtl.v:1348$1362 ($xnor).
Removed top 17 bits (of 18) from port B of cell module133.$xnor$rtl.v:1348$1362 ($xnor).
Removed top 1 bits (of 2) from port A of cell module133.$ge$rtl.v:1365$1377 ($ge).
Removed top 6 bits (of 7) from port A of cell module133.$sshl$rtl.v:1366$1382 ($sshl).
Removed top 5 bits (of 19) from port Y of cell module133.$sshl$rtl.v:1379$1407 ($sshl).
Removed top 12 bits (of 20) from mux cell module133.$ternary$rtl.v:1388$1412 ($mux).
Removed top 9 bits (of 20) from mux cell module133.$ternary$rtl.v:1389$1417 ($mux).
Removed top 12 bits (of 13) from port A of cell module133.$sshr$rtl.v:1388$1413 ($sshr).
Removed top 17 bits (of 18) from port B of cell module133.$ge$rtl.v:1390$1422 ($ge).
Removed top 6 bits (of 7) from port A of cell module133.$mul$rtl.v:1392$1424 ($mul).
Removed top 4 bits (of 7) from port Y of cell module133.$mul$rtl.v:1392$1424 ($mul).
Removed top 6 bits (of 7) from port A of cell module133.$lt$rtl.v:1398$1427 ($lt).
Removed top 5 bits (of 20) from mux cell module133.$ternary$rtl.v:1401$1436 ($mux).
Removed top 16 bits (of 17) from port B of cell module133.$or$rtl.v:1400$1432 ($or).
Removed top 13 bits (of 17) from port Y of cell module133.$or$rtl.v:1400$1432 ($or).
Removed top 5 bits (of 20) from mux cell module133.$ternary$rtl.v:1401$1435 ($mux).
Removed top 13 bits (of 22) from mux cell module133.$procmux$1539 ($mux).
Removed top 15 bits (of 16) from mux cell module133.$procmux$1719 ($mux).
Removed top 3 bits (of 19) from mux cell module133.$procmux$1742 ($mux).
Removed top 6 bits (of 22) from mux cell module133.$procmux$1803 ($mux).
Removed top 6 bits (of 7) from FF cell module133.$procdff$2155 ($dff).
Removed top 2 bits (of 3) from FF cell module133.$procdff$2156 ($dff).
Removed top 10 bits (of 11) from FF cell module133.$procdff$2158 ($dff).
Removed top 12 bits (of 13) from FF cell module133.$procdff$2159 ($dff).
Removed top 3 bits (of 19) from FF cell module133.$procdff$2191 ($dff).
Removed top 12 bits (of 13) from FF cell module133.$procdff$2198 ($dff).
Removed top 21 bits (of 22) from FF cell module133.$procdff$2200 ($dff).
Removed top 6 bits (of 13) from FF cell module133.$procdff$2202 ($dff).
Removed top 6 bits (of 10) from mux cell module133.$ternary$rtl.v:1031$881 ($mux).
Removed top 18 bits (of 22) from mux cell module133.$ternary$rtl.v:1042$900 ($mux).
Removed top 16 bits (of 19) from port Y of cell module133.$sub$rtl.v:1038$896 ($sub).
Removed top 16 bits (of 19) from port A of cell module133.$sub$rtl.v:1038$896 ($sub).
Removed top 1 bits (of 4) from port B of cell module133.$sub$rtl.v:1038$896 ($sub).
Removed top 3 bits (of 22) from mux cell module133.$ternary$rtl.v:1044$909 ($mux).
Removed top 5 bits (of 21) from mux cell module133.$ternary$rtl.v:1049$923 ($mux).
Removed top 21 bits (of 22) from port B of cell module133.$gt$rtl.v:1055$930 ($gt).
Removed top 21 bits (of 35) from port B of cell module133.$ge$rtl.v:1057$933 ($ge).
Removed top 10 bits (of 21) from mux cell module133.$ternary$rtl.v:1072$946 ($mux).
Removed top 8 bits (of 12) from mux cell module133.$ternary$rtl.v:1079$961 ($mux).
Removed top 3 bits (of 19) from port A of cell module133.$sshr$rtl.v:1099$999 ($sshr).
Removed top 6 bits (of 25) from port Y of cell module133.$sshl$rtl.v:1131$1060 ($sshl).
Removed top 4 bits (of 8) from port Y of cell module133.$shr$rtl.v:1135$1070 ($shr).
Removed top 7 bits (of 26) from port Y of cell module133.$xnor$rtl.v:1184$1131 ($xnor).
Removed top 7 bits (of 26) from port Y of cell module133.$sshr$rtl.v:1184$1127 ($sshr).
Removed top 15 bits (of 34) from port Y of cell module133.$mul$rtl.v:1194$1156 ($mul).
Removed top 15 bits (of 34) from mux cell module133.$ternary$rtl.v:1196$1158 ($mux).
Removed top 12 bits (of 13) from port A of cell module133.$sshl$rtl.v:1223$1194 ($sshl).
Removed top 3 bits (of 19) from port A of cell module133.$ne$rtl.v:1256$1236 ($ne).
Removed top 11 bits (of 16) from port Y of cell module133.$xnor$rtl.v:1259$1243 ($xnor).
Removed top 12 bits (of 13) from port A of cell module133.$le$rtl.v:1275$1255 ($le).
Removed top 5 bits (of 13) from mux cell module133.$ternary$rtl.v:1332$1339 ($mux).
Removed top 8 bits (of 21) from mux cell module133.$ternary$rtl.v:1339$1352 ($mux).
Removed top 6 bits (of 7) from port B of cell module133.$le$rtl.v:1366$1383 ($le).
Removed top 2 bits (of 17) from mux cell module133.$ternary$rtl.v:1400$1431 ($mux).
Removed top 12 bits (of 13) from mux cell module133.$procmux$1760 ($mux).
Removed top 6 bits (of 10) from port Y of cell module133.$sub$rtl.v:1031$879 ($sub).
Removed top 6 bits (of 10) from port A of cell module133.$sub$rtl.v:1031$879 ($sub).
Removed top 5 bits (of 21) from mux cell module133.$ternary$rtl.v:1046$913 ($mux).
Removed top 12 bits (of 13) from wire module133.$0\reg150[12:0].
Removed top 3 bits (of 19) from wire module133.$0\reg157[18:0].
Removed top 12 bits (of 13) from wire module133.$0\reg195[12:0].
Removed top 10 bits (of 11) from wire module133.$0\reg196[10:0].
Removed top 7 bits (of 18) from wire module133.$add$rtl.v:1242$1213_Y.
Removed top 5 bits (of 13) from wire module133.$add$rtl.v:1332$1338_Y.
Removed top 1 bits (of 18) from wire module133.$and$rtl.v:1162$1110_Y.
Removed top 3 bits (of 22) from wire module133.$and$rtl.v:1198$1164_Y.
Removed top 3 bits (of 4) from wire module133.$eq$rtl.v:1088$981_Y.
Removed top 2 bits (of 3) from wire module133.$eq$rtl.v:1336$1347_Y.
Removed top 6 bits (of 7) from wire module133.$ge$rtl.v:1365$1377_Y.
Removed top 18 bits (of 19) from wire module133.$gt$rtl.v:1115$1042_Y.
Removed top 21 bits (of 22) from wire module133.$gt$rtl.v:1189$1139_Y.
Removed top 33 bits (of 34) from wire module133.$le$rtl.v:1194$1149_Y.
Removed top 18 bits (of 19) from wire module133.$le$rtl.v:1366$1383_Y.
Removed top 13 bits (of 14) from wire module133.$logic_and$rtl.v:1057$934_Y.
Removed top 18 bits (of 19) from wire module133.$logic_and$rtl.v:1206$1169_Y.
Removed top 4 bits (of 5) from wire module133.$logic_not$rtl.v:1025$867_Y.
Removed top 7 bits (of 8) from wire module133.$logic_not$rtl.v:1043$903_Y.
Removed top 20 bits (of 21) from wire module133.$logic_not$rtl.v:1081$965_Y.
Removed top 17 bits (of 18) from wire module133.$logic_not$rtl.v:1110$1028_Y.
Removed top 16 bits (of 17) from wire module133.$logic_not$rtl.v:1150$1095_Y.
Removed top 10 bits (of 11) from wire module133.$logic_not$rtl.v:1215$1174_Y.
Removed top 8 bits (of 9) from wire module133.$logic_not$rtl.v:1240$1208_Y.
Removed top 13 bits (of 14) from wire module133.$logic_not$rtl.v:1330$1327_Y.
Removed top 3 bits (of 4) from wire module133.$logic_not$rtl.v:1359$1371_Y.
Removed top 6 bits (of 7) from wire module133.$logic_not$rtl.v:1398$1426_Y.
Removed top 29 bits (of 30) from wire module133.$logic_or$rtl.v:1103$1013_Y.
Removed top 33 bits (of 34) from wire module133.$logic_or$rtl.v:1194$1150_Y.
Removed top 9 bits (of 10) from wire module133.$lt$rtl.v:1033$889_Y.
Removed top 13 bits (of 14) from wire module133.$lt$rtl.v:1045$910_Y.
Removed top 3 bits (of 6) from wire module133.$mul$rtl.v:1027$871_Y.
Removed top 5 bits (of 21) from wire module133.$mul$rtl.v:1127$1053_Y.
Removed top 5 bits (of 22) from wire module133.$mul$rtl.v:1137$1075_Y.
Removed top 15 bits (of 34) from wire module133.$mul$rtl.v:1194$1156_Y.
Removed top 3 bits (of 6) from wire module133.$mul$rtl.v:1327$1320_Y.
Removed top 5 bits (of 14) from wire module133.$mul$rtl.v:1330$1328_Y.
Removed top 4 bits (of 7) from wire module133.$mul$rtl.v:1392$1424_Y.
Removed top 16 bits (of 19) from wire module133.$neg$rtl.v:1038$897_Y.
Removed top 4 bits (of 8) from wire module133.$not$rtl.v:1135$1071_Y.
Removed top 19 bits (of 34) from wire module133.$or$rtl.v:1194$1155_Y.
Removed top 13 bits (of 17) from wire module133.$or$rtl.v:1400$1432_Y.
Removed top 13 bits (of 22) from wire module133.$procmux$1539_Y.
Removed top 15 bits (of 16) from wire module133.$procmux$1719_Y.
Removed top 12 bits (of 13) from wire module133.$procmux$1760_Y.
Removed top 6 bits (of 22) from wire module133.$procmux$1803_Y.
Removed top 9 bits (of 10) from wire module133.$reduce_and$rtl.v:1023$864_Y.
Removed top 21 bits (of 22) from wire module133.$reduce_and$rtl.v:1207$1171_Y.
Removed top 4 bits (of 5) from wire module133.$reduce_and$rtl.v:1291$1283_Y.
Removed top 19 bits (of 20) from wire module133.$reduce_and$rtl.v:1401$1433_Y.
Removed top 15 bits (of 16) from wire module133.$reduce_or$rtl.v:1062$937_Y.
Removed top 2 bits (of 3) from wire module133.$reduce_or$rtl.v:1083$973_Y.
Removed top 10 bits (of 11) from wire module133.$reduce_or$rtl.v:1323$1314_Y.
Removed top 21 bits (of 22) from wire module133.$reduce_or$rtl.v:1346$1360_Y.
Removed top 1 bits (of 2) from wire module133.$reduce_or$rtl.v:1365$1376_Y.
Removed top 1 bits (of 2) from wire module133.$reduce_xnor$rtl.v:1029$874_Y.
Removed top 3 bits (of 4) from wire module133.$reduce_xnor$rtl.v:1102$1011_Y.
Removed top 9 bits (of 10) from wire module133.$reduce_xnor$rtl.v:1113$1037_Y.
Removed top 17 bits (of 18) from wire module133.$reduce_xnor$rtl.v:1187$1137_Y.
Removed top 11 bits (of 12) from wire module133.$reduce_xnor$rtl.v:1221$1186_Y.
Removed top 21 bits (of 22) from wire module133.$reduce_xnor$rtl.v:1314$1300_Y.
Removed top 5 bits (of 6) from wire module133.$reduce_xnor$rtl.v:1330$1333_Y.
Removed top 18 bits (of 19) from wire module133.$reduce_xnor$rtl.v:1377$1398_Y.
Removed top 3 bits (of 4) from wire module133.$reduce_xor$rtl.v:1077$957_Y.
Removed top 20 bits (of 21) from wire module133.$reduce_xor$rtl.v:1110$1022_Y.
Removed top 16 bits (of 17) from wire module133.$reduce_xor$rtl.v:1305$1291_Y.
Removed top 4 bits (of 8) from wire module133.$shr$rtl.v:1135$1070_Y.
Removed top 6 bits (of 25) from wire module133.$sshl$rtl.v:1131$1060_Y.
Removed top 5 bits (of 19) from wire module133.$sshl$rtl.v:1379$1407_Y.
Removed top 7 bits (of 26) from wire module133.$sshr$rtl.v:1184$1127_Y.
Removed top 6 bits (of 10) from wire module133.$sub$rtl.v:1031$879_Y.
Removed top 16 bits (of 19) from wire module133.$sub$rtl.v:1038$896_Y.
Removed top 3 bits (of 14) from wire module133.$ternary$rtl.v:1032$885_Y.
Removed top 3 bits (of 22) from wire module133.$ternary$rtl.v:1044$909_Y.
Removed top 5 bits (of 21) from wire module133.$ternary$rtl.v:1046$913_Y.
Removed top 14 bits (of 18) from wire module133.$ternary$rtl.v:1049$920_Y.
Removed top 17 bits (of 21) from wire module133.$ternary$rtl.v:1049$921_Y.
Removed top 5 bits (of 21) from wire module133.$ternary$rtl.v:1049$923_Y.
Removed top 10 bits (of 21) from wire module133.$ternary$rtl.v:1072$946_Y.
Removed top 10 bits (of 26) from wire module133.$ternary$rtl.v:1075$955_Y.
Removed top 8 bits (of 12) from wire module133.$ternary$rtl.v:1079$961_Y.
Removed top 8 bits (of 12) from wire module133.$ternary$rtl.v:1079$964_Y.
Removed top 14 bits (of 18) from wire module133.$ternary$rtl.v:1088$980_Y.
Removed top 5 bits (of 19) from wire module133.$ternary$rtl.v:1100$1003_Y.
Removed top 17 bits (of 18) from wire module133.$ternary$rtl.v:1110$1029_Y.
Removed top 15 bits (of 18) from wire module133.$ternary$rtl.v:1110$1031_Y.
Removed top 15 bits (of 19) from wire module133.$ternary$rtl.v:1115$1041_Y.
Removed top 15 bits (of 19) from wire module133.$ternary$rtl.v:1115$1044_Y.
Removed top 7 bits (of 26) from wire module133.$ternary$rtl.v:1184$1133_Y.
Removed top 33 bits (of 34) from wire module133.$ternary$rtl.v:1194$1152_Y.
Removed top 15 bits (of 34) from wire module133.$ternary$rtl.v:1196$1158_Y.
Removed top 15 bits (of 34) from wire module133.$ternary$rtl.v:1196$1160_Y.
Removed top 3 bits (of 4) from wire module133.$ternary$rtl.v:1201$1167_Y.
Removed top 16 bits (of 19) from wire module133.$ternary$rtl.v:1206$1170_Y.
Removed top 1 bits (of 22) from wire module133.$ternary$rtl.v:1208$1173_Y.
Removed top 9 bits (of 11) from wire module133.$ternary$rtl.v:1215$1179_Y.
Removed top 18 bits (of 21) from wire module133.$ternary$rtl.v:1216$1182_Y.
Removed top 12 bits (of 17) from wire module133.$ternary$rtl.v:1227$1201_Y.
Removed top 3 bits (of 11) from wire module133.$ternary$rtl.v:1291$1278_Y.
Removed top 3 bits (of 11) from wire module133.$ternary$rtl.v:1291$1281_Y.
Removed top 8 bits (of 9) from wire module133.$ternary$rtl.v:1293$1286_Y.
Removed top 6 bits (of 17) from wire module133.$ternary$rtl.v:1305$1292_Y.
Removed top 5 bits (of 13) from wire module133.$ternary$rtl.v:1332$1339_Y.
Removed top 8 bits (of 21) from wire module133.$ternary$rtl.v:1339$1352_Y.
Removed top 5 bits (of 20) from wire module133.$ternary$rtl.v:1401$1435_Y.
Removed top 5 bits (of 20) from wire module133.$ternary$rtl.v:1401$1436_Y.
Removed top 15 bits (of 26) from wire module133.$xnor$rtl.v:1184$1131_Y.
Removed top 9 bits (of 21) from wire module133.$xor$rtl.v:1091$982_Y.
Removed top 22 bits (of 30) from wire module133.$xor$rtl.v:1103$1014_Y.
Removed top 12 bits (of 13) from wire module133.$xor$rtl.v:1175$1121_Y.
Removed top 5 bits (of 17) from wire module133.$xor$rtl.v:1193$1148_Y.
Removed top 8 bits (of 21) from wire module133.$xor$rtl.v:1339$1353_Y.
Removed top 17 bits (of 18) from wire module133.wire141.
Removed top 16 bits (of 17) from wire module133.wire149.
Removed top 9 bits (of 11) from wire module133.wire174.
Removed top 14 bits (of 15) from wire module133.wire176.
Removed top 5 bits (of 6) from wire module133.wire178.
Removed top 4 bits (of 11) from wire module133.wire194.
Removed top 10 bits (of 11) from port B of cell module4.$eq$rtl.v:544$492 ($eq).
Removed top 4 bits (of 18) from port Y of cell module4.$shl$rtl.v:544$493 ($shl).
Removed top 1 bits (of 22) from mux cell module4.$ternary$rtl.v:551$506 ($mux).
Removed top 1 bits (of 22) from mux cell module4.$ternary$rtl.v:551$508 ($mux).
Removed top 1 bits (of 7) from port B of cell module4.$xnor$rtl.v:553$509 ($xnor).
Removed top 11 bits (of 22) from mux cell module4.$ternary$rtl.v:554$514 ($mux).
Removed top 1 bits (of 4) from port B of cell module4.$xnor$rtl.v:567$526 ($xnor).
Removed top 17 bits (of 19) from port B of cell module4.$sub$rtl.v:574$534 ($sub).
Removed top 6 bits (of 7) from port A of cell module4.$not$rtl.v:574$537 ($not).
Removed top 5 bits (of 7) from port A of cell module4.$lt$rtl.v:574$539 ($lt).
Removed top 10 bits (of 11) from port A of cell module4.$sub$rtl.v:574$540 ($sub).
Removed top 10 bits (of 11) from port B of cell module4.$sub$rtl.v:574$540 ($sub).
Removed top 17 bits (of 19) from port B of cell module4.$xnor$rtl.v:579$544 ($xnor).
Removed top 10 bits (of 11) from port A of cell module4.$not$rtl.v:580$548 ($not).
Removed top 3 bits (of 11) from port Y of cell module4.$and$rtl.v:580$549 ($and).
Removed top 3 bits (of 11) from port B of cell module4.$ge$rtl.v:580$550 ($ge).
Removed top 20 bits (of 21) from port B of cell module4.$eq$rtl.v:581$556 ($eq).
Removed top 20 bits (of 21) from port A of cell module4.$sub$rtl.v:584$561 ($sub).
Removed top 13 bits (of 21) from port B of cell module4.$sub$rtl.v:584$561 ($sub).
Removed top 10 bits (of 11) from port B of cell module4.$lt$rtl.v:583$559 ($lt).
Removed top 3 bits (of 14) from port B of cell module4.$xnor$rtl.v:586$564 ($xnor).
Removed top 6 bits (of 14) from mux cell module4.$ternary$rtl.v:586$570 ($mux).
Removed top 8 bits (of 9) from mux cell module4.$ternary$rtl.v:597$576 ($mux).
Removed top 10 bits (of 11) from port B of cell module4.$le$rtl.v:597$574 ($le).
Removed top 8 bits (of 9) from port B of cell module4.$xnor$rtl.v:598$581 ($xnor).
Removed top 14 bits (of 22) from port A of cell module4.$ne$rtl.v:611$609 ($ne).
Removed top 6 bits (of 8) from port A of cell module4.$neg$rtl.v:614$617 ($neg).
Removed top 4 bits (of 5) from mux cell module4.$ternary$rtl.v:615$621 ($mux).
Removed top 17 bits (of 18) from mux cell module4.$procmux$1952 ($mux).
Removed top 2 bits (of 3) from mux cell module4.$procmux$1958 ($mux).
Removed top 1 bits (of 22) from FF cell module4.$procdff$2224 ($dff).
Removed top 2 bits (of 3) from FF cell module4.$procdff$2225 ($dff).
Removed top 14 bits (of 16) from FF cell module4.$procdff$2227 ($dff).
Removed top 2 bits (of 3) from FF cell module4.$procdff$2228 ($dff).
Removed top 17 bits (of 18) from FF cell module4.$procdff$2229 ($dff).
Removed top 20 bits (of 21) from FF cell module4.$procdff$2233 ($dff).
Removed top 4 bits (of 22) from FF cell module4.$procdff$2234 ($dff).
Removed top 2 bits (of 3) from port A of cell module4.$xnor$rtl.v:553$509 ($xnor).
Removed top 10 bits (of 21) from mux cell module4.$ternary$rtl.v:554$512 ($mux).
Removed top 2 bits (of 3) from port B of cell module4.$xnor$rtl.v:567$526 ($xnor).
Removed top 2 bits (of 3) from port A of cell module4.$and$rtl.v:580$549 ($and).
Removed top 2 bits (of 3) from port B of cell module4.$xnor$rtl.v:586$563 ($xnor).
Removed top 6 bits (of 14) from mux cell module4.$ternary$rtl.v:586$567 ($mux).
Removed top 2 bits (of 3) from port B of cell module4.$sshl$rtl.v:614$613 ($sshl).
Removed top 6 bits (of 14) from port Y of cell module4.$xnor$rtl.v:586$564 ($xnor).
Removed top 1 bits (of 22) from wire module4.$0\reg41[21:0].
Removed top 2 bits (of 3) from wire module4.$0\reg45[2:0].
Removed top 3 bits (of 11) from wire module4.$and$rtl.v:580$549_Y.
Removed top 17 bits (of 18) from wire module4.$eq$rtl.v:571$533_Y.
Removed top 2 bits (of 3) from wire module4.$eq$rtl.v:581$556_Y.
Removed top 10 bits (of 11) from wire module4.$ge$rtl.v:580$550_Y.
Removed top 8 bits (of 9) from wire module4.$le$rtl.v:597$574_Y.
Removed top 21 bits (of 22) from wire module4.$logic_not$rtl.v:551$504_Y.
Removed top 10 bits (of 11) from wire module4.$logic_not$rtl.v:583$558_Y.
Removed top 10 bits (of 11) from wire module4.$lt$rtl.v:574$539_Y.
Removed top 17 bits (of 18) from wire module4.$lt$rtl.v:583$559_Y.
Removed top 8 bits (of 9) from wire module4.$ne$rtl.v:598$580_Y.
Removed top 3 bits (of 11) from wire module4.$not$rtl.v:580$548_Y.
Removed top 20 bits (of 21) from wire module4.$reduce_and$rtl.v:581$555_Y.
Removed top 20 bits (of 21) from wire module4.$reduce_and$rtl.v:584$560_Y.
Removed top 8 bits (of 9) from wire module4.$reduce_and$rtl.v:597$573_Y.
Removed top 10 bits (of 11) from wire module4.$reduce_xnor$rtl.v:574$535_Y.
Removed top 4 bits (of 5) from wire module4.$reduce_xnor$rtl.v:615$619_Y.
Removed top 1 bits (of 21) from wire module4.$sshr$rtl.v:579$547_Y.
Removed top 1 bits (of 22) from wire module4.$ternary$rtl.v:551$506_Y.
Removed top 10 bits (of 21) from wire module4.$ternary$rtl.v:554$512_Y.
Removed top 6 bits (of 14) from wire module4.$ternary$rtl.v:586$567_Y.
Removed top 6 bits (of 14) from wire module4.$ternary$rtl.v:586$570_Y.
Removed top 8 bits (of 9) from wire module4.$ternary$rtl.v:597$576_Y.
Removed top 6 bits (of 14) from wire module4.$xnor$rtl.v:586$564_Y.
Removed top 10 bits (of 11) from wire module4.wire10.
Removed top 12 bits (of 13) from wire module4.wire52.
Removed top 6 bits (of 13) from wire module4.wire53.
Removed top 9 bits (of 10) from wire module4.wire56.
Removed top 5 bits (of 14) from wire module4.wire57.
Removed top 5 bits (of 7) from wire module4.wire59.
Removed top 7 bits (of 8) from wire module4.wire60.
Removed top 4 bits (of 6) from wire module4.wire85.
Removed top 17 bits (of 19) from wire module4.wire9.
Removed top 8 bits (of 9) from port A of cell module63.$add$rtl.v:659$638 ($add).
Removed top 3 bits (of 9) from port Y of cell module63.$add$rtl.v:659$638 ($add).
Removed top 11 bits (of 12) from port A of cell module63.$ge$rtl.v:705$687 ($ge).
Removed top 5 bits (of 10) from port Y of cell module63.$xor$rtl.v:707$688 ($xor).
Removed top 5 bits (of 10) from port B of cell module63.$xor$rtl.v:707$688 ($xor).
Removed top 9 bits (of 10) from port A of cell module63.$shl$rtl.v:710$689 ($shl).
Removed top 15 bits (of 16) from port A of cell module63.$neg$rtl.v:711$692 ($neg).
Removed top 14 bits (of 15) from wire module63.$logic_not$rtl.v:703$684_Y.
Removed top 11 bits (of 12) from wire module63.$logic_not$rtl.v:705$686_Y.
Removed top 8 bits (of 9) from wire module63.$reduce_xnor$rtl.v:659$637_Y.
Removed top 15 bits (of 16) from wire module63.$reduce_xnor$rtl.v:711$691_Y.
Removed top 5 bits (of 10) from wire module63.$xor$rtl.v:707$688_Y.
Removed top 3 bits (of 9) from wire module63.wire70.
Removed top 12 bits (of 30) from port A of cell top.$gt$rtl.v:77$3 ($gt).
Removed top 8 bits (of 30) from port B of cell top.$gt$rtl.v:77$3 ($gt).
Removed top 21 bits (of 22) from port A of cell top.$xnor$rtl.v:79$9 ($xnor).
Removed top 1 bits (of 22) from port Y of cell top.$sshr$rtl.v:80$10 ($sshr).
Removed top 7 bits (of 8) from port B of cell top.$sub$rtl.v:83$12 ($sub).
Removed top 4 bits (of 8) from port Y of cell top.$sub$rtl.v:83$12 ($sub).
Removed top 4 bits (of 8) from port A of cell top.$sub$rtl.v:83$12 ($sub).
Removed top 1 bits (of 9) from mux cell top.$ternary$rtl.v:88$19 ($mux).
Removed top 7 bits (of 8) from port A of cell top.$gt$rtl.v:105$40 ($gt).
Removed top 2 bits (of 18) from port Y of cell top.$or$rtl.v:115$52 ($or).
Removed top 2 bits (of 16) from mux cell top.$ternary$rtl.v:119$67 ($mux).
Removed top 2 bits (of 18) from mux cell top.$ternary$rtl.v:122$70 ($mux).
Removed top 2 bits (of 18) from port A of cell top.$not$rtl.v:123$74 ($not).
Removed top 2 bits (of 18) from mux cell top.$ternary$rtl.v:123$76 ($mux).
Removed top 8 bits (of 9) from port B of cell top.$shl$rtl.v:131$79 ($shl).
Removed top 6 bits (of 9) from mux cell top.$ternary$rtl.v:140$88 ($mux).
Removed top 13 bits (of 15) from mux cell top.$ternary$rtl.v:141$93 ($mux).
Removed top 2 bits (of 8) from port A of cell top.$add$rtl.v:150$100 ($add).
Removed top 11 bits (of 16) from mux cell top.$ternary$rtl.v:155$107 ($mux).
Removed top 16 bits (of 22) from mux cell top.$ternary$rtl.v:161$115 ($mux).
Removed top 10 bits (of 18) from mux cell top.$ternary$rtl.v:162$118 ($mux).
Removed top 3 bits (of 11) from mux cell top.$ternary$rtl.v:166$123 ($mux).
Removed top 10 bits (of 11) from port B of cell top.$add$rtl.v:166$128 ($add).
Removed top 6 bits (of 9) from mux cell top.$ternary$rtl.v:168$131 ($mux).
Removed top 13 bits (of 14) from port A of cell top.$ge$rtl.v:171$134 ($ge).
Removed top 14 bits (of 22) from mux cell top.$ternary$rtl.v:172$135 ($mux).
Removed top 35 bits (of 37) from port A of cell top.$xnor$rtl.v:177$138 ($xnor).
Removed top 3 bits (of 11) from mux cell top.$procmux$2088 ($mux).
Removed top 1 bits (of 18) from mux cell top.$procmux$2097 ($mux).
Removed top 11 bits (of 16) from mux cell top.$procmux$2111 ($mux).
Removed top 13 bits (of 20) from mux cell top.$procmux$2120 ($mux).
Removed top 11 bits (of 14) from FF cell top.$procdff$2266 ($dff).
Removed top 7 bits (of 8) from FF cell top.$procdff$2268 ($dff).
Removed top 11 bits (of 16) from FF cell top.$procdff$2276 ($dff).
Removed top 16 bits (of 17) from FF cell top.$procdff$2283 ($dff).
Removed top 11 bits (of 16) from port A of cell top.$xnor$rtl.v:114$51 ($xnor).
Removed top 2 bits (of 16) from mux cell top.$ternary$rtl.v:118$60 ($mux).
Removed top 11 bits (of 16) from mux cell top.$ternary$rtl.v:122$70 ($mux).
Removed top 2 bits (of 18) from port Y of cell top.$not$rtl.v:123$74 ($not).
Removed top 16 bits (of 17) from port A of cell top.$not$rtl.v:141$89 ($not).
Removed top 11 bits (of 16) from mux cell top.$ternary$rtl.v:155$104 ($mux).
Removed top 12 bits (of 18) from mux cell top.$ternary$rtl.v:161$110 ($mux).
Removed top 16 bits (of 17) from mux cell top.$procmux$2097 ($mux).
Removed top 4 bits (of 5) from mux cell top.$procmux$2111 ($mux).
Removed top 4 bits (of 5) from FF cell top.$procdff$2276 ($dff).
Removed top 4 bits (of 5) from port A of cell top.$xnor$rtl.v:114$51 ($xnor).
Removed top 4 bits (of 5) from mux cell top.$ternary$rtl.v:122$70 ($mux).
Removed top 15 bits (of 16) from wire top.$0\reg100[15:0].
Removed top 7 bits (of 8) from wire top.$0\reg251[7:0].
Removed top 16 bits (of 17) from wire top.$0\reg93[16:0].
Removed top 21 bits (of 22) from wire top.$gt$rtl.v:77$3_Y.
Removed top 14 bits (of 15) from wire top.$logic_not$rtl.v:141$90_Y.
Removed top 10 bits (of 11) from wire top.$logic_not$rtl.v:166$127_Y.
Removed top 13 bits (of 14) from wire top.$logic_not$rtl.v:171$133_Y.
Removed top 2 bits (of 18) from wire top.$not$rtl.v:123$74_Y.
Removed top 2 bits (of 18) from wire top.$or$rtl.v:115$52_Y.
Removed top 3 bits (of 11) from wire top.$procmux$2088_Y.
Removed top 17 bits (of 18) from wire top.$procmux$2097_Y.
Removed top 13 bits (of 20) from wire top.$procmux$2120_Y.
Removed top 17 bits (of 18) from wire top.$reduce_or$rtl.v:110$42_Y.
Removed top 15 bits (of 16) from wire top.$reduce_or$rtl.v:119$63_Y.
Removed top 36 bits (of 37) from wire top.$reduce_or$rtl.v:179$141_Y.
Removed top 21 bits (of 22) from wire top.$reduce_xor$rtl.v:89$20_Y.
Removed top 4 bits (of 8) from wire top.$sub$rtl.v:83$12_Y.
Removed top 2 bits (of 16) from wire top.$ternary$rtl.v:118$60_Y.
Removed top 2 bits (of 16) from wire top.$ternary$rtl.v:119$67_Y.
Removed top 13 bits (of 15) from wire top.$ternary$rtl.v:141$93_Y.
Removed top 11 bits (of 16) from wire top.$ternary$rtl.v:155$104_Y.
Removed top 12 bits (of 18) from wire top.$ternary$rtl.v:161$110_Y.
Removed top 3 bits (of 11) from wire top.$ternary$rtl.v:166$123_Y.
Removed top 1 bits (of 9) from wire top.$ternary$rtl.v:88$19_Y.
Removed top 6 bits (of 9) from wire top.wire249.
Removed top 6 bits (of 7) from wire top.wire254.
Removed top 16 bits (of 17) from wire top.wire255.
Removed top 8 bits (of 9) from wire top.wire90.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 2 unused cells and 268 unused wires.
<suppressed ~8 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~1256 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module module107:
  creating $macc model for $mul$rtl.v:285$169 ($mul).
  creating $macc model for $neg$rtl.v:419$368 ($neg).
  creating $macc model for $neg$rtl.v:420$369 ($neg).
  creating $macc model for $neg$rtl.v:434$384 ($neg).
  creating $macc model for $sub$rtl.v:313$209 ($sub).
  creating $macc model for $sub$rtl.v:332$250 ($sub).
  creating $macc model for $sub$rtl.v:346$276 ($sub).
  creating $macc model for $sub$rtl.v:365$307 ($sub).
  creating $macc model for $sub$rtl.v:366$310 ($sub).
  creating $macc model for $sub$rtl.v:375$319 ($sub).
  creating $macc model for $sub$rtl.v:419$367 ($sub).
  merging $macc model for $sub$rtl.v:419$367 into $neg$rtl.v:419$368.
  creating $alu model for $macc $sub$rtl.v:375$319.
  creating $alu model for $macc $sub$rtl.v:366$310.
  creating $alu model for $macc $sub$rtl.v:365$307.
  creating $alu model for $macc $sub$rtl.v:346$276.
  creating $alu model for $macc $sub$rtl.v:332$250.
  creating $alu model for $macc $sub$rtl.v:313$209.
  creating $alu model for $macc $neg$rtl.v:434$384.
  creating $alu model for $macc $neg$rtl.v:420$369.
  creating $alu model for $macc $neg$rtl.v:419$368.
  creating $macc cell for $mul$rtl.v:285$169: $auto$alumacc.cc:354:replace_macc$2533
  creating $alu model for $ge$rtl.v:311$201 ($ge): new $alu
  creating $alu model for $ge$rtl.v:356$296 ($ge): new $alu
  creating $alu model for $ge$rtl.v:436$390 ($ge): new $alu
  creating $alu model for $gt$rtl.v:338$262 ($gt): new $alu
  creating $alu model for $gt$rtl.v:365$303 ($gt): new $alu
  creating $alu model for $gt$rtl.v:395$355 ($gt): new $alu
  creating $alu model for $le$rtl.v:380$327 ($le): new $alu
  creating $alu model for $le$rtl.v:402$358 ($le): new $alu
  creating $alu model for $lt$rtl.v:363$302 ($lt): new $alu
  creating $alu model for $lt$rtl.v:427$375 ($lt): new $alu
  creating $alu model for $lt$rtl.v:441$410 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:441$410: $auto$alumacc.cc:474:replace_alu$2545
  creating $alu cell for $lt$rtl.v:427$375: $auto$alumacc.cc:474:replace_alu$2550
  creating $alu cell for $lt$rtl.v:363$302: $auto$alumacc.cc:474:replace_alu$2563
  creating $alu cell for $le$rtl.v:402$358: $auto$alumacc.cc:474:replace_alu$2574
  creating $alu cell for $le$rtl.v:380$327: $auto$alumacc.cc:474:replace_alu$2583
  creating $alu cell for $gt$rtl.v:395$355: $auto$alumacc.cc:474:replace_alu$2592
  creating $alu cell for $gt$rtl.v:365$303: $auto$alumacc.cc:474:replace_alu$2605
  creating $alu cell for $gt$rtl.v:338$262: $auto$alumacc.cc:474:replace_alu$2616
  creating $alu cell for $ge$rtl.v:436$390: $auto$alumacc.cc:474:replace_alu$2627
  creating $alu cell for $ge$rtl.v:356$296: $auto$alumacc.cc:474:replace_alu$2638
  creating $alu cell for $ge$rtl.v:311$201: $auto$alumacc.cc:474:replace_alu$2651
  creating $alu cell for $neg$rtl.v:419$368: $auto$alumacc.cc:474:replace_alu$2662
  creating $alu cell for $neg$rtl.v:420$369: $auto$alumacc.cc:474:replace_alu$2665
  creating $alu cell for $neg$rtl.v:434$384: $auto$alumacc.cc:474:replace_alu$2668
  creating $alu cell for $sub$rtl.v:313$209: $auto$alumacc.cc:474:replace_alu$2671
  creating $alu cell for $sub$rtl.v:332$250: $auto$alumacc.cc:474:replace_alu$2674
  creating $alu cell for $sub$rtl.v:346$276: $auto$alumacc.cc:474:replace_alu$2677
  creating $alu cell for $sub$rtl.v:365$307: $auto$alumacc.cc:474:replace_alu$2680
  creating $alu cell for $sub$rtl.v:366$310: $auto$alumacc.cc:474:replace_alu$2683
  creating $alu cell for $sub$rtl.v:375$319: $auto$alumacc.cc:474:replace_alu$2686
  created 20 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module module11:
  creating $macc model for $mul$rtl.v:796$756 ($mul).
  creating $macc model for $neg$rtl.v:822$802 ($neg).
  creating $macc model for $sub$rtl.v:799$767 ($sub).
  creating $alu model for $macc $sub$rtl.v:799$767.
  creating $alu model for $macc $neg$rtl.v:822$802.
  creating $macc cell for $mul$rtl.v:796$756: $auto$alumacc.cc:354:replace_macc$2689
  creating $alu model for $lt$rtl.v:784$729 ($lt): new $alu
  creating $alu model for $lt$rtl.v:790$737 ($lt): new $alu
  creating $alu model for $lt$rtl.v:801$768 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:801$768: $auto$alumacc.cc:474:replace_alu$2693
  creating $alu cell for $lt$rtl.v:790$737: $auto$alumacc.cc:474:replace_alu$2704
  creating $alu cell for $lt$rtl.v:784$729: $auto$alumacc.cc:474:replace_alu$2715
  creating $alu cell for $neg$rtl.v:822$802: $auto$alumacc.cc:474:replace_alu$2720
  creating $alu cell for $sub$rtl.v:799$767: $auto$alumacc.cc:474:replace_alu$2723
  created 5 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module module133:
  creating $macc model for $add$rtl.v:1102$1012 ($add).
  creating $macc model for $add$rtl.v:1113$1038 ($add).
  creating $macc model for $add$rtl.v:1242$1213 ($add).
  creating $macc model for $add$rtl.v:1332$1338 ($add).
  creating $macc model for $mul$rtl.v:1027$871 ($mul).
  creating $macc model for $mul$rtl.v:1033$888 ($mul).
  creating $macc model for $mul$rtl.v:1045$911 ($mul).
  creating $macc model for $mul$rtl.v:1127$1053 ($mul).
  creating $macc model for $mul$rtl.v:1137$1075 ($mul).
  creating $macc model for $mul$rtl.v:1171$1117 ($mul).
  creating $macc model for $mul$rtl.v:1190$1146 ($mul).
  creating $macc model for $mul$rtl.v:1194$1156 ($mul).
  creating $macc model for $mul$rtl.v:1327$1320 ($mul).
  creating $macc model for $mul$rtl.v:1330$1328 ($mul).
  creating $macc model for $mul$rtl.v:1392$1424 ($mul).
  creating $macc model for $neg$rtl.v:1031$882 ($neg).
  creating $macc model for $neg$rtl.v:1038$897 ($neg).
  creating $macc model for $neg$rtl.v:1066$938 ($neg).
  creating $macc model for $neg$rtl.v:1093$985 ($neg).
  creating $macc model for $neg$rtl.v:1184$1126 ($neg).
  creating $macc model for $neg$rtl.v:1198$1165 ($neg).
  creating $macc model for $neg$rtl.v:1308$1293 ($neg).
  creating $macc model for $neg$rtl.v:1330$1330 ($neg).
  creating $macc model for $neg$rtl.v:1332$1340 ($neg).
  creating $macc model for $neg$rtl.v:1364$1374 ($neg).
  creating $macc model for $sub$rtl.v:1031$879 ($sub).
  creating $macc model for $sub$rtl.v:1038$896 ($sub).
  creating $macc model for $sub$rtl.v:1239$1210 ($sub).
  creating $macc model for $sub$rtl.v:1284$1269 ($sub).
  creating $macc model for $sub$rtl.v:1323$1310 ($sub).
  creating $macc model for $sub$rtl.v:1330$1331 ($sub).
  creating $macc model for $sub$rtl.v:1338$1349 ($sub).
  creating $macc model for $sub$rtl.v:1352$1365 ($sub).
  merging $macc model for $neg$rtl.v:1330$1330 into $sub$rtl.v:1330$1331.
  merging $macc model for $sub$rtl.v:1038$896 into $neg$rtl.v:1038$897.
  creating $alu model for $macc $sub$rtl.v:1330$1331.
  creating $alu model for $macc $sub$rtl.v:1323$1310.
  creating $alu model for $macc $sub$rtl.v:1284$1269.
  creating $alu model for $macc $sub$rtl.v:1239$1210.
  creating $alu model for $macc $sub$rtl.v:1352$1365.
  creating $alu model for $macc $sub$rtl.v:1031$879.
  creating $alu model for $macc $neg$rtl.v:1364$1374.
  creating $alu model for $macc $neg$rtl.v:1332$1340.
  creating $alu model for $macc $sub$rtl.v:1338$1349.
  creating $alu model for $macc $neg$rtl.v:1308$1293.
  creating $alu model for $macc $neg$rtl.v:1198$1165.
  creating $alu model for $macc $neg$rtl.v:1184$1126.
  creating $alu model for $macc $neg$rtl.v:1093$985.
  creating $alu model for $macc $neg$rtl.v:1066$938.
  creating $alu model for $macc $neg$rtl.v:1038$897.
  creating $alu model for $macc $neg$rtl.v:1031$882.
  creating $alu model for $macc $add$rtl.v:1332$1338.
  creating $alu model for $macc $add$rtl.v:1242$1213.
  creating $alu model for $macc $add$rtl.v:1113$1038.
  creating $alu model for $macc $add$rtl.v:1102$1012.
  creating $macc cell for $mul$rtl.v:1190$1146: $auto$alumacc.cc:354:replace_macc$2726
  creating $macc cell for $mul$rtl.v:1171$1117: $auto$alumacc.cc:354:replace_macc$2727
  creating $macc cell for $mul$rtl.v:1137$1075: $auto$alumacc.cc:354:replace_macc$2728
  creating $macc cell for $mul$rtl.v:1127$1053: $auto$alumacc.cc:354:replace_macc$2729
  creating $macc cell for $mul$rtl.v:1045$911: $auto$alumacc.cc:354:replace_macc$2730
  creating $macc cell for $mul$rtl.v:1033$888: $auto$alumacc.cc:354:replace_macc$2731
  creating $macc cell for $mul$rtl.v:1027$871: $auto$alumacc.cc:354:replace_macc$2732
  creating $macc cell for $mul$rtl.v:1392$1424: $auto$alumacc.cc:354:replace_macc$2733
  creating $macc cell for $mul$rtl.v:1330$1328: $auto$alumacc.cc:354:replace_macc$2734
  creating $macc cell for $mul$rtl.v:1327$1320: $auto$alumacc.cc:354:replace_macc$2735
  creating $macc cell for $mul$rtl.v:1194$1156: $auto$alumacc.cc:354:replace_macc$2736
  creating $alu model for $ge$rtl.v:1057$933 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1253$1231 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1365$1377 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1390$1422 ($ge): new $alu
  creating $alu model for $gt$rtl.v:1055$930 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1087$974 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1115$1042 ($gt): merged with $gt$rtl.v:1087$974.
  creating $alu model for $gt$rtl.v:1162$1111 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1171$1118 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1189$1139 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1224$1198 ($gt): new $alu
  creating $alu model for $le$rtl.v:1101$1008 ($le): new $alu
  creating $alu model for $le$rtl.v:1194$1149 ($le): new $alu
  creating $alu model for $le$rtl.v:1205$1168 ($le): new $alu
  creating $alu model for $le$rtl.v:1221$1187 ($le): new $alu
  creating $alu model for $le$rtl.v:1240$1209 ($le): new $alu
  creating $alu model for $le$rtl.v:1253$1233 ($le): new $alu
  creating $alu model for $le$rtl.v:1275$1255 ($le): new $alu
  creating $alu model for $le$rtl.v:1312$1296 ($le): new $alu
  creating $alu model for $le$rtl.v:1366$1383 ($le): new $alu
  creating $alu model for $lt$rtl.v:1023$865 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1033$889 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1045$910 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1047$917 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1057$935 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1143$1079 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1171$1116 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1317$1305 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1346$1357 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1398$1427 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:1398$1427: $auto$alumacc.cc:474:replace_alu$2766
  creating $alu cell for $lt$rtl.v:1346$1357: $auto$alumacc.cc:474:replace_alu$2771
  creating $alu cell for $lt$rtl.v:1317$1305: $auto$alumacc.cc:474:replace_alu$2782
  creating $alu cell for $lt$rtl.v:1171$1116: $auto$alumacc.cc:474:replace_alu$2793
  creating $alu cell for $lt$rtl.v:1143$1079: $auto$alumacc.cc:474:replace_alu$2804
  creating $alu cell for $lt$rtl.v:1057$935: $auto$alumacc.cc:474:replace_alu$2809
  creating $alu cell for $lt$rtl.v:1047$917: $auto$alumacc.cc:474:replace_alu$2820
  creating $alu cell for $lt$rtl.v:1045$910: $auto$alumacc.cc:474:replace_alu$2825
  creating $alu cell for $lt$rtl.v:1033$889: $auto$alumacc.cc:474:replace_alu$2836
  creating $alu cell for $lt$rtl.v:1023$865: $auto$alumacc.cc:474:replace_alu$2841
  creating $alu cell for $le$rtl.v:1366$1383: $auto$alumacc.cc:474:replace_alu$2852
  creating $alu cell for $le$rtl.v:1312$1296: $auto$alumacc.cc:474:replace_alu$2865
  creating $alu cell for $le$rtl.v:1275$1255: $auto$alumacc.cc:474:replace_alu$2878
  creating $alu cell for $le$rtl.v:1253$1233: $auto$alumacc.cc:474:replace_alu$2887
  creating $alu cell for $le$rtl.v:1240$1209: $auto$alumacc.cc:474:replace_alu$2896
  creating $alu cell for $le$rtl.v:1221$1187: $auto$alumacc.cc:474:replace_alu$2909
  creating $alu cell for $le$rtl.v:1205$1168: $auto$alumacc.cc:474:replace_alu$2918
  creating $alu cell for $le$rtl.v:1194$1149: $auto$alumacc.cc:474:replace_alu$2927
  creating $alu cell for $le$rtl.v:1101$1008: $auto$alumacc.cc:474:replace_alu$2940
  creating $alu cell for $gt$rtl.v:1224$1198: $auto$alumacc.cc:474:replace_alu$2949
  creating $alu cell for $gt$rtl.v:1189$1139: $auto$alumacc.cc:474:replace_alu$2960
  creating $alu cell for $gt$rtl.v:1171$1118: $auto$alumacc.cc:474:replace_alu$2971
  creating $alu cell for $gt$rtl.v:1162$1111: $auto$alumacc.cc:474:replace_alu$2982
  creating $alu cell for $gt$rtl.v:1087$974, $gt$rtl.v:1115$1042: $auto$alumacc.cc:474:replace_alu$2987
  creating $alu cell for $gt$rtl.v:1055$930: $auto$alumacc.cc:474:replace_alu$2998
  creating $alu cell for $ge$rtl.v:1390$1422: $auto$alumacc.cc:474:replace_alu$3009
  creating $alu cell for $ge$rtl.v:1365$1377: $auto$alumacc.cc:474:replace_alu$3018
  creating $alu cell for $ge$rtl.v:1253$1231: $auto$alumacc.cc:474:replace_alu$3031
  creating $alu cell for $ge$rtl.v:1057$933: $auto$alumacc.cc:474:replace_alu$3044
  creating $alu cell for $add$rtl.v:1102$1012: $auto$alumacc.cc:474:replace_alu$3057
  creating $alu cell for $add$rtl.v:1113$1038: $auto$alumacc.cc:474:replace_alu$3060
  creating $alu cell for $add$rtl.v:1242$1213: $auto$alumacc.cc:474:replace_alu$3063
  creating $alu cell for $add$rtl.v:1332$1338: $auto$alumacc.cc:474:replace_alu$3066
  creating $alu cell for $neg$rtl.v:1031$882: $auto$alumacc.cc:474:replace_alu$3069
  creating $alu cell for $neg$rtl.v:1038$897: $auto$alumacc.cc:474:replace_alu$3072
  creating $alu cell for $neg$rtl.v:1066$938: $auto$alumacc.cc:474:replace_alu$3075
  creating $alu cell for $neg$rtl.v:1093$985: $auto$alumacc.cc:474:replace_alu$3078
  creating $alu cell for $neg$rtl.v:1184$1126: $auto$alumacc.cc:474:replace_alu$3081
  creating $alu cell for $neg$rtl.v:1198$1165: $auto$alumacc.cc:474:replace_alu$3084
  creating $alu cell for $neg$rtl.v:1308$1293: $auto$alumacc.cc:474:replace_alu$3087
  creating $alu cell for $sub$rtl.v:1338$1349: $auto$alumacc.cc:474:replace_alu$3090
  creating $alu cell for $neg$rtl.v:1332$1340: $auto$alumacc.cc:474:replace_alu$3093
  creating $alu cell for $neg$rtl.v:1364$1374: $auto$alumacc.cc:474:replace_alu$3096
  creating $alu cell for $sub$rtl.v:1031$879: $auto$alumacc.cc:474:replace_alu$3099
  creating $alu cell for $sub$rtl.v:1352$1365: $auto$alumacc.cc:474:replace_alu$3102
  creating $alu cell for $sub$rtl.v:1239$1210: $auto$alumacc.cc:474:replace_alu$3105
  creating $alu cell for $sub$rtl.v:1284$1269: $auto$alumacc.cc:474:replace_alu$3108
  creating $alu cell for $sub$rtl.v:1323$1310: $auto$alumacc.cc:474:replace_alu$3111
  creating $alu cell for $sub$rtl.v:1330$1331: $auto$alumacc.cc:474:replace_alu$3114
  created 49 $alu and 11 $macc cells.
Extracting $alu and $macc cells in module module4:
  creating $macc model for $add$rtl.v:584$562 ($add).
  creating $macc model for $mul$rtl.v:574$538 ($mul).
  creating $macc model for $mul$rtl.v:614$618 ($mul).
  creating $macc model for $neg$rtl.v:607$598 ($neg).
  creating $macc model for $neg$rtl.v:614$617 ($neg).
  creating $macc model for $sub$rtl.v:574$534 ($sub).
  creating $macc model for $sub$rtl.v:574$540 ($sub).
  creating $macc model for $sub$rtl.v:584$561 ($sub).
  merging $macc model for $sub$rtl.v:584$561 into $add$rtl.v:584$562.
  creating $alu model for $macc $sub$rtl.v:574$540.
  creating $alu model for $macc $sub$rtl.v:574$534.
  creating $alu model for $macc $neg$rtl.v:614$617.
  creating $alu model for $macc $neg$rtl.v:607$598.
  creating $macc cell for $mul$rtl.v:614$618: $auto$alumacc.cc:354:replace_macc$3117
  creating $macc cell for $mul$rtl.v:574$538: $auto$alumacc.cc:354:replace_macc$3118
  creating $macc cell for $add$rtl.v:584$562: $auto$alumacc.cc:354:replace_macc$3119
  creating $alu model for $ge$rtl.v:580$550 ($ge): new $alu
  creating $alu model for $le$rtl.v:597$574 ($le): new $alu
  creating $alu model for $lt$rtl.v:574$539 ($lt): new $alu
  creating $alu model for $lt$rtl.v:583$559 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:583$559: $auto$alumacc.cc:474:replace_alu$3124
  creating $alu cell for $lt$rtl.v:574$539: $auto$alumacc.cc:474:replace_alu$3135
  creating $alu cell for $le$rtl.v:597$574: $auto$alumacc.cc:474:replace_alu$3140
  creating $alu cell for $ge$rtl.v:580$550: $auto$alumacc.cc:474:replace_alu$3153
  creating $alu cell for $neg$rtl.v:607$598: $auto$alumacc.cc:474:replace_alu$3162
  creating $alu cell for $neg$rtl.v:614$617: $auto$alumacc.cc:474:replace_alu$3165
  creating $alu cell for $sub$rtl.v:574$534: $auto$alumacc.cc:474:replace_alu$3168
  creating $alu cell for $sub$rtl.v:574$540: $auto$alumacc.cc:474:replace_alu$3171
  created 8 $alu and 3 $macc cells.
Extracting $alu and $macc cells in module module63:
  creating $macc model for $add$rtl.v:659$638 ($add).
  creating $macc model for $neg$rtl.v:711$692 ($neg).
  creating $alu model for $macc $neg$rtl.v:711$692.
  creating $alu model for $macc $add$rtl.v:659$638.
  creating $alu model for $ge$rtl.v:705$687 ($ge): new $alu
  creating $alu cell for $ge$rtl.v:705$687: $auto$alumacc.cc:474:replace_alu$3175
  creating $alu cell for $add$rtl.v:659$638: $auto$alumacc.cc:474:replace_alu$3188
  creating $alu cell for $neg$rtl.v:711$692: $auto$alumacc.cc:474:replace_alu$3191
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$rtl.v:150$100 ($add).
  creating $macc model for $add$rtl.v:166$128 ($add).
  creating $macc model for $neg$rtl.v:154$101 ($neg).
  creating $macc model for $sub$rtl.v:110$50 ($sub).
  creating $macc model for $sub$rtl.v:125$77 ($sub).
  creating $macc model for $sub$rtl.v:83$12 ($sub).
  creating $alu model for $macc $sub$rtl.v:83$12.
  creating $alu model for $macc $sub$rtl.v:125$77.
  creating $alu model for $macc $sub$rtl.v:110$50.
  creating $alu model for $macc $neg$rtl.v:154$101.
  creating $alu model for $macc $add$rtl.v:166$128.
  creating $alu model for $macc $add$rtl.v:150$100.
  creating $alu model for $ge$rtl.v:171$134 ($ge): new $alu
  creating $alu model for $gt$rtl.v:105$40 ($gt): new $alu
  creating $alu model for $gt$rtl.v:181$145 ($gt): new $alu
  creating $alu model for $gt$rtl.v:77$3 ($gt): new $alu
  creating $alu cell for $gt$rtl.v:77$3: $auto$alumacc.cc:474:replace_alu$3198
  creating $alu cell for $gt$rtl.v:181$145: $auto$alumacc.cc:474:replace_alu$3209
  creating $alu cell for $gt$rtl.v:105$40: $auto$alumacc.cc:474:replace_alu$3214
  creating $alu cell for $ge$rtl.v:171$134: $auto$alumacc.cc:474:replace_alu$3225
  creating $alu cell for $add$rtl.v:150$100: $auto$alumacc.cc:474:replace_alu$3238
  creating $alu cell for $add$rtl.v:166$128: $auto$alumacc.cc:474:replace_alu$3241
  creating $alu cell for $neg$rtl.v:154$101: $auto$alumacc.cc:474:replace_alu$3244
  creating $alu cell for $sub$rtl.v:110$50: $auto$alumacc.cc:474:replace_alu$3247
  creating $alu cell for $sub$rtl.v:125$77: $auto$alumacc.cc:474:replace_alu$3250
  creating $alu cell for $sub$rtl.v:83$12: $auto$alumacc.cc:474:replace_alu$3253
  created 10 $alu and 0 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).
Found 7 cells in module module107 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:350$284 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$2044_CMP $procmux$2040_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:436$391 ($sshl):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:436$393_Y.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:421$370 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1983_CMP $reduce_bool$rtl.v:421$371_Y }.
    Found 1 candidates: $sshl$rtl.v:313$213
    Analyzing resource sharing with $sshl$rtl.v:313$213 ($sshl):
      Found 1 activation_patterns using ctrl signal { $logic_and$rtl.v:298$197_Y \wire109 [2] }.
      Forbidden control signals for this pair of cells: $reduce_bool$rtl.v:422$373_Y
      Activation pattern for cell $sshl$rtl.v:421$370: { $procmux$1983_CMP $reduce_bool$rtl.v:421$371_Y } = 2'00
      Activation pattern for cell $sshl$rtl.v:313$213: { $logic_and$rtl.v:298$197_Y \wire109 [2] } = 2'01
      Size of SAT problem: 15 cells, 808 variables, 2100 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $procmux$1983_CMP $reduce_bool$rtl.v:421$371_Y $logic_and$rtl.v:298$197_Y \wire109 [2] } = 4'0001
  Analyzing resource sharing options for $sshl$rtl.v:319$219 ($sshl):
    Found 1 activation_patterns using ctrl signal { $logic_and$rtl.v:298$197_Y \wire109 [2] }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:313$213 ($sshl):
    Found 1 activation_patterns using ctrl signal { $logic_and$rtl.v:298$197_Y \wire109 [2] }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:323$223 ($shr):
    Found 1 activation_patterns using ctrl signal { $logic_and$rtl.v:298$197_Y \wire109 [2] }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:303$199 ($shr):
    Found 1 activation_patterns using ctrl signal $logic_and$rtl.v:298$197_Y.
    No candidates found.
Found 4 cells in module module11 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:799$765 ($sshr):
    Found 1 activation_patterns using ctrl signal $procmux$1863_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:815$789 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1863_CMP $auto$rtlil.cc:1832:Not$2703 $reduce_bool$rtl.v:784$726_Y }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:810$782 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1863_CMP $reduce_bool$rtl.v:810$783_Y $auto$rtlil.cc:1832:Not$2703 }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:844$834 ($shr):
    Found 1 activation_patterns using ctrl signal { $logic_not$rtl.v:843$832_Y $reduce_or$rtl.v:840$827_Y $reduce_bool$rtl.v:786$731_Y }.
    No candidates found.
Found 12 cells in module module133 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:1388$1413 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1743_CMP $procmux$1542_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1251$1225 ($sshr):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:1256$1240_Y $auto$rtlil.cc:1832:Not$2959 }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1184$1127 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1752_CMP $procmux$1743_CMP \reg172 [1] }.
    Found 1 candidates: $sshr$rtl.v:1101$1007
    Analyzing resource sharing with $sshr$rtl.v:1101$1007 ($sshr):
      Found 1 activation_patterns using ctrl signal $procmux$1743_CMP.
      Forbidden control signals for this pair of cells: { $procmux$1747_CMP $le$rtl.v:1101$1008_Y }
      Activation pattern for cell $sshr$rtl.v:1184$1127: { $procmux$1752_CMP $procmux$1743_CMP \reg172 [1] } = 3'001
      Activation pattern for cell $sshr$rtl.v:1101$1007: $procmux$1743_CMP = 1'1
      Size of SAT problem: 2 cells, 42 variables, 83 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $sshr$rtl.v:1101$1007: $auto$share.cc:976:make_cell_activation_logic$3256
      New cell: $auto$share.cc:666:make_supercell$3263 ($sshr)
  Analyzing resource sharing options for $auto$share.cc:666:make_supercell$3263 ($sshr):
    Found 2 activation_patterns using ctrl signal { $procmux$1752_CMP $procmux$1743_CMP \reg172 [1] }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1099$999 ($sshr):
    Found 1 activation_patterns using ctrl signal $procmux$1743_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:1379$1407 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1609_CMP $procmux$1542_CMP }.
    Found 1 candidates: $sshl$rtl.v:1131$1060
    Analyzing resource sharing with $sshl$rtl.v:1131$1060 ($sshl):
      Found 1 activation_patterns using ctrl signal { $procmux$1795_CMP $procmux$1743_CMP $reduce_bool$rtl.v:1131$1061_Y }.
      Activation pattern for cell $sshl$rtl.v:1379$1407: { $procmux$1609_CMP $procmux$1542_CMP } = 2'01
      Activation pattern for cell $sshl$rtl.v:1131$1060: { $procmux$1795_CMP $procmux$1743_CMP $reduce_bool$rtl.v:1131$1061_Y } = 3'110
      Size of SAT problem: 20 cells, 1857 variables, 5086 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $procmux$1795_CMP $procmux$1743_CMP $procmux$1609_CMP $procmux$1542_CMP $reduce_bool$rtl.v:1131$1061_Y } = 5'11010
  Analyzing resource sharing options for $sshl$rtl.v:1273$1260 ($sshl):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:1273$1261_Y $auto$rtlil.cc:1832:Not$2959 }.
    Found 1 candidates: $sshl$rtl.v:1223$1194
    Analyzing resource sharing with $sshl$rtl.v:1223$1194 ($sshl):
      Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:1223$1196_Y.
      Forbidden control signals for this pair of cells: $gt$rtl.v:1224$1198_Y
      Activation pattern for cell $sshl$rtl.v:1273$1260: { $reduce_bool$rtl.v:1273$1261_Y $auto$rtlil.cc:1832:Not$2959 } = 2'00
      Activation pattern for cell $sshl$rtl.v:1223$1194: $reduce_bool$rtl.v:1223$1196_Y = 1'1
      According to the SAT solver the cell $sshl$rtl.v:1223$1194 is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $sshl$rtl.v:1131$1060 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1795_CMP $procmux$1743_CMP $reduce_bool$rtl.v:1131$1061_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1408$1449 ($shr):
    Found 1 activation_patterns using ctrl signal $procmux$1542_CMP.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1271$1263 ($shr):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:1171$1113_Y $auto$rtlil.cc:1832:Not$2959 }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1305$1290 ($shl):
    Found 1 activation_patterns using ctrl signal $reduce_xnor$rtl.v:1304$1289_Y.
    No candidates found.
Removing 3 cells in module module133:
  Removing cell $sshl$rtl.v:1223$1194 ($sshl).
  Removing cell $sshr$rtl.v:1101$1007 ($sshr).
  Removing cell $sshr$rtl.v:1184$1127 ($sshr).
Found 5 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:105$37 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$2073_CMP $procmux$2071_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:91$26 ($sshl):
    Found 1 activation_patterns using ctrl signal $procmux$2073_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:102$31 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$2073_CMP $procmux$2071_CMP \wire1 [1] }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:181$143 ($shr):
    Found 1 activation_patterns using ctrl signal $reduce_xor$rtl.v:178$139_Y.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:131$79 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$2073_CMP $reduce_xnor$rtl.v:130$78_Y $ne$rtl.v:115$57_Y }.
    No candidates found.

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~13 debug messages>
Optimizing module module11.
<suppressed ~4 debug messages>
Optimizing module module133.
<suppressed ~34 debug messages>
Optimizing module module4.
<suppressed ~6 debug messages>
Optimizing module module63.
Optimizing module top.
<suppressed ~4 debug messages>

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 6 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module107..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1223$1193.
    dead port 2/2 on $mux $ternary$rtl.v:1223$1193.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $ternary$rtl.v:122$70: \reg100 [0] -> 1'1
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~239 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module107.
    New input vector for $reduce_or cell $reduce_or$rtl.v:448$416: { $ternary$rtl.v:448$415_Y [0] $ternary$rtl.v:448$415_Y [1] $ternary$rtl.v:448$415_Y [2] $ternary$rtl.v:448$415_Y [3] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2581: { $auto$rtlil.cc:1832:Not$2578 $auto$rtlil.cc:1835:ReduceAnd$2580 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2590: { $auto$rtlil.cc:1832:Not$2587 $auto$rtlil.cc:1835:ReduceAnd$2589 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2641: { $auto$alumacc.cc:490:replace_alu$2639 [0] $auto$alumacc.cc:490:replace_alu$2639 [1] $auto$alumacc.cc:490:replace_alu$2639 [2] $auto$alumacc.cc:490:replace_alu$2639 [3] $auto$alumacc.cc:490:replace_alu$2639 [4] $auto$alumacc.cc:490:replace_alu$2639 [5] $auto$alumacc.cc:490:replace_alu$2639 [6] $auto$alumacc.cc:490:replace_alu$2639 [7] $auto$alumacc.cc:490:replace_alu$2639 [8] $auto$alumacc.cc:490:replace_alu$2639 [9] $auto$alumacc.cc:490:replace_alu$2639 [10] $auto$alumacc.cc:490:replace_alu$2639 [11] $auto$alumacc.cc:490:replace_alu$2639 [12] $auto$alumacc.cc:490:replace_alu$2639 [13] $auto$alumacc.cc:490:replace_alu$2639 [14] $auto$alumacc.cc:490:replace_alu$2639 [15] $auto$alumacc.cc:490:replace_alu$2639 [16] $auto$alumacc.cc:490:replace_alu$2639 [17] $auto$alumacc.cc:490:replace_alu$2639 [18] $auto$alumacc.cc:490:replace_alu$2639 [19] $auto$alumacc.cc:490:replace_alu$2639 [20] $auto$alumacc.cc:490:replace_alu$2639 [21] $auto$alumacc.cc:490:replace_alu$2639 [22] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2634: { $auto$alumacc.cc:490:replace_alu$2628 [0] $auto$alumacc.cc:490:replace_alu$2628 [1] $auto$alumacc.cc:490:replace_alu$2628 [2] $auto$alumacc.cc:490:replace_alu$2628 [3] $auto$alumacc.cc:490:replace_alu$2628 [4] $auto$alumacc.cc:490:replace_alu$2628 [5] $auto$alumacc.cc:490:replace_alu$2628 [6] $auto$alumacc.cc:490:replace_alu$2628 [7] $auto$alumacc.cc:490:replace_alu$2628 [8] $auto$alumacc.cc:490:replace_alu$2628 [9] $auto$alumacc.cc:490:replace_alu$2628 [10] $auto$alumacc.cc:490:replace_alu$2628 [11] $auto$alumacc.cc:490:replace_alu$2628 [12] $auto$alumacc.cc:490:replace_alu$2628 [13] $auto$alumacc.cc:490:replace_alu$2628 [14] $auto$alumacc.cc:490:replace_alu$2628 [15] $auto$alumacc.cc:490:replace_alu$2628 [16] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2658: { $auto$alumacc.cc:490:replace_alu$2652 [0] $auto$alumacc.cc:490:replace_alu$2652 [1] $auto$alumacc.cc:490:replace_alu$2652 [2] $auto$alumacc.cc:490:replace_alu$2652 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2553: { $auto$alumacc.cc:490:replace_alu$2551 [0] $auto$alumacc.cc:490:replace_alu$2551 [1] $auto$alumacc.cc:490:replace_alu$2551 [2] $auto$alumacc.cc:490:replace_alu$2551 [3] $auto$alumacc.cc:490:replace_alu$2551 [4] $auto$alumacc.cc:490:replace_alu$2551 [5] $auto$alumacc.cc:490:replace_alu$2551 [6] $auto$alumacc.cc:490:replace_alu$2551 [7] $auto$alumacc.cc:490:replace_alu$2551 [8] $auto$alumacc.cc:490:replace_alu$2551 [9] $auto$alumacc.cc:490:replace_alu$2551 [10] $auto$alumacc.cc:490:replace_alu$2551 [11] $auto$alumacc.cc:490:replace_alu$2551 [12] $auto$alumacc.cc:490:replace_alu$2551 [13] $auto$alumacc.cc:490:replace_alu$2551 [14] $auto$alumacc.cc:490:replace_alu$2551 [15] $auto$alumacc.cc:490:replace_alu$2551 [16] $auto$alumacc.cc:490:replace_alu$2551 [17] $auto$alumacc.cc:490:replace_alu$2551 [18] $auto$alumacc.cc:490:replace_alu$2551 [19] $auto$alumacc.cc:490:replace_alu$2551 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2566: { $auto$alumacc.cc:490:replace_alu$2564 [0] $auto$alumacc.cc:490:replace_alu$2564 [1] $auto$alumacc.cc:490:replace_alu$2564 [2] $auto$alumacc.cc:490:replace_alu$2564 [3] $auto$alumacc.cc:490:replace_alu$2564 [4] $auto$alumacc.cc:490:replace_alu$2564 [5] $auto$alumacc.cc:490:replace_alu$2564 [6] $auto$alumacc.cc:490:replace_alu$2564 [7] $auto$alumacc.cc:490:replace_alu$2564 [8] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2579: { $auto$alumacc.cc:490:replace_alu$2575 [0] $auto$alumacc.cc:490:replace_alu$2575 [1] $auto$alumacc.cc:490:replace_alu$2575 [2] $auto$alumacc.cc:490:replace_alu$2575 [3] $auto$alumacc.cc:490:replace_alu$2575 [4] $auto$alumacc.cc:490:replace_alu$2575 [5] $auto$alumacc.cc:490:replace_alu$2575 [6] $auto$alumacc.cc:490:replace_alu$2575 [7] $auto$alumacc.cc:490:replace_alu$2575 [8] $auto$alumacc.cc:490:replace_alu$2575 [9] $auto$alumacc.cc:490:replace_alu$2575 [10] $auto$alumacc.cc:490:replace_alu$2575 [11] $auto$alumacc.cc:490:replace_alu$2575 [12] $auto$alumacc.cc:490:replace_alu$2575 [13] $auto$alumacc.cc:490:replace_alu$2575 [14] $auto$alumacc.cc:490:replace_alu$2575 [15] $auto$alumacc.cc:490:replace_alu$2575 [16] $auto$alumacc.cc:490:replace_alu$2575 [17] $auto$alumacc.cc:490:replace_alu$2575 [18] $auto$alumacc.cc:490:replace_alu$2575 [19] $auto$alumacc.cc:490:replace_alu$2575 [20] $auto$alumacc.cc:490:replace_alu$2575 [21] $auto$alumacc.cc:490:replace_alu$2575 [22] $auto$alumacc.cc:490:replace_alu$2575 [23] $auto$alumacc.cc:490:replace_alu$2575 [24] $auto$alumacc.cc:490:replace_alu$2575 [25] $auto$alumacc.cc:490:replace_alu$2575 [26] $auto$alumacc.cc:490:replace_alu$2575 [27] $auto$alumacc.cc:490:replace_alu$2575 [28] $auto$alumacc.cc:490:replace_alu$2575 [29] $auto$alumacc.cc:490:replace_alu$2575 [30] $auto$alumacc.cc:490:replace_alu$2575 [31] $auto$alumacc.cc:490:replace_alu$2575 [32] $auto$alumacc.cc:490:replace_alu$2575 [33] $auto$alumacc.cc:490:replace_alu$2575 [34] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2588: { $auto$alumacc.cc:490:replace_alu$2584 [0] $auto$alumacc.cc:490:replace_alu$2584 [1] $auto$alumacc.cc:490:replace_alu$2584 [2] $auto$alumacc.cc:490:replace_alu$2584 [3] $auto$alumacc.cc:490:replace_alu$2584 [4] $auto$alumacc.cc:490:replace_alu$2584 [5] $auto$alumacc.cc:490:replace_alu$2584 [6] $auto$alumacc.cc:490:replace_alu$2584 [7] $auto$alumacc.cc:490:replace_alu$2584 [8] $auto$alumacc.cc:490:replace_alu$2584 [9] $auto$alumacc.cc:490:replace_alu$2584 [10] $auto$alumacc.cc:490:replace_alu$2584 [11] $auto$alumacc.cc:490:replace_alu$2584 [12] $auto$alumacc.cc:490:replace_alu$2584 [13] $auto$alumacc.cc:490:replace_alu$2584 [14] $auto$alumacc.cc:490:replace_alu$2584 [15] $auto$alumacc.cc:490:replace_alu$2584 [16] $auto$alumacc.cc:490:replace_alu$2584 [17] $auto$alumacc.cc:490:replace_alu$2584 [18] $auto$alumacc.cc:490:replace_alu$2584 [19] $auto$alumacc.cc:490:replace_alu$2584 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2595: { $auto$alumacc.cc:490:replace_alu$2593 [0] $auto$alumacc.cc:490:replace_alu$2593 [1] $auto$alumacc.cc:490:replace_alu$2593 [2] $auto$alumacc.cc:490:replace_alu$2593 [3] $auto$alumacc.cc:490:replace_alu$2593 [4] $auto$alumacc.cc:490:replace_alu$2593 [5] $auto$alumacc.cc:490:replace_alu$2593 [6] $auto$alumacc.cc:490:replace_alu$2593 [7] $auto$alumacc.cc:490:replace_alu$2593 [8] $auto$alumacc.cc:490:replace_alu$2593 [9] $auto$alumacc.cc:490:replace_alu$2593 [10] $auto$alumacc.cc:490:replace_alu$2593 [11] $auto$alumacc.cc:490:replace_alu$2593 [12] $auto$alumacc.cc:490:replace_alu$2593 [13] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2608: { $auto$alumacc.cc:490:replace_alu$2606 [0] $auto$alumacc.cc:490:replace_alu$2606 [1] $auto$alumacc.cc:490:replace_alu$2606 [2] $auto$alumacc.cc:490:replace_alu$2606 [3] $auto$alumacc.cc:490:replace_alu$2606 [4] $auto$alumacc.cc:490:replace_alu$2606 [5] $auto$alumacc.cc:490:replace_alu$2606 [6] $auto$alumacc.cc:490:replace_alu$2606 [7] $auto$alumacc.cc:490:replace_alu$2606 [8] $auto$alumacc.cc:490:replace_alu$2606 [9] $auto$alumacc.cc:490:replace_alu$2606 [10] $auto$alumacc.cc:490:replace_alu$2606 [11] $auto$alumacc.cc:490:replace_alu$2606 [12] $auto$alumacc.cc:490:replace_alu$2606 [13] $auto$alumacc.cc:490:replace_alu$2606 [14] $auto$alumacc.cc:490:replace_alu$2606 [15] $auto$alumacc.cc:490:replace_alu$2606 [16] $auto$alumacc.cc:490:replace_alu$2606 [17] $auto$alumacc.cc:490:replace_alu$2606 [18] $auto$alumacc.cc:490:replace_alu$2606 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2619: { $auto$alumacc.cc:490:replace_alu$2617 [0] $auto$alumacc.cc:490:replace_alu$2617 [1] $auto$alumacc.cc:490:replace_alu$2617 [2] $auto$alumacc.cc:490:replace_alu$2617 [3] $auto$alumacc.cc:490:replace_alu$2617 [4] $auto$alumacc.cc:490:replace_alu$2617 [5] $auto$alumacc.cc:490:replace_alu$2617 [6] $auto$alumacc.cc:490:replace_alu$2617 [7] $auto$alumacc.cc:490:replace_alu$2617 [8] $auto$alumacc.cc:490:replace_alu$2617 [9] $auto$alumacc.cc:490:replace_alu$2617 [10] $auto$alumacc.cc:490:replace_alu$2617 [11] $auto$alumacc.cc:490:replace_alu$2617 [12] $auto$alumacc.cc:490:replace_alu$2617 [13] }
  Optimizing cells in module \module107.
  Optimizing cells in module \module11.
    New input vector for $reduce_or cell $reduce_or$rtl.v:781$722: { $and$rtl.v:781$721_Y [0] $and$rtl.v:781$721_Y [1] $and$rtl.v:781$721_Y [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2696: { $auto$alumacc.cc:490:replace_alu$2694 [0] $auto$alumacc.cc:490:replace_alu$2694 [1] $auto$alumacc.cc:490:replace_alu$2694 [2] $auto$alumacc.cc:490:replace_alu$2694 [3] $auto$alumacc.cc:490:replace_alu$2694 [4] $auto$alumacc.cc:490:replace_alu$2694 [5] $auto$alumacc.cc:490:replace_alu$2694 [6] $auto$alumacc.cc:490:replace_alu$2694 [7] $auto$alumacc.cc:490:replace_alu$2694 [8] $auto$alumacc.cc:490:replace_alu$2694 [9] $auto$alumacc.cc:490:replace_alu$2694 [10] $auto$alumacc.cc:490:replace_alu$2694 [11] $auto$alumacc.cc:490:replace_alu$2694 [12] $auto$alumacc.cc:490:replace_alu$2694 [13] $auto$alumacc.cc:490:replace_alu$2694 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2707: { $auto$alumacc.cc:490:replace_alu$2705 [0] $auto$alumacc.cc:490:replace_alu$2705 [1] $auto$alumacc.cc:490:replace_alu$2705 [2] $auto$alumacc.cc:490:replace_alu$2705 [3] $auto$alumacc.cc:490:replace_alu$2705 [4] $auto$alumacc.cc:490:replace_alu$2705 [5] $auto$alumacc.cc:490:replace_alu$2705 [6] $auto$alumacc.cc:490:replace_alu$2705 [7] }
  Optimizing cells in module \module11.
  Optimizing cells in module \module133.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2863: { $auto$rtlil.cc:1832:Not$2862 $auto$rtlil.cc:1835:ReduceAnd$2856 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2876: { $auto$rtlil.cc:1832:Not$2875 $auto$rtlil.cc:1835:ReduceAnd$2869 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2907: { $auto$rtlil.cc:1832:Not$2906 $auto$rtlil.cc:1835:ReduceAnd$2900 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2925: { $auto$rtlil.cc:1832:Not$2922 $auto$alumacc.cc:490:replace_alu$2919 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2938: { $auto$rtlil.cc:1832:Not$2937 $auto$rtlil.cc:1835:ReduceAnd$2931 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3042: { $auto$rtlil.cc:1832:Not$3041 $auto$rtlil.cc:1835:ReduceAnd$3035 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3055: { $auto$rtlil.cc:1832:Not$3054 $auto$rtlil.cc:1835:ReduceAnd$3048 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3021: { $auto$alumacc.cc:490:replace_alu$3019 [0] $auto$alumacc.cc:490:replace_alu$3019 [1] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3047: { $auto$alumacc.cc:490:replace_alu$3045 [0] $auto$alumacc.cc:490:replace_alu$3045 [1] $auto$alumacc.cc:490:replace_alu$3045 [2] $auto$alumacc.cc:490:replace_alu$3045 [3] $auto$alumacc.cc:490:replace_alu$3045 [4] $auto$alumacc.cc:490:replace_alu$3045 [5] $auto$alumacc.cc:490:replace_alu$3045 [6] $auto$alumacc.cc:490:replace_alu$3045 [7] $auto$alumacc.cc:490:replace_alu$3045 [8] $auto$alumacc.cc:490:replace_alu$3045 [9] $auto$alumacc.cc:490:replace_alu$3045 [10] $auto$alumacc.cc:490:replace_alu$3045 [11] $auto$alumacc.cc:490:replace_alu$3045 [12] $auto$alumacc.cc:490:replace_alu$3045 [13] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3034: { $auto$alumacc.cc:490:replace_alu$3032 [0] $auto$alumacc.cc:490:replace_alu$3032 [1] $auto$alumacc.cc:490:replace_alu$3032 [2] $auto$alumacc.cc:490:replace_alu$3032 [3] $auto$alumacc.cc:490:replace_alu$3032 [4] $auto$alumacc.cc:490:replace_alu$3032 [5] $auto$alumacc.cc:490:replace_alu$3032 [6] $auto$alumacc.cc:490:replace_alu$3032 [7] $auto$alumacc.cc:490:replace_alu$3032 [8] $auto$alumacc.cc:490:replace_alu$3032 [9] $auto$alumacc.cc:490:replace_alu$3032 [10] $auto$alumacc.cc:490:replace_alu$3032 [11] $auto$alumacc.cc:490:replace_alu$3032 [12] $auto$alumacc.cc:490:replace_alu$3032 [13] $auto$alumacc.cc:490:replace_alu$3032 [14] $auto$alumacc.cc:490:replace_alu$3032 [15] $auto$alumacc.cc:490:replace_alu$3032 [16] $auto$alumacc.cc:490:replace_alu$3032 [17] $auto$alumacc.cc:490:replace_alu$3032 [18] $auto$alumacc.cc:490:replace_alu$3032 [19] $auto$alumacc.cc:490:replace_alu$3032 [20] $auto$alumacc.cc:490:replace_alu$3032 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2774: { $auto$alumacc.cc:490:replace_alu$2772 [0] $auto$alumacc.cc:490:replace_alu$2772 [1] $auto$alumacc.cc:490:replace_alu$2772 [2] $auto$alumacc.cc:490:replace_alu$2772 [3] $auto$alumacc.cc:490:replace_alu$2772 [4] $auto$alumacc.cc:490:replace_alu$2772 [5] $auto$alumacc.cc:490:replace_alu$2772 [6] $auto$alumacc.cc:490:replace_alu$2772 [7] $auto$alumacc.cc:490:replace_alu$2772 [8] $auto$alumacc.cc:490:replace_alu$2772 [9] $auto$alumacc.cc:490:replace_alu$2772 [10] $auto$alumacc.cc:490:replace_alu$2772 [11] $auto$alumacc.cc:490:replace_alu$2772 [12] $auto$alumacc.cc:490:replace_alu$2772 [13] $auto$alumacc.cc:490:replace_alu$2772 [14] $auto$alumacc.cc:490:replace_alu$2772 [15] $auto$alumacc.cc:490:replace_alu$2772 [16] $auto$alumacc.cc:490:replace_alu$2772 [17] $auto$alumacc.cc:490:replace_alu$2772 [18] $auto$alumacc.cc:490:replace_alu$2772 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2785: { $auto$alumacc.cc:490:replace_alu$2783 [0] $auto$alumacc.cc:490:replace_alu$2783 [1] $auto$alumacc.cc:490:replace_alu$2783 [2] $auto$alumacc.cc:490:replace_alu$2783 [3] $auto$alumacc.cc:490:replace_alu$2783 [4] $auto$alumacc.cc:490:replace_alu$2783 [5] $auto$alumacc.cc:490:replace_alu$2783 [6] $auto$alumacc.cc:490:replace_alu$2783 [7] $auto$alumacc.cc:490:replace_alu$2783 [8] $auto$alumacc.cc:490:replace_alu$2783 [9] $auto$alumacc.cc:490:replace_alu$2783 [10] $auto$alumacc.cc:490:replace_alu$2783 [11] $auto$alumacc.cc:490:replace_alu$2783 [12] $auto$alumacc.cc:490:replace_alu$2783 [13] $auto$alumacc.cc:490:replace_alu$2783 [14] $auto$alumacc.cc:490:replace_alu$2783 [15] $auto$alumacc.cc:490:replace_alu$2783 [16] $auto$alumacc.cc:490:replace_alu$2783 [17] $auto$alumacc.cc:490:replace_alu$2783 [18] $auto$alumacc.cc:490:replace_alu$2783 [19] $auto$alumacc.cc:490:replace_alu$2783 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2796: { $auto$alumacc.cc:490:replace_alu$2794 [0] $auto$alumacc.cc:490:replace_alu$2794 [1] $auto$alumacc.cc:490:replace_alu$2794 [2] $auto$alumacc.cc:490:replace_alu$2794 [3] $auto$alumacc.cc:490:replace_alu$2794 [4] $auto$alumacc.cc:490:replace_alu$2794 [5] $auto$alumacc.cc:490:replace_alu$2794 [6] $auto$alumacc.cc:490:replace_alu$2794 [7] $auto$alumacc.cc:490:replace_alu$2794 [8] $auto$alumacc.cc:490:replace_alu$2794 [9] $auto$alumacc.cc:490:replace_alu$2794 [10] $auto$alumacc.cc:490:replace_alu$2794 [11] $auto$alumacc.cc:490:replace_alu$2794 [12] $auto$alumacc.cc:490:replace_alu$2794 [13] $auto$alumacc.cc:490:replace_alu$2794 [14] $auto$alumacc.cc:490:replace_alu$2794 [15] $auto$alumacc.cc:490:replace_alu$2794 [16] $auto$alumacc.cc:490:replace_alu$2794 [17] $auto$alumacc.cc:490:replace_alu$2794 [18] $auto$alumacc.cc:490:replace_alu$2794 [19] $auto$alumacc.cc:490:replace_alu$2794 [20] $auto$alumacc.cc:490:replace_alu$2794 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2812: { $auto$alumacc.cc:490:replace_alu$2810 [0] $auto$alumacc.cc:490:replace_alu$2810 [1] $auto$alumacc.cc:490:replace_alu$2810 [2] $auto$alumacc.cc:490:replace_alu$2810 [3] $auto$alumacc.cc:490:replace_alu$2810 [4] $auto$alumacc.cc:490:replace_alu$2810 [5] $auto$alumacc.cc:490:replace_alu$2810 [6] $auto$alumacc.cc:490:replace_alu$2810 [7] $auto$alumacc.cc:490:replace_alu$2810 [8] $auto$alumacc.cc:490:replace_alu$2810 [9] $auto$alumacc.cc:490:replace_alu$2810 [10] $auto$alumacc.cc:490:replace_alu$2810 [11] $auto$alumacc.cc:490:replace_alu$2810 [12] $auto$alumacc.cc:490:replace_alu$2810 [13] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2828: { $auto$alumacc.cc:490:replace_alu$2826 [0] $auto$alumacc.cc:490:replace_alu$2826 [1] $auto$alumacc.cc:490:replace_alu$2826 [2] $auto$alumacc.cc:490:replace_alu$2826 [3] $auto$alumacc.cc:490:replace_alu$2826 [4] $auto$alumacc.cc:490:replace_alu$2826 [5] $auto$alumacc.cc:490:replace_alu$2826 [6] $auto$alumacc.cc:490:replace_alu$2826 [7] $auto$alumacc.cc:490:replace_alu$2826 [8] $auto$alumacc.cc:490:replace_alu$2826 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2844: { $auto$alumacc.cc:490:replace_alu$2842 [0] $auto$alumacc.cc:490:replace_alu$2842 [1] $auto$alumacc.cc:490:replace_alu$2842 [2] $auto$alumacc.cc:490:replace_alu$2842 [3] $auto$alumacc.cc:490:replace_alu$2842 [4] $auto$alumacc.cc:490:replace_alu$2842 [5] $auto$alumacc.cc:490:replace_alu$2842 [6] $auto$alumacc.cc:490:replace_alu$2842 [7] $auto$alumacc.cc:490:replace_alu$2842 [8] $auto$alumacc.cc:490:replace_alu$2842 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2855: { $auto$alumacc.cc:490:replace_alu$2853 [0] $auto$alumacc.cc:490:replace_alu$2853 [1] $auto$alumacc.cc:490:replace_alu$2853 [2] $auto$alumacc.cc:490:replace_alu$2853 [3] $auto$alumacc.cc:490:replace_alu$2853 [4] $auto$alumacc.cc:490:replace_alu$2853 [5] $auto$alumacc.cc:490:replace_alu$2853 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2868: { $auto$alumacc.cc:490:replace_alu$2866 [0] $auto$alumacc.cc:490:replace_alu$2866 [1] $auto$alumacc.cc:490:replace_alu$2866 [2] $auto$alumacc.cc:490:replace_alu$2866 [3] $auto$alumacc.cc:490:replace_alu$2866 [4] $auto$alumacc.cc:490:replace_alu$2866 [5] $auto$alumacc.cc:490:replace_alu$2866 [6] $auto$alumacc.cc:490:replace_alu$2866 [7] $auto$alumacc.cc:490:replace_alu$2866 [8] $auto$alumacc.cc:490:replace_alu$2866 [9] $auto$alumacc.cc:490:replace_alu$2866 [10] $auto$alumacc.cc:490:replace_alu$2866 [11] $auto$alumacc.cc:490:replace_alu$2866 [12] $auto$alumacc.cc:490:replace_alu$2866 [13] $auto$alumacc.cc:490:replace_alu$2866 [14] $auto$alumacc.cc:490:replace_alu$2866 [15] $auto$alumacc.cc:490:replace_alu$2866 [16] $auto$alumacc.cc:490:replace_alu$2866 [17] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2883: { $auto$alumacc.cc:490:replace_alu$2879 [0] $auto$alumacc.cc:490:replace_alu$2879 [1] $auto$alumacc.cc:490:replace_alu$2879 [2] $auto$alumacc.cc:490:replace_alu$2879 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2892: { $auto$alumacc.cc:490:replace_alu$2888 [0] $auto$alumacc.cc:490:replace_alu$2888 [1] $auto$alumacc.cc:490:replace_alu$2888 [2] $auto$alumacc.cc:490:replace_alu$2888 [3] $auto$alumacc.cc:490:replace_alu$2888 [4] $auto$alumacc.cc:490:replace_alu$2888 [5] $auto$alumacc.cc:490:replace_alu$2888 [6] $auto$alumacc.cc:490:replace_alu$2888 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2899: { $auto$alumacc.cc:490:replace_alu$2897 [0] $auto$alumacc.cc:490:replace_alu$2897 [1] $auto$alumacc.cc:490:replace_alu$2897 [2] $auto$alumacc.cc:490:replace_alu$2897 [3] $auto$alumacc.cc:490:replace_alu$2897 [4] $auto$alumacc.cc:490:replace_alu$2897 [5] $auto$alumacc.cc:490:replace_alu$2897 [6] $auto$alumacc.cc:490:replace_alu$2897 [7] $auto$alumacc.cc:490:replace_alu$2897 [8] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2914: { $auto$alumacc.cc:490:replace_alu$2910 [0] $auto$alumacc.cc:490:replace_alu$2910 [1] $auto$alumacc.cc:490:replace_alu$2910 [2] $auto$alumacc.cc:490:replace_alu$2910 [3] $auto$alumacc.cc:490:replace_alu$2910 [4] $auto$alumacc.cc:490:replace_alu$2910 [5] $auto$alumacc.cc:490:replace_alu$2910 [6] $auto$alumacc.cc:490:replace_alu$2910 [7] $auto$alumacc.cc:490:replace_alu$2910 [8] $auto$alumacc.cc:490:replace_alu$2910 [9] $auto$alumacc.cc:490:replace_alu$2910 [10] $auto$alumacc.cc:490:replace_alu$2910 [11] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2930: { $auto$alumacc.cc:490:replace_alu$2928 [0] $auto$alumacc.cc:490:replace_alu$2928 [1] $auto$alumacc.cc:490:replace_alu$2928 [2] $auto$alumacc.cc:490:replace_alu$2928 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2945: { $auto$alumacc.cc:490:replace_alu$2941 [0] $auto$alumacc.cc:490:replace_alu$2941 [1] $auto$alumacc.cc:490:replace_alu$2941 [2] $auto$alumacc.cc:490:replace_alu$2941 [3] $auto$alumacc.cc:490:replace_alu$2941 [4] $auto$alumacc.cc:490:replace_alu$2941 [5] $auto$alumacc.cc:490:replace_alu$2941 [6] $auto$alumacc.cc:490:replace_alu$2941 [7] $auto$alumacc.cc:490:replace_alu$2941 [8] $auto$alumacc.cc:490:replace_alu$2941 [9] $auto$alumacc.cc:490:replace_alu$2941 [10] $auto$alumacc.cc:490:replace_alu$2941 [11] $auto$alumacc.cc:490:replace_alu$2941 [12] $auto$alumacc.cc:490:replace_alu$2941 [13] $auto$alumacc.cc:490:replace_alu$2941 [14] $auto$alumacc.cc:490:replace_alu$2941 [15] $auto$alumacc.cc:490:replace_alu$2941 [16] $auto$alumacc.cc:490:replace_alu$2941 [17] $auto$alumacc.cc:490:replace_alu$2941 [18] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2952: { $auto$alumacc.cc:490:replace_alu$2950 [0] $auto$alumacc.cc:490:replace_alu$2950 [1] $auto$alumacc.cc:490:replace_alu$2950 [2] $auto$alumacc.cc:490:replace_alu$2950 [3] $auto$alumacc.cc:490:replace_alu$2950 [4] $auto$alumacc.cc:490:replace_alu$2950 [5] $auto$alumacc.cc:490:replace_alu$2950 [6] $auto$alumacc.cc:490:replace_alu$2950 [7] $auto$alumacc.cc:490:replace_alu$2950 [8] $auto$alumacc.cc:490:replace_alu$2950 [9] $auto$alumacc.cc:490:replace_alu$2950 [10] $auto$alumacc.cc:490:replace_alu$2950 [11] $auto$alumacc.cc:490:replace_alu$2950 [12] $auto$alumacc.cc:490:replace_alu$2950 [13] $auto$alumacc.cc:490:replace_alu$2950 [14] $auto$alumacc.cc:490:replace_alu$2950 [15] $auto$alumacc.cc:490:replace_alu$2950 [16] $auto$alumacc.cc:490:replace_alu$2950 [17] $auto$alumacc.cc:490:replace_alu$2950 [18] $auto$alumacc.cc:490:replace_alu$2950 [19] $auto$alumacc.cc:490:replace_alu$2950 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2963: { $auto$alumacc.cc:490:replace_alu$2961 [0] $auto$alumacc.cc:490:replace_alu$2961 [1] $auto$alumacc.cc:490:replace_alu$2961 [2] $auto$alumacc.cc:490:replace_alu$2961 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2974: { $auto$alumacc.cc:490:replace_alu$2972 [0] $auto$alumacc.cc:490:replace_alu$2972 [1] $auto$alumacc.cc:490:replace_alu$2972 [2] $auto$alumacc.cc:490:replace_alu$2972 [3] $auto$alumacc.cc:490:replace_alu$2972 [4] $auto$alumacc.cc:490:replace_alu$2972 [5] $auto$alumacc.cc:490:replace_alu$2972 [6] $auto$alumacc.cc:490:replace_alu$2972 [7] $auto$alumacc.cc:490:replace_alu$2972 [8] $auto$alumacc.cc:490:replace_alu$2972 [9] $auto$alumacc.cc:490:replace_alu$2972 [10] $auto$alumacc.cc:490:replace_alu$2972 [11] $auto$alumacc.cc:490:replace_alu$2972 [12] $auto$alumacc.cc:490:replace_alu$2972 [13] $auto$alumacc.cc:490:replace_alu$2972 [14] $auto$alumacc.cc:490:replace_alu$2972 [15] $auto$alumacc.cc:490:replace_alu$2972 [16] $auto$alumacc.cc:490:replace_alu$2972 [17] $auto$alumacc.cc:490:replace_alu$2972 [18] $auto$alumacc.cc:490:replace_alu$2972 [19] $auto$alumacc.cc:490:replace_alu$2972 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2990: { $auto$alumacc.cc:490:replace_alu$2988 [0] $auto$alumacc.cc:490:replace_alu$2988 [1] $auto$alumacc.cc:490:replace_alu$2988 [2] $auto$alumacc.cc:490:replace_alu$2988 [3] }
  Optimizing cells in module \module133.
  Optimizing cells in module \module4.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3158: { $auto$alumacc.cc:490:replace_alu$3154 [0] $auto$alumacc.cc:490:replace_alu$3154 [1] $auto$alumacc.cc:490:replace_alu$3154 [2] $auto$alumacc.cc:490:replace_alu$3154 [3] $auto$alumacc.cc:490:replace_alu$3154 [4] $auto$alumacc.cc:490:replace_alu$3154 [5] $auto$alumacc.cc:490:replace_alu$3154 [6] $auto$alumacc.cc:490:replace_alu$3154 [7] $auto$alumacc.cc:490:replace_alu$3154 [8] $auto$alumacc.cc:490:replace_alu$3154 [9] $auto$alumacc.cc:490:replace_alu$3154 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3127: { $auto$alumacc.cc:490:replace_alu$3125 [0] $auto$alumacc.cc:490:replace_alu$3125 [1] $auto$alumacc.cc:490:replace_alu$3125 [2] $auto$alumacc.cc:490:replace_alu$3125 [3] $auto$alumacc.cc:490:replace_alu$3125 [4] $auto$alumacc.cc:490:replace_alu$3125 [5] $auto$alumacc.cc:490:replace_alu$3125 [6] $auto$alumacc.cc:490:replace_alu$3125 [7] $auto$alumacc.cc:490:replace_alu$3125 [8] $auto$alumacc.cc:490:replace_alu$3125 [9] $auto$alumacc.cc:490:replace_alu$3125 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3143: { $auto$alumacc.cc:490:replace_alu$3141 [0] $auto$alumacc.cc:490:replace_alu$3141 [1] }
  Optimizing cells in module \module4.
  Optimizing cells in module \module63.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3186: { $auto$rtlil.cc:1832:Not$3185 $auto$rtlil.cc:1835:ReduceAnd$3179 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3178: { $auto$alumacc.cc:490:replace_alu$3176 [0] $auto$alumacc.cc:490:replace_alu$3176 [1] $auto$alumacc.cc:490:replace_alu$3176 [2] $auto$alumacc.cc:490:replace_alu$3176 [3] $auto$alumacc.cc:490:replace_alu$3176 [4] $auto$alumacc.cc:490:replace_alu$3176 [5] $auto$alumacc.cc:490:replace_alu$3176 [6] $auto$alumacc.cc:490:replace_alu$3176 [7] $auto$alumacc.cc:490:replace_alu$3176 [8] $auto$alumacc.cc:490:replace_alu$3176 [9] $auto$alumacc.cc:490:replace_alu$3176 [10] $auto$alumacc.cc:490:replace_alu$3176 [11] }
  Optimizing cells in module \module63.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:179$141: { \wire249 [0] \wire249 [1] \wire249 [2] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3236: { $auto$rtlil.cc:1832:Not$3235 $auto$rtlil.cc:1835:ReduceAnd$3229 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3228: { $auto$alumacc.cc:490:replace_alu$3226 [0] $auto$alumacc.cc:490:replace_alu$3226 [1] $auto$alumacc.cc:490:replace_alu$3226 [2] $auto$alumacc.cc:490:replace_alu$3226 [3] $auto$alumacc.cc:490:replace_alu$3226 [4] $auto$alumacc.cc:490:replace_alu$3226 [5] $auto$alumacc.cc:490:replace_alu$3226 [6] $auto$alumacc.cc:490:replace_alu$3226 [7] $auto$alumacc.cc:490:replace_alu$3226 [8] $auto$alumacc.cc:490:replace_alu$3226 [9] $auto$alumacc.cc:490:replace_alu$3226 [10] $auto$alumacc.cc:490:replace_alu$3226 [11] $auto$alumacc.cc:490:replace_alu$3226 [12] $auto$alumacc.cc:490:replace_alu$3226 [13] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3201: { $auto$alumacc.cc:490:replace_alu$3199 [0] $auto$alumacc.cc:490:replace_alu$3199 [1] $auto$alumacc.cc:490:replace_alu$3199 [2] $auto$alumacc.cc:490:replace_alu$3199 [3] $auto$alumacc.cc:490:replace_alu$3199 [4] $auto$alumacc.cc:490:replace_alu$3199 [5] $auto$alumacc.cc:490:replace_alu$3199 [6] $auto$alumacc.cc:490:replace_alu$3199 [7] $auto$alumacc.cc:490:replace_alu$3199 [8] $auto$alumacc.cc:490:replace_alu$3199 [9] $auto$alumacc.cc:490:replace_alu$3199 [10] $auto$alumacc.cc:490:replace_alu$3199 [11] $auto$alumacc.cc:490:replace_alu$3199 [12] $auto$alumacc.cc:490:replace_alu$3199 [13] $auto$alumacc.cc:490:replace_alu$3199 [14] $auto$alumacc.cc:490:replace_alu$3199 [15] $auto$alumacc.cc:490:replace_alu$3199 [16] $auto$alumacc.cc:490:replace_alu$3199 [17] $auto$alumacc.cc:490:replace_alu$3199 [18] $auto$alumacc.cc:490:replace_alu$3199 [19] $auto$alumacc.cc:490:replace_alu$3199 [20] $auto$alumacc.cc:490:replace_alu$3199 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3217: { $auto$alumacc.cc:490:replace_alu$3215 [0] $auto$alumacc.cc:490:replace_alu$3215 [1] $auto$alumacc.cc:490:replace_alu$3215 [2] $auto$alumacc.cc:490:replace_alu$3215 [3] $auto$alumacc.cc:490:replace_alu$3215 [4] $auto$alumacc.cc:490:replace_alu$3215 [5] $auto$alumacc.cc:490:replace_alu$3215 [6] $auto$alumacc.cc:490:replace_alu$3215 [7] }
  Optimizing cells in module \top.
Performed a total of 54 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 19 unused cells and 120 unused wires.
<suppressed ~26 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module107..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~239 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module107.
  Optimizing cells in module \module11.
  Optimizing cells in module \module133.
  Optimizing cells in module \module4.
  Optimizing cells in module \module63.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.13.16. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~131 debug messages>
Optimizing module module11.
<suppressed ~78 debug messages>
Optimizing module module133.
<suppressed ~300 debug messages>
Optimizing module module4.
<suppressed ~59 debug messages>
Optimizing module module63.
<suppressed ~8 debug messages>
Optimizing module top.
<suppressed ~51 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module11'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module133'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 3 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2146 ($dff) from module module133.
Replaced 1 DFF cells.

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 11 unused cells and 174 unused wires.
<suppressed ~26 debug messages>

2.18.5. Rerunning OPT passes. (Removed registers in this run.)

2.18.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.18.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.18.8. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.18.10. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module107..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~228 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module107.
    Consolidated identical input bits for $mux cell $procmux$1967:
      Old ports: A={ \reg122 [6] \reg122 [6] \reg122 [6] \reg122 [6] \reg122 }, B={ 10'0000000000 $auto$rtlil.cc:1832:Not$2549 }, Y=$0\reg231[10:0]
      New ports: A=\reg122, B={ 6'000000 $auto$rtlil.cc:1832:Not$2549 }, Y=$0\reg231[10:0] [6:0]
      New connections: $0\reg231[10:0] [10:7] = { $0\reg231[10:0] [6] $0\reg231[10:0] [6] $0\reg231[10:0] [6] $0\reg231[10:0] [6] }
    Consolidated identical input bits for $mux cell $procmux$1976:
      Old ports: A={ $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y }, B={ 8'00000000 $reduce_or$rtl.v:442$411_Y [0] }, Y=$0\reg232[8:0]
      New ports: A={ $logic_not$rtl.v:448$417_Y $logic_not$rtl.v:448$417_Y }, B={ 1'0 $reduce_or$rtl.v:442$411_Y [0] }, Y=$0\reg232[8:0] [1:0]
      New connections: $0\reg232[8:0] [8:2] = { $0\reg232[8:0] [1] $0\reg232[8:0] [1] $0\reg232[8:0] [1] $0\reg232[8:0] [1] $0\reg232[8:0] [1] $0\reg232[8:0] [1] $0\reg232[8:0] [1] }
    Consolidated identical input bits for $mux cell $procmux$1982:
      Old ports: A={ $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y }, B={ 5'00000 \reg123 [7:0] }, Y=$0\reg221[12:0]
      New ports: A={ $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y $logic_not$rtl.v:418$366_Y }, B={ 1'0 \reg123 [7:0] }, Y=$0\reg221[12:0] [8:0]
      New connections: $0\reg221[12:0] [12:9] = { $0\reg221[12:0] [8] $0\reg221[12:0] [8] $0\reg221[12:0] [8] $0\reg221[12:0] [8] }
    Consolidated identical input bits for $mux cell $procmux$2000:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$2307 [10:0] }, B={ $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y $reduce_xor$rtl.v:300$198_Y \wire110 [18:7] }, Y=$0\reg117[21:0]
      New ports: A={ 2'00 $auto$wreduce.cc:455:run$2307 [10:0] }, B={ $reduce_xor$rtl.v:300$198_Y \wire110 [18:7] }, Y=$0\reg117[21:0] [12:0]
      New connections: $0\reg117[21:0] [21:13] = { $0\reg117[21:0] [12] $0\reg117[21:0] [12] $0\reg117[21:0] [12] $0\reg117[21:0] [12] $0\reg117[21:0] [12] $0\reg117[21:0] [12] $0\reg117[21:0] [12] $0\reg117[21:0] [12] $0\reg117[21:0] [12] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:346$279:
      Old ports: A={ 17'00000000000000000 $and$rtl.v:346$277_Y [3:0] }, B={ 7'0000000 $auto$wreduce.cc:455:run$2319 [13:0] }, Y=$ternary$rtl.v:346$279_Y
      New ports: A={ 10'0000000000 $and$rtl.v:346$277_Y [3:0] }, B=$auto$wreduce.cc:455:run$2319 [13:0], Y=$ternary$rtl.v:346$279_Y [13:0]
      New connections: $ternary$rtl.v:346$279_Y [20:14] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:366$314:
      Old ports: A={ 16'1111111111111111 $auto$opt_expr.cc:189:group_cell_inputs$3311 }, B={ 16'0000000000000000 \reg119 [2] }, Y=$ternary$rtl.v:366$314_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$3311 }, B={ 1'0 \reg119 [2] }, Y=$ternary$rtl.v:366$314_Y [1:0]
      New connections: $ternary$rtl.v:366$314_Y [16:2] = { $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] $ternary$rtl.v:366$314_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:384$336:
      Old ports: A={ 4'0000 \wire109 [6] 4'0000 \wire109 [1:0] }, B=11'00000000000, Y=$auto$wreduce.cc:455:run$2322 [10:0]
      New ports: A={ \wire109 [6] \wire109 [1:0] }, B=3'000, Y={ $auto$wreduce.cc:455:run$2322 [6] $auto$wreduce.cc:455:run$2322 [1:0] }
      New connections: { $auto$wreduce.cc:455:run$2322 [10:7] $auto$wreduce.cc:455:run$2322 [5:2] } = 8'00000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:418$365:
      Old ports: A=8'10111010, B={ 3'000 \reg129 }, Y=$ternary$rtl.v:418$365_Y
      New ports: A=6'111010, B={ 1'0 \reg129 }, Y=$ternary$rtl.v:418$365_Y [5:0]
      New connections: $ternary$rtl.v:418$365_Y [7:6] = { $ternary$rtl.v:418$365_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:440$402:
      Old ports: A=8'10101110, B={ 4'0000 \reg123 [7:4] }, Y=$ternary$rtl.v:440$402_Y [7:0]
      New ports: A=5'11110, B={ 1'0 \reg123 [7:4] }, Y={ $ternary$rtl.v:440$402_Y [5] $ternary$rtl.v:440$402_Y [3:0] }
      New connections: { $ternary$rtl.v:440$402_Y [7:6] $ternary$rtl.v:440$402_Y [4] } = { $ternary$rtl.v:440$402_Y [5] 2'00 }
  Optimizing cells in module \module107.
  Optimizing cells in module \module11.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:784$730:
      Old ports: A={ 5'00000 $auto$rtlil.cc:1832:Not$2719 }, B={ 3'101 $auto$opt_expr.cc:189:group_cell_inputs$3344 [0] $auto$opt_expr.cc:189:group_cell_inputs$3344 [1] $auto$opt_expr.cc:189:group_cell_inputs$3342 }, Y=$0\reg23[19:0]
      New ports: A={ 3'000 $auto$rtlil.cc:1832:Not$2719 }, B={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$3344 [0] $auto$opt_expr.cc:189:group_cell_inputs$3344 [1] $auto$opt_expr.cc:189:group_cell_inputs$3342 }, Y=$0\reg23[19:0] [3:0]
      New connections: $0\reg23[19:0] [5:4] = { $0\reg23[19:0] [3] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:810$779:
      Old ports: A=22'1111111111111110011100, B={ 15'000000000000000 $ternary$rtl.v:810$777_Y [6:0] }, Y=$ternary$rtl.v:810$779_Y
      New ports: A=8'10011100, B={ 1'0 $ternary$rtl.v:810$777_Y [6:0] }, Y=$ternary$rtl.v:810$779_Y [7:0]
      New connections: $ternary$rtl.v:810$779_Y [21:8] = { $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] $ternary$rtl.v:810$779_Y [7] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:820$796:
      Old ports: A={ 6'000000 \reg26 [1:0] }, B=8'10111110, Y=$ternary$rtl.v:820$796_Y
      New ports: A={ 1'0 \reg26 [1:0] }, B=3'110, Y=$ternary$rtl.v:820$796_Y [2:0]
      New connections: $ternary$rtl.v:820$796_Y [7:3] = { $ternary$rtl.v:820$796_Y [2] 1'0 $ternary$rtl.v:820$796_Y [2] $ternary$rtl.v:820$796_Y [2] $ternary$rtl.v:820$796_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:831$811:
      Old ports: A={ 24'000000000000000000000000 \reg26 [1:0] }, B={ 23'10011101000000000000000 \wire15 }, Y=$ternary$rtl.v:831$811_Y
      New ports: A={ 2'00 \reg26 [1:0] }, B={ 1'1 \wire15 }, Y={ $ternary$rtl.v:831$811_Y [18] $ternary$rtl.v:831$811_Y [2:0] }
      New connections: { $ternary$rtl.v:831$811_Y [25:19] $ternary$rtl.v:831$811_Y [17:3] } = { $ternary$rtl.v:831$811_Y [18] 2'00 $ternary$rtl.v:831$811_Y [18] $ternary$rtl.v:831$811_Y [18] $ternary$rtl.v:831$811_Y [18] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:833$814:
      Old ports: A={ 6'000000 \reg31 [2:1] }, B=8'10111111, Y=$ternary$rtl.v:833$814_Y
      New ports: A={ 1'0 \reg31 [2:1] }, B=3'111, Y=$ternary$rtl.v:833$814_Y [2:0]
      New connections: $ternary$rtl.v:833$814_Y [7:3] = { $ternary$rtl.v:833$814_Y [2] 1'0 $ternary$rtl.v:833$814_Y [2] $ternary$rtl.v:833$814_Y [2] $ternary$rtl.v:833$814_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:836$823:
      Old ports: A={ 6'000000 \reg26 [1:0] }, B=8'10110000, Y=$ternary$rtl.v:836$823_Y
      New ports: A={ 1'0 \reg26 [1:0] }, B=3'100, Y={ $ternary$rtl.v:836$823_Y [4] $ternary$rtl.v:836$823_Y [1:0] }
      New connections: { $ternary$rtl.v:836$823_Y [7:5] $ternary$rtl.v:836$823_Y [3:2] } = { $ternary$rtl.v:836$823_Y [4] 1'0 $ternary$rtl.v:836$823_Y [4] 2'00 }
  Optimizing cells in module \module11.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:810$781:
      Old ports: A={ 15'000000000000000 \reg18 [6:0] }, B=$ternary$rtl.v:810$779_Y, Y=$ternary$rtl.v:810$781_Y
      New ports: A={ 1'0 \reg18 [6:0] }, B=$ternary$rtl.v:810$779_Y [7:0], Y=$ternary$rtl.v:810$781_Y [7:0]
      New connections: $ternary$rtl.v:810$781_Y [21:8] = { $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] $ternary$rtl.v:810$781_Y [7] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:833$817:
      Old ports: A=$ternary$rtl.v:833$814_Y, B={ 3'000 \wire12 [5:1] }, Y=$ternary$rtl.v:833$817_Y
      New ports: A={ $ternary$rtl.v:833$814_Y [2] $ternary$rtl.v:833$814_Y [2] $ternary$rtl.v:833$814_Y [2] $ternary$rtl.v:833$814_Y [2:0] }, B={ 1'0 \wire12 [5:1] }, Y=$ternary$rtl.v:833$817_Y [5:0]
      New connections: $ternary$rtl.v:833$817_Y [7:6] = { $ternary$rtl.v:833$817_Y [5] 1'0 }
  Optimizing cells in module \module11.
  Optimizing cells in module \module133.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1083$973: { \wire137 [3] \wire137 [4] \wire137 [5] $and$rtl.v:1083$972_Y [0] $and$rtl.v:1083$972_Y [1] $and$rtl.v:1083$972_Y [2] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1291$1283: { $auto$opt_expr.cc:189:group_cell_inputs$3453 [0] $auto$opt_expr.cc:189:group_cell_inputs$3453 [1] $auto$opt_expr.cc:189:group_cell_inputs$3453 [2] $auto$opt_expr.cc:189:group_cell_inputs$3453 [3] $auto$opt_expr.cc:189:group_cell_inputs$3453 [4] $auto$opt_expr.cc:189:group_cell_inputs$3453 [5] $auto$opt_expr.cc:189:group_cell_inputs$3451 [0] $auto$opt_expr.cc:189:group_cell_inputs$3451 [1] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1266$1250: { $auto$opt_expr.cc:189:group_cell_inputs$3449 [0] $auto$opt_expr.cc:189:group_cell_inputs$3449 [1] $auto$opt_expr.cc:189:group_cell_inputs$3449 [2] $auto$opt_expr.cc:189:group_cell_inputs$3447 [0] $auto$opt_expr.cc:189:group_cell_inputs$3447 [1] $auto$opt_expr.cc:189:group_cell_inputs$3447 [2] $auto$opt_expr.cc:189:group_cell_inputs$3447 [3] $auto$opt_expr.cc:189:group_cell_inputs$3447 [4] $auto$opt_expr.cc:189:group_cell_inputs$3447 [5] $auto$opt_expr.cc:189:group_cell_inputs$3447 [6] $auto$opt_expr.cc:189:group_cell_inputs$3447 [7] $auto$opt_expr.cc:189:group_cell_inputs$3447 [8] $auto$opt_expr.cc:189:group_cell_inputs$3447 [9] $auto$opt_expr.cc:189:group_cell_inputs$3447 [10] $auto$opt_expr.cc:189:group_cell_inputs$3447 [11] $auto$opt_expr.cc:189:group_cell_inputs$3447 [12] $auto$opt_expr.cc:189:group_cell_inputs$3447 [13] $auto$opt_expr.cc:189:group_cell_inputs$3447 [14] $auto$opt_expr.cc:189:group_cell_inputs$3447 [15] $auto$opt_expr.cc:189:group_cell_inputs$3447 [16] $auto$opt_expr.cc:189:group_cell_inputs$3447 [17] $auto$opt_expr.cc:189:group_cell_inputs$3447 [18] }
    Consolidated identical input bits for $mux cell $procmux$1541:
      Old ports: A={ $ternary$rtl.v:1389$1421_Y [19] $ternary$rtl.v:1389$1421_Y [19] $ternary$rtl.v:1389$1421_Y }, B={ 13'0000000000000 $auto$wreduce.cc:455:run$2389 [8:0] }, Y=$0\reg200[21:0]
      New ports: A=$ternary$rtl.v:1389$1421_Y, B={ 11'00000000000 $auto$wreduce.cc:455:run$2389 [8:0] }, Y=$0\reg200[21:0] [19:0]
      New connections: $0\reg200[21:0] [21:20] = { $0\reg200[21:0] [19] $0\reg200[21:0] [19] }
    Consolidated identical input bits for $mux cell $procmux$1592:
      Old ports: A={ 4'0000 $xnor$rtl.v:1409$1452_Y }, B={ 19'0000000000000000000 \reg148 [6] }, Y=$0\reg206[19:0]
      New ports: A=$xnor$rtl.v:1409$1452_Y, B={ 15'000000000000000 \reg148 [6] }, Y=$0\reg206[19:0] [15:0]
      New connections: $0\reg206[19:0] [19:16] = 4'0000
    Consolidated identical input bits for $mux cell $procmux$1646:
      Old ports: A={ $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y $logic_not$rtl.v:1266$1251_Y }, B=13'0000000000000, Y=$procmux$1646_Y
      New ports: A=$logic_not$rtl.v:1266$1251_Y, B=1'0, Y=$procmux$1646_Y [0]
      New connections: $procmux$1646_Y [12:1] = { $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] $procmux$1646_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1787:
      Old ports: A={ \reg159 17'00000000000000000 $xor$rtl.v:1187$1138_Y [0] }, B={ 20'00000000000000000000 \wire143 [3:2] }, Y=$0\reg163[21:0]
      New ports: A={ \reg159 1'0 $xor$rtl.v:1187$1138_Y [0] }, B={ 4'0000 \wire143 [3:2] }, Y={ $0\reg163[21:0] [21:18] $0\reg163[21:0] [1:0] }
      New connections: $0\reg163[21:0] [17:2] = 16'0000000000000000
    Consolidated identical input bits for $mux cell $procmux$1833:
      Old ports: A={ 16'0000000000000000 $auto$wreduce.cc:455:run$2368 [0] }, B={ \wire135 [13] \wire135 [13] \wire135 [13] \wire135 }, Y=$procmux$1833_Y
      New ports: A={ 13'0000000000000 $auto$wreduce.cc:455:run$2368 [0] }, B=\wire135, Y=$procmux$1833_Y [13:0]
      New connections: $procmux$1833_Y [16:14] = { $procmux$1833_Y [13] $procmux$1833_Y [13] $procmux$1833_Y [13] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1047$916:
      Old ports: A=\wire136, B={ 17'00000000000000000 \wire136 [3:0] }, Y=$ternary$rtl.v:1047$916_Y
      New ports: A=\wire136 [20:4], B=17'00000000000000000, Y=$ternary$rtl.v:1047$916_Y [20:4]
      New connections: $ternary$rtl.v:1047$916_Y [3:0] = \wire136 [3:0]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1075$955:
      Old ports: A={ 15'000000000000000 $auto$wreduce.cc:455:run$2411 [0] }, B={ $auto$wreduce.cc:455:run$2425 [10:0] 5'00000 }, Y=$auto$wreduce.cc:455:run$2426 [15:0]
      New ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$2411 [0] }, B={ $auto$wreduce.cc:455:run$2425 [10:0] 1'0 }, Y={ $auto$wreduce.cc:455:run$2426 [15:5] $auto$wreduce.cc:455:run$2426 [0] }
      New connections: $auto$wreduce.cc:455:run$2426 [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1079$961:
      Old ports: A={ \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] }, B=4'0000, Y=$auto$wreduce.cc:455:run$2427 [3:0]
      New ports: A=\wire139 [18], B=1'0, Y=$auto$wreduce.cc:455:run$2427 [0]
      New connections: $auto$wreduce.cc:455:run$2427 [3:1] = { $auto$wreduce.cc:455:run$2427 [0] $auto$wreduce.cc:455:run$2427 [0] $auto$wreduce.cc:455:run$2427 [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1127$1052:
      Old ports: A=8'10111010, B={ 4'0000 \reg159 }, Y=$ternary$rtl.v:1127$1052_Y
      New ports: A=5'11010, B={ 1'0 \reg159 }, Y=$ternary$rtl.v:1127$1052_Y [4:0]
      New connections: $ternary$rtl.v:1127$1052_Y [7:5] = { $ternary$rtl.v:1127$1052_Y [4] 1'0 $ternary$rtl.v:1127$1052_Y [4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1161$1105:
      Old ports: A={ 17'11111111111111111 $auto$opt_expr.cc:189:group_cell_inputs$3380 }, B={ 2'00 \reg152 }, Y=$ternary$rtl.v:1161$1105_Y
      New ports: A={ 16'1111111111111111 $auto$opt_expr.cc:189:group_cell_inputs$3380 }, B={ 1'0 \reg152 }, Y=$ternary$rtl.v:1161$1105_Y [16:0]
      New connections: $ternary$rtl.v:1161$1105_Y [17] = $ternary$rtl.v:1161$1105_Y [16]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1224$1190:
      Old ports: A={ 6'000000 \reg167 [2:1] }, B=8'10101111, Y=$ternary$rtl.v:1224$1190_Y
      New ports: A={ 1'0 \reg167 [2:1] }, B=3'111, Y=$ternary$rtl.v:1224$1190_Y [2:0]
      New connections: $ternary$rtl.v:1224$1190_Y [7:3] = { $ternary$rtl.v:1224$1190_Y [2] 1'0 $ternary$rtl.v:1224$1190_Y [2] 1'0 $ternary$rtl.v:1224$1190_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1246$1216:
      Old ports: A={ 2'00 \reg162 }, B={ \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] }, Y=$ternary$rtl.v:1246$1216_Y
      New ports: A={ 1'0 \reg162 }, B={ \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] \wire139 [18] }, Y=$ternary$rtl.v:1246$1216_Y [17:0]
      New connections: $ternary$rtl.v:1246$1216_Y [18] = $ternary$rtl.v:1246$1216_Y [17]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1247$1219:
      Old ports: A=6'011111, B=6'111010, Y=$ternary$rtl.v:1247$1219_Y [5:0]
      New ports: A=2'01, B=2'10, Y={ $ternary$rtl.v:1247$1219_Y [5] $ternary$rtl.v:1247$1219_Y [0] }
      New connections: $ternary$rtl.v:1247$1219_Y [4:1] = { 2'11 $ternary$rtl.v:1247$1219_Y [0] 1'1 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1254$1235:
      Old ports: A=8'01000011, B=8'10100100, Y=$ternary$rtl.v:1254$1235_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$rtl.v:1254$1235_Y [2] $ternary$rtl.v:1254$1235_Y [0] }
      New connections: { $ternary$rtl.v:1254$1235_Y [7:3] $ternary$rtl.v:1254$1235_Y [1] } = { $ternary$rtl.v:1254$1235_Y [2] $ternary$rtl.v:1254$1235_Y [0] $ternary$rtl.v:1254$1235_Y [2] 2'00 $ternary$rtl.v:1254$1235_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1256$1239:
      Old ports: A={ 5'11111 $auto$opt_expr.cc:189:group_cell_inputs$3440 $auto$opt_expr.cc:189:group_cell_inputs$3438 }, B={ 8'10110000 \reg156 }, Y=$ternary$rtl.v:1256$1239_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$3440 $auto$opt_expr.cc:189:group_cell_inputs$3438 }, B={ 4'0000 \reg156 }, Y=$ternary$rtl.v:1256$1239_Y [6:0]
      New connections: $ternary$rtl.v:1256$1239_Y [10:7] = { 1'1 $ternary$rtl.v:1256$1239_Y [6] 2'11 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1291$1278:
      Old ports: A=8'10100100, B={ 6'000000 \reg167 [1:0] }, Y=$auto$wreduce.cc:455:run$2445 [7:0]
      New ports: A=3'100, B={ 1'0 \reg167 [1:0] }, Y=$auto$wreduce.cc:455:run$2445 [2:0]
      New connections: $auto$wreduce.cc:455:run$2445 [7:3] = { $auto$wreduce.cc:455:run$2445 [2] 1'0 $auto$wreduce.cc:455:run$2445 [2] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1330$1334:
      Old ports: A={ 3'111 \wire142 [2:0] }, B={ 5'00000 $auto$wreduce.cc:455:run$2408 [0] }, Y=$ternary$rtl.v:1330$1334_Y
      New ports: A={ 1'1 \wire142 [2:0] }, B={ 3'000 $auto$wreduce.cc:455:run$2408 [0] }, Y=$ternary$rtl.v:1330$1334_Y [3:0]
      New connections: $ternary$rtl.v:1330$1334_Y [5:4] = { $ternary$rtl.v:1330$1334_Y [3] $ternary$rtl.v:1330$1334_Y [3] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1388$1412:
      Old ports: A={ 2'00 $ternary$rtl.v:1388$1411_Y }, B=8'10100101, Y=$ternary$rtl.v:1388$1412_Y [7:0]
      New ports: A={ 1'0 $ternary$rtl.v:1388$1411_Y }, B=7'1100101, Y={ $ternary$rtl.v:1388$1412_Y [7] $ternary$rtl.v:1388$1412_Y [5:0] }
      New connections: $ternary$rtl.v:1388$1412_Y [6] = 1'0
  Optimizing cells in module \module133.
    Consolidated identical input bits for $mux cell $procmux$1649:
      Old ports: A={ 12'000000000000 \reg179 [1] }, B=$procmux$1646_Y, Y=$0\reg180[12:0]
      New ports: A={ 1'0 \reg179 [1] }, B={ $procmux$1646_Y [0] $procmux$1646_Y [0] }, Y=$0\reg180[12:0] [1:0]
      New connections: $0\reg180[12:0] [12:2] = { $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] $0\reg180[12:0] [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1256$1241:
      Old ports: A=$ternary$rtl.v:1256$1239_Y, B={ 10'0000000000 $and$rtl.v:1253$1232_Y [0] }, Y=$ternary$rtl.v:1256$1241_Y
      New ports: A={ 1'1 $ternary$rtl.v:1256$1239_Y [6:0] }, B={ 7'0000000 $and$rtl.v:1253$1232_Y [0] }, Y=$ternary$rtl.v:1256$1241_Y [7:0]
      New connections: $ternary$rtl.v:1256$1241_Y [10:8] = { $ternary$rtl.v:1256$1241_Y [7:6] $ternary$rtl.v:1256$1241_Y [7] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1291$1281:
      Old ports: A=$auto$wreduce.cc:455:run$2445 [7:0], B={ 6'000000 \reg162 [1:0] }, Y=$auto$wreduce.cc:455:run$2446 [7:0]
      New ports: A=$auto$wreduce.cc:455:run$2445 [2:0], B={ 1'0 \reg162 [1:0] }, Y=$auto$wreduce.cc:455:run$2446 [2:0]
      New connections: $auto$wreduce.cc:455:run$2446 [7:3] = { $auto$wreduce.cc:455:run$2446 [2] 1'0 $auto$wreduce.cc:455:run$2446 [2] 2'00 }
  Optimizing cells in module \module133.
  Optimizing cells in module \module4.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:609$602:
      Old ports: A={ 13'0000000000000 \reg49 }, B={ \reg51 [17] \reg51 [17] \reg51 [17] \reg51 [17] \reg51 [17:0] }, Y=$ternary$rtl.v:609$602_Y
      New ports: A={ 9'000000000 \reg49 }, B=\reg51 [17:0], Y=$ternary$rtl.v:609$602_Y [17:0]
      New connections: $ternary$rtl.v:609$602_Y [21:18] = { $ternary$rtl.v:609$602_Y [17] $ternary$rtl.v:609$602_Y [17] $ternary$rtl.v:609$602_Y [17] $ternary$rtl.v:609$602_Y [17] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:610$605:
      Old ports: A={ 7'0000000 \reg45 [0] }, B=8'10101111, Y=$ternary$rtl.v:610$605_Y
      New ports: A={ 1'0 \reg45 [0] }, B=2'11, Y=$ternary$rtl.v:610$605_Y [1:0]
      New connections: $ternary$rtl.v:610$605_Y [7:2] = { $ternary$rtl.v:610$605_Y [1] 1'0 $ternary$rtl.v:610$605_Y [1] 1'0 $ternary$rtl.v:610$605_Y [1] $ternary$rtl.v:610$605_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:611$608:
      Old ports: A=22'0000000000000000000000, B={ \reg51 [17] \reg51 [17] \reg51 [17] \reg51 [17] \reg51 [17:0] }, Y=$ternary$rtl.v:611$608_Y
      New ports: A=18'000000000000000000, B=\reg51 [17:0], Y=$ternary$rtl.v:611$608_Y [17:0]
      New connections: $ternary$rtl.v:611$608_Y [21:18] = { $ternary$rtl.v:611$608_Y [17] $ternary$rtl.v:611$608_Y [17] $ternary$rtl.v:611$608_Y [17] $ternary$rtl.v:611$608_Y [17] }
  Optimizing cells in module \module4.
  Optimizing cells in module \module63.
    Consolidated identical input bits for $mux cell $procmux$1898:
      Old ports: A={ \wire64 [11] \wire64 [11] \wire64 [11] \wire64 [11] \wire64 [11] \wire64 [11] \wire64 [11] \wire64 [11] \wire64 [11] \wire64 [11] \wire64 }, B={ \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3:1] }, Y=$procmux$1898_Y
      New ports: A=\wire64, B={ \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3] \reg75 [3:1] }, Y=$procmux$1898_Y [11:0]
      New connections: $procmux$1898_Y [21:12] = { $procmux$1898_Y [11] $procmux$1898_Y [11] $procmux$1898_Y [11] $procmux$1898_Y [11] $procmux$1898_Y [11] $procmux$1898_Y [11] $procmux$1898_Y [11] $procmux$1898_Y [11] $procmux$1898_Y [11] $procmux$1898_Y [11] }
    Consolidated identical input bits for $mux cell $procmux$1925:
      Old ports: A={ 14'00000000000000 $auto$wreduce.cc:455:run$2499 [0] }, B={ \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 }, Y=$procmux$1925_Y
      New ports: A={ 2'00 $auto$wreduce.cc:455:run$2499 [0] }, B=\wire67, Y=$procmux$1925_Y [2:0]
      New connections: $procmux$1925_Y [14:3] = { $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] $procmux$1925_Y [2] }
  Optimizing cells in module \module63.
    Consolidated identical input bits for $mux cell $procmux$1904:
      Old ports: A=$procmux$1898_Y, B={ 16'0000000000000000 \wire70 }, Y=$0\reg74[21:0]
      New ports: A=$procmux$1898_Y [11:0], B={ 6'000000 \wire70 }, Y=$0\reg74[21:0] [11:0]
      New connections: $0\reg74[21:0] [21:12] = { $0\reg74[21:0] [11] $0\reg74[21:0] [11] $0\reg74[21:0] [11] $0\reg74[21:0] [11] $0\reg74[21:0] [11] $0\reg74[21:0] [11] $0\reg74[21:0] [11] $0\reg74[21:0] [11] $0\reg74[21:0] [11] $0\reg74[21:0] [11] }
    Consolidated identical input bits for $mux cell $procmux$1931:
      Old ports: A=$procmux$1925_Y, B={ \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 [2] \wire67 }, Y=$0\reg73[14:0]
      New ports: A=$procmux$1925_Y [2:0], B=\wire67, Y=$0\reg73[14:0] [2:0]
      New connections: $0\reg73[14:0] [14:3] = { $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] $0\reg73[14:0] [2] }
  Optimizing cells in module \module63.
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$2079:
      Old ports: A={ $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 }, B=16'0000000000000001, Y=$procmux$2079_Y
      New ports: A={ $auto$rtlil.cc:1832:Not$3224 $auto$rtlil.cc:1832:Not$3224 }, B=2'01, Y=$procmux$2079_Y [1:0]
      New connections: $procmux$2079_Y [15:2] = { $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] $procmux$2079_Y [1] }
    Consolidated identical input bits for $mux cell $procmux$2120:
      Old ports: A=7'1000100, B={ 4'0000 \wire2 [2:0] }, Y=$auto$wreduce.cc:455:run$2516 [6:0]
      New ports: A=4'1100, B={ 1'0 \wire2 [2:0] }, Y={ $auto$wreduce.cc:455:run$2516 [6] $auto$wreduce.cc:455:run$2516 [2:0] }
      New connections: $auto$wreduce.cc:455:run$2516 [5:3] = 3'000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:118$60:
      Old ports: A={ \reg97 [10] \reg97 [10] \reg97 [10] \reg97 }, B={ 13'0000000000000 \reg100 [0] }, Y=$auto$wreduce.cc:455:run$2522 [13:0]
      New ports: A=\reg97, B={ 10'0000000000 \reg100 [0] }, Y=$auto$wreduce.cc:455:run$2522 [10:0]
      New connections: $auto$wreduce.cc:455:run$2522 [13:11] = { $auto$wreduce.cc:455:run$2522 [10] $auto$wreduce.cc:455:run$2522 [10] $auto$wreduce.cc:455:run$2522 [10] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:150$99:
      Old ports: A=8'10111100, B={ 2'00 \reg99 }, Y=$ternary$rtl.v:150$99_Y
      New ports: A=7'1111100, B={ 1'0 \reg99 }, Y={ $ternary$rtl.v:150$99_Y [7] $ternary$rtl.v:150$99_Y [5:0] }
      New connections: $ternary$rtl.v:150$99_Y [6] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:166$123:
      Old ports: A={ 7'1000011 $logic_not$rtl.v:166$122_Y }, B={ 5'00000 \reg103 [5:3] }, Y=$auto$wreduce.cc:455:run$2527 [7:0]
      New ports: A={ 3'111 $logic_not$rtl.v:166$122_Y }, B={ 1'0 \reg103 [5:3] }, Y={ $auto$wreduce.cc:455:run$2527 [7] $auto$wreduce.cc:455:run$2527 [2:0] }
      New connections: $auto$wreduce.cc:455:run$2527 [6:3] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:166$125:
      Old ports: A={ 3'000 $auto$wreduce.cc:455:run$2527 [7:0] }, B={ 10'0000000000 $logic_not$rtl.v:164$120_Y }, Y=$ternary$rtl.v:166$125_Y
      New ports: A=$auto$wreduce.cc:455:run$2527 [7:0], B={ 7'0000000 $logic_not$rtl.v:164$120_Y }, Y=$ternary$rtl.v:166$125_Y [7:0]
      New connections: $ternary$rtl.v:166$125_Y [10:8] = 3'000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:88$19:
      Old ports: A={ 7'0000000 \wire3 [9] }, B=8'10100011, Y=$auto$wreduce.cc:455:run$2528 [7:0]
      New ports: A={ 1'0 \wire3 [9] }, B=2'11, Y=$auto$wreduce.cc:455:run$2528 [1:0]
      New connections: $auto$wreduce.cc:455:run$2528 [7:2] = { $auto$wreduce.cc:455:run$2528 [1] 1'0 $auto$wreduce.cc:455:run$2528 [1] 3'000 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:119$67:
      Old ports: A={ 13'0000000000000 \reg100 [0] }, B=$auto$wreduce.cc:455:run$2522 [13:0], Y=$auto$wreduce.cc:455:run$2523 [13:0]
      New ports: A={ 10'0000000000 \reg100 [0] }, B=$auto$wreduce.cc:455:run$2522 [10:0], Y=$auto$wreduce.cc:455:run$2523 [10:0]
      New connections: $auto$wreduce.cc:455:run$2523 [13:11] = { $auto$wreduce.cc:455:run$2523 [10] $auto$wreduce.cc:455:run$2523 [10] $auto$wreduce.cc:455:run$2523 [10] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:166$125:
      Old ports: A=$auto$wreduce.cc:455:run$2527 [7:0], B={ 7'0000000 $logic_not$rtl.v:164$120_Y }, Y=$ternary$rtl.v:166$125_Y [7:0]
      New ports: A={ $auto$wreduce.cc:455:run$2527 [7] $auto$wreduce.cc:455:run$2527 [2:0] }, B={ 3'000 $logic_not$rtl.v:164$120_Y }, Y={ $ternary$rtl.v:166$125_Y [7] $ternary$rtl.v:166$125_Y [2:0] }
      New connections: $ternary$rtl.v:166$125_Y [6:3] = 4'0000
  Optimizing cells in module \top.
Performed a total of 57 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~2 debug messages>
Optimizing module module11.
<suppressed ~1 debug messages>
Optimizing module module133.
<suppressed ~11 debug messages>
Optimizing module module4.
<suppressed ~1 debug messages>
Optimizing module module63.
Optimizing module top.
<suppressed ~1 debug messages>

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module107..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~228 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module107.
  Optimizing cells in module \module11.
  Optimizing cells in module \module133.
    New input vector for $reduce_and cell $reduce_and$rtl.v:1291$1283: { $auto$opt_expr.cc:189:group_cell_inputs$3554 $auto$opt_expr.cc:189:group_cell_inputs$3451 [0] $auto$opt_expr.cc:189:group_cell_inputs$3451 [1] }
  Optimizing cells in module \module133.
  Optimizing cells in module \module4.
  Optimizing cells in module \module63.
  Optimizing cells in module \top.
Performed a total of 1 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.20.16. Rerunning OPT passes. (Maybe there is more to do..)

2.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module107..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~228 debug messages>

2.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module107.
  Optimizing cells in module \module11.
  Optimizing cells in module \module133.
  Optimizing cells in module \module4.
  Optimizing cells in module \module63.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..

2.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
Optimizing module module11.
Optimizing module module133.
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.20.23. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$constmap:6aa942fcbe5c75731a7999d92186f79f3be17f55$paramod$f0f81e65a08632acccf8efe37806538863311c60\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $not.
Using template $paramod$constmap:777f1dcad0c6f3485c54b711ef9afecaed503310$paramod$fdde25d2311790074cca4c33ae20d7cea0f17cd2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:84d5b6e001d6a7c43706695a4751e7eb6d8fd0b8$paramod$9d4d43361b5e3d9ab1b13310cffce657161bbe03\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_xnor.
Using template $paramod$constmap:4202d5cf0bdf30b3ea1b5c1455d60ff706768895$paramod$b5aa91eaf562458ee678c3aa925ff20886040d38\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xnor.
Using template $paramod$constmap:90b7001eebaf3147c774a1d24ed8228f0e306b2a$paramod$372169c28885a7665ca5ad3ea4640faa126acc44\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:83ca0719e79a50d04e0b08c79668f36739964a4e$paramod$c7fedfde5841ec34152d9ebd4aaaf13e0f0fd4b3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=8\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=37\B_WIDTH=37\Y_WIDTH=37 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=18 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=37 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=22 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:ce216992fbe91fc5dfee7e4e8edbc4f7ddcb50ab$paramod$ed1b061870b297e1f5907fb0d7389a80e77eb711\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper maccmap for cells of type $macc.
  add \wire7 (21 bits, unsigned)
  add 21'111111111111101010110 (21 bits, unsigned)
  add bits $auto$wreduce.cc:455:run$2479 [0] (1 bits)
  add { 6'111111 $auto$opt_expr.cc:189:group_cell_inputs$3500 } * 7'1000100 (7x7 bits, unsigned)
  add $sshl$rtl.v:614$613_Y * $neg$rtl.v:614$617_Y (8x8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod$constmap:701663b2dc360b85e1919745f1cf200674a4f28b$paramod$6e0cec82bf85d8332917d90004dcb662f31bdd5a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:6588b13622632661e2b7855041ada3ccd29d4708$paramod$adb350400f47f9551b244267749857dea3624fa7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=2\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=2\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=7 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=19 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=21 for cells of type $lcu.
  add \wire112 * \wire112 (11x11 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=3\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$constmap:90cc076c311b94939397bed5643bd92aab7b1056$paramod$009ac35cf18ed6de6989a9ea2bb99e442d83861f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:af88607747f63c10e47f22dc296ae121e0f5a86e$paramod$01c9e3acf49fcf5623b252ddbfe2101b09a67aec\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:51218a09ffe78ec2f188bc37e4f71079f86d9868$paramod$cf3d2d0e971bb853fbabfee3b62fd94afdf06052\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:8108a9f11b272ac80187cadae0baf3bd0c29e974$paramod$d3a41e988a4effd1c7c08737fcc54756ff5456ea\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:58e0049e83eedb44452b71ed4217b0294ebd28fa$paramod$4496799c4781e4cccaebd54633d37750f0782237\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:f513a2f83c05a53811eaa86aadc9872f0f693d11$paramod$e90abba25dc96a2f631286042ee00bec0ad0f625\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:b19b69828234639fcf061d15a0421e1366ea64f1$paramod$9bfe4bcddaa82e8d6231d506a27bcfa25545c10c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:c019570bd5352f63b60d48eafd2eae97a4911a52$paramod$57214b3f1acc0dd3f68eb53b43bc9cb36adfae66\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:d19f3936491e74ca1dd73f48c01b988234498355$paramod$68fa8045b94d1ce99014472ecb9d9fef90475119\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod$constmap:c4d98413dd8df13ffd57ff56b43477df5cf16e7e$paramod$ff8a349144eda60d8ad994167dcbcb56f705c1fa\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:56d49ac9949d2c83b20bb6d1694800acfefc9301$paramod$8b4939c4cea29ff557f4e882d22fcee905142949\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:e6ff5a997dff4eea6ab6a0767d93c82b1685ed5b$paramod$045752615d8c81e4b64bb46e4e39d1b8fe45df71\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=23\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=20\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=16\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=5\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=35\Y_WIDTH=35 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=20 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=20 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=23 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=15 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=35 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
  add \reg172 * $logic_not$rtl.v:1392$1423_Y (7x1 bits, unsigned)
  add \wire137 [5:4] * $auto$wreduce.cc:455:run$2365 [0] (2x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
  add \wire135 * { 10'0000000000 \wire136 [0] } (14x11 bits, unsigned)
Using template $paramod$constmap:ea0f78e9f3fb9348abb52a9379db617d532ad73e$paramod$1acc75b119e9a4abdfcb25e19b3d6852888b4277\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:d5b5fd8c0718437ee16dd1d364be3637333210f1$paramod$00c23b8efa5a533828fe3bb234ad1b0168be1c0a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
  add { 11'00000000000 \wire137 } * \reg153 (22x16 bits, unsigned)
  add { \wire134 \wire143 } * $auto$rtlil.cc:1832:Not$2835 (14x1 bits, unsigned)
  add $ternary$rtl.v:1171$1115_Y * $auto$rtlil.cc:1832:Not$2803 (21x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
  add $ternary$rtl.v:1190$1145_Y * $ternary$rtl.v:1189$1142_Y [1:0] (22x2 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
  add 8'10101110 * { $ternary$rtl.v:1127$1052_Y [7] 1'0 $ternary$rtl.v:1127$1052_Y [7] $ternary$rtl.v:1127$1052_Y [7] $ternary$rtl.v:1127$1052_Y [3:0] } (8x8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod$constmap:48115514539b6f3f69c4032972edad524c0433cf$paramod$59e637b034d80d52970c225b5838af67cc712d33\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=8\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=9\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=2\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=4\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=7\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod$constmap:ad794ed89d7d88ae1c238fca328320b83c33ab60$paramod$4bd885f9cc11cf747730e4ad5a638d6bdccf4553\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:e1f72da3c7c24bd89558f0f314df2d38debc6451$paramod$af1e4815a000b6db7b9b57db3308149a4ea5642f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:9c22656f7f905c6ad3cf7d6e75d5c54f5890fb0d$paramod$a0f09c99632966f6f7a77958c9a871f0aa3b89e0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:b09ba5f0aec13a904e3ed4c63c84ce6046027d0a$paramod$95b8364e5bddc2ae990535b6197dc877190f829f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:07b9ce9b6c6fe75a9554870aa69a53756a6dfc5f$paramod$d7c7912c78d63dd305d8970add27b863c9ed368b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod$constmap:b1d884753b00a9ee040163a998487b0da498a4b6$paramod$087b1bded0624c652cca1d58c8a6f689fb2a63ae\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:f4344b8f61bba41958abdcd0e8769d51b21b7a8b$paramod$14876ef0f401c8dc3173a14d22bbaff7bee823fc\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:d270fff21bfa85fda087153f07901ac545393e69$paramod$2ac25ae12e2cc2245f933d10f385a164a0e31c1f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:0186230a77d93dc0e77d2a4d47da83c8aa478d87$paramod$83afedffa3c02600f206f5d1927902d8ac6ac53a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:f49a94b82af3e818d622bd76ff05afb3184e8777$paramod$e51bd6dbf2c6cd671c4d117f2d4d514cb3055782\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:41dc0d528340b58a7dd5652c89dd3b402d9a2a13$paramod$ca7c509a8770437b0537dddf739ca7bdc9d95408\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:9cb6d8244f3d2419153cc23b60b6eba9184e6507$paramod$4f98a6bab1ef72d363a3d23725258951be561193\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
  add 8'10111010 * $auto$wreduce.cc:455:run$2371 [0] (8x1 bits, unsigned)
  add \reg187 [1:0] * \wire142 [0] (2x1 bits, unsigned)
  add { 13'1111111111111 $auto$opt_expr.cc:189:group_cell_inputs$3410 $auto$opt_expr.cc:189:group_cell_inputs$3428 [11:8] 1'1 $auto$opt_expr.cc:189:group_cell_inputs$3428 [6] 3'111 $auto$opt_expr.cc:189:group_cell_inputs$3428 [2] 1'1 $auto$opt_expr.cc:189:group_cell_inputs$3428 [0] } * $auto$wreduce.cc:455:run$2436 [0] (34x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=14 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=17 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=12 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=16 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=13 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=16 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=1\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod$constmap:cd2c3326812daccd5620b09077d003c77d0ef137$paramod$9cc3c3e8fd4e3964b59e911521135d76a27ca79c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:5928b98a477c4a360d560ca1668d04754b326556$paramod$7105891745579b501792484929e9458000d66d14\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:cd3567469961a648be94f0cd1222ea7c29c83e91$paramod$7bf206333b17e204d1b32f8817a22f0bb7390a5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:0d4b91df31d3d1434e688277e9b2bceddd140706$paramod$bd458fab1571e0ad08221363dd0fca5049f90967\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:9d321a8cf486da888cfed4f157acc6259e9d250b$paramod$abf769c226d0fc0548c1469cb4db6bba9f4985cd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
  add \reg23 [5:0] * \wire15 (6x3 bits, unsigned)
Using template $paramod$constmap:79eccc4f5033a1df005ec99aa6020295f2aef507$paramod$b52db77118eb5cc0cbb5429f359fb04729ca7bc7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_fa\WIDTH=9 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=6 for cells of type $alu.
Using template $paramod$constmap:d5bcbd407c7acfe182b018ab527688e8eb588252$paramod$1277fc684c7b509b70017893fa33d94e8a90e44a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:18f23f55710f8f8ba51905bd29cfbd164d12691c$paramod$e01e217ccd3905e9c5beae80e9709c201c807442\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_lcu\WIDTH=6 for cells of type $lcu.
No more expansions possible.
<suppressed ~21790 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~1904 debug messages>
Optimizing module module11.
<suppressed ~507 debug messages>
Optimizing module module133.
<suppressed ~5514 debug messages>
Optimizing module module4.
<suppressed ~1263 debug messages>
Optimizing module module63.
<suppressed ~224 debug messages>
Optimizing module top.
<suppressed ~753 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
<suppressed ~1317 debug messages>
Finding identical cells in module `\module11'.
<suppressed ~252 debug messages>
Finding identical cells in module `\module133'.
<suppressed ~2145 debug messages>
Finding identical cells in module `\module4'.
<suppressed ~195 debug messages>
Finding identical cells in module `\module63'.
<suppressed ~243 debug messages>
Finding identical cells in module `\top'.
<suppressed ~255 debug messages>
Removed a total of 1469 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$18270 ($_DFF_P_) from module module107.
Removing $auto$simplemap.cc:420:simplemap_dff$44116 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$32395 ($_DFF_P_) from module module133.
Replaced 3 DFF cells.

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 1750 unused cells and 6435 unused wires.
<suppressed ~1756 debug messages>

2.22.5. Rerunning OPT passes. (Removed registers in this run.)

2.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~18 debug messages>
Optimizing module module11.
<suppressed ~16 debug messages>
Optimizing module module133.
<suppressed ~237 debug messages>
Optimizing module module4.
<suppressed ~1 debug messages>
Optimizing module module63.
<suppressed ~6 debug messages>
Optimizing module top.
<suppressed ~3 debug messages>

2.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
<suppressed ~18 debug messages>
Finding identical cells in module `\module11'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module133'.
<suppressed ~120 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 47 cells.

2.22.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$32386 ($_DFF_P_) from module module133.
Replaced 1 DFF cells.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 9 unused cells and 92 unused wires.
<suppressed ~13 debug messages>

2.22.10. Rerunning OPT passes. (Removed registers in this run.)

2.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~2 debug messages>
Optimizing module module11.
<suppressed ~1 debug messages>
Optimizing module module133.
<suppressed ~22 debug messages>
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 2 cells.

2.22.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

2.22.15. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\module107' to `<abc-temp-dir>/input.blif'..
Extracted 3966 gates and 4248 wires to a netlist network with 280 inputs and 259 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      113
ABC RESULTS:            ANDNOT cells:      507
ABC RESULTS:              AOI3 cells:      166
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      690
ABC RESULTS:              NAND cells:       78
ABC RESULTS:               NOR cells:      128
ABC RESULTS:               NOT cells:      250
ABC RESULTS:              OAI3 cells:      114
ABC RESULTS:              OAI4 cells:       12
ABC RESULTS:                OR cells:      724
ABC RESULTS:             ORNOT cells:       79
ABC RESULTS:              XNOR cells:      117
ABC RESULTS:               XOR cells:      380
ABC RESULTS:        internal signals:     3709
ABC RESULTS:           input signals:      280
ABC RESULTS:          output signals:      259
Removing temp directory.

2.23.2. Extracting gate netlist of module `\module11' to `<abc-temp-dir>/input.blif'..
Extracted 1326 gates and 1498 wires to a netlist network with 170 inputs and 142 outputs.

2.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       33
ABC RESULTS:            ANDNOT cells:      151
ABC RESULTS:              AOI3 cells:       41
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      333
ABC RESULTS:              NAND cells:       33
ABC RESULTS:               NOR cells:       24
ABC RESULTS:               NOT cells:       76
ABC RESULTS:              OAI3 cells:       27
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      293
ABC RESULTS:             ORNOT cells:       74
ABC RESULTS:              XNOR cells:       11
ABC RESULTS:               XOR cells:       66
ABC RESULTS:        internal signals:     1186
ABC RESULTS:           input signals:      170
ABC RESULTS:          output signals:      142
Removing temp directory.

2.23.3. Extracting gate netlist of module `\module133' to `<abc-temp-dir>/input.blif'..
Extracted 6707 gates and 7346 wires to a netlist network with 637 inputs and 635 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      255
ABC RESULTS:            ANDNOT cells:     1029
ABC RESULTS:              AOI3 cells:      245
ABC RESULTS:              AOI4 cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               MUX cells:     1018
ABC RESULTS:              NAND cells:      257
ABC RESULTS:               NOR cells:      242
ABC RESULTS:               NOT cells:      437
ABC RESULTS:              OAI3 cells:      183
ABC RESULTS:              OAI4 cells:        4
ABC RESULTS:                OR cells:     1037
ABC RESULTS:             ORNOT cells:      176
ABC RESULTS:              XNOR cells:      232
ABC RESULTS:               XOR cells:      541
ABC RESULTS:              ZERO cells:        2
ABC RESULTS:        internal signals:     6074
ABC RESULTS:           input signals:      637
ABC RESULTS:          output signals:      635
Removing temp directory.

2.23.4. Extracting gate netlist of module `\module4' to `<abc-temp-dir>/input.blif'..
Extracted 1135 gates and 1302 wires to a netlist network with 165 inputs and 88 outputs.

2.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       16
ABC RESULTS:            ANDNOT cells:      103
ABC RESULTS:              AOI3 cells:       45
ABC RESULTS:               MUX cells:      164
ABC RESULTS:              NAND cells:       32
ABC RESULTS:               NOR cells:       34
ABC RESULTS:               NOT cells:       54
ABC RESULTS:              OAI3 cells:       44
ABC RESULTS:                OR cells:      240
ABC RESULTS:             ORNOT cells:       27
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:       53
ABC RESULTS:        internal signals:     1049
ABC RESULTS:           input signals:      165
ABC RESULTS:          output signals:       88
Removing temp directory.

2.23.5. Extracting gate netlist of module `\module63' to `<abc-temp-dir>/input.blif'..
Extracted 292 gates and 367 wires to a netlist network with 73 inputs and 44 outputs.

2.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:       37
ABC RESULTS:              AOI3 cells:        3
ABC RESULTS:               MUX cells:       83
ABC RESULTS:              NAND cells:       11
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:                OR cells:       59
ABC RESULTS:             ORNOT cells:       18
ABC RESULTS:              XNOR cells:        7
ABC RESULTS:               XOR cells:       35
ABC RESULTS:        internal signals:      250
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:       44
Removing temp directory.

2.23.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 2154 gates and 2481 wires to a netlist network with 325 inputs and 211 outputs.

2.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       33
ABC RESULTS:            ANDNOT cells:      237
ABC RESULTS:              AOI3 cells:       28
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               MUX cells:      651
ABC RESULTS:              NAND cells:       68
ABC RESULTS:               NOR cells:       54
ABC RESULTS:               NOT cells:      108
ABC RESULTS:              OAI3 cells:       29
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:      588
ABC RESULTS:             ORNOT cells:       46
ABC RESULTS:              XNOR cells:       51
ABC RESULTS:               XOR cells:      111
ABC RESULTS:        internal signals:     1945
ABC RESULTS:           input signals:      325
ABC RESULTS:          output signals:      211
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~149 debug messages>
Optimizing module module11.
<suppressed ~100 debug messages>
Optimizing module module133.
<suppressed ~133 debug messages>
Optimizing module module4.
<suppressed ~82 debug messages>
Optimizing module module63.
<suppressed ~13 debug messages>
Optimizing module top.
<suppressed ~87 debug messages>

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
<suppressed ~39 debug messages>
Finding identical cells in module `\module11'.
<suppressed ~15 debug messages>
Finding identical cells in module `\module133'.
<suppressed ~72 debug messages>
Finding identical cells in module `\module4'.
<suppressed ~18 debug messages>
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 53 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$32387 ($_DFF_P_) from module module133.
Replaced 1 DFF cells.

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 13 unused cells and 6644 unused wires.
<suppressed ~19 debug messages>

2.24.5. Rerunning OPT passes. (Removed registers in this run.)

2.24.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module107.
<suppressed ~13 debug messages>
Optimizing module module11.
Optimizing module module133.
<suppressed ~30 debug messages>
Optimizing module module4.
Optimizing module module63.
Optimizing module top.

2.24.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module107'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module11'.
Finding identical cells in module `\module133'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\top'.
Removed a total of 3 cells.

2.24.8. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module107..
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \top..
Removed 4 unused cells and 50 unused wires.
<suppressed ~6 debug messages>

2.24.10. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== module107 ===

   Number of wires:               3147
   Number of wire bits:           5198
   Number of public wires:          48
   Number of public wire bits:    1020
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3569
     $_ANDNOT_                     507
     $_AND_                        111
     $_AOI3_                       166
     $_AOI4_                         2
     $_DFF_P_                      240
     $_MUX_                        675
     $_NAND_                        78
     $_NOR_                        121
     $_NOT_                        244
     $_OAI3_                       114
     $_OAI4_                        12
     $_ORNOT_                       79
     $_OR_                         722
     $_XNOR_                       117
     $_XOR_                        380
     module133                       1

=== module11 ===

   Number of wires:               1058
   Number of wire bits:           1787
   Number of public wires:          28
   Number of public wire bits:     626
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1312
     $_ANDNOT_                     151
     $_AND_                         33
     $_AOI3_                        41
     $_AOI4_                         1
     $_DFF_P_                      152
     $_MUX_                        333
     $_NAND_                        33
     $_NOR_                         19
     $_NOT_                         76
     $_OAI3_                        27
     $_OAI4_                         2
     $_ORNOT_                       74
     $_OR_                         293
     $_XNOR_                        11
     $_XOR_                         66

=== module133 ===

   Number of wires:               5108
   Number of wire bits:           7384
   Number of public wires:          83
   Number of public wire bits:    1758
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6215
     $_ANDNOT_                    1017
     $_AND_                        254
     $_AOI3_                       244
     $_AOI4_                         4
     $_DFF_P_                      615
     $_MUX_                        997
     $_NAND_                       253
     $_NOR_                        240
     $_NOT_                        429
     $_OAI3_                       183
     $_OAI4_                         4
     $_ORNOT_                      176
     $_OR_                        1029
     $_XNOR_                       232
     $_XOR_                        538

=== module4 ===

   Number of wires:                765
   Number of wire bits:           1807
   Number of public wires:          34
   Number of public wire bits:     639
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                897
     $_ANDNOT_                     103
     $_AND_                         16
     $_AOI3_                        44
     $_DFF_P_                       84
     $_MUX_                        164
     $_NAND_                        32
     $_NOR_                         29
     $_NOT_                         53
     $_OAI3_                        44
     $_ORNOT_                       27
     $_OR_                         240
     $_XNOR_                         6
     $_XOR_                         53
     module11                        1
     module63                        1

=== module63 ===

   Number of wires:                254
   Number of wire bits:            581
   Number of public wires:          19
   Number of public wire bits:     293
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                310
     $_ANDNOT_                      37
     $_AND_                         12
     $_AOI3_                         3
     $_DFF_P_                       36
     $_MUX_                         83
     $_NAND_                        11
     $_NOR_                          3
     $_NOT_                          5
     $_OAI3_                         1
     $_ORNOT_                       18
     $_OR_                          59
     $_XNOR_                         7
     $_XOR_                         35

=== top ===

   Number of wires:               1845
   Number of wire bits:           4033
   Number of public wires:          37
   Number of public wire bits:     847
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2208
     $_ANDNOT_                     237
     $_AND_                         33
     $_AOI3_                        28
     $_AOI4_                         1
     $_DFF_P_                      206
     $_MUX_                        651
     $_NAND_                        68
     $_NOR_                         50
     $_NOT_                        105
     $_OAI3_                        29
     $_OAI4_                         1
     $_ORNOT_                       46
     $_OR_                         588
     $_XNOR_                        51
     $_XOR_                        111
     module107                       2
     module4                         1

2.27. Executing CHECK pass (checking for obvious problems).
checking module module107..
checking module module11..
checking module module133..
checking module module4..
checking module module63..
checking module top..
found and reported 0 problems.

3. Executing Verilog backend.
Dumping module `\module107'.
Dumping module `\module11'.
Dumping module `\module133'.
Dumping module `\module4'.
Dumping module `\module63'.
Dumping module `\top'.

Warnings: 21 unique messages, 21 total
End of script. Logfile hash: a51732138c
CPU: user 18.83s system 0.02s, MEM: 132.33 MB total, 118.93 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 25% 69x proc (4 sec), 16% 2x techmap (3 sec), ...
