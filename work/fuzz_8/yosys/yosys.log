
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `read_verilog rtl.v; synth; write_verilog -noattr syn_yosys.v' --

1. Executing Verilog-2005 frontend: rtl.v
Parsing Verilog input from `rtl.v' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\module4'.
Generating RTLIL representation for module `\module241'.
Generating RTLIL representation for module `\module198'.
Generating RTLIL representation for module `\module90'.
Generating RTLIL representation for module `\module11'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).
Mapping positional arguments of cell module4.modinst264 (module241).
Mapping positional arguments of cell module4.modinst164 (module90).
Mapping positional arguments of cell module4.modinst86 (module11).
Mapping positional arguments of cell top.modinst290 (module4).
Mapping positional arguments of cell top.modinst267 (module4).
Warning: Resizing cell port module4.modinst264.y from 9 bits to 210 bits.
Warning: Resizing cell port module4.modinst264.wire246 from 22 bits to 3 bits.
Warning: Resizing cell port module4.modinst264.wire245 from 13 bits to 7 bits.
Warning: Resizing cell port module4.modinst264.wire244 from 21 bits to 5 bits.
Warning: Resizing cell port module4.modinst264.wire242 from 10 bits to 7 bits.
Warning: Resizing cell port module4.modinst233.wire201 from 6 bits to 3 bits.
Warning: Resizing cell port module4.modinst233.wire202 from 21 bits to 9 bits.
Warning: Resizing cell port module4.modinst233.y from 16 bits to 320 bits.
Warning: Resizing cell port module4.modinst233.wire199 from 22 bits to 20 bits.
Warning: Resizing cell port module4.modinst164.y from 22 bits to 732 bits.
Warning: Resizing cell port module4.modinst164.wire91 from 22 bits to 20 bits.
Warning: Resizing cell port module4.modinst86.y from 15 bits to 799 bits.
Warning: Resizing cell port module4.modinst86.wire16 from 19 bits to 9 bits.
Warning: Resizing cell port module4.modinst86.wire15 from 6 bits to 5 bits.
Warning: Resizing cell port module4.modinst86.wire13 from 22 bits to 16 bits.
Warning: Resizing cell port module4.modinst86.wire12 from 16 bits to 8 bits.
Warning: Resizing cell port top.modinst290.y from 4 bits to 631 bits.
Warning: Resizing cell port top.modinst290.wire9 from 17 bits to 13 bits.
Warning: Resizing cell port top.modinst290.wire7 from 21 bits to 6 bits.
Warning: Resizing cell port top.modinst288.wire7 from 10 bits to 6 bits.
Warning: Resizing cell port top.modinst288.wire9 from 17 bits to 13 bits.
Warning: Resizing cell port top.modinst288.wire5 from 22 bits to 19 bits.
Warning: Resizing cell port top.modinst288.y from 20 bits to 631 bits.
Warning: Resizing cell port top.modinst267.y from 22 bits to 631 bits.
Warning: Resizing cell port top.modinst267.wire7 from 21 bits to 6 bits.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\module11.$proc$rtl.v:1687$1577'.
Found and cleaned up 1 empty switch in `\module11.$proc$rtl.v:1632$1526'.
Found and cleaned up 1 empty switch in `\module4.$proc$rtl.v:466$396'.
Cleaned up 3 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 8 switch rules as full_case in process $proc$rtl.v:1687$1577 in module module11.
Marked 1 switch rules as full_case in process $proc$rtl.v:1632$1526 in module module11.
Marked 1 switch rules as full_case in process $proc$rtl.v:1605$1492 in module module11.
Marked 2 switch rules as full_case in process $proc$rtl.v:1550$1415 in module module11.
Marked 4 switch rules as full_case in process $proc$rtl.v:1308$1190 in module module90.
Marked 3 switch rules as full_case in process $proc$rtl.v:1246$1102 in module module90.
Marked 4 switch rules as full_case in process $proc$rtl.v:1180$1032 in module module90.
Marked 3 switch rules as full_case in process $proc$rtl.v:1113$921 in module module90.
Marked 6 switch rules as full_case in process $proc$rtl.v:814$685 in module module198.
Marked 3 switch rules as full_case in process $proc$rtl.v:681$609 in module module241.
Marked 3 switch rules as full_case in process $proc$rtl.v:550$460 in module module4.
Marked 1 switch rules as full_case in process $proc$rtl.v:466$396 in module module4.
Marked 2 switch rules as full_case in process $proc$rtl.v:311$306 in module top.
Marked 3 switch rules as full_case in process $proc$rtl.v:244$198 in module top.
Marked 2 switch rules as full_case in process $proc$rtl.v:197$123 in module top.
Marked 3 switch rules as full_case in process $proc$rtl.v:131$30 in module top.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\module11.$proc$rtl.v:1467$1896'.
  Set init value: \reg22 = 5'00000
Found init rule in `\module11.$proc$rtl.v:1466$1895'.
  Set init value: \reg23 = 18'000000000000000000
Found init rule in `\module11.$proc$rtl.v:1465$1894'.
  Set init value: \reg24 = 22'0000000000000000000000
Found init rule in `\module11.$proc$rtl.v:1464$1893'.
  Set init value: \reg25 = 7'0000000
Found init rule in `\module11.$proc$rtl.v:1463$1892'.
  Set init value: \reg26 = 14'00000000000000
Found init rule in `\module11.$proc$rtl.v:1462$1891'.
  Set init value: \reg27 = 15'000000000000000
Found init rule in `\module11.$proc$rtl.v:1461$1890'.
  Set init value: \reg28 = 5'00000
Found init rule in `\module11.$proc$rtl.v:1460$1889'.
  Set init value: \reg29 = 19'0000000000000000000
Found init rule in `\module11.$proc$rtl.v:1456$1888'.
  Set init value: \reg33 = 16'0000000000000000
Found init rule in `\module11.$proc$rtl.v:1450$1887'.
  Set init value: \reg39 = 17'00000000000000000
Found init rule in `\module11.$proc$rtl.v:1449$1886'.
  Set init value: \reg40 = 9'000000000
Found init rule in `\module11.$proc$rtl.v:1448$1885'.
  Set init value: \reg41 = 22'0000000000000000000000
Found init rule in `\module11.$proc$rtl.v:1447$1884'.
  Set init value: \reg42 = 13'0000000000000
Found init rule in `\module11.$proc$rtl.v:1446$1883'.
  Set init value: \reg43 = 19'0000000000000000000
Found init rule in `\module11.$proc$rtl.v:1445$1882'.
  Set init value: \reg44 = 15'000000000000000
Found init rule in `\module11.$proc$rtl.v:1444$1881'.
  Set init value: \reg45 = 15'000000000000000
Found init rule in `\module11.$proc$rtl.v:1443$1880'.
  Set init value: \reg46 = 18'000000000000000000
Found init rule in `\module11.$proc$rtl.v:1442$1879'.
  Set init value: \reg47 = 18'000000000000000000
Found init rule in `\module11.$proc$rtl.v:1441$1878'.
  Set init value: \reg48 = 6'000000
Found init rule in `\module11.$proc$rtl.v:1440$1877'.
  Set init value: \reg49 = 5'00000
Found init rule in `\module11.$proc$rtl.v:1439$1876'.
  Set init value: \reg50 = 7'0000000
Found init rule in `\module11.$proc$rtl.v:1438$1875'.
  Set init value: \reg51 = 6'000000
Found init rule in `\module11.$proc$rtl.v:1437$1874'.
  Set init value: \reg52 = 22'0000000000000000000000
Found init rule in `\module11.$proc$rtl.v:1436$1873'.
  Set init value: \reg53 = 11'00000000000
Found init rule in `\module11.$proc$rtl.v:1435$1872'.
  Set init value: \reg54 = 13'0000000000000
Found init rule in `\module11.$proc$rtl.v:1434$1871'.
  Set init value: \reg55 = 14'00000000000000
Found init rule in `\module11.$proc$rtl.v:1433$1870'.
  Set init value: \reg56 = 4'0000
Found init rule in `\module11.$proc$rtl.v:1432$1869'.
  Set init value: \reg57 = 6'000000
Found init rule in `\module11.$proc$rtl.v:1431$1868'.
  Set init value: \reg58 = 22'0000000000000000000000
Found init rule in `\module11.$proc$rtl.v:1430$1867'.
  Set init value: \reg59 = 8'00000000
Found init rule in `\module11.$proc$rtl.v:1429$1866'.
  Set init value: \reg60 = 20'00000000000000000000
Found init rule in `\module11.$proc$rtl.v:1428$1865'.
  Set init value: \reg61 = 19'0000000000000000000
Found init rule in `\module11.$proc$rtl.v:1427$1864'.
  Set init value: \reg62 = 7'0000000
Found init rule in `\module11.$proc$rtl.v:1426$1863'.
  Set init value: \reg63 = 15'000000000000000
Found init rule in `\module11.$proc$rtl.v:1425$1862'.
  Set init value: \reg64 = 12'000000000000
Found init rule in `\module11.$proc$rtl.v:1424$1861'.
  Set init value: \reg65 = 17'00000000000000000
Found init rule in `\module11.$proc$rtl.v:1423$1860'.
  Set init value: \reg66 = 7'0000000
Found init rule in `\module11.$proc$rtl.v:1422$1859'.
  Set init value: \reg67 = 9'000000000
Found init rule in `\module11.$proc$rtl.v:1421$1858'.
  Set init value: \reg68 = 11'00000000000
Found init rule in `\module11.$proc$rtl.v:1420$1857'.
  Set init value: \reg69 = 7'0000000
Found init rule in `\module11.$proc$rtl.v:1419$1856'.
  Set init value: \reg70 = 21'000000000000000000000
Found init rule in `\module11.$proc$rtl.v:1418$1855'.
  Set init value: \reg71 = 5'00000
Found init rule in `\module11.$proc$rtl.v:1417$1854'.
  Set init value: \reg72 = 14'00000000000000
Found init rule in `\module11.$proc$rtl.v:1416$1853'.
  Set init value: \reg73 = 10'0000000000
Found init rule in `\module11.$proc$rtl.v:1415$1852'.
  Set init value: \reg74 = 4'0000
Found init rule in `\module11.$proc$rtl.v:1414$1851'.
  Set init value: \reg75 = 11'00000000000
Found init rule in `\module11.$proc$rtl.v:1413$1850'.
  Set init value: \reg76 = 22'0000000000000000000000
Found init rule in `\module11.$proc$rtl.v:1412$1849'.
  Set init value: \reg77 = 12'000000000000
Found init rule in `\module11.$proc$rtl.v:1411$1848'.
  Set init value: \reg78 = 8'00000000
Found init rule in `\module11.$proc$rtl.v:1410$1847'.
  Set init value: \reg79 = 3'000
Found init rule in `\module11.$proc$rtl.v:1409$1846'.
  Set init value: \reg80 = 13'0000000000000
Found init rule in `\module11.$proc$rtl.v:1408$1845'.
  Set init value: \reg81 = 15'000000000000000
Found init rule in `\module11.$proc$rtl.v:1407$1844'.
  Set init value: \reg82 = 19'0000000000000000000
Found init rule in `\module11.$proc$rtl.v:1406$1843'.
  Set init value: \reg83 = 11'00000000000
Found init rule in `\module11.$proc$rtl.v:1405$1842'.
  Set init value: \reg84 = 4'0000
Found init rule in `\module90.$proc$rtl.v:1003$1393'.
  Set init value: \reg103 = 5'00000
Found init rule in `\module90.$proc$rtl.v:1002$1392'.
  Set init value: \reg104 = 8'00000000
Found init rule in `\module90.$proc$rtl.v:1001$1391'.
  Set init value: \reg105 = 9'000000000
Found init rule in `\module90.$proc$rtl.v:997$1390'.
  Set init value: \reg109 = 12'000000000000
Found init rule in `\module90.$proc$rtl.v:996$1389'.
  Set init value: \reg110 = 14'00000000000000
Found init rule in `\module90.$proc$rtl.v:995$1388'.
  Set init value: \reg111 = 7'0000000
Found init rule in `\module90.$proc$rtl.v:994$1387'.
  Set init value: \reg112 = 6'000000
Found init rule in `\module90.$proc$rtl.v:993$1386'.
  Set init value: \reg113 = 13'0000000000000
Found init rule in `\module90.$proc$rtl.v:992$1385'.
  Set init value: \reg114 = 21'000000000000000000000
Found init rule in `\module90.$proc$rtl.v:991$1384'.
  Set init value: \reg115 = 21'000000000000000000000
Found init rule in `\module90.$proc$rtl.v:990$1383'.
  Set init value: \reg116 = 18'000000000000000000
Found init rule in `\module90.$proc$rtl.v:989$1382'.
  Set init value: \reg117 = 15'000000000000000
Found init rule in `\module90.$proc$rtl.v:988$1381'.
  Set init value: \reg118 = 4'0000
Found init rule in `\module90.$proc$rtl.v:987$1380'.
  Set init value: \reg119 = 14'00000000000000
Found init rule in `\module90.$proc$rtl.v:986$1379'.
  Set init value: \reg120 = 13'0000000000000
Found init rule in `\module90.$proc$rtl.v:985$1378'.
  Set init value: \reg121 = 3'000
Found init rule in `\module90.$proc$rtl.v:984$1377'.
  Set init value: \reg122 = 3'000
Found init rule in `\module90.$proc$rtl.v:983$1376'.
  Set init value: \reg123 = 12'000000000000
Found init rule in `\module90.$proc$rtl.v:982$1375'.
  Set init value: \reg124 = 8'00000000
Found init rule in `\module90.$proc$rtl.v:981$1374'.
  Set init value: \reg125 = 11'00000000000
Found init rule in `\module90.$proc$rtl.v:980$1373'.
  Set init value: \reg126 = 9'000000000
Found init rule in `\module90.$proc$rtl.v:979$1372'.
  Set init value: \reg127 = 20'00000000000000000000
Found init rule in `\module90.$proc$rtl.v:978$1371'.
  Set init value: \reg128 = 6'000000
Found init rule in `\module90.$proc$rtl.v:977$1370'.
  Set init value: \reg129 = 20'00000000000000000000
Found init rule in `\module90.$proc$rtl.v:976$1369'.
  Set init value: \reg130 = 8'00000000
Found init rule in `\module90.$proc$rtl.v:974$1368'.
  Set init value: \reg132 = 4'0000
Found init rule in `\module90.$proc$rtl.v:973$1367'.
  Set init value: \reg133 = 9'000000000
Found init rule in `\module90.$proc$rtl.v:972$1366'.
  Set init value: \reg134 = 14'00000000000000
Found init rule in `\module90.$proc$rtl.v:971$1365'.
  Set init value: \reg135 = 10'0000000000
Found init rule in `\module90.$proc$rtl.v:970$1364'.
  Set init value: \reg136 = 5'00000
Found init rule in `\module90.$proc$rtl.v:969$1363'.
  Set init value: \reg137 = 14'00000000000000
Found init rule in `\module90.$proc$rtl.v:968$1362'.
  Set init value: \reg138 = 7'0000000
Found init rule in `\module90.$proc$rtl.v:967$1361'.
  Set init value: \reg139 = 16'0000000000000000
Found init rule in `\module90.$proc$rtl.v:966$1360'.
  Set init value: \reg140 = 12'000000000000
Found init rule in `\module90.$proc$rtl.v:965$1359'.
  Set init value: \reg141 = 5'00000
Found init rule in `\module90.$proc$rtl.v:964$1358'.
  Set init value: \reg142 = 19'0000000000000000000
Found init rule in `\module90.$proc$rtl.v:963$1357'.
  Set init value: \reg143 = 10'0000000000
Found init rule in `\module90.$proc$rtl.v:962$1356'.
  Set init value: \reg144 = 14'00000000000000
Found init rule in `\module90.$proc$rtl.v:961$1355'.
  Set init value: \reg145 = 8'00000000
Found init rule in `\module90.$proc$rtl.v:960$1354'.
  Set init value: \reg146 = 21'000000000000000000000
Found init rule in `\module90.$proc$rtl.v:959$1353'.
  Set init value: \reg147 = 12'000000000000
Found init rule in `\module90.$proc$rtl.v:958$1352'.
  Set init value: \reg148 = 16'0000000000000000
Found init rule in `\module90.$proc$rtl.v:957$1351'.
  Set init value: \reg149 = 13'0000000000000
Found init rule in `\module90.$proc$rtl.v:956$1350'.
  Set init value: \reg150 = 12'000000000000
Found init rule in `\module90.$proc$rtl.v:955$1349'.
  Set init value: \reg151 = 16'0000000000000000
Found init rule in `\module90.$proc$rtl.v:954$1348'.
  Set init value: \reg152 = 9'000000000
Found init rule in `\module90.$proc$rtl.v:953$1347'.
  Set init value: \reg153 = 15'000000000000000
Found init rule in `\module90.$proc$rtl.v:952$1346'.
  Set init value: \reg154 = 15'000000000000000
Found init rule in `\module90.$proc$rtl.v:951$1345'.
  Set init value: \reg155 = 20'00000000000000000000
Found init rule in `\module90.$proc$rtl.v:950$1344'.
  Set init value: \reg156 = 17'00000000000000000
Found init rule in `\module90.$proc$rtl.v:949$1343'.
  Set init value: \reg157 = 22'0000000000000000000000
Found init rule in `\module198.$proc$rtl.v:766$855'.
  Set init value: \reg204 = 17'00000000000000000
Found init rule in `\module198.$proc$rtl.v:762$854'.
  Set init value: \reg208 = 19'0000000000000000000
Found init rule in `\module198.$proc$rtl.v:759$853'.
  Set init value: \reg211 = 10'0000000000
Found init rule in `\module198.$proc$rtl.v:758$852'.
  Set init value: \reg212 = 4'0000
Found init rule in `\module198.$proc$rtl.v:757$851'.
  Set init value: \reg213 = 4'0000
Found init rule in `\module198.$proc$rtl.v:756$850'.
  Set init value: \reg214 = 20'00000000000000000000
Found init rule in `\module198.$proc$rtl.v:755$849'.
  Set init value: \reg215 = 4'0000
Found init rule in `\module198.$proc$rtl.v:754$848'.
  Set init value: \reg216 = 4'0000
Found init rule in `\module198.$proc$rtl.v:753$847'.
  Set init value: \reg217 = 13'0000000000000
Found init rule in `\module198.$proc$rtl.v:752$846'.
  Set init value: \reg218 = 10'0000000000
Found init rule in `\module198.$proc$rtl.v:751$845'.
  Set init value: \reg219 = 10'0000000000
Found init rule in `\module198.$proc$rtl.v:750$844'.
  Set init value: \reg220 = 3'000
Found init rule in `\module198.$proc$rtl.v:749$843'.
  Set init value: \reg221 = 16'0000000000000000
Found init rule in `\module198.$proc$rtl.v:748$842'.
  Set init value: \reg222 = 20'00000000000000000000
Found init rule in `\module198.$proc$rtl.v:747$841'.
  Set init value: \reg223 = 8'00000000
Found init rule in `\module198.$proc$rtl.v:746$840'.
  Set init value: \reg224 = 19'0000000000000000000
Found init rule in `\module198.$proc$rtl.v:745$839'.
  Set init value: \reg225 = 14'00000000000000
Found init rule in `\module198.$proc$rtl.v:743$838'.
  Set init value: \reg227 = 3'000
Found init rule in `\module198.$proc$rtl.v:742$837'.
  Set init value: \reg228 = 11'00000000000
Found init rule in `\module241.$proc$rtl.v:654$671'.
  Set init value: \reg252 = 14'00000000000000
Found init rule in `\module241.$proc$rtl.v:653$670'.
  Set init value: \reg253 = 6'000000
Found init rule in `\module241.$proc$rtl.v:652$669'.
  Set init value: \reg254 = 18'000000000000000000
Found init rule in `\module241.$proc$rtl.v:651$668'.
  Set init value: \reg255 = 8'00000000
Found init rule in `\module241.$proc$rtl.v:650$667'.
  Set init value: \reg256 = 20'00000000000000000000
Found init rule in `\module241.$proc$rtl.v:649$666'.
  Set init value: \reg257 = 22'0000000000000000000000
Found init rule in `\module241.$proc$rtl.v:648$665'.
  Set init value: \reg258 = 19'0000000000000000000
Found init rule in `\module241.$proc$rtl.v:647$664'.
  Set init value: \reg259 = 19'0000000000000000000
Found init rule in `\module241.$proc$rtl.v:646$663'.
  Set init value: \reg260 = 10'0000000000
Found init rule in `\module241.$proc$rtl.v:645$662'.
  Set init value: \reg261 = 20'00000000000000000000
Found init rule in `\module4.$proc$rtl.v:403$604'.
  Set init value: \reg235 = 10'0000000000
Found init rule in `\module4.$proc$rtl.v:400$603'.
  Set init value: \reg197 = 9'000000000
Found init rule in `\module4.$proc$rtl.v:399$602'.
  Set init value: \reg196 = 16'0000000000000000
Found init rule in `\module4.$proc$rtl.v:398$601'.
  Set init value: \reg195 = 16'0000000000000000
Found init rule in `\module4.$proc$rtl.v:397$600'.
  Set init value: \reg194 = 5'00000
Found init rule in `\module4.$proc$rtl.v:396$599'.
  Set init value: \reg193 = 6'000000
Found init rule in `\module4.$proc$rtl.v:395$598'.
  Set init value: \reg192 = 14'00000000000000
Found init rule in `\module4.$proc$rtl.v:394$597'.
  Set init value: \reg191 = 21'000000000000000000000
Found init rule in `\module4.$proc$rtl.v:393$596'.
  Set init value: \reg190 = 15'000000000000000
Found init rule in `\module4.$proc$rtl.v:392$595'.
  Set init value: \reg189 = 10'0000000000
Found init rule in `\module4.$proc$rtl.v:391$594'.
  Set init value: \reg188 = 21'000000000000000000000
Found init rule in `\module4.$proc$rtl.v:390$593'.
  Set init value: \reg187 = 13'0000000000000
Found init rule in `\module4.$proc$rtl.v:389$592'.
  Set init value: \reg186 = 10'0000000000
Found init rule in `\module4.$proc$rtl.v:388$591'.
  Set init value: \reg185 = 15'000000000000000
Found init rule in `\module4.$proc$rtl.v:387$590'.
  Set init value: \reg184 = 17'00000000000000000
Found init rule in `\module4.$proc$rtl.v:386$589'.
  Set init value: \reg183 = 13'0000000000000
Found init rule in `\module4.$proc$rtl.v:385$588'.
  Set init value: \reg182 = 16'0000000000000000
Found init rule in `\module4.$proc$rtl.v:384$587'.
  Set init value: \reg181 = 6'000000
Found init rule in `\module4.$proc$rtl.v:383$586'.
  Set init value: \reg180 = 20'00000000000000000000
Found init rule in `\module4.$proc$rtl.v:380$585'.
  Set init value: \reg177 = 21'000000000000000000000
Found init rule in `\module4.$proc$rtl.v:373$578'.
  Set init value: \reg170 = 21'000000000000000000000
Found init rule in `\module4.$proc$rtl.v:372$577'.
  Set init value: \reg169 = 21'000000000000000000000
Found init rule in `\module4.$proc$rtl.v:371$576'.
  Set init value: \reg168 = 16'0000000000000000
Found init rule in `\module4.$proc$rtl.v:370$575'.
  Set init value: \reg167 = 4'0000
Found init rule in `\module4.$proc$rtl.v:369$574'.
  Set init value: \reg166 = 8'00000000
Found init rule in `\module4.$proc$rtl.v:368$573'.
  Set init value: \reg165 = 13'0000000000000
Found init rule in `\top.$proc$rtl.v:55$391'.
  Set init value: \reg272 = 10'0000000000
Found init rule in `\top.$proc$rtl.v:54$390'.
  Set init value: \reg273 = 6'000000
Found init rule in `\top.$proc$rtl.v:53$389'.
  Set init value: \reg274 = 19'0000000000000000000
Found init rule in `\top.$proc$rtl.v:52$388'.
  Set init value: \reg275 = 16'0000000000000000
Found init rule in `\top.$proc$rtl.v:51$387'.
  Set init value: \reg276 = 21'000000000000000000000
Found init rule in `\top.$proc$rtl.v:50$386'.
  Set init value: \reg277 = 22'0000000000000000000000
Found init rule in `\top.$proc$rtl.v:49$385'.
  Set init value: \reg278 = 22'0000000000000000000000
Found init rule in `\top.$proc$rtl.v:48$384'.
  Set init value: \reg279 = 15'000000000000000
Found init rule in `\top.$proc$rtl.v:47$383'.
  Set init value: \reg280 = 5'00000
Found init rule in `\top.$proc$rtl.v:46$382'.
  Set init value: \reg281 = 14'00000000000000
Found init rule in `\top.$proc$rtl.v:45$381'.
  Set init value: \reg282 = 19'0000000000000000000
Found init rule in `\top.$proc$rtl.v:39$380'.
  Set init value: \reg291 = 7'0000000
Found init rule in `\top.$proc$rtl.v:38$379'.
  Set init value: \reg292 = 20'00000000000000000000
Found init rule in `\top.$proc$rtl.v:37$378'.
  Set init value: \reg293 = 5'00000
Found init rule in `\top.$proc$rtl.v:36$377'.
  Set init value: \reg294 = 17'00000000000000000
Found init rule in `\top.$proc$rtl.v:35$376'.
  Set init value: \reg295 = 7'0000000
Found init rule in `\top.$proc$rtl.v:34$375'.
  Set init value: \reg296 = 13'0000000000000
Found init rule in `\top.$proc$rtl.v:33$374'.
  Set init value: \reg297 = 4'0000
Found init rule in `\top.$proc$rtl.v:32$373'.
  Set init value: \reg298 = 18'000000000000000000
Found init rule in `\top.$proc$rtl.v:31$372'.
  Set init value: \reg299 = 8'00000000
Found init rule in `\top.$proc$rtl.v:26$371'.
  Set init value: \reg304 = 19'0000000000000000000
Found init rule in `\top.$proc$rtl.v:25$370'.
  Set init value: \reg305 = 15'000000000000000
Found init rule in `\top.$proc$rtl.v:24$369'.
  Set init value: \reg306 = 3'000
Found init rule in `\top.$proc$rtl.v:23$368'.
  Set init value: \reg307 = 7'0000000
Found init rule in `\top.$proc$rtl.v:22$367'.
  Set init value: \reg308 = 19'0000000000000000000
Found init rule in `\top.$proc$rtl.v:21$366'.
  Set init value: \reg309 = 6'000000
Found init rule in `\top.$proc$rtl.v:20$365'.
  Set init value: \reg310 = 13'0000000000000
Found init rule in `\top.$proc$rtl.v:19$364'.
  Set init value: \reg311 = 15'000000000000000
Found init rule in `\top.$proc$rtl.v:18$363'.
  Set init value: \reg312 = 19'0000000000000000000
Found init rule in `\top.$proc$rtl.v:17$362'.
  Set init value: \reg313 = 14'00000000000000
Found init rule in `\top.$proc$rtl.v:15$361'.
  Set init value: \reg315 = 11'00000000000
Found init rule in `\top.$proc$rtl.v:14$360'.
  Set init value: \reg316 = 15'000000000000000
Found init rule in `\top.$proc$rtl.v:13$359'.
  Set init value: \reg317 = 5'00000
Found init rule in `\top.$proc$rtl.v:12$358'.
  Set init value: \reg318 = 7'0000000
Found init rule in `\top.$proc$rtl.v:11$357'.
  Set init value: \reg319 = 5'00000
Found init rule in `\top.$proc$rtl.v:10$356'.
  Set init value: \reg320 = 4'0000

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module11.$proc$rtl.v:1467$1896'.
     1/1: $1\reg22[4:0]
Creating decoders for process `\module11.$proc$rtl.v:1466$1895'.
     1/1: $1\reg23[17:0]
Creating decoders for process `\module11.$proc$rtl.v:1465$1894'.
     1/1: $1\reg24[21:0]
Creating decoders for process `\module11.$proc$rtl.v:1464$1893'.
     1/1: $1\reg25[6:0]
Creating decoders for process `\module11.$proc$rtl.v:1463$1892'.
     1/1: $1\reg26[13:0]
Creating decoders for process `\module11.$proc$rtl.v:1462$1891'.
     1/1: $1\reg27[14:0]
Creating decoders for process `\module11.$proc$rtl.v:1461$1890'.
     1/1: $1\reg28[4:0]
Creating decoders for process `\module11.$proc$rtl.v:1460$1889'.
     1/1: $1\reg29[18:0]
Creating decoders for process `\module11.$proc$rtl.v:1456$1888'.
     1/1: $1\reg33[15:0]
Creating decoders for process `\module11.$proc$rtl.v:1450$1887'.
     1/1: $1\reg39[16:0]
Creating decoders for process `\module11.$proc$rtl.v:1449$1886'.
     1/1: $1\reg40[8:0]
Creating decoders for process `\module11.$proc$rtl.v:1448$1885'.
     1/1: $1\reg41[21:0]
Creating decoders for process `\module11.$proc$rtl.v:1447$1884'.
     1/1: $1\reg42[12:0]
Creating decoders for process `\module11.$proc$rtl.v:1446$1883'.
     1/1: $1\reg43[18:0]
Creating decoders for process `\module11.$proc$rtl.v:1445$1882'.
     1/1: $1\reg44[14:0]
Creating decoders for process `\module11.$proc$rtl.v:1444$1881'.
     1/1: $1\reg45[14:0]
Creating decoders for process `\module11.$proc$rtl.v:1443$1880'.
     1/1: $1\reg46[17:0]
Creating decoders for process `\module11.$proc$rtl.v:1442$1879'.
     1/1: $1\reg47[17:0]
Creating decoders for process `\module11.$proc$rtl.v:1441$1878'.
     1/1: $1\reg48[5:0]
Creating decoders for process `\module11.$proc$rtl.v:1440$1877'.
     1/1: $1\reg49[4:0]
Creating decoders for process `\module11.$proc$rtl.v:1439$1876'.
     1/1: $1\reg50[6:0]
Creating decoders for process `\module11.$proc$rtl.v:1438$1875'.
     1/1: $1\reg51[5:0]
Creating decoders for process `\module11.$proc$rtl.v:1437$1874'.
     1/1: $1\reg52[21:0]
Creating decoders for process `\module11.$proc$rtl.v:1436$1873'.
     1/1: $1\reg53[10:0]
Creating decoders for process `\module11.$proc$rtl.v:1435$1872'.
     1/1: $1\reg54[12:0]
Creating decoders for process `\module11.$proc$rtl.v:1434$1871'.
     1/1: $1\reg55[13:0]
Creating decoders for process `\module11.$proc$rtl.v:1433$1870'.
     1/1: $1\reg56[3:0]
Creating decoders for process `\module11.$proc$rtl.v:1432$1869'.
     1/1: $1\reg57[5:0]
Creating decoders for process `\module11.$proc$rtl.v:1431$1868'.
     1/1: $1\reg58[21:0]
Creating decoders for process `\module11.$proc$rtl.v:1430$1867'.
     1/1: $1\reg59[7:0]
Creating decoders for process `\module11.$proc$rtl.v:1429$1866'.
     1/1: $1\reg60[19:0]
Creating decoders for process `\module11.$proc$rtl.v:1428$1865'.
     1/1: $1\reg61[18:0]
Creating decoders for process `\module11.$proc$rtl.v:1427$1864'.
     1/1: $1\reg62[6:0]
Creating decoders for process `\module11.$proc$rtl.v:1426$1863'.
     1/1: $1\reg63[14:0]
Creating decoders for process `\module11.$proc$rtl.v:1425$1862'.
     1/1: $1\reg64[11:0]
Creating decoders for process `\module11.$proc$rtl.v:1424$1861'.
     1/1: $1\reg65[16:0]
Creating decoders for process `\module11.$proc$rtl.v:1423$1860'.
     1/1: $1\reg66[6:0]
Creating decoders for process `\module11.$proc$rtl.v:1422$1859'.
     1/1: $1\reg67[8:0]
Creating decoders for process `\module11.$proc$rtl.v:1421$1858'.
     1/1: $1\reg68[10:0]
Creating decoders for process `\module11.$proc$rtl.v:1420$1857'.
     1/1: $1\reg69[6:0]
Creating decoders for process `\module11.$proc$rtl.v:1419$1856'.
     1/1: $1\reg70[20:0]
Creating decoders for process `\module11.$proc$rtl.v:1418$1855'.
     1/1: $1\reg71[4:0]
Creating decoders for process `\module11.$proc$rtl.v:1417$1854'.
     1/1: $1\reg72[13:0]
Creating decoders for process `\module11.$proc$rtl.v:1416$1853'.
     1/1: $1\reg73[9:0]
Creating decoders for process `\module11.$proc$rtl.v:1415$1852'.
     1/1: $1\reg74[3:0]
Creating decoders for process `\module11.$proc$rtl.v:1414$1851'.
     1/1: $1\reg75[10:0]
Creating decoders for process `\module11.$proc$rtl.v:1413$1850'.
     1/1: $1\reg76[21:0]
Creating decoders for process `\module11.$proc$rtl.v:1412$1849'.
     1/1: $1\reg77[11:0]
Creating decoders for process `\module11.$proc$rtl.v:1411$1848'.
     1/1: $1\reg78[7:0]
Creating decoders for process `\module11.$proc$rtl.v:1410$1847'.
     1/1: $1\reg79[2:0]
Creating decoders for process `\module11.$proc$rtl.v:1409$1846'.
     1/1: $1\reg80[12:0]
Creating decoders for process `\module11.$proc$rtl.v:1408$1845'.
     1/1: $1\reg81[14:0]
Creating decoders for process `\module11.$proc$rtl.v:1407$1844'.
     1/1: $1\reg82[18:0]
Creating decoders for process `\module11.$proc$rtl.v:1406$1843'.
     1/1: $1\reg83[10:0]
Creating decoders for process `\module11.$proc$rtl.v:1405$1842'.
     1/1: $1\reg84[3:0]
Creating decoders for process `\module11.$proc$rtl.v:1687$1577'.
     1/29: $0\reg56[3:0]
     2/29: $0\reg57[5:0]
     3/29: $0\reg58[21:0]
     4/29: $0\reg59[7:0]
     5/29: $0\reg60[19:0]
     6/29: $0\reg61[18:0]
     7/29: $0\reg62[6:0]
     8/29: $0\reg63[14:0]
     9/29: $0\reg64[11:0]
    10/29: $0\reg65[16:0]
    11/29: $0\reg66[6:0]
    12/29: $0\reg67[8:0]
    13/29: $0\reg68[10:0]
    14/29: $0\reg69[6:0]
    15/29: $0\reg70[20:0]
    16/29: $0\reg71[4:0]
    17/29: $0\reg72[13:0]
    18/29: $0\reg73[9:0]
    19/29: $0\reg74[3:0]
    20/29: $0\reg75[10:0]
    21/29: $0\reg76[21:0]
    22/29: $0\reg77[11:0]
    23/29: $0\reg78[7:0]
    24/29: $0\reg79[2:0]
    25/29: $0\reg80[12:0]
    26/29: $0\reg83[10:0]
    27/29: $0\reg84[3:0]
    28/29: $0\reg81[14:0]
    29/29: $0\reg82[18:0]
Creating decoders for process `\module11.$proc$rtl.v:1632$1526'.
     1/9: $0\reg48[5:0]
     2/9: $0\reg47[17:0]
     3/9: $0\reg49[4:0]
     4/9: $0\reg50[6:0]
     5/9: $0\reg51[5:0]
     6/9: $0\reg52[21:0]
     7/9: $0\reg53[10:0]
     8/9: $0\reg54[12:0]
     9/9: $0\reg55[13:0]
Creating decoders for process `\module11.$proc$rtl.v:1605$1492'.
     1/8: $0\reg46[17:0]
     2/8: $0\reg45[14:0]
     3/8: $0\reg39[16:0]
     4/8: $0\reg40[8:0]
     5/8: $0\reg41[21:0]
     6/8: $0\reg42[12:0]
     7/8: $0\reg43[18:0]
     8/8: $0\reg44[14:0]
Creating decoders for process `\module11.$proc$rtl.v:1592$1471'.
     1/1: $0\reg33[15:0]
Creating decoders for process `\module11.$proc$rtl.v:1550$1415'.
     1/8: $0\reg29[18:0]
     2/8: $0\reg24[21:0]
     3/8: $0\reg23[17:0]
     4/8: $0\reg22[4:0]
     5/8: $0\reg25[6:0]
     6/8: $0\reg26[13:0]
     7/8: $0\reg27[14:0]
     8/8: $0\reg28[4:0]
Creating decoders for process `\module90.$proc$rtl.v:1003$1393'.
     1/1: $1\reg103[4:0]
Creating decoders for process `\module90.$proc$rtl.v:1002$1392'.
     1/1: $1\reg104[7:0]
Creating decoders for process `\module90.$proc$rtl.v:1001$1391'.
     1/1: $1\reg105[8:0]
Creating decoders for process `\module90.$proc$rtl.v:997$1390'.
     1/1: $1\reg109[11:0]
Creating decoders for process `\module90.$proc$rtl.v:996$1389'.
     1/1: $1\reg110[13:0]
Creating decoders for process `\module90.$proc$rtl.v:995$1388'.
     1/1: $1\reg111[6:0]
Creating decoders for process `\module90.$proc$rtl.v:994$1387'.
     1/1: $1\reg112[5:0]
Creating decoders for process `\module90.$proc$rtl.v:993$1386'.
     1/1: $1\reg113[12:0]
Creating decoders for process `\module90.$proc$rtl.v:992$1385'.
     1/1: $1\reg114[20:0]
Creating decoders for process `\module90.$proc$rtl.v:991$1384'.
     1/1: $1\reg115[20:0]
Creating decoders for process `\module90.$proc$rtl.v:990$1383'.
     1/1: $1\reg116[17:0]
Creating decoders for process `\module90.$proc$rtl.v:989$1382'.
     1/1: $1\reg117[14:0]
Creating decoders for process `\module90.$proc$rtl.v:988$1381'.
     1/1: $1\reg118[3:0]
Creating decoders for process `\module90.$proc$rtl.v:987$1380'.
     1/1: $1\reg119[13:0]
Creating decoders for process `\module90.$proc$rtl.v:986$1379'.
     1/1: $1\reg120[12:0]
Creating decoders for process `\module90.$proc$rtl.v:985$1378'.
     1/1: $1\reg121[2:0]
Creating decoders for process `\module90.$proc$rtl.v:984$1377'.
     1/1: $1\reg122[2:0]
Creating decoders for process `\module90.$proc$rtl.v:983$1376'.
     1/1: $1\reg123[11:0]
Creating decoders for process `\module90.$proc$rtl.v:982$1375'.
     1/1: $1\reg124[7:0]
Creating decoders for process `\module90.$proc$rtl.v:981$1374'.
     1/1: $1\reg125[10:0]
Creating decoders for process `\module90.$proc$rtl.v:980$1373'.
     1/1: $1\reg126[8:0]
Creating decoders for process `\module90.$proc$rtl.v:979$1372'.
     1/1: $1\reg127[19:0]
Creating decoders for process `\module90.$proc$rtl.v:978$1371'.
     1/1: $1\reg128[5:0]
Creating decoders for process `\module90.$proc$rtl.v:977$1370'.
     1/1: $1\reg129[19:0]
Creating decoders for process `\module90.$proc$rtl.v:976$1369'.
     1/1: $1\reg130[7:0]
Creating decoders for process `\module90.$proc$rtl.v:974$1368'.
     1/1: $1\reg132[3:0]
Creating decoders for process `\module90.$proc$rtl.v:973$1367'.
     1/1: $1\reg133[8:0]
Creating decoders for process `\module90.$proc$rtl.v:972$1366'.
     1/1: $1\reg134[13:0]
Creating decoders for process `\module90.$proc$rtl.v:971$1365'.
     1/1: $1\reg135[9:0]
Creating decoders for process `\module90.$proc$rtl.v:970$1364'.
     1/1: $1\reg136[4:0]
Creating decoders for process `\module90.$proc$rtl.v:969$1363'.
     1/1: $1\reg137[13:0]
Creating decoders for process `\module90.$proc$rtl.v:968$1362'.
     1/1: $1\reg138[6:0]
Creating decoders for process `\module90.$proc$rtl.v:967$1361'.
     1/1: $1\reg139[15:0]
Creating decoders for process `\module90.$proc$rtl.v:966$1360'.
     1/1: $1\reg140[11:0]
Creating decoders for process `\module90.$proc$rtl.v:965$1359'.
     1/1: $1\reg141[4:0]
Creating decoders for process `\module90.$proc$rtl.v:964$1358'.
     1/1: $1\reg142[18:0]
Creating decoders for process `\module90.$proc$rtl.v:963$1357'.
     1/1: $1\reg143[9:0]
Creating decoders for process `\module90.$proc$rtl.v:962$1356'.
     1/1: $1\reg144[13:0]
Creating decoders for process `\module90.$proc$rtl.v:961$1355'.
     1/1: $1\reg145[7:0]
Creating decoders for process `\module90.$proc$rtl.v:960$1354'.
     1/1: $1\reg146[20:0]
Creating decoders for process `\module90.$proc$rtl.v:959$1353'.
     1/1: $1\reg147[11:0]
Creating decoders for process `\module90.$proc$rtl.v:958$1352'.
     1/1: $1\reg148[15:0]
Creating decoders for process `\module90.$proc$rtl.v:957$1351'.
     1/1: $1\reg149[12:0]
Creating decoders for process `\module90.$proc$rtl.v:956$1350'.
     1/1: $1\reg150[11:0]
Creating decoders for process `\module90.$proc$rtl.v:955$1349'.
     1/1: $1\reg151[15:0]
Creating decoders for process `\module90.$proc$rtl.v:954$1348'.
     1/1: $1\reg152[8:0]
Creating decoders for process `\module90.$proc$rtl.v:953$1347'.
     1/1: $1\reg153[14:0]
Creating decoders for process `\module90.$proc$rtl.v:952$1346'.
     1/1: $1\reg154[14:0]
Creating decoders for process `\module90.$proc$rtl.v:951$1345'.
     1/1: $1\reg155[19:0]
Creating decoders for process `\module90.$proc$rtl.v:950$1344'.
     1/1: $1\reg156[16:0]
Creating decoders for process `\module90.$proc$rtl.v:949$1343'.
     1/1: $1\reg157[21:0]
Creating decoders for process `\module90.$proc$rtl.v:1308$1190'.
     1/13: $0\reg146[20:0]
     2/13: $0\reg145[7:0]
     3/13: $0\reg147[11:0]
     4/13: $0\reg148[15:0]
     5/13: $0\reg149[12:0]
     6/13: $0\reg150[11:0]
     7/13: $0\reg151[15:0]
     8/13: $0\reg152[8:0]
     9/13: $0\reg153[14:0]
    10/13: $0\reg154[14:0]
    11/13: $0\reg155[19:0]
    12/13: $0\reg156[16:0]
    13/13: $0\reg157[21:0]
Creating decoders for process `\module90.$proc$rtl.v:1246$1102'.
     1/13: $0\reg144[13:0]
     2/13: $0\reg143[9:0]
     3/13: $0\reg142[18:0]
     4/13: $0\reg132[3:0]
     5/13: $0\reg133[8:0]
     6/13: $0\reg134[13:0]
     7/13: $0\reg135[9:0]
     8/13: $0\reg136[4:0]
     9/13: $0\reg137[13:0]
    10/13: $0\reg138[6:0]
    11/13: $0\reg139[15:0]
    12/13: $0\reg140[11:0]
    13/13: $0\reg141[4:0]
Creating decoders for process `\module90.$proc$rtl.v:1180$1032'.
     1/13: $0\reg118[3:0]
     2/13: $0\reg119[13:0]
     3/13: $0\reg120[12:0]
     4/13: $0\reg121[2:0]
     5/13: $0\reg122[2:0]
     6/13: $0\reg123[11:0]
     7/13: $0\reg124[7:0]
     8/13: $0\reg125[10:0]
     9/13: $0\reg126[8:0]
    10/13: $0\reg127[19:0]
    11/13: $0\reg128[5:0]
    12/13: $0\reg129[19:0]
    13/13: $0\reg130[7:0]
Creating decoders for process `\module90.$proc$rtl.v:1113$921'.
     1/9: $0\reg117[14:0]
     2/9: $0\reg116[17:0]
     3/9: $0\reg109[11:0]
     4/9: $0\reg110[13:0]
     5/9: $0\reg111[6:0]
     6/9: $0\reg112[5:0]
     7/9: $0\reg113[12:0]
     8/9: $0\reg114[20:0]
     9/9: $0\reg115[20:0]
Creating decoders for process `\module90.$proc$rtl.v:1095$884'.
     1/3: $0\reg105[8:0]
     2/3: $0\reg104[7:0]
     3/3: $0\reg103[4:0]
Creating decoders for process `\module198.$proc$rtl.v:766$855'.
     1/1: $1\reg204[16:0]
Creating decoders for process `\module198.$proc$rtl.v:762$854'.
     1/1: $1\reg208[18:0]
Creating decoders for process `\module198.$proc$rtl.v:759$853'.
     1/1: $1\reg211[9:0]
Creating decoders for process `\module198.$proc$rtl.v:758$852'.
     1/1: $1\reg212[3:0]
Creating decoders for process `\module198.$proc$rtl.v:757$851'.
     1/1: $1\reg213[3:0]
Creating decoders for process `\module198.$proc$rtl.v:756$850'.
     1/1: $1\reg214[19:0]
Creating decoders for process `\module198.$proc$rtl.v:755$849'.
     1/1: $1\reg215[3:0]
Creating decoders for process `\module198.$proc$rtl.v:754$848'.
     1/1: $1\reg216[3:0]
Creating decoders for process `\module198.$proc$rtl.v:753$847'.
     1/1: $1\reg217[12:0]
Creating decoders for process `\module198.$proc$rtl.v:752$846'.
     1/1: $1\reg218[9:0]
Creating decoders for process `\module198.$proc$rtl.v:751$845'.
     1/1: $1\reg219[9:0]
Creating decoders for process `\module198.$proc$rtl.v:750$844'.
     1/1: $1\reg220[2:0]
Creating decoders for process `\module198.$proc$rtl.v:749$843'.
     1/1: $1\reg221[15:0]
Creating decoders for process `\module198.$proc$rtl.v:748$842'.
     1/1: $1\reg222[19:0]
Creating decoders for process `\module198.$proc$rtl.v:747$841'.
     1/1: $1\reg223[7:0]
Creating decoders for process `\module198.$proc$rtl.v:746$840'.
     1/1: $1\reg224[18:0]
Creating decoders for process `\module198.$proc$rtl.v:745$839'.
     1/1: $1\reg225[13:0]
Creating decoders for process `\module198.$proc$rtl.v:743$838'.
     1/1: $1\reg227[2:0]
Creating decoders for process `\module198.$proc$rtl.v:742$837'.
     1/1: $1\reg228[10:0]
Creating decoders for process `\module198.$proc$rtl.v:924$823'.
     1/2: $0\reg228[10:0]
     2/2: $0\reg227[2:0]
Creating decoders for process `\module198.$proc$rtl.v:814$685'.
     1/15: $0\reg213[3:0]
     2/15: $0\reg212[3:0]
     3/15: $0\reg211[9:0]
     4/15: $0\reg214[19:0]
     5/15: $0\reg215[3:0]
     6/15: $0\reg216[3:0]
     7/15: $0\reg217[12:0]
     8/15: $0\reg218[9:0]
     9/15: $0\reg219[9:0]
    10/15: $0\reg220[2:0]
    11/15: $0\reg221[15:0]
    12/15: $0\reg222[19:0]
    13/15: $0\reg223[7:0]
    14/15: $0\reg224[18:0]
    15/15: $0\reg225[13:0]
Creating decoders for process `\module198.$proc$rtl.v:806$677'.
     1/1: $0\reg208[18:0]
Creating decoders for process `\module198.$proc$rtl.v:799$672'.
     1/1: $0\reg204[16:0]
Creating decoders for process `\module241.$proc$rtl.v:654$671'.
     1/1: $1\reg252[13:0]
Creating decoders for process `\module241.$proc$rtl.v:653$670'.
     1/1: $1\reg253[5:0]
Creating decoders for process `\module241.$proc$rtl.v:652$669'.
     1/1: $1\reg254[17:0]
Creating decoders for process `\module241.$proc$rtl.v:651$668'.
     1/1: $1\reg255[7:0]
Creating decoders for process `\module241.$proc$rtl.v:650$667'.
     1/1: $1\reg256[19:0]
Creating decoders for process `\module241.$proc$rtl.v:649$666'.
     1/1: $1\reg257[21:0]
Creating decoders for process `\module241.$proc$rtl.v:648$665'.
     1/1: $1\reg258[18:0]
Creating decoders for process `\module241.$proc$rtl.v:647$664'.
     1/1: $1\reg259[18:0]
Creating decoders for process `\module241.$proc$rtl.v:646$663'.
     1/1: $1\reg260[9:0]
Creating decoders for process `\module241.$proc$rtl.v:645$662'.
     1/1: $1\reg261[19:0]
Creating decoders for process `\module241.$proc$rtl.v:681$609'.
     1/10: $0\reg252[13:0]
     2/10: $0\reg253[5:0]
     3/10: $0\reg254[17:0]
     4/10: $0\reg255[7:0]
     5/10: $0\reg256[19:0]
     6/10: $0\reg257[21:0]
     7/10: $0\reg258[18:0]
     8/10: $0\reg259[18:0]
     9/10: $0\reg260[9:0]
    10/10: $0\reg261[19:0]
Creating decoders for process `\module4.$proc$rtl.v:403$604'.
     1/1: $1\reg235[9:0]
Creating decoders for process `\module4.$proc$rtl.v:400$603'.
     1/1: $1\reg197[8:0]
Creating decoders for process `\module4.$proc$rtl.v:399$602'.
     1/1: $1\reg196[15:0]
Creating decoders for process `\module4.$proc$rtl.v:398$601'.
     1/1: $1\reg195[15:0]
Creating decoders for process `\module4.$proc$rtl.v:397$600'.
     1/1: $1\reg194[4:0]
Creating decoders for process `\module4.$proc$rtl.v:396$599'.
     1/1: $1\reg193[5:0]
Creating decoders for process `\module4.$proc$rtl.v:395$598'.
     1/1: $1\reg192[13:0]
Creating decoders for process `\module4.$proc$rtl.v:394$597'.
     1/1: $1\reg191[20:0]
Creating decoders for process `\module4.$proc$rtl.v:393$596'.
     1/1: $1\reg190[14:0]
Creating decoders for process `\module4.$proc$rtl.v:392$595'.
     1/1: $1\reg189[9:0]
Creating decoders for process `\module4.$proc$rtl.v:391$594'.
     1/1: $1\reg188[20:0]
Creating decoders for process `\module4.$proc$rtl.v:390$593'.
     1/1: $1\reg187[12:0]
Creating decoders for process `\module4.$proc$rtl.v:389$592'.
     1/1: $1\reg186[9:0]
Creating decoders for process `\module4.$proc$rtl.v:388$591'.
     1/1: $1\reg185[14:0]
Creating decoders for process `\module4.$proc$rtl.v:387$590'.
     1/1: $1\reg184[16:0]
Creating decoders for process `\module4.$proc$rtl.v:386$589'.
     1/1: $1\reg183[12:0]
Creating decoders for process `\module4.$proc$rtl.v:385$588'.
     1/1: $1\reg182[15:0]
Creating decoders for process `\module4.$proc$rtl.v:384$587'.
     1/1: $1\reg181[5:0]
Creating decoders for process `\module4.$proc$rtl.v:383$586'.
     1/1: $1\reg180[19:0]
Creating decoders for process `\module4.$proc$rtl.v:380$585'.
     1/1: $1\reg177[20:0]
Creating decoders for process `\module4.$proc$rtl.v:379$584'.
     1/1: $0\reg176[7:0]
Creating decoders for process `\module4.$proc$rtl.v:378$583'.
     1/1: $0\reg175[13:0]
Creating decoders for process `\module4.$proc$rtl.v:377$582'.
     1/1: $0\reg174[16:0]
Creating decoders for process `\module4.$proc$rtl.v:376$581'.
     1/1: $0\reg173[21:0]
Creating decoders for process `\module4.$proc$rtl.v:375$580'.
     1/1: $0\reg172[15:0]
Creating decoders for process `\module4.$proc$rtl.v:374$579'.
     1/1: $0\reg171[20:0]
Creating decoders for process `\module4.$proc$rtl.v:373$578'.
     1/1: $1\reg170[20:0]
Creating decoders for process `\module4.$proc$rtl.v:372$577'.
     1/1: $1\reg169[20:0]
Creating decoders for process `\module4.$proc$rtl.v:371$576'.
     1/1: $1\reg168[15:0]
Creating decoders for process `\module4.$proc$rtl.v:370$575'.
     1/1: $1\reg167[3:0]
Creating decoders for process `\module4.$proc$rtl.v:369$574'.
     1/1: $1\reg166[7:0]
Creating decoders for process `\module4.$proc$rtl.v:368$573'.
     1/1: $1\reg165[12:0]
Creating decoders for process `\module4.$proc$rtl.v:615$542'.
     1/1: $0\reg235[9:0]
Creating decoders for process `\module4.$proc$rtl.v:603$521'.
     1/2: $0\reg197[8:0]
     2/2: $0\reg196[15:0]
Creating decoders for process `\module4.$proc$rtl.v:550$460'.
     1/16: $0\reg195[15:0]
     2/16: $0\reg194[4:0]
     3/16: $0\reg193[5:0]
     4/16: $0\reg180[19:0]
     5/16: $0\reg192[13:0]
     6/16: $0\reg191[20:0]
     7/16: $0\reg190[14:0]
     8/16: $0\reg189[9:0]
     9/16: $0\reg188[20:0]
    10/16: $0\reg187[12:0]
    11/16: $0\reg186[9:0]
    12/16: $0\reg185[14:0]
    13/16: $0\reg184[16:0]
    14/16: $0\reg183[12:0]
    15/16: $0\reg182[15:0]
    16/16: $0\reg181[5:0]
Creating decoders for process `\module4.$proc$rtl.v:466$396'.
     1/7: $0\reg177[20:0]
     2/7: $0\reg170[20:0]
     3/7: $0\reg169[20:0]
     4/7: $0\reg168[15:0]
     5/7: $0\reg167[3:0]
     6/7: $0\reg166[7:0]
     7/7: $0\reg165[12:0]
Creating decoders for process `\top.$proc$rtl.v:55$391'.
     1/1: $1\reg272[9:0]
Creating decoders for process `\top.$proc$rtl.v:54$390'.
     1/1: $1\reg273[5:0]
Creating decoders for process `\top.$proc$rtl.v:53$389'.
     1/1: $1\reg274[18:0]
Creating decoders for process `\top.$proc$rtl.v:52$388'.
     1/1: $1\reg275[15:0]
Creating decoders for process `\top.$proc$rtl.v:51$387'.
     1/1: $1\reg276[20:0]
Creating decoders for process `\top.$proc$rtl.v:50$386'.
     1/1: $1\reg277[21:0]
Creating decoders for process `\top.$proc$rtl.v:49$385'.
     1/1: $1\reg278[21:0]
Creating decoders for process `\top.$proc$rtl.v:48$384'.
     1/1: $1\reg279[14:0]
Creating decoders for process `\top.$proc$rtl.v:47$383'.
     1/1: $1\reg280[4:0]
Creating decoders for process `\top.$proc$rtl.v:46$382'.
     1/1: $1\reg281[13:0]
Creating decoders for process `\top.$proc$rtl.v:45$381'.
     1/1: $1\reg282[18:0]
Creating decoders for process `\top.$proc$rtl.v:39$380'.
     1/1: $1\reg291[6:0]
Creating decoders for process `\top.$proc$rtl.v:38$379'.
     1/1: $1\reg292[19:0]
Creating decoders for process `\top.$proc$rtl.v:37$378'.
     1/1: $1\reg293[4:0]
Creating decoders for process `\top.$proc$rtl.v:36$377'.
     1/1: $1\reg294[16:0]
Creating decoders for process `\top.$proc$rtl.v:35$376'.
     1/1: $1\reg295[6:0]
Creating decoders for process `\top.$proc$rtl.v:34$375'.
     1/1: $1\reg296[12:0]
Creating decoders for process `\top.$proc$rtl.v:33$374'.
     1/1: $1\reg297[3:0]
Creating decoders for process `\top.$proc$rtl.v:32$373'.
     1/1: $1\reg298[17:0]
Creating decoders for process `\top.$proc$rtl.v:31$372'.
     1/1: $1\reg299[7:0]
Creating decoders for process `\top.$proc$rtl.v:26$371'.
     1/1: $1\reg304[18:0]
Creating decoders for process `\top.$proc$rtl.v:25$370'.
     1/1: $1\reg305[14:0]
Creating decoders for process `\top.$proc$rtl.v:24$369'.
     1/1: $1\reg306[2:0]
Creating decoders for process `\top.$proc$rtl.v:23$368'.
     1/1: $1\reg307[6:0]
Creating decoders for process `\top.$proc$rtl.v:22$367'.
     1/1: $1\reg308[18:0]
Creating decoders for process `\top.$proc$rtl.v:21$366'.
     1/1: $1\reg309[5:0]
Creating decoders for process `\top.$proc$rtl.v:20$365'.
     1/1: $1\reg310[12:0]
Creating decoders for process `\top.$proc$rtl.v:19$364'.
     1/1: $1\reg311[14:0]
Creating decoders for process `\top.$proc$rtl.v:18$363'.
     1/1: $1\reg312[18:0]
Creating decoders for process `\top.$proc$rtl.v:17$362'.
     1/1: $1\reg313[13:0]
Creating decoders for process `\top.$proc$rtl.v:15$361'.
     1/1: $1\reg315[10:0]
Creating decoders for process `\top.$proc$rtl.v:14$360'.
     1/1: $1\reg316[14:0]
Creating decoders for process `\top.$proc$rtl.v:13$359'.
     1/1: $1\reg317[4:0]
Creating decoders for process `\top.$proc$rtl.v:12$358'.
     1/1: $1\reg318[6:0]
Creating decoders for process `\top.$proc$rtl.v:11$357'.
     1/1: $1\reg319[4:0]
Creating decoders for process `\top.$proc$rtl.v:10$356'.
     1/1: $1\reg320[3:0]
Creating decoders for process `\top.$proc$rtl.v:311$306'.
     1/6: $0\reg320[3:0]
     2/6: $0\reg315[10:0]
     3/6: $0\reg316[14:0]
     4/6: $0\reg317[4:0]
     5/6: $0\reg318[6:0]
     6/6: $0\reg319[4:0]
Creating decoders for process `\top.$proc$rtl.v:244$198'.
     1/10: $0\reg313[13:0]
     2/10: $0\reg312[18:0]
     3/10: $0\reg311[14:0]
     4/10: $0\reg304[18:0]
     5/10: $0\reg305[14:0]
     6/10: $0\reg306[2:0]
     7/10: $0\reg307[6:0]
     8/10: $0\reg308[18:0]
     9/10: $0\reg309[5:0]
    10/10: $0\reg310[12:0]
Creating decoders for process `\top.$proc$rtl.v:197$123'.
     1/9: $0\reg299[7:0]
     2/9: $0\reg298[17:0]
     3/9: $0\reg291[6:0]
     4/9: $0\reg292[19:0]
     5/9: $0\reg293[4:0]
     6/9: $0\reg294[16:0]
     7/9: $0\reg295[6:0]
     8/9: $0\reg296[12:0]
     9/9: $0\reg297[3:0]
Creating decoders for process `\top.$proc$rtl.v:131$30'.
     1/11: $0\reg273[5:0]
     2/11: $0\reg272[9:0]
     3/11: $0\reg274[18:0]
     4/11: $0\reg275[15:0]
     5/11: $0\reg276[20:0]
     6/11: $0\reg277[21:0]
     7/11: $0\reg278[21:0]
     8/11: $0\reg279[14:0]
     9/11: $0\reg280[4:0]
    10/11: $0\reg281[13:0]
    11/11: $0\reg282[18:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\module4.\reg176' from process `\module4.$proc$rtl.v:379$584'.
No latch inferred for signal `\module4.\reg175' from process `\module4.$proc$rtl.v:378$583'.
No latch inferred for signal `\module4.\reg174' from process `\module4.$proc$rtl.v:377$582'.
No latch inferred for signal `\module4.\reg173' from process `\module4.$proc$rtl.v:376$581'.
No latch inferred for signal `\module4.\reg172' from process `\module4.$proc$rtl.v:375$580'.
No latch inferred for signal `\module4.\reg171' from process `\module4.$proc$rtl.v:374$579'.

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\module11.\reg82' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2693' with positive edge clock.
Creating register for signal `\module11.\reg81' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2694' with positive edge clock.
Creating register for signal `\module11.\reg84' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2695' with positive edge clock.
Creating register for signal `\module11.\reg83' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2696' with positive edge clock.
Creating register for signal `\module11.\reg80' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2697' with positive edge clock.
Creating register for signal `\module11.\reg79' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2698' with positive edge clock.
Creating register for signal `\module11.\reg78' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2699' with positive edge clock.
Creating register for signal `\module11.\reg77' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2700' with positive edge clock.
Creating register for signal `\module11.\reg76' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2701' with positive edge clock.
Creating register for signal `\module11.\reg75' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2702' with positive edge clock.
Creating register for signal `\module11.\reg74' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2703' with positive edge clock.
Creating register for signal `\module11.\reg73' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2704' with positive edge clock.
Creating register for signal `\module11.\reg72' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2705' with positive edge clock.
Creating register for signal `\module11.\reg71' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2706' with positive edge clock.
Creating register for signal `\module11.\reg70' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2707' with positive edge clock.
Creating register for signal `\module11.\reg69' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2708' with positive edge clock.
Creating register for signal `\module11.\reg68' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2709' with positive edge clock.
Creating register for signal `\module11.\reg67' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2710' with positive edge clock.
Creating register for signal `\module11.\reg66' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2711' with positive edge clock.
Creating register for signal `\module11.\reg65' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2712' with positive edge clock.
Creating register for signal `\module11.\reg64' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2713' with positive edge clock.
Creating register for signal `\module11.\reg63' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2714' with positive edge clock.
Creating register for signal `\module11.\reg62' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2715' with positive edge clock.
Creating register for signal `\module11.\reg61' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2716' with positive edge clock.
Creating register for signal `\module11.\reg60' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2717' with positive edge clock.
Creating register for signal `\module11.\reg59' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2718' with positive edge clock.
Creating register for signal `\module11.\reg58' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2719' with positive edge clock.
Creating register for signal `\module11.\reg57' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2720' with positive edge clock.
Creating register for signal `\module11.\reg56' using process `\module11.$proc$rtl.v:1687$1577'.
  created $dff cell `$procdff$2721' with positive edge clock.
Creating register for signal `\module11.\reg55' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2722' with positive edge clock.
Creating register for signal `\module11.\reg54' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2723' with positive edge clock.
Creating register for signal `\module11.\reg53' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2724' with positive edge clock.
Creating register for signal `\module11.\reg52' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2725' with positive edge clock.
Creating register for signal `\module11.\reg51' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2726' with positive edge clock.
Creating register for signal `\module11.\reg50' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2727' with positive edge clock.
Creating register for signal `\module11.\reg49' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2728' with positive edge clock.
Creating register for signal `\module11.\reg48' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2729' with positive edge clock.
Creating register for signal `\module11.\reg47' using process `\module11.$proc$rtl.v:1632$1526'.
  created $dff cell `$procdff$2730' with positive edge clock.
Creating register for signal `\module11.\reg46' using process `\module11.$proc$rtl.v:1605$1492'.
  created $dff cell `$procdff$2731' with positive edge clock.
Creating register for signal `\module11.\reg45' using process `\module11.$proc$rtl.v:1605$1492'.
  created $dff cell `$procdff$2732' with positive edge clock.
Creating register for signal `\module11.\reg44' using process `\module11.$proc$rtl.v:1605$1492'.
  created $dff cell `$procdff$2733' with positive edge clock.
Creating register for signal `\module11.\reg43' using process `\module11.$proc$rtl.v:1605$1492'.
  created $dff cell `$procdff$2734' with positive edge clock.
Creating register for signal `\module11.\reg42' using process `\module11.$proc$rtl.v:1605$1492'.
  created $dff cell `$procdff$2735' with positive edge clock.
Creating register for signal `\module11.\reg41' using process `\module11.$proc$rtl.v:1605$1492'.
  created $dff cell `$procdff$2736' with positive edge clock.
Creating register for signal `\module11.\reg40' using process `\module11.$proc$rtl.v:1605$1492'.
  created $dff cell `$procdff$2737' with positive edge clock.
Creating register for signal `\module11.\reg39' using process `\module11.$proc$rtl.v:1605$1492'.
  created $dff cell `$procdff$2738' with positive edge clock.
Creating register for signal `\module11.\reg33' using process `\module11.$proc$rtl.v:1592$1471'.
  created $dff cell `$procdff$2739' with positive edge clock.
Creating register for signal `\module11.\reg29' using process `\module11.$proc$rtl.v:1550$1415'.
  created $dff cell `$procdff$2740' with positive edge clock.
Creating register for signal `\module11.\reg28' using process `\module11.$proc$rtl.v:1550$1415'.
  created $dff cell `$procdff$2741' with positive edge clock.
Creating register for signal `\module11.\reg27' using process `\module11.$proc$rtl.v:1550$1415'.
  created $dff cell `$procdff$2742' with positive edge clock.
Creating register for signal `\module11.\reg26' using process `\module11.$proc$rtl.v:1550$1415'.
  created $dff cell `$procdff$2743' with positive edge clock.
Creating register for signal `\module11.\reg25' using process `\module11.$proc$rtl.v:1550$1415'.
  created $dff cell `$procdff$2744' with positive edge clock.
Creating register for signal `\module11.\reg24' using process `\module11.$proc$rtl.v:1550$1415'.
  created $dff cell `$procdff$2745' with positive edge clock.
Creating register for signal `\module11.\reg23' using process `\module11.$proc$rtl.v:1550$1415'.
  created $dff cell `$procdff$2746' with positive edge clock.
Creating register for signal `\module11.\reg22' using process `\module11.$proc$rtl.v:1550$1415'.
  created $dff cell `$procdff$2747' with positive edge clock.
Creating register for signal `\module90.\reg157' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2748' with positive edge clock.
Creating register for signal `\module90.\reg156' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2749' with positive edge clock.
Creating register for signal `\module90.\reg155' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2750' with positive edge clock.
Creating register for signal `\module90.\reg154' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2751' with positive edge clock.
Creating register for signal `\module90.\reg153' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2752' with positive edge clock.
Creating register for signal `\module90.\reg152' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2753' with positive edge clock.
Creating register for signal `\module90.\reg151' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2754' with positive edge clock.
Creating register for signal `\module90.\reg150' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2755' with positive edge clock.
Creating register for signal `\module90.\reg149' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2756' with positive edge clock.
Creating register for signal `\module90.\reg148' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2757' with positive edge clock.
Creating register for signal `\module90.\reg147' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2758' with positive edge clock.
Creating register for signal `\module90.\reg146' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2759' with positive edge clock.
Creating register for signal `\module90.\reg145' using process `\module90.$proc$rtl.v:1308$1190'.
  created $dff cell `$procdff$2760' with positive edge clock.
Creating register for signal `\module90.\reg144' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2761' with positive edge clock.
Creating register for signal `\module90.\reg143' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2762' with positive edge clock.
Creating register for signal `\module90.\reg142' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2763' with positive edge clock.
Creating register for signal `\module90.\reg141' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2764' with positive edge clock.
Creating register for signal `\module90.\reg140' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2765' with positive edge clock.
Creating register for signal `\module90.\reg139' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2766' with positive edge clock.
Creating register for signal `\module90.\reg138' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2767' with positive edge clock.
Creating register for signal `\module90.\reg137' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2768' with positive edge clock.
Creating register for signal `\module90.\reg136' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2769' with positive edge clock.
Creating register for signal `\module90.\reg135' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2770' with positive edge clock.
Creating register for signal `\module90.\reg134' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2771' with positive edge clock.
Creating register for signal `\module90.\reg133' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2772' with positive edge clock.
Creating register for signal `\module90.\reg132' using process `\module90.$proc$rtl.v:1246$1102'.
  created $dff cell `$procdff$2773' with positive edge clock.
Creating register for signal `\module90.\reg130' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2774' with positive edge clock.
Creating register for signal `\module90.\reg129' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2775' with positive edge clock.
Creating register for signal `\module90.\reg128' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2776' with positive edge clock.
Creating register for signal `\module90.\reg127' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2777' with positive edge clock.
Creating register for signal `\module90.\reg126' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2778' with positive edge clock.
Creating register for signal `\module90.\reg125' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2779' with positive edge clock.
Creating register for signal `\module90.\reg124' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2780' with positive edge clock.
Creating register for signal `\module90.\reg123' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2781' with positive edge clock.
Creating register for signal `\module90.\reg122' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2782' with positive edge clock.
Creating register for signal `\module90.\reg121' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2783' with positive edge clock.
Creating register for signal `\module90.\reg120' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2784' with positive edge clock.
Creating register for signal `\module90.\reg119' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2785' with positive edge clock.
Creating register for signal `\module90.\reg118' using process `\module90.$proc$rtl.v:1180$1032'.
  created $dff cell `$procdff$2786' with positive edge clock.
Creating register for signal `\module90.\reg117' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2787' with positive edge clock.
Creating register for signal `\module90.\reg116' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2788' with positive edge clock.
Creating register for signal `\module90.\reg115' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2789' with positive edge clock.
Creating register for signal `\module90.\reg114' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2790' with positive edge clock.
Creating register for signal `\module90.\reg113' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2791' with positive edge clock.
Creating register for signal `\module90.\reg112' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2792' with positive edge clock.
Creating register for signal `\module90.\reg111' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2793' with positive edge clock.
Creating register for signal `\module90.\reg110' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2794' with positive edge clock.
Creating register for signal `\module90.\reg109' using process `\module90.$proc$rtl.v:1113$921'.
  created $dff cell `$procdff$2795' with positive edge clock.
Creating register for signal `\module90.\reg105' using process `\module90.$proc$rtl.v:1095$884'.
  created $dff cell `$procdff$2796' with positive edge clock.
Creating register for signal `\module90.\reg104' using process `\module90.$proc$rtl.v:1095$884'.
  created $dff cell `$procdff$2797' with positive edge clock.
Creating register for signal `\module90.\reg103' using process `\module90.$proc$rtl.v:1095$884'.
  created $dff cell `$procdff$2798' with positive edge clock.
Creating register for signal `\module198.\reg227' using process `\module198.$proc$rtl.v:924$823'.
  created $dff cell `$procdff$2799' with positive edge clock.
Creating register for signal `\module198.\reg228' using process `\module198.$proc$rtl.v:924$823'.
  created $dff cell `$procdff$2800' with positive edge clock.
Creating register for signal `\module198.\reg225' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2801' with positive edge clock.
Creating register for signal `\module198.\reg224' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2802' with positive edge clock.
Creating register for signal `\module198.\reg223' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2803' with positive edge clock.
Creating register for signal `\module198.\reg222' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2804' with positive edge clock.
Creating register for signal `\module198.\reg221' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2805' with positive edge clock.
Creating register for signal `\module198.\reg220' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2806' with positive edge clock.
Creating register for signal `\module198.\reg219' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2807' with positive edge clock.
Creating register for signal `\module198.\reg218' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2808' with positive edge clock.
Creating register for signal `\module198.\reg217' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2809' with positive edge clock.
Creating register for signal `\module198.\reg216' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2810' with positive edge clock.
Creating register for signal `\module198.\reg215' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2811' with positive edge clock.
Creating register for signal `\module198.\reg214' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2812' with positive edge clock.
Creating register for signal `\module198.\reg213' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2813' with positive edge clock.
Creating register for signal `\module198.\reg212' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2814' with positive edge clock.
Creating register for signal `\module198.\reg211' using process `\module198.$proc$rtl.v:814$685'.
  created $dff cell `$procdff$2815' with positive edge clock.
Creating register for signal `\module198.\reg208' using process `\module198.$proc$rtl.v:806$677'.
  created $dff cell `$procdff$2816' with positive edge clock.
Creating register for signal `\module198.\reg204' using process `\module198.$proc$rtl.v:799$672'.
  created $dff cell `$procdff$2817' with positive edge clock.
Creating register for signal `\module241.\reg261' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2818' with positive edge clock.
Creating register for signal `\module241.\reg260' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2819' with positive edge clock.
Creating register for signal `\module241.\reg259' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2820' with positive edge clock.
Creating register for signal `\module241.\reg258' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2821' with positive edge clock.
Creating register for signal `\module241.\reg257' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2822' with positive edge clock.
Creating register for signal `\module241.\reg256' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2823' with positive edge clock.
Creating register for signal `\module241.\reg255' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2824' with positive edge clock.
Creating register for signal `\module241.\reg254' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2825' with positive edge clock.
Creating register for signal `\module241.\reg253' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2826' with positive edge clock.
Creating register for signal `\module241.\reg252' using process `\module241.$proc$rtl.v:681$609'.
  created $dff cell `$procdff$2827' with positive edge clock.
Creating register for signal `\module4.\reg235' using process `\module4.$proc$rtl.v:615$542'.
  created $dff cell `$procdff$2828' with positive edge clock.
Creating register for signal `\module4.\reg196' using process `\module4.$proc$rtl.v:603$521'.
  created $dff cell `$procdff$2829' with positive edge clock.
Creating register for signal `\module4.\reg197' using process `\module4.$proc$rtl.v:603$521'.
  created $dff cell `$procdff$2830' with positive edge clock.
Creating register for signal `\module4.\reg180' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2831' with positive edge clock.
Creating register for signal `\module4.\reg181' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2832' with positive edge clock.
Creating register for signal `\module4.\reg182' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2833' with positive edge clock.
Creating register for signal `\module4.\reg183' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2834' with positive edge clock.
Creating register for signal `\module4.\reg184' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2835' with positive edge clock.
Creating register for signal `\module4.\reg185' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2836' with positive edge clock.
Creating register for signal `\module4.\reg186' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2837' with positive edge clock.
Creating register for signal `\module4.\reg187' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2838' with positive edge clock.
Creating register for signal `\module4.\reg188' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2839' with positive edge clock.
Creating register for signal `\module4.\reg189' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2840' with positive edge clock.
Creating register for signal `\module4.\reg190' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2841' with positive edge clock.
Creating register for signal `\module4.\reg191' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2842' with positive edge clock.
Creating register for signal `\module4.\reg192' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2843' with positive edge clock.
Creating register for signal `\module4.\reg193' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2844' with positive edge clock.
Creating register for signal `\module4.\reg194' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2845' with positive edge clock.
Creating register for signal `\module4.\reg195' using process `\module4.$proc$rtl.v:550$460'.
  created $dff cell `$procdff$2846' with positive edge clock.
Creating register for signal `\module4.\reg165' using process `\module4.$proc$rtl.v:466$396'.
  created $dff cell `$procdff$2847' with positive edge clock.
Creating register for signal `\module4.\reg166' using process `\module4.$proc$rtl.v:466$396'.
  created $dff cell `$procdff$2848' with positive edge clock.
Creating register for signal `\module4.\reg167' using process `\module4.$proc$rtl.v:466$396'.
  created $dff cell `$procdff$2849' with positive edge clock.
Creating register for signal `\module4.\reg168' using process `\module4.$proc$rtl.v:466$396'.
  created $dff cell `$procdff$2850' with positive edge clock.
Creating register for signal `\module4.\reg169' using process `\module4.$proc$rtl.v:466$396'.
  created $dff cell `$procdff$2851' with positive edge clock.
Creating register for signal `\module4.\reg170' using process `\module4.$proc$rtl.v:466$396'.
  created $dff cell `$procdff$2852' with positive edge clock.
Creating register for signal `\module4.\reg177' using process `\module4.$proc$rtl.v:466$396'.
  created $dff cell `$procdff$2853' with positive edge clock.
Creating register for signal `\top.\reg320' using process `\top.$proc$rtl.v:311$306'.
  created $dff cell `$procdff$2854' with positive edge clock.
Creating register for signal `\top.\reg319' using process `\top.$proc$rtl.v:311$306'.
  created $dff cell `$procdff$2855' with positive edge clock.
Creating register for signal `\top.\reg318' using process `\top.$proc$rtl.v:311$306'.
  created $dff cell `$procdff$2856' with positive edge clock.
Creating register for signal `\top.\reg317' using process `\top.$proc$rtl.v:311$306'.
  created $dff cell `$procdff$2857' with positive edge clock.
Creating register for signal `\top.\reg316' using process `\top.$proc$rtl.v:311$306'.
  created $dff cell `$procdff$2858' with positive edge clock.
Creating register for signal `\top.\reg315' using process `\top.$proc$rtl.v:311$306'.
  created $dff cell `$procdff$2859' with positive edge clock.
Creating register for signal `\top.\reg313' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2860' with positive edge clock.
Creating register for signal `\top.\reg312' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2861' with positive edge clock.
Creating register for signal `\top.\reg311' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2862' with positive edge clock.
Creating register for signal `\top.\reg310' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2863' with positive edge clock.
Creating register for signal `\top.\reg309' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2864' with positive edge clock.
Creating register for signal `\top.\reg308' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2865' with positive edge clock.
Creating register for signal `\top.\reg307' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2866' with positive edge clock.
Creating register for signal `\top.\reg306' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2867' with positive edge clock.
Creating register for signal `\top.\reg305' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2868' with positive edge clock.
Creating register for signal `\top.\reg304' using process `\top.$proc$rtl.v:244$198'.
  created $dff cell `$procdff$2869' with positive edge clock.
Creating register for signal `\top.\reg299' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2870' with positive edge clock.
Creating register for signal `\top.\reg298' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2871' with positive edge clock.
Creating register for signal `\top.\reg297' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2872' with positive edge clock.
Creating register for signal `\top.\reg296' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2873' with positive edge clock.
Creating register for signal `\top.\reg295' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2874' with positive edge clock.
Creating register for signal `\top.\reg294' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2875' with positive edge clock.
Creating register for signal `\top.\reg293' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2876' with positive edge clock.
Creating register for signal `\top.\reg292' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2877' with positive edge clock.
Creating register for signal `\top.\reg291' using process `\top.$proc$rtl.v:197$123'.
  created $dff cell `$procdff$2878' with positive edge clock.
Creating register for signal `\top.\reg282' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2879' with positive edge clock.
Creating register for signal `\top.\reg281' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2880' with positive edge clock.
Creating register for signal `\top.\reg280' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2881' with positive edge clock.
Creating register for signal `\top.\reg279' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2882' with positive edge clock.
Creating register for signal `\top.\reg278' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2883' with positive edge clock.
Creating register for signal `\top.\reg277' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2884' with positive edge clock.
Creating register for signal `\top.\reg276' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2885' with positive edge clock.
Creating register for signal `\top.\reg275' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2886' with positive edge clock.
Creating register for signal `\top.\reg274' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2887' with positive edge clock.
Creating register for signal `\top.\reg273' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2888' with positive edge clock.
Creating register for signal `\top.\reg272' using process `\top.$proc$rtl.v:131$30'.
  created $dff cell `$procdff$2889' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `module11.$proc$rtl.v:1467$1896'.
Removing empty process `module11.$proc$rtl.v:1466$1895'.
Removing empty process `module11.$proc$rtl.v:1465$1894'.
Removing empty process `module11.$proc$rtl.v:1464$1893'.
Removing empty process `module11.$proc$rtl.v:1463$1892'.
Removing empty process `module11.$proc$rtl.v:1462$1891'.
Removing empty process `module11.$proc$rtl.v:1461$1890'.
Removing empty process `module11.$proc$rtl.v:1460$1889'.
Removing empty process `module11.$proc$rtl.v:1456$1888'.
Removing empty process `module11.$proc$rtl.v:1450$1887'.
Removing empty process `module11.$proc$rtl.v:1449$1886'.
Removing empty process `module11.$proc$rtl.v:1448$1885'.
Removing empty process `module11.$proc$rtl.v:1447$1884'.
Removing empty process `module11.$proc$rtl.v:1446$1883'.
Removing empty process `module11.$proc$rtl.v:1445$1882'.
Removing empty process `module11.$proc$rtl.v:1444$1881'.
Removing empty process `module11.$proc$rtl.v:1443$1880'.
Removing empty process `module11.$proc$rtl.v:1442$1879'.
Removing empty process `module11.$proc$rtl.v:1441$1878'.
Removing empty process `module11.$proc$rtl.v:1440$1877'.
Removing empty process `module11.$proc$rtl.v:1439$1876'.
Removing empty process `module11.$proc$rtl.v:1438$1875'.
Removing empty process `module11.$proc$rtl.v:1437$1874'.
Removing empty process `module11.$proc$rtl.v:1436$1873'.
Removing empty process `module11.$proc$rtl.v:1435$1872'.
Removing empty process `module11.$proc$rtl.v:1434$1871'.
Removing empty process `module11.$proc$rtl.v:1433$1870'.
Removing empty process `module11.$proc$rtl.v:1432$1869'.
Removing empty process `module11.$proc$rtl.v:1431$1868'.
Removing empty process `module11.$proc$rtl.v:1430$1867'.
Removing empty process `module11.$proc$rtl.v:1429$1866'.
Removing empty process `module11.$proc$rtl.v:1428$1865'.
Removing empty process `module11.$proc$rtl.v:1427$1864'.
Removing empty process `module11.$proc$rtl.v:1426$1863'.
Removing empty process `module11.$proc$rtl.v:1425$1862'.
Removing empty process `module11.$proc$rtl.v:1424$1861'.
Removing empty process `module11.$proc$rtl.v:1423$1860'.
Removing empty process `module11.$proc$rtl.v:1422$1859'.
Removing empty process `module11.$proc$rtl.v:1421$1858'.
Removing empty process `module11.$proc$rtl.v:1420$1857'.
Removing empty process `module11.$proc$rtl.v:1419$1856'.
Removing empty process `module11.$proc$rtl.v:1418$1855'.
Removing empty process `module11.$proc$rtl.v:1417$1854'.
Removing empty process `module11.$proc$rtl.v:1416$1853'.
Removing empty process `module11.$proc$rtl.v:1415$1852'.
Removing empty process `module11.$proc$rtl.v:1414$1851'.
Removing empty process `module11.$proc$rtl.v:1413$1850'.
Removing empty process `module11.$proc$rtl.v:1412$1849'.
Removing empty process `module11.$proc$rtl.v:1411$1848'.
Removing empty process `module11.$proc$rtl.v:1410$1847'.
Removing empty process `module11.$proc$rtl.v:1409$1846'.
Removing empty process `module11.$proc$rtl.v:1408$1845'.
Removing empty process `module11.$proc$rtl.v:1407$1844'.
Removing empty process `module11.$proc$rtl.v:1406$1843'.
Removing empty process `module11.$proc$rtl.v:1405$1842'.
Found and cleaned up 8 empty switches in `\module11.$proc$rtl.v:1687$1577'.
Removing empty process `module11.$proc$rtl.v:1687$1577'.
Found and cleaned up 1 empty switch in `\module11.$proc$rtl.v:1632$1526'.
Removing empty process `module11.$proc$rtl.v:1632$1526'.
Found and cleaned up 1 empty switch in `\module11.$proc$rtl.v:1605$1492'.
Removing empty process `module11.$proc$rtl.v:1605$1492'.
Removing empty process `module11.$proc$rtl.v:1592$1471'.
Found and cleaned up 2 empty switches in `\module11.$proc$rtl.v:1550$1415'.
Removing empty process `module11.$proc$rtl.v:1550$1415'.
Removing empty process `module90.$proc$rtl.v:1003$1393'.
Removing empty process `module90.$proc$rtl.v:1002$1392'.
Removing empty process `module90.$proc$rtl.v:1001$1391'.
Removing empty process `module90.$proc$rtl.v:997$1390'.
Removing empty process `module90.$proc$rtl.v:996$1389'.
Removing empty process `module90.$proc$rtl.v:995$1388'.
Removing empty process `module90.$proc$rtl.v:994$1387'.
Removing empty process `module90.$proc$rtl.v:993$1386'.
Removing empty process `module90.$proc$rtl.v:992$1385'.
Removing empty process `module90.$proc$rtl.v:991$1384'.
Removing empty process `module90.$proc$rtl.v:990$1383'.
Removing empty process `module90.$proc$rtl.v:989$1382'.
Removing empty process `module90.$proc$rtl.v:988$1381'.
Removing empty process `module90.$proc$rtl.v:987$1380'.
Removing empty process `module90.$proc$rtl.v:986$1379'.
Removing empty process `module90.$proc$rtl.v:985$1378'.
Removing empty process `module90.$proc$rtl.v:984$1377'.
Removing empty process `module90.$proc$rtl.v:983$1376'.
Removing empty process `module90.$proc$rtl.v:982$1375'.
Removing empty process `module90.$proc$rtl.v:981$1374'.
Removing empty process `module90.$proc$rtl.v:980$1373'.
Removing empty process `module90.$proc$rtl.v:979$1372'.
Removing empty process `module90.$proc$rtl.v:978$1371'.
Removing empty process `module90.$proc$rtl.v:977$1370'.
Removing empty process `module90.$proc$rtl.v:976$1369'.
Removing empty process `module90.$proc$rtl.v:974$1368'.
Removing empty process `module90.$proc$rtl.v:973$1367'.
Removing empty process `module90.$proc$rtl.v:972$1366'.
Removing empty process `module90.$proc$rtl.v:971$1365'.
Removing empty process `module90.$proc$rtl.v:970$1364'.
Removing empty process `module90.$proc$rtl.v:969$1363'.
Removing empty process `module90.$proc$rtl.v:968$1362'.
Removing empty process `module90.$proc$rtl.v:967$1361'.
Removing empty process `module90.$proc$rtl.v:966$1360'.
Removing empty process `module90.$proc$rtl.v:965$1359'.
Removing empty process `module90.$proc$rtl.v:964$1358'.
Removing empty process `module90.$proc$rtl.v:963$1357'.
Removing empty process `module90.$proc$rtl.v:962$1356'.
Removing empty process `module90.$proc$rtl.v:961$1355'.
Removing empty process `module90.$proc$rtl.v:960$1354'.
Removing empty process `module90.$proc$rtl.v:959$1353'.
Removing empty process `module90.$proc$rtl.v:958$1352'.
Removing empty process `module90.$proc$rtl.v:957$1351'.
Removing empty process `module90.$proc$rtl.v:956$1350'.
Removing empty process `module90.$proc$rtl.v:955$1349'.
Removing empty process `module90.$proc$rtl.v:954$1348'.
Removing empty process `module90.$proc$rtl.v:953$1347'.
Removing empty process `module90.$proc$rtl.v:952$1346'.
Removing empty process `module90.$proc$rtl.v:951$1345'.
Removing empty process `module90.$proc$rtl.v:950$1344'.
Removing empty process `module90.$proc$rtl.v:949$1343'.
Found and cleaned up 4 empty switches in `\module90.$proc$rtl.v:1308$1190'.
Removing empty process `module90.$proc$rtl.v:1308$1190'.
Found and cleaned up 3 empty switches in `\module90.$proc$rtl.v:1246$1102'.
Removing empty process `module90.$proc$rtl.v:1246$1102'.
Found and cleaned up 4 empty switches in `\module90.$proc$rtl.v:1180$1032'.
Removing empty process `module90.$proc$rtl.v:1180$1032'.
Found and cleaned up 3 empty switches in `\module90.$proc$rtl.v:1113$921'.
Removing empty process `module90.$proc$rtl.v:1113$921'.
Removing empty process `module90.$proc$rtl.v:1095$884'.
Removing empty process `module198.$proc$rtl.v:766$855'.
Removing empty process `module198.$proc$rtl.v:762$854'.
Removing empty process `module198.$proc$rtl.v:759$853'.
Removing empty process `module198.$proc$rtl.v:758$852'.
Removing empty process `module198.$proc$rtl.v:757$851'.
Removing empty process `module198.$proc$rtl.v:756$850'.
Removing empty process `module198.$proc$rtl.v:755$849'.
Removing empty process `module198.$proc$rtl.v:754$848'.
Removing empty process `module198.$proc$rtl.v:753$847'.
Removing empty process `module198.$proc$rtl.v:752$846'.
Removing empty process `module198.$proc$rtl.v:751$845'.
Removing empty process `module198.$proc$rtl.v:750$844'.
Removing empty process `module198.$proc$rtl.v:749$843'.
Removing empty process `module198.$proc$rtl.v:748$842'.
Removing empty process `module198.$proc$rtl.v:747$841'.
Removing empty process `module198.$proc$rtl.v:746$840'.
Removing empty process `module198.$proc$rtl.v:745$839'.
Removing empty process `module198.$proc$rtl.v:743$838'.
Removing empty process `module198.$proc$rtl.v:742$837'.
Removing empty process `module198.$proc$rtl.v:924$823'.
Found and cleaned up 6 empty switches in `\module198.$proc$rtl.v:814$685'.
Removing empty process `module198.$proc$rtl.v:814$685'.
Removing empty process `module198.$proc$rtl.v:806$677'.
Removing empty process `module198.$proc$rtl.v:799$672'.
Removing empty process `module241.$proc$rtl.v:654$671'.
Removing empty process `module241.$proc$rtl.v:653$670'.
Removing empty process `module241.$proc$rtl.v:652$669'.
Removing empty process `module241.$proc$rtl.v:651$668'.
Removing empty process `module241.$proc$rtl.v:650$667'.
Removing empty process `module241.$proc$rtl.v:649$666'.
Removing empty process `module241.$proc$rtl.v:648$665'.
Removing empty process `module241.$proc$rtl.v:647$664'.
Removing empty process `module241.$proc$rtl.v:646$663'.
Removing empty process `module241.$proc$rtl.v:645$662'.
Found and cleaned up 3 empty switches in `\module241.$proc$rtl.v:681$609'.
Removing empty process `module241.$proc$rtl.v:681$609'.
Removing empty process `module4.$proc$rtl.v:403$604'.
Removing empty process `module4.$proc$rtl.v:400$603'.
Removing empty process `module4.$proc$rtl.v:399$602'.
Removing empty process `module4.$proc$rtl.v:398$601'.
Removing empty process `module4.$proc$rtl.v:397$600'.
Removing empty process `module4.$proc$rtl.v:396$599'.
Removing empty process `module4.$proc$rtl.v:395$598'.
Removing empty process `module4.$proc$rtl.v:394$597'.
Removing empty process `module4.$proc$rtl.v:393$596'.
Removing empty process `module4.$proc$rtl.v:392$595'.
Removing empty process `module4.$proc$rtl.v:391$594'.
Removing empty process `module4.$proc$rtl.v:390$593'.
Removing empty process `module4.$proc$rtl.v:389$592'.
Removing empty process `module4.$proc$rtl.v:388$591'.
Removing empty process `module4.$proc$rtl.v:387$590'.
Removing empty process `module4.$proc$rtl.v:386$589'.
Removing empty process `module4.$proc$rtl.v:385$588'.
Removing empty process `module4.$proc$rtl.v:384$587'.
Removing empty process `module4.$proc$rtl.v:383$586'.
Removing empty process `module4.$proc$rtl.v:380$585'.
Removing empty process `module4.$proc$rtl.v:379$584'.
Removing empty process `module4.$proc$rtl.v:378$583'.
Removing empty process `module4.$proc$rtl.v:377$582'.
Removing empty process `module4.$proc$rtl.v:376$581'.
Removing empty process `module4.$proc$rtl.v:375$580'.
Removing empty process `module4.$proc$rtl.v:374$579'.
Removing empty process `module4.$proc$rtl.v:373$578'.
Removing empty process `module4.$proc$rtl.v:372$577'.
Removing empty process `module4.$proc$rtl.v:371$576'.
Removing empty process `module4.$proc$rtl.v:370$575'.
Removing empty process `module4.$proc$rtl.v:369$574'.
Removing empty process `module4.$proc$rtl.v:368$573'.
Removing empty process `module4.$proc$rtl.v:615$542'.
Removing empty process `module4.$proc$rtl.v:603$521'.
Found and cleaned up 3 empty switches in `\module4.$proc$rtl.v:550$460'.
Removing empty process `module4.$proc$rtl.v:550$460'.
Found and cleaned up 1 empty switch in `\module4.$proc$rtl.v:466$396'.
Removing empty process `module4.$proc$rtl.v:466$396'.
Removing empty process `top.$proc$rtl.v:55$391'.
Removing empty process `top.$proc$rtl.v:54$390'.
Removing empty process `top.$proc$rtl.v:53$389'.
Removing empty process `top.$proc$rtl.v:52$388'.
Removing empty process `top.$proc$rtl.v:51$387'.
Removing empty process `top.$proc$rtl.v:50$386'.
Removing empty process `top.$proc$rtl.v:49$385'.
Removing empty process `top.$proc$rtl.v:48$384'.
Removing empty process `top.$proc$rtl.v:47$383'.
Removing empty process `top.$proc$rtl.v:46$382'.
Removing empty process `top.$proc$rtl.v:45$381'.
Removing empty process `top.$proc$rtl.v:39$380'.
Removing empty process `top.$proc$rtl.v:38$379'.
Removing empty process `top.$proc$rtl.v:37$378'.
Removing empty process `top.$proc$rtl.v:36$377'.
Removing empty process `top.$proc$rtl.v:35$376'.
Removing empty process `top.$proc$rtl.v:34$375'.
Removing empty process `top.$proc$rtl.v:33$374'.
Removing empty process `top.$proc$rtl.v:32$373'.
Removing empty process `top.$proc$rtl.v:31$372'.
Removing empty process `top.$proc$rtl.v:26$371'.
Removing empty process `top.$proc$rtl.v:25$370'.
Removing empty process `top.$proc$rtl.v:24$369'.
Removing empty process `top.$proc$rtl.v:23$368'.
Removing empty process `top.$proc$rtl.v:22$367'.
Removing empty process `top.$proc$rtl.v:21$366'.
Removing empty process `top.$proc$rtl.v:20$365'.
Removing empty process `top.$proc$rtl.v:19$364'.
Removing empty process `top.$proc$rtl.v:18$363'.
Removing empty process `top.$proc$rtl.v:17$362'.
Removing empty process `top.$proc$rtl.v:15$361'.
Removing empty process `top.$proc$rtl.v:14$360'.
Removing empty process `top.$proc$rtl.v:13$359'.
Removing empty process `top.$proc$rtl.v:12$358'.
Removing empty process `top.$proc$rtl.v:11$357'.
Removing empty process `top.$proc$rtl.v:10$356'.
Found and cleaned up 2 empty switches in `\top.$proc$rtl.v:311$306'.
Removing empty process `top.$proc$rtl.v:311$306'.
Found and cleaned up 3 empty switches in `\top.$proc$rtl.v:244$198'.
Removing empty process `top.$proc$rtl.v:244$198'.
Found and cleaned up 2 empty switches in `\top.$proc$rtl.v:197$123'.
Removing empty process `top.$proc$rtl.v:197$123'.
Found and cleaned up 3 empty switches in `\top.$proc$rtl.v:131$30'.
Removing empty process `top.$proc$rtl.v:131$30'.
Cleaned up 49 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~40 debug messages>
Optimizing module module90.
<suppressed ~68 debug messages>
Optimizing module module198.
<suppressed ~24 debug messages>
Optimizing module module241.
<suppressed ~6 debug messages>
Optimizing module module4.
<suppressed ~56 debug messages>
Optimizing module top.
<suppressed ~49 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \top..
Removed 226 unused cells and 1291 unused wires.
<suppressed ~424 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module module11..
checking module module198..
checking module module241..
checking module module4..
checking module module90..
checking module top..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~2 debug messages>
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
<suppressed ~21 debug messages>
Finding identical cells in module `\module198'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module241'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module4'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module90'.
<suppressed ~69 debug messages>
Finding identical cells in module `\top'.
<suppressed ~42 debug messages>
Removed a total of 52 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $ternary$rtl.v:704$635.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $ternary$rtl.v:487$422: \wire9 -> { 1'1 \wire9 [11:0] }
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$2253: { 2'00 \reg105 } -> { 2'00 \reg105 [8:1] 1'1 }
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1294$1166.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~289 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1790$1726: { \reg25 [0] $le$rtl.v:1789$1725_Y }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1768$1700: { \reg48 [0] \reg48 [1] \reg48 [2] \reg48 [3] \reg48 [4] \reg48 [5] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1760$1691: { $ternary$rtl.v:1760$1690_Y [0] $ternary$rtl.v:1760$1690_Y [1] $ternary$rtl.v:1760$1690_Y [2] $ternary$rtl.v:1760$1690_Y [3] $ternary$rtl.v:1760$1690_Y [4] $ternary$rtl.v:1760$1690_Y [5] $ternary$rtl.v:1760$1690_Y [6] $ternary$rtl.v:1760$1690_Y [7] $ternary$rtl.v:1760$1690_Y [8] $ternary$rtl.v:1760$1690_Y [9] $ternary$rtl.v:1760$1690_Y [10] $ternary$rtl.v:1760$1690_Y [11] $ternary$rtl.v:1760$1690_Y [12] $ternary$rtl.v:1760$1690_Y [13] $ternary$rtl.v:1760$1690_Y [14] $ternary$rtl.v:1760$1690_Y [15] $ternary$rtl.v:1760$1690_Y [16] $ternary$rtl.v:1760$1690_Y [17] $ternary$rtl.v:1760$1690_Y [18] $ternary$rtl.v:1760$1690_Y [19] $ternary$rtl.v:1760$1690_Y [20] $ternary$rtl.v:1760$1690_Y [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1753$1670: { \reg57 [0] \reg57 [1] \reg57 [2] \reg57 [3] \reg57 [4] \reg57 [5] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1735$1640: { $sub$rtl.v:1735$1639_Y [0] $sub$rtl.v:1735$1639_Y [1] $sub$rtl.v:1735$1639_Y [2] $sub$rtl.v:1735$1639_Y [3] $sub$rtl.v:1735$1639_Y [4] $sub$rtl.v:1735$1639_Y [5] $sub$rtl.v:1735$1639_Y [6] $sub$rtl.v:1735$1639_Y [7] $sub$rtl.v:1735$1639_Y [8] $sub$rtl.v:1735$1639_Y [9] $sub$rtl.v:1735$1639_Y [10] $sub$rtl.v:1735$1639_Y [11] $sub$rtl.v:1735$1639_Y [12] $sub$rtl.v:1735$1639_Y [13] $sub$rtl.v:1735$1639_Y [14] $sub$rtl.v:1735$1639_Y [15] $sub$rtl.v:1735$1639_Y [16] $sub$rtl.v:1735$1639_Y [17] $sub$rtl.v:1735$1639_Y [18] $sub$rtl.v:1735$1639_Y [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1721$1624: { $xnor$rtl.v:1721$1623_Y [0] $xnor$rtl.v:1721$1623_Y [1] $xnor$rtl.v:1721$1623_Y [2] $xnor$rtl.v:1721$1623_Y [3] $xnor$rtl.v:1721$1623_Y [4] $xnor$rtl.v:1721$1623_Y [5] $xnor$rtl.v:1721$1623_Y [6] $xnor$rtl.v:1721$1623_Y [7] $xnor$rtl.v:1721$1623_Y [8] $xnor$rtl.v:1721$1623_Y [9] $xnor$rtl.v:1721$1623_Y [10] $xnor$rtl.v:1721$1623_Y [11] $xnor$rtl.v:1721$1623_Y [12] $xnor$rtl.v:1721$1623_Y [13] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1704$1599: { \reg26 [0] \reg26 [1] \reg26 [2] \reg26 [3] \reg26 [4] \reg26 [5] \reg26 [6] \reg26 [7] \reg26 [8] \reg26 [9] \reg26 [10] \reg26 [11] \reg26 [12] \reg26 [13] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1629$1519: { $ternary$rtl.v:1629$1518_Y [0] $ternary$rtl.v:1629$1518_Y [1] $ternary$rtl.v:1629$1518_Y [2] $ternary$rtl.v:1629$1518_Y [3] $ternary$rtl.v:1629$1518_Y [4] $ternary$rtl.v:1629$1518_Y [5] $ternary$rtl.v:1629$1518_Y [6] $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [8] $ternary$rtl.v:1629$1518_Y [9] $ternary$rtl.v:1629$1518_Y [10] $ternary$rtl.v:1629$1518_Y [11] $ternary$rtl.v:1629$1518_Y [12] $ternary$rtl.v:1629$1518_Y [13] $ternary$rtl.v:1629$1518_Y [14] $ternary$rtl.v:1629$1518_Y [15] $ternary$rtl.v:1629$1518_Y [16] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1612$1495: { \reg39 [0] \reg39 [1] \reg39 [2] \reg39 [3] \reg39 [4] \reg39 [5] \reg39 [6] \reg39 [7] \reg39 [8] \reg39 [9] \reg39 [10] \reg39 [11] \reg39 [12] \reg39 [13] \reg39 [14] \reg39 [15] \reg39 [16] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1600$1484: { \wire18 [0] \wire18 [1] \wire18 [2] \wire18 [3] \wire18 [4] \wire18 [5] \wire18 [6] \wire18 [7] \wire18 [8] \wire18 [9] \wire18 [10] \wire18 [11] \wire18 [12] \wire18 [13] \wire18 [14] \wire18 [15] \wire18 [16] \wire18 [17] \wire18 [18] \wire18 [19] \wire18 [20] \wire18 [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1582$1466: { $ternary$rtl.v:1582$1465_Y [0] $ternary$rtl.v:1582$1465_Y [1] $ternary$rtl.v:1582$1465_Y [2] $ternary$rtl.v:1582$1465_Y [3] $ternary$rtl.v:1582$1465_Y [4] $ternary$rtl.v:1582$1465_Y [5] $ternary$rtl.v:1582$1465_Y [6] $ternary$rtl.v:1582$1465_Y [7] $ternary$rtl.v:1582$1465_Y [8] $ternary$rtl.v:1582$1465_Y [9] $ternary$rtl.v:1582$1465_Y [10] $ternary$rtl.v:1582$1465_Y [11] $ternary$rtl.v:1582$1465_Y [12] $ternary$rtl.v:1582$1465_Y [13] $ternary$rtl.v:1582$1465_Y [14] $ternary$rtl.v:1582$1465_Y [15] $ternary$rtl.v:1582$1465_Y [16] $ternary$rtl.v:1582$1465_Y [17] $ternary$rtl.v:1582$1465_Y [18] $ternary$rtl.v:1582$1465_Y [19] $ternary$rtl.v:1582$1465_Y [20] $ternary$rtl.v:1582$1465_Y [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1552$1417: { \wire19 [0] \wire19 [1] \wire19 [2] \wire19 [3] \wire19 [4] \wire19 [5] \wire19 [6] \wire19 [7] \wire19 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1546$1404: { \wire18 [0] \wire18 [1] \wire18 [2] \wire18 [3] \wire18 [4] \wire18 [5] \wire18 [6] \wire18 [7] \wire18 [8] \wire18 [9] \wire18 [10] \wire18 [11] \wire18 [12] \wire18 [13] \wire18 [14] \wire18 [15] \wire18 [16] \wire18 [17] \wire18 [18] \wire18 [19] \wire18 [20] \wire18 [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1544$1399: { \wire12 [0] \wire12 [1] \wire12 [2] \wire12 [3] \wire12 [4] \wire12 [5] \wire12 [6] \wire12 [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1784$1724: { $ternary$rtl.v:1784$1723_Y [0] $ternary$rtl.v:1784$1723_Y [1] $ternary$rtl.v:1784$1723_Y [2] $ternary$rtl.v:1784$1723_Y [3] $ternary$rtl.v:1784$1723_Y [4] $ternary$rtl.v:1784$1723_Y [5] $ternary$rtl.v:1784$1723_Y [6] $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [8] $ternary$rtl.v:1784$1723_Y [9] $ternary$rtl.v:1784$1723_Y [10] $ternary$rtl.v:1784$1723_Y [11] $ternary$rtl.v:1784$1723_Y [12] $ternary$rtl.v:1784$1723_Y [13] $ternary$rtl.v:1784$1723_Y [14] $ternary$rtl.v:1784$1723_Y [15] $ternary$rtl.v:1784$1723_Y [16] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1758$1681: { \wire15 [0] \wire15 [1] \wire15 [2] \wire15 [3] \wire15 [4] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1731$1630: { \reg52 [0] \reg52 [1] \reg52 [2] \reg52 [3] \reg52 [4] \reg52 [5] \reg52 [6] \reg52 [7] \reg52 [8] \reg52 [9] \reg52 [10] \reg52 [11] \reg52 [12] \reg52 [13] \reg52 [14] \reg52 [15] \reg52 [16] \reg52 [17] \reg52 [18] \reg52 [19] \reg52 [20] \reg52 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1694$1583: { \reg29 [3] \reg29 [4] \reg29 [5] \reg29 [6] \reg29 [7] \reg29 [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1660$1572: { \wire35 [0] \wire35 [1] \wire35 [2] \wire35 [3] \wire35 [4] \wire35 [5] \wire35 [6] \wire35 [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1637$1538: { \wire12 [0] \wire12 [1] \wire12 [2] \wire12 [3] \wire12 [4] \wire12 [5] \wire12 [6] \wire12 [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1603$1490: { \wire19 [3] \wire19 [4] \wire19 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1559$1432: { \reg23 [12] \reg23 [13] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1548$1408: { \wire18 [0] \wire18 [1] \wire18 [2] \wire18 [3] \wire18 [4] \wire18 [5] \wire18 [6] \wire18 [7] \wire18 [8] \wire18 [9] \wire18 [10] \wire18 [11] \wire18 [12] \wire18 [13] \wire18 [14] \wire18 [15] \wire18 [16] \wire18 [17] \wire18 [18] \wire18 [19] \wire18 [20] \wire18 [21] }
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
    New input vector for $reduce_or cell $reduce_or$rtl.v:908$810: { \wire199 [2] \wire199 [3] \wire199 [4] \wire199 [5] \wire199 [6] \wire199 [7] \wire199 [8] \wire199 [9] \wire199 [10] \wire199 [11] \wire199 [12] \wire199 [13] \wire199 [14] \wire199 [15] \wire199 [16] \wire199 [17] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:880$786: { \wire199 [0] \wire199 [1] \wire199 [2] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:843$724: { \reg204 [6] \reg204 [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:830$719: { \wire209 [0] \wire209 [1] \wire209 [2] \wire209 [3] \wire209 [4] \wire209 [5] \wire209 [6] \wire209 [7] \wire209 [8] \wire209 [9] \wire209 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:819$694: { $ternary$rtl.v:819$693_Y [0] $ternary$rtl.v:819$693_Y [1] $ternary$rtl.v:819$693_Y [2] $ternary$rtl.v:819$693_Y [3] $ternary$rtl.v:819$693_Y [4] $ternary$rtl.v:819$693_Y [5] $ternary$rtl.v:819$693_Y [6] $ternary$rtl.v:819$693_Y [7] $ternary$rtl.v:819$693_Y [8] $ternary$rtl.v:819$693_Y [9] $ternary$rtl.v:819$693_Y [10] $ternary$rtl.v:819$693_Y [11] $ternary$rtl.v:819$693_Y [12] $ternary$rtl.v:819$693_Y [13] $ternary$rtl.v:819$693_Y [14] $ternary$rtl.v:819$693_Y [15] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:869$778: { $sshr$rtl.v:869$777_Y [0] $sshr$rtl.v:869$777_Y [1] $sshr$rtl.v:869$777_Y [2] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:863$763: { \wire199 [0] \wire199 [1] \wire199 [2] \wire199 [3] \wire199 [4] \wire199 [5] \wire199 [6] \wire199 [7] \wire199 [8] \wire199 [9] \wire199 [10] \wire199 [11] \wire199 [12] \wire199 [13] \wire199 [14] \wire199 [15] \wire199 [16] \wire199 [17] \wire199 [18] \wire199 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:827$716: { $xnor$rtl.v:827$715_Y [0] $xnor$rtl.v:827$715_Y [1] $xnor$rtl.v:827$715_Y [2] $xnor$rtl.v:827$715_Y [3] $xnor$rtl.v:827$715_Y [4] $xnor$rtl.v:827$715_Y [5] $xnor$rtl.v:827$715_Y [6] $xnor$rtl.v:827$715_Y [7] $xnor$rtl.v:827$715_Y [8] $xnor$rtl.v:827$715_Y [9] $xnor$rtl.v:827$715_Y [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:811$678: { \wire201 [0] \wire201 [1] \wire201 [2] }
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
    New input vector for $reduce_and cell $reduce_and$rtl.v:724$652: { \wire242 [0] \wire242 [1] \wire242 [2] \wire242 [3] \wire242 [4] \wire242 [5] \wire242 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:700$626: { \wire242 [0] \wire242 [1] \wire242 [2] \wire242 [3] \wire242 [4] \wire242 [5] \wire242 [6] }
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
    New input vector for $reduce_or cell $reduce_or$rtl.v:630$568: { \reg186 [0] \reg186 [1] \reg186 [2] \reg186 [3] \reg186 [4] \reg186 [5] \reg186 [6] \reg186 [7] \reg186 [8] \reg186 [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:601$517: { $ternary$rtl.v:601$516_Y [0] $ternary$rtl.v:601$516_Y [1] $ternary$rtl.v:601$516_Y [2] $ternary$rtl.v:601$516_Y [3] $ternary$rtl.v:601$516_Y [4] $ternary$rtl.v:601$516_Y [5] $ternary$rtl.v:601$516_Y [6] $ternary$rtl.v:601$516_Y [7] $ternary$rtl.v:601$516_Y [8] $ternary$rtl.v:601$516_Y [9] $ternary$rtl.v:601$516_Y [10] $ternary$rtl.v:601$516_Y [11] $ternary$rtl.v:601$516_Y [12] $ternary$rtl.v:601$516_Y [13] $ternary$rtl.v:601$516_Y [14] $ternary$rtl.v:601$516_Y [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:552$461: { \wire163 [0] \wire163 [1] \wire163 [2] \wire163 [3] \wire163 [4] \wire163 [5] \wire163 [6] \wire163 [7] \wire163 [8] \wire163 [9] \wire163 [10] \wire163 [11] \wire163 [12] \wire163 [13] \wire163 [14] \wire163 [15] \wire163 [16] \wire163 [17] \wire163 [18] \wire163 [19] \wire163 [20] \wire163 [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:479$415: { \wire9 [0] \wire9 [1] \wire9 [2] \wire9 [3] \wire9 [4] \wire9 [5] \wire9 [6] \wire9 [7] \wire9 [8] \wire9 [9] \wire9 [10] \wire9 [11] \wire9 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:614$534: { \wire9 [0] \wire9 [1] \wire9 [2] \wire9 [3] \wire9 [4] \wire9 [5] \wire9 [6] \wire9 [7] \wire9 [8] \wire9 [9] \wire9 [10] \wire9 [11] \wire9 [12] }
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1382$1311: { \reg146 [6] \reg146 [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1320$1205: { \reg142 [5] \reg142 [6] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1313$1193: { \reg114 [0] \reg114 [1] \reg114 [2] \reg114 [3] \reg114 [4] \reg114 [5] \reg114 [6] \reg114 [7] \reg114 [8] \reg114 [9] \reg114 [10] \reg114 [11] \reg114 [12] \reg114 [13] \reg114 [14] \reg114 [15] \reg114 [16] \reg114 [17] \reg114 [18] \reg114 [19] \reg114 [20] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1298$1175: { \reg114 [11] \reg114 [12] \reg114 [13] \reg114 [14] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1294$1163: { \reg128 [0] \reg128 [1] \reg128 [2] \reg128 [3] \reg128 [4] \reg128 [5] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1290$1159: { \wire91 [0] \wire91 [1] \wire91 [2] \wire91 [3] \wire91 [4] \wire91 [5] \wire91 [6] \wire91 [7] \wire91 [8] \wire91 [9] \wire91 [10] \wire91 [11] \wire91 [12] \wire91 [13] \wire91 [14] \wire91 [15] \wire91 [16] \wire91 [17] \wire91 [18] \wire91 [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1284$1152: { $not$rtl.v:1284$1151_Y [0] $not$rtl.v:1284$1151_Y [1] $not$rtl.v:1284$1151_Y [2] $not$rtl.v:1284$1151_Y [3] $not$rtl.v:1284$1151_Y [4] $not$rtl.v:1284$1151_Y [5] $not$rtl.v:1284$1151_Y [6] $not$rtl.v:1284$1151_Y [7] $not$rtl.v:1284$1151_Y [8] $not$rtl.v:1284$1151_Y [9] $not$rtl.v:1284$1151_Y [10] $not$rtl.v:1284$1151_Y [11] $not$rtl.v:1284$1151_Y [12] $not$rtl.v:1284$1151_Y [13] $not$rtl.v:1284$1151_Y [14] $not$rtl.v:1284$1151_Y [15] $not$rtl.v:1284$1151_Y [16] $not$rtl.v:1284$1151_Y [17] $not$rtl.v:1284$1151_Y [18] $not$rtl.v:1284$1151_Y [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1250$1105: { \reg123 [0] \reg123 [1] \reg123 [2] \reg123 [3] \reg123 [4] \reg123 [5] \reg123 [6] \reg123 [7] \reg123 [8] \reg123 [9] \reg123 [10] \reg123 [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1224$1078: { \wire107 [0] \wire107 [1] \wire107 [2] \wire107 [3] \wire107 [4] \wire107 [5] \wire107 [6] \wire107 [7] \wire107 [8] \wire107 [9] \wire107 [10] \wire107 [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1177$1025: { \reg105 [0] \reg105 [1] \reg105 [2] \reg105 [3] \reg105 [4] \reg105 [5] \reg105 [6] \reg105 [7] \reg105 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1176$1024: { $ternary$rtl.v:1176$1023_Y [0] $ternary$rtl.v:1176$1023_Y [1] $ternary$rtl.v:1176$1023_Y [2] $ternary$rtl.v:1176$1023_Y [3] $ternary$rtl.v:1176$1023_Y [4] $ternary$rtl.v:1176$1023_Y [5] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1143$963: { \wire107 [0] \wire107 [1] \wire107 [2] \wire107 [3] \wire107 [4] \wire107 [5] \wire107 [6] \wire107 [7] \wire107 [8] \wire107 [9] \wire107 [10] \wire107 [11] $reduce_xnor$rtl.v:1143$962_Y }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1119$934: { $ternary$rtl.v:1119$933_Y [0] $ternary$rtl.v:1119$933_Y [1] $ternary$rtl.v:1119$933_Y [2] $ternary$rtl.v:1119$933_Y [3] $ternary$rtl.v:1119$933_Y [4] $ternary$rtl.v:1119$933_Y [5] $ternary$rtl.v:1119$933_Y [6] $ternary$rtl.v:1119$933_Y [7] $ternary$rtl.v:1119$933_Y [8] $ternary$rtl.v:1119$933_Y [9] $ternary$rtl.v:1119$933_Y [10] $ternary$rtl.v:1119$933_Y [11] $ternary$rtl.v:1119$933_Y [12] $ternary$rtl.v:1119$933_Y [13] $ternary$rtl.v:1119$933_Y [14] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1115$922: { \wire94 [0] \wire94 [1] \wire94 [2] \wire94 [3] \wire94 [4] \wire94 [5] \wire94 [6] \wire94 [7] \wire94 [8] \wire94 [9] \wire94 [10] \wire94 [11] \wire94 [12] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1112$917: { $ternary$rtl.v:1112$916_Y [0] $ternary$rtl.v:1112$916_Y [1] $ternary$rtl.v:1112$916_Y [2] $ternary$rtl.v:1112$916_Y [3] $ternary$rtl.v:1112$916_Y [4] $ternary$rtl.v:1112$916_Y [5] $ternary$rtl.v:1112$916_Y [6] $ternary$rtl.v:1112$916_Y [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1111$910: { \wire92 [0] \wire92 [1] \wire92 [2] \wire92 [3] \wire92 [4] \wire92 [5] \wire92 [6] \wire92 [7] \wire92 [8] \wire92 [9] \wire92 [10] \wire92 [11] \wire92 [12] \wire92 [13] \wire92 [14] \wire92 [15] \wire92 [16] \wire92 [17] \wire92 [18] \wire92 [19] \wire92 [20] \wire92 [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1101$894: { $sshl$rtl.v:1101$893_Y [0] $sshl$rtl.v:1101$893_Y [1] $sshl$rtl.v:1101$893_Y [2] $sshl$rtl.v:1101$893_Y [3] $sshl$rtl.v:1101$893_Y [4] $sshl$rtl.v:1101$893_Y [5] $sshl$rtl.v:1101$893_Y [6] $sshl$rtl.v:1101$893_Y [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1086$870: { \wire94 [0] \wire94 [1] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1374$1294: { $ternary$rtl.v:1374$1293_Y [0] $ternary$rtl.v:1374$1293_Y [1] $ternary$rtl.v:1374$1293_Y [2] $ternary$rtl.v:1374$1293_Y [3] $ternary$rtl.v:1374$1293_Y [4] $ternary$rtl.v:1374$1293_Y [5] $ternary$rtl.v:1374$1293_Y [6] $ternary$rtl.v:1374$1293_Y [7] $ternary$rtl.v:1374$1293_Y [8] $ternary$rtl.v:1374$1293_Y [9] $ternary$rtl.v:1374$1293_Y [10] $ternary$rtl.v:1374$1293_Y [11] $ternary$rtl.v:1374$1293_Y [12] $ternary$rtl.v:1374$1293_Y [13] $ternary$rtl.v:1374$1293_Y [14] $ternary$rtl.v:1374$1293_Y [15] $ternary$rtl.v:1374$1293_Y [16] $ternary$rtl.v:1374$1293_Y [17] $ternary$rtl.v:1374$1293_Y [18] $ternary$rtl.v:1374$1293_Y [19] $ternary$rtl.v:1374$1293_Y [20] $ternary$rtl.v:1374$1293_Y [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1367$1285: { $ternary$rtl.v:1367$1284_Y [0] $ternary$rtl.v:1367$1284_Y [1] $ternary$rtl.v:1367$1284_Y [2] $ternary$rtl.v:1367$1284_Y [3] $ternary$rtl.v:1367$1284_Y [4] $ternary$rtl.v:1367$1284_Y [5] $ternary$rtl.v:1367$1284_Y [6] $ternary$rtl.v:1367$1284_Y [7] $ternary$rtl.v:1367$1284_Y [8] $ternary$rtl.v:1367$1284_Y [9] $ternary$rtl.v:1367$1284_Y [10] $ternary$rtl.v:1367$1284_Y [11] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1360$1268: { \reg149 [0] \reg149 [1] \reg149 [2] \reg149 [3] \reg149 [4] \reg149 [5] \reg149 [6] \reg149 [7] \reg149 [8] \reg149 [9] \reg149 [10] \reg149 [11] \reg149 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1342$1238: { \reg113 [0] \reg113 [1] \reg113 [2] \reg113 [3] \reg113 [4] \reg113 [5] \reg113 [6] \reg113 [7] \reg113 [8] \reg113 [9] \reg113 [10] \reg113 [11] \reg113 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1335$1219: { $shl$rtl.v:1335$1218_Y [0] $shl$rtl.v:1335$1218_Y [1] $shl$rtl.v:1335$1218_Y [2] $shl$rtl.v:1335$1218_Y [3] $shl$rtl.v:1335$1218_Y [4] $shl$rtl.v:1335$1218_Y [5] $shl$rtl.v:1335$1218_Y [6] $shl$rtl.v:1335$1218_Y [7] $shl$rtl.v:1335$1218_Y [8] $shl$rtl.v:1335$1218_Y [9] $shl$rtl.v:1335$1218_Y [10] $shl$rtl.v:1335$1218_Y [11] $shl$rtl.v:1335$1218_Y [12] $shl$rtl.v:1335$1218_Y [13] $shl$rtl.v:1335$1218_Y [14] $shl$rtl.v:1335$1218_Y [15] $shl$rtl.v:1335$1218_Y [16] $shl$rtl.v:1335$1218_Y [17] $shl$rtl.v:1335$1218_Y [18] $shl$rtl.v:1335$1218_Y [19] $shl$rtl.v:1335$1218_Y [20] $shl$rtl.v:1335$1218_Y [21] $shl$rtl.v:1335$1218_Y [22] $shl$rtl.v:1335$1218_Y [23] $shl$rtl.v:1335$1218_Y [24] $shl$rtl.v:1335$1218_Y [25] $shl$rtl.v:1335$1218_Y [26] $shl$rtl.v:1335$1218_Y [27] $shl$rtl.v:1335$1218_Y [28] $shl$rtl.v:1335$1218_Y [29] $shl$rtl.v:1335$1218_Y [30] $shl$rtl.v:1335$1218_Y [31] $shl$rtl.v:1335$1218_Y [32] $shl$rtl.v:1335$1218_Y [33] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1310$1191: { \reg123 [3] \reg123 [4] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1294$1167: { \reg112 [0] \reg112 [1] \reg112 [2] \reg112 [3] \reg112 [4] \reg112 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1251$1110: { \wire97 [0] \wire97 [1] \wire97 [2] \wire97 [3] \wire97 [4] \wire97 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1234$1088: { $xor$rtl.v:1107$900_Y [0] $xor$rtl.v:1107$900_Y [1] $xor$rtl.v:1107$900_Y [2] $xor$rtl.v:1107$900_Y [3] $xor$rtl.v:1107$900_Y [4] $xor$rtl.v:1107$900_Y [5] $xor$rtl.v:1107$900_Y [6] $xor$rtl.v:1107$900_Y [7] $xor$rtl.v:1107$900_Y [8] $xor$rtl.v:1107$900_Y [9] $xor$rtl.v:1107$900_Y [10] $xor$rtl.v:1107$900_Y [11] $xor$rtl.v:1107$900_Y [12] $xor$rtl.v:1107$900_Y [13] $xor$rtl.v:1107$900_Y [14] $xor$rtl.v:1107$900_Y [15] $xor$rtl.v:1107$900_Y [16] $xor$rtl.v:1107$900_Y [17] $xor$rtl.v:1107$900_Y [18] $xor$rtl.v:1107$900_Y [19] $xor$rtl.v:1107$900_Y [20] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1233$1095: { \reg129 [0] \reg129 [1] \reg129 [2] \reg129 [3] \reg129 [4] \reg129 [5] \reg129 [6] \reg129 [7] \reg129 [8] \reg129 [9] \reg129 [10] \reg129 [11] \reg129 [12] \reg129 [13] \reg129 [14] \reg129 [15] \reg129 [16] \reg129 [17] \reg129 [18] \reg129 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1102$895: { \wire102 [0] \wire102 [1] \wire102 [9] }
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:329$338: { \reg308 [0] \reg308 [1] \reg308 [2] \reg308 [3] \reg308 [4] \reg308 [5] \reg308 [6] \reg308 [7] \reg308 [8] \reg308 [9] \reg308 [10] \reg308 [11] \reg308 [12] \reg308 [13] \reg308 [14] \reg308 [15] \reg308 [16] \reg308 [17] \reg308 [18] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:254$203: { $ternary$rtl.v:254$202_Y [0] $ternary$rtl.v:254$202_Y [1] $ternary$rtl.v:254$202_Y [2] $ternary$rtl.v:254$202_Y [3] $ternary$rtl.v:254$202_Y [4] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:240$180: { \wire266 [0] \wire266 [1] \wire266 [2] \wire266 [3] \wire266 [4] \wire266 [5] \wire266 [6] \wire266 [7] \wire266 [8] \wire266 [9] \wire266 [10] \wire266 [11] \wire266 [12] \wire266 [13] \wire266 [14] \wire266 [15] \wire266 [16] \wire266 [17] \wire266 [18] \wire266 [19] \wire266 [20] \wire266 [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:218$160: { \wire287 [0] \wire287 [1] \wire287 [2] \wire287 [3] \wire287 [4] \wire287 [5] \wire287 [6] \wire287 [7] \wire287 [8] \wire287 [9] \wire287 [10] \wire287 [11] \wire287 [12] \wire287 [13] \wire287 [14] \wire287 [15] \wire287 [16] \wire287 [17] \wire287 [18] \wire287 [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:208$145: { \wire1 [0] \wire1 [1] \wire1 [2] \wire1 [3] \wire1 [4] \wire1 [5] \wire1 [6] \wire1 [7] \wire1 [8] \wire1 [9] \wire1 [10] \wire1 [11] \wire1 [12] \wire1 [13] \wire1 [14] \wire1 [15] \wire1 [16] \wire1 [17] \wire1 [18] \wire1 [19] \wire1 [20] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:161$63: { $ternary$rtl.v:161$62_Y [0] $ternary$rtl.v:161$62_Y [1] $ternary$rtl.v:161$62_Y [2] $ternary$rtl.v:161$62_Y [3] $ternary$rtl.v:161$62_Y [4] $ternary$rtl.v:161$62_Y [5] $ternary$rtl.v:161$62_Y [6] $ternary$rtl.v:161$62_Y [7] $ternary$rtl.v:161$62_Y [8] $ternary$rtl.v:161$62_Y [9] $ternary$rtl.v:161$62_Y [10] $ternary$rtl.v:161$62_Y [11] $ternary$rtl.v:161$62_Y [12] $ternary$rtl.v:161$62_Y [13] $ternary$rtl.v:161$62_Y [14] $ternary$rtl.v:161$62_Y [15] $ternary$rtl.v:161$62_Y [16] $ternary$rtl.v:161$62_Y [17] $ternary$rtl.v:161$62_Y [18] $ternary$rtl.v:161$62_Y [19] $ternary$rtl.v:161$62_Y [20] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:127$18: { \wire0 [0] \wire0 [1] \wire0 [2] \wire0 [3] \wire0 [4] \wire0 [5] \wire0 [6] \wire0 [7] \wire0 [8] \wire0 [9] \wire0 [10] \wire0 [11] \wire0 [12] \wire0 [13] \wire0 [14] \wire0 [15] \wire0 [16] \wire0 [17] \wire0 [18] \wire0 [19] \wire0 [20] \wire0 [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:126$16: { \wire0 [0] \wire0 [1] \wire0 [2] \wire0 [3] \wire0 [4] \wire0 [5] \wire0 [6] \wire0 [7] \wire0 [8] \wire0 [9] \wire0 [10] \wire0 [11] \wire0 [12] \wire0 [13] \wire0 [14] \wire0 [15] \wire0 [16] \wire0 [17] \wire0 [18] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:122$10: { \wire0 [0] \wire0 [1] \wire0 [2] \wire0 [3] \wire0 [4] \wire0 [5] \wire0 [6] \wire0 [7] \wire0 [8] \wire0 [9] \wire0 [10] \wire0 [11] \wire0 [12] \wire0 [13] \wire0 [14] \wire0 [15] \wire0 [16] \wire0 [17] \wire0 [18] \wire0 [19] \wire0 [20] \wire0 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:327$335: { \reg315 [0] \reg315 [1] \reg315 [2] \reg315 [3] \reg315 [4] \reg315 [5] \reg315 [6] \reg315 [7] \reg315 [8] \reg315 [9] \reg315 [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:315$311: { \reg312 [0] \reg312 [1] \reg312 [2] \reg312 [3] \reg312 [4] \reg312 [5] \reg312 [6] \reg312 [7] \reg312 [8] \reg312 [9] \reg312 [10] \reg312 [11] \reg312 [12] \reg312 [13] \reg312 [14] \reg312 [15] \reg312 [16] \reg312 [17] \reg312 [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:310$300: { \wire287 [0] \wire287 [1] \wire287 [2] \wire287 [3] \wire287 [4] \wire287 [5] \wire287 [6] \wire287 [7] \wire287 [8] \wire287 [9] \wire287 [10] \wire287 [11] \wire287 [12] \wire287 [13] \wire287 [14] \wire287 [15] \wire287 [16] \wire287 [17] \wire287 [18] \wire287 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:300$296: { \wire3 [0] \wire3 [1] \wire3 [2] \wire3 [3] \wire3 [4] \wire3 [5] \wire3 [6] \wire3 [7] \wire3 [8] \wire3 [9] \wire3 [10] \wire3 [11] \wire3 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:293$286: { \wire303 [0] \wire303 [1] \wire303 [2] \wire303 [3] \wire303 [4] \wire303 [5] \wire303 [6] \wire303 [7] \wire303 [8] \wire303 [9] \wire303 [10] \wire303 [11] \wire303 [12] \wire303 [13] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:291$281: { \wire302 [0] \wire302 [1] \wire302 [2] \wire302 [3] \wire302 [4] \wire302 [5] \wire302 [6] \wire302 [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:285$265: { $ternary$rtl.v:285$264_Y [0] $ternary$rtl.v:285$264_Y [1] $ternary$rtl.v:285$264_Y [2] $ternary$rtl.v:285$264_Y [3] $ternary$rtl.v:285$264_Y [4] $ternary$rtl.v:285$264_Y [5] $ternary$rtl.v:285$264_Y [6] $ternary$rtl.v:285$264_Y [7] $ternary$rtl.v:285$264_Y [8] $ternary$rtl.v:285$264_Y [9] $ternary$rtl.v:285$264_Y [10] $ternary$rtl.v:285$264_Y [11] $ternary$rtl.v:285$264_Y [12] $ternary$rtl.v:285$264_Y [13] $ternary$rtl.v:285$264_Y [14] $ternary$rtl.v:285$264_Y [15] $ternary$rtl.v:285$264_Y [16] $ternary$rtl.v:285$264_Y [17] $ternary$rtl.v:285$264_Y [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:285$256: { $neg$rtl.v:285$255_Y [0] $neg$rtl.v:285$255_Y [1] $neg$rtl.v:285$255_Y [2] $neg$rtl.v:285$255_Y [3] $neg$rtl.v:285$255_Y [4] $neg$rtl.v:285$255_Y [5] $neg$rtl.v:285$255_Y [6] $neg$rtl.v:285$255_Y [7] $neg$rtl.v:285$255_Y [8] $neg$rtl.v:285$255_Y [9] $neg$rtl.v:285$255_Y [10] $neg$rtl.v:285$255_Y [11] $neg$rtl.v:285$255_Y [12] $neg$rtl.v:285$255_Y [13] $neg$rtl.v:285$255_Y [14] $neg$rtl.v:285$255_Y [15] $neg$rtl.v:285$255_Y [16] $neg$rtl.v:285$255_Y [17] $neg$rtl.v:285$255_Y [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:194$117: { \reg276 [0] \reg276 [1] \reg276 [2] \reg276 [3] \reg276 [4] \reg276 [5] \reg276 [6] \reg276 [7] \reg276 [8] \reg276 [9] \reg276 [10] \reg276 [11] \reg276 [12] \reg276 [13] \reg276 [14] \reg276 [15] \reg276 [16] \reg276 [17] \reg276 [18] \reg276 [19] \reg276 [20] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:181$105: { \wire271 [0] \wire271 [1] \wire271 [2] \wire271 [3] \wire271 [4] \wire271 [5] \wire271 [6] \wire271 [7] \wire271 [8] \wire271 [9] \wire271 [10] \wire271 [11] \wire271 [12] \wire271 [13] \wire271 [14] \wire271 [15] \wire271 [16] \wire271 [17] \wire271 [18] \wire271 [19] \wire271 [20] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:180$99: { \reg275 [0] \reg275 [1] \reg275 [2] \reg275 [3] \reg275 [4] \reg275 [5] \reg275 [6] \reg275 [7] \reg275 [8] \reg275 [9] \reg275 [10] \reg275 [11] \reg275 [12] \reg275 [13] \reg275 [14] \reg275 [15] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:140$46: { $mul$rtl.v:140$45_Y [0] $mul$rtl.v:140$45_Y [1] $mul$rtl.v:140$45_Y [2] $mul$rtl.v:140$45_Y [3] $mul$rtl.v:140$45_Y [4] $mul$rtl.v:140$45_Y [5] $mul$rtl.v:140$45_Y [6] $mul$rtl.v:140$45_Y [7] $mul$rtl.v:140$45_Y [8] $mul$rtl.v:140$45_Y [9] $mul$rtl.v:140$45_Y [10] $mul$rtl.v:140$45_Y [11] $mul$rtl.v:140$45_Y [12] $mul$rtl.v:140$45_Y [13] $mul$rtl.v:140$45_Y [14] $mul$rtl.v:140$45_Y [15] $mul$rtl.v:140$45_Y [16] $mul$rtl.v:140$45_Y [17] $mul$rtl.v:140$45_Y [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:138$40: { \wire0 [2] \wire0 [3] \wire0 [4] \wire0 [5] }
  Optimizing cells in module \top.
Performed a total of 90 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \reg82 = 19'0000000000000000000 to constant driver in module module11.
Promoting init spec \reg81 = 15'000000000000000 to constant driver in module module11.
Promoting init spec \reg84 = 4'0000 to constant driver in module module11.
Promoting init spec \reg83 = 11'00000000000 to constant driver in module module11.
Promoting init spec \reg80 = 13'0000000000000 to constant driver in module module11.
Promoting init spec \reg79 = 3'000 to constant driver in module module11.
Removing $procdff$2816 ($dff) from module module198.
Removing $procdff$2833 ($dff) from module module4.
Removing $procdff$2834 ($dff) from module module4.
Removing $procdff$2835 ($dff) from module module4.
Removing $procdff$2836 ($dff) from module module4.
Removing $procdff$2837 ($dff) from module module4.
Removing $procdff$2838 ($dff) from module module4.
Removing $procdff$2839 ($dff) from module module4.
Removing $procdff$2840 ($dff) from module module4.
Removing $procdff$2841 ($dff) from module module4.
Removing $procdff$2842 ($dff) from module module4.
Removing $procdff$2843 ($dff) from module module4.
Removing $procdff$2853 ($dff) from module module4.
Promoting init spec \reg320 = 4'0000 to constant driver in module top.
Promoting init spec \reg319 = 5'00000 to constant driver in module top.
Promoting init spec \reg318 = 7'0000000 to constant driver in module top.
Promoted 9 init specs to constant drivers.
Replaced 13 DFF cells.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 57 unused wires.
<suppressed ~7 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
<suppressed ~2 debug messages>
Optimizing module module241.
Optimizing module module4.
<suppressed ~19 debug messages>
Optimizing module module90.
Optimizing module top.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~283 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2830 ($dff) from module module4.
Replaced 1 DFF cells.

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 21 unused wires.
<suppressed ~4 debug messages>

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.6.16. Rerunning OPT passes. (Maybe there is more to do..)

2.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~283 debug messages>

2.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.6.23. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 7) from port A of cell module11.$ne$rtl.v:1543$1395 ($ne).
Removed top 6 bits (of 7) from port A of cell module11.$gt$rtl.v:1546$1405 ($gt).
Removed top 6 bits (of 7) from port B of cell module11.$gt$rtl.v:1546$1405 ($gt).
Removed top 8 bits (of 13) from port A of cell module11.$shr$rtl.v:1546$1406 ($shr).
Removed top 21 bits (of 22) from port B of cell module11.$gt$rtl.v:1547$1407 ($gt).
Removed top 17 bits (of 22) from mux cell module11.$ternary$rtl.v:1549$1413 ($mux).
Removed top 15 bits (of 22) from port A of cell module11.$mul$rtl.v:1549$1414 ($mul).
Removed top 17 bits (of 22) from port B of cell module11.$mul$rtl.v:1549$1414 ($mul).
Removed top 18 bits (of 22) from port Y of cell module11.$mul$rtl.v:1549$1414 ($mul).
Removed top 8 bits (of 16) from port B of cell module11.$xnor$rtl.v:1553$1418 ($xnor).
Removed top 11 bits (of 16) from port Y of cell module11.$xnor$rtl.v:1553$1418 ($xnor).
Removed top 8 bits (of 13) from port A of cell module11.$not$rtl.v:1557$1421 ($not).
Removed top 4 bits (of 13) from port A of cell module11.$sshl$rtl.v:1558$1427 ($sshl).
Removed top 6 bits (of 7) from port A of cell module11.$gt$rtl.v:1558$1431 ($gt).
Removed top 8 bits (of 9) from port A of cell module11.$not$rtl.v:1566$1434 ($not).
Removed top 6 bits (of 7) from port A of cell module11.$ge$rtl.v:1573$1438 ($ge).
Removed top 2 bits (of 7) from port B of cell module11.$ge$rtl.v:1573$1438 ($ge).
Removed top 8 bits (of 9) from port A of cell module11.$sshr$rtl.v:1573$1440 ($sshr).
Removed top 4 bits (of 9) from mux cell module11.$ternary$rtl.v:1575$1446 ($mux).
Removed top 2 bits (of 9) from mux cell module11.$ternary$rtl.v:1575$1448 ($mux).
Removed top 13 bits (of 14) from port A of cell module11.$and$rtl.v:1578$1453 ($and).
Removed top 9 bits (of 14) from port Y of cell module11.$and$rtl.v:1578$1453 ($and).
Removed top 7 bits (of 8) from port A of cell module11.$lt$rtl.v:1587$1469 ($lt).
Removed top 7 bits (of 8) from port A of cell module11.$neg$rtl.v:1596$1475 ($neg).
Removed top 4 bits (of 12) from mux cell module11.$ternary$rtl.v:1597$1483 ($mux).
Removed top 16 bits (of 22) from mux cell module11.$ternary$rtl.v:1601$1489 ($mux).
Removed top 7 bits (of 9) from port A of cell module11.$add$rtl.v:1611$1494 ($add).
Removed top 8 bits (of 9) from port B of cell module11.$add$rtl.v:1611$1494 ($add).
Removed top 6 bits (of 9) from port Y of cell module11.$add$rtl.v:1611$1494 ($add).
Removed top 13 bits (of 22) from mux cell module11.$ternary$rtl.v:1621$1506 ($mux).
Removed top 6 bits (of 14) from mux cell module11.$ternary$rtl.v:1619$1501 ($mux).
Removed top 6 bits (of 12) from port B of cell module11.$lt$rtl.v:1620$1502 ($lt).
Removed top 13 bits (of 22) from mux cell module11.$ternary$rtl.v:1621$1504 ($mux).
Removed top 6 bits (of 7) from port B of cell module11.$xnor$rtl.v:1625$1511 ($xnor).
Removed top 14 bits (of 15) from port A of cell module11.$not$rtl.v:1629$1521 ($not).
Removed top 4 bits (of 5) from port A of cell module11.$neg$rtl.v:1637$1540 ($neg).
Removed top 14 bits (of 18) from port A of cell module11.$xnor$rtl.v:1636$1535 ($xnor).
Removed top 4 bits (of 5) from port B of cell module11.$sub$rtl.v:1637$1537 ($sub).
Removed top 18 bits (of 19) from port B of cell module11.$add$rtl.v:1637$1542 ($add).
Removed top 13 bits (of 19) from port Y of cell module11.$add$rtl.v:1637$1542 ($add).
Removed top 13 bits (of 19) from port A of cell module11.$add$rtl.v:1637$1542 ($add).
Removed top 4 bits (of 9) from port Y of cell module11.$sshr$rtl.v:1642$1553 ($sshr).
Removed top 5 bits (of 7) from port A of cell module11.$shl$rtl.v:1652$1559 ($shl).
Removed top 6 bits (of 7) from port B of cell module11.$xnor$rtl.v:1654$1560 ($xnor).
Removed top 11 bits (of 17) from mux cell module11.$ternary$rtl.v:1655$1568 ($mux).
Removed top 11 bits (of 17) from mux cell module11.$ternary$rtl.v:1655$1566 ($mux).
Removed top 1 bits (of 6) from port A of cell module11.$neg$rtl.v:1692$1582 ($neg).
Removed top 14 bits (of 15) from port A of cell module11.$or$rtl.v:1695$1587 ($or).
Removed top 13 bits (of 15) from port B of cell module11.$or$rtl.v:1695$1587 ($or).
Removed top 13 bits (of 15) from port Y of cell module11.$or$rtl.v:1695$1587 ($or).
Removed top 2 bits (of 22) from mux cell module11.$ternary$rtl.v:1697$1592 ($mux).
Removed top 1 bits (of 6) from mux cell module11.$ternary$rtl.v:1705$1606 ($mux).
Removed top 14 bits (of 22) from port B of cell module11.$ne$rtl.v:1717$1617 ($ne).
Removed top 21 bits (of 22) from port B of cell module11.$eq$rtl.v:1717$1618 ($eq).
Removed top 8 bits (of 14) from port A of cell module11.$not$rtl.v:1721$1620 ($not).
Removed top 13 bits (of 14) from port B of cell module11.$xnor$rtl.v:1721$1623 ($xnor).
Removed top 7 bits (of 14) from port Y of cell module11.$neg$rtl.v:1726$1626 ($neg).
Removed top 7 bits (of 14) from port A of cell module11.$neg$rtl.v:1726$1626 ($neg).
Removed top 2 bits (of 3) from port B of cell module11.$le$rtl.v:1728$1628 ($le).
Removed top 21 bits (of 22) from port A of cell module11.$shr$rtl.v:1732$1633 ($shr).
Removed top 13 bits (of 21) from mux cell module11.$ternary$rtl.v:1735$1638 ($mux).
Removed top 6 bits (of 21) from port A of cell module11.$mul$rtl.v:1737$1645 ($mul).
Removed top 3 bits (of 21) from port B of cell module11.$sub$rtl.v:1737$1644 ($sub).
Removed top 13 bits (of 21) from port A of cell module11.$xnor$rtl.v:1737$1646 ($xnor).
Removed top 12 bits (of 21) from port Y of cell module11.$xnor$rtl.v:1737$1646 ($xnor).
Removed top 14 bits (of 22) from mux cell module11.$ternary$rtl.v:1742$1655 ($mux).
Removed top 9 bits (of 11) from port B of cell module11.$xor$rtl.v:1738$1648 ($xor).
Removed top 15 bits (of 16) from port B of cell module11.$le$rtl.v:1743$1657 ($le).
Removed top 1 bits (of 18) from mux cell module11.$ternary$rtl.v:1753$1669 ($mux).
Removed top 9 bits (of 17) from mux cell module11.$ternary$rtl.v:1753$1667 ($mux).
Removed top 11 bits (of 18) from mux cell module11.$ternary$rtl.v:1756$1676 ($mux).
Removed top 2 bits (of 8) from port A of cell module11.$xnor$rtl.v:1758$1680 ($xnor).
Removed top 3 bits (of 18) from mux cell module11.$ternary$rtl.v:1759$1683 ($mux).
Removed top 1 bits (of 18) from port A of cell module11.$add$rtl.v:1759$1687 ($add).
Removed top 9 bits (of 18) from port Y of cell module11.$add$rtl.v:1759$1687 ($add).
Removed top 8 bits (of 17) from port A of cell module11.$add$rtl.v:1759$1687 ($add).
Removed top 9 bits (of 18) from port B of cell module11.$add$rtl.v:1759$1687 ($add).
Removed top 4 bits (of 15) from port Y of cell module11.$sshl$rtl.v:1760$1692 ($sshl).
Removed top 14 bits (of 22) from mux cell module11.$ternary$rtl.v:1760$1690 ($mux).
Removed top 12 bits (of 15) from port A of cell module11.$mul$rtl.v:1765$1693 ($mul).
Removed top 11 bits (of 15) from port Y of cell module11.$mul$rtl.v:1765$1693 ($mul).
Removed top 9 bits (of 13) from mux cell module11.$ternary$rtl.v:1771$1712 ($mux).
Removed top 9 bits (of 17) from port B of cell module11.$ne$rtl.v:1773$1716 ($ne).
Removed top 15 bits (of 22) from port A of cell module11.$mul$rtl.v:1793$1733 ($mul).
Removed top 4 bits (of 22) from port B of cell module11.$mul$rtl.v:1793$1733 ($mul).
Removed top 2 bits (of 8) from port A of cell module11.$eq$rtl.v:1796$1737 ($eq).
Removed top 2 bits (of 3) from port B of cell module11.$le$rtl.v:1796$1738 ($le).
Removed top 17 bits (of 18) from port A of cell module11.$or$rtl.v:1820$1766 ($or).
Removed top 7 bits (of 9) from port B of cell module11.$xor$rtl.v:1823$1777 ($xor).
Removed top 7 bits (of 8) from port A of cell module11.$sshl$rtl.v:1823$1778 ($sshl).
Removed top 14 bits (of 22) from mux cell module11.$procmux$1908 ($mux).
Removed top 11 bits (of 13) from mux cell module11.$procmux$2076 ($mux).
Removed top 21 bits (of 22) from mux cell module11.$procmux$2073 ($mux).
Removed top 2 bits (of 8) from FF cell module11.$procdff$2699 ($dff).
Removed top 14 bits (of 22) from FF cell module11.$procdff$2719 ($dff).
Removed top 3 bits (of 4) from FF cell module11.$procdff$2721 ($dff).
Removed top 7 bits (of 14) from FF cell module11.$procdff$2722 ($dff).
Removed top 8 bits (of 13) from FF cell module11.$procdff$2723 ($dff).
Removed top 10 bits (of 18) from FF cell module11.$procdff$2731 ($dff).
Removed top 11 bits (of 13) from FF cell module11.$procdff$2735 ($dff).
Removed top 21 bits (of 22) from FF cell module11.$procdff$2736 ($dff).
Removed top 12 bits (of 17) from FF cell module11.$procdff$2738 ($dff).
Removed top 15 bits (of 16) from FF cell module11.$procdff$2739 ($dff).
Removed top 18 bits (of 19) from FF cell module11.$procdff$2740 ($dff).
Removed top 21 bits (of 22) from FF cell module11.$procdff$2745 ($dff).
Removed top 17 bits (of 18) from FF cell module11.$procdff$2746 ($dff).
Removed top 6 bits (of 8) from mux cell module11.$procmux$1911 ($mux).
Removed top 2 bits (of 9) from port Y of cell module11.$sshr$rtl.v:1573$1440 ($sshr).
Removed top 15 bits (of 22) from mux cell module11.$ternary$rtl.v:1582$1463 ($mux).
Removed top 15 bits (of 31) from port A of cell module11.$lt$rtl.v:1611$1493 ($lt).
Removed top 13 bits (of 18) from mux cell module11.$ternary$rtl.v:1625$1510 ($mux).
Removed top 10 bits (of 18) from port B of cell module11.$gt$rtl.v:1637$1536 ($gt).
Removed top 17 bits (of 18) from port A of cell module11.$or$rtl.v:1641$1548 ($or).
Removed top 21 bits (of 22) from port B of cell module11.$or$rtl.v:1641$1548 ($or).
Removed top 21 bits (of 22) from port Y of cell module11.$or$rtl.v:1641$1548 ($or).
Removed top 21 bits (of 22) from mux cell module11.$ternary$rtl.v:1716$1612 ($mux).
Removed top 11 bits (of 17) from mux cell module11.$ternary$rtl.v:1717$1615 ($mux).
Removed top 15 bits (of 16) from port A of cell module11.$le$rtl.v:1743$1657 ($le).
Removed top 9 bits (of 17) from mux cell module11.$ternary$rtl.v:1753$1669 ($mux).
Removed top 9 bits (of 18) from mux cell module11.$ternary$rtl.v:1759$1686 ($mux).
Removed top 10 bits (of 18) from mux cell module11.$ternary$rtl.v:1769$1704 ($mux).
Removed top 12 bits (of 18) from mux cell module11.$ternary$rtl.v:1770$1707 ($mux).
Removed top 17 bits (of 18) from port B of cell module11.$mul$rtl.v:1793$1733 ($mul).
Removed top 14 bits (of 22) from port Y of cell module11.$mul$rtl.v:1793$1733 ($mul).
Removed top 21 bits (of 22) from port A of cell module11.$mul$rtl.v:1792$1728 ($mul).
Removed top 19 bits (of 22) from port Y of cell module11.$mul$rtl.v:1792$1728 ($mul).
Removed top 21 bits (of 22) from port A of cell module11.$xnor$rtl.v:1793$1734 ($xnor).
Removed top 14 bits (of 22) from port B of cell module11.$xnor$rtl.v:1793$1734 ($xnor).
Removed top 11 bits (of 19) from mux cell module11.$procmux$1918 ($mux).
Removed top 11 bits (of 14) from mux cell module11.$procmux$1981 ($mux).
Removed top 2 bits (of 8) from mux cell module11.$procmux$2013 ($mux).
Removed cell module11.$procdff$2731 ($dff).
Removed top 9 bits (of 18) from mux cell module11.$ternary$rtl.v:1759$1685 ($mux).
Removed top 2 bits (of 8) from port Y of cell module11.$sshl$rtl.v:1823$1778 ($sshl).
Removed top 9 bits (of 18) from port Y of cell module11.$xnor$rtl.v:1758$1680 ($xnor).
Removed top 6 bits (of 15) from mux cell module11.$ternary$rtl.v:1759$1683 ($mux).
Removed top 17 bits (of 18) from wire module11.$0\reg23[17:0].
Removed top 21 bits (of 22) from wire module11.$0\reg24[21:0].
Removed top 18 bits (of 19) from wire module11.$0\reg29[18:0].
Removed top 15 bits (of 16) from wire module11.$0\reg33[15:0].
Removed top 21 bits (of 22) from wire module11.$0\reg41[21:0].
Removed top 11 bits (of 13) from wire module11.$0\reg42[12:0].
Removed top 7 bits (of 14) from wire module11.$0\reg55[13:0].
Removed top 3 bits (of 4) from wire module11.$0\reg56[3:0].
Removed top 14 bits (of 22) from wire module11.$0\reg58[21:0].
Removed top 6 bits (of 8) from wire module11.$0\reg59[7:0].
Removed top 2 bits (of 8) from wire module11.$0\reg78[7:0].
Removed top 6 bits (of 9) from wire module11.$add$rtl.v:1611$1494_Y.
Removed top 9 bits (of 18) from wire module11.$add$rtl.v:1759$1687_Y.
Removed top 12 bits (of 13) from wire module11.$eq$rtl.v:1557$1422_Y.
Removed top 6 bits (of 7) from wire module11.$eq$rtl.v:1717$1618_Y.
Removed top 8 bits (of 9) from wire module11.$ge$rtl.v:1573$1438_Y.
Removed top 21 bits (of 22) from wire module11.$ge$rtl.v:1706$1607_Y.
Removed top 4 bits (of 5) from wire module11.$gt$rtl.v:1637$1536_Y.
Removed top 21 bits (of 22) from wire module11.$le$rtl.v:1621$1503_Y.
Removed top 2 bits (of 3) from wire module11.$le$rtl.v:1728$1627_Y.
Removed top 6 bits (of 7) from wire module11.$le$rtl.v:1728$1628_Y.
Removed top 7 bits (of 8) from wire module11.$le$rtl.v:1796$1738_Y.
Removed top 4 bits (of 5) from wire module11.$logic_and$rtl.v:1637$1539_Y.
Removed top 6 bits (of 7) from wire module11.$logic_not$rtl.v:1548$1409_Y.
Removed top 13 bits (of 14) from wire module11.$logic_not$rtl.v:1619$1499_Y.
Removed top 14 bits (of 15) from wire module11.$logic_not$rtl.v:1629$1520_Y.
Removed top 16 bits (of 17) from wire module11.$logic_not$rtl.v:1721$1625_Y.
Removed top 18 bits (of 19) from wire module11.$logic_not$rtl.v:1790$1727_Y.
Removed top 7 bits (of 8) from wire module11.$logic_or$rtl.v:1587$1468_Y.
Removed top 4 bits (of 5) from wire module11.$logic_or$rtl.v:1661$1573_Y.
Removed top 15 bits (of 16) from wire module11.$logic_or$rtl.v:1743$1656_Y.
Removed top 11 bits (of 15) from wire module11.$mul$rtl.v:1765$1693_Y.
Removed top 19 bits (of 22) from wire module11.$mul$rtl.v:1792$1728_Y.
Removed top 14 bits (of 22) from wire module11.$mul$rtl.v:1793$1733_Y.
Removed top 18 bits (of 19) from wire module11.$ne$rtl.v:1637$1541_Y.
Removed top 10 bits (of 11) from wire module11.$ne$rtl.v:1773$1716_Y.
Removed top 7 bits (of 14) from wire module11.$neg$rtl.v:1726$1626_Y.
Removed top 21 bits (of 22) from wire module11.$or$rtl.v:1641$1548_Y.
Removed top 13 bits (of 15) from wire module11.$or$rtl.v:1695$1587_Y.
Removed top 2 bits (of 9) from wire module11.$pos$rtl.v:1575$1449_Y.
Removed top 11 bits (of 19) from wire module11.$procmux$1918_Y.
Removed top 11 bits (of 14) from wire module11.$procmux$1981_Y.
Removed top 21 bits (of 22) from wire module11.$reduce_and$rtl.v:1784$1724_Y.
Removed top 6 bits (of 7) from wire module11.$reduce_or$rtl.v:1546$1404_Y.
Removed top 13 bits (of 14) from wire module11.$reduce_xnor$rtl.v:1766$1699_Y.
Removed top 7 bits (of 8) from wire module11.$reduce_xor$rtl.v:1596$1474_Y.
Removed top 21 bits (of 22) from wire module11.$reduce_xor$rtl.v:1612$1497_Y.
Removed top 12 bits (of 13) from wire module11.$reduce_xor$rtl.v:1623$1507_Y.
Removed top 21 bits (of 22) from wire module11.$reduce_xor$rtl.v:1732$1632_Y.
Removed top 16 bits (of 17) from wire module11.$reduce_xor$rtl.v:1784$1721_Y.
Removed top 4 bits (of 15) from wire module11.$sshl$rtl.v:1760$1692_Y.
Removed top 2 bits (of 8) from wire module11.$sshl$rtl.v:1823$1778_Y.
Removed top 2 bits (of 9) from wire module11.$sshr$rtl.v:1573$1440_Y.
Removed top 2 bits (of 22) from wire module11.$sub$rtl.v:1792$1729_Y.
Removed top 17 bits (of 22) from wire module11.$ternary$rtl.v:1549$1413_Y.
Removed top 6 bits (of 9) from wire module11.$ternary$rtl.v:1575$1446_Y.
Removed top 15 bits (of 22) from wire module11.$ternary$rtl.v:1582$1463_Y.
Removed top 16 bits (of 22) from wire module11.$ternary$rtl.v:1601$1489_Y.
Removed top 6 bits (of 14) from wire module11.$ternary$rtl.v:1619$1501_Y.
Removed top 13 bits (of 22) from wire module11.$ternary$rtl.v:1621$1504_Y.
Removed top 13 bits (of 22) from wire module11.$ternary$rtl.v:1621$1506_Y.
Removed top 11 bits (of 17) from wire module11.$ternary$rtl.v:1655$1566_Y.
Removed top 12 bits (of 17) from wire module11.$ternary$rtl.v:1655$1568_Y.
Removed top 1 bits (of 22) from wire module11.$ternary$rtl.v:1659$1571_Y.
Removed top 2 bits (of 22) from wire module11.$ternary$rtl.v:1697$1592_Y.
Removed top 2 bits (of 6) from wire module11.$ternary$rtl.v:1705$1606_Y.
Removed top 21 bits (of 22) from wire module11.$ternary$rtl.v:1716$1612_Y.
Removed top 11 bits (of 17) from wire module11.$ternary$rtl.v:1717$1615_Y.
Removed top 13 bits (of 21) from wire module11.$ternary$rtl.v:1735$1638_Y.
Removed top 14 bits (of 22) from wire module11.$ternary$rtl.v:1742$1655_Y.
Removed top 9 bits (of 17) from wire module11.$ternary$rtl.v:1753$1667_Y.
Removed top 10 bits (of 18) from wire module11.$ternary$rtl.v:1753$1669_Y.
Removed top 11 bits (of 18) from wire module11.$ternary$rtl.v:1756$1676_Y.
Removed top 9 bits (of 18) from wire module11.$ternary$rtl.v:1759$1683_Y.
Removed top 9 bits (of 18) from wire module11.$ternary$rtl.v:1759$1685_Y.
Removed top 13 bits (of 18) from wire module11.$ternary$rtl.v:1759$1686_Y.
Removed top 14 bits (of 22) from wire module11.$ternary$rtl.v:1760$1690_Y.
Removed top 11 bits (of 18) from wire module11.$ternary$rtl.v:1769$1704_Y.
Removed top 12 bits (of 18) from wire module11.$ternary$rtl.v:1770$1707_Y.
Removed top 9 bits (of 13) from wire module11.$ternary$rtl.v:1771$1712_Y.
Removed top 1 bits (of 8) from wire module11.$ternary$rtl.v:1773$1715_Y.
Removed top 12 bits (of 21) from wire module11.$xnor$rtl.v:1737$1646_Y.
Removed top 9 bits (of 18) from wire module11.$xnor$rtl.v:1758$1680_Y.
Removed top 6 bits (of 7) from wire module11.wire17.
Removed top 21 bits (of 22) from wire module11.wire18.
Removed top 8 bits (of 9) from wire module11.wire19.
Removed top 6 bits (of 14) from wire module11.wire34.
Removed top 2 bits (of 8) from wire module11.wire35.
Removed top 12 bits (of 15) from wire module11.wire38.
Removed top 6 bits (of 17) from mux cell module198.$ternary$rtl.v:812$684 ($mux).
Removed top 5 bits (of 16) from mux cell module198.$ternary$rtl.v:819$691 ($mux).
Removed top 19 bits (of 31) from mux cell module198.$ternary$rtl.v:824$709 ($mux).
Removed top 19 bits (of 31) from port B of cell module198.$shl$rtl.v:824$710 ($shl).
Removed top 2 bits (of 11) from port A of cell module198.$xnor$rtl.v:827$715 ($xnor).
Removed top 12 bits (of 22) from mux cell module198.$ternary$rtl.v:845$727 ($mux).
Removed top 6 bits (of 16) from mux cell module198.$ternary$rtl.v:847$734 ($mux).
Removed top 3 bits (of 7) from port A of cell module198.$gt$rtl.v:850$739 ($gt).
Removed top 9 bits (of 22) from mux cell module198.$ternary$rtl.v:853$742 ($mux).
Removed top 9 bits (of 23) from port A of cell module198.$neg$rtl.v:854$743 ($neg).
Removed top 7 bits (of 8) from port A of cell module198.$le$rtl.v:855$745 ($le).
Removed top 11 bits (of 20) from mux cell module198.$ternary$rtl.v:855$750 ($mux).
Removed top 16 bits (of 20) from port Y of cell module198.$xor$rtl.v:864$766 ($xor).
Removed top 7 bits (of 8) from mux cell module198.$ternary$rtl.v:869$783 ($mux).
Removed top 19 bits (of 22) from port A of cell module198.$le$rtl.v:879$785 ($le).
Removed top 11 bits (of 16) from port A of cell module198.$shr$rtl.v:881$792 ($shr).
Removed top 9 bits (of 10) from port A of cell module198.$shl$rtl.v:883$794 ($shl).
Removed top 6 bits (of 10) from mux cell module198.$ternary$rtl.v:890$802 ($mux).
Removed top 3 bits (of 11) from mux cell module198.$ternary$rtl.v:906$809 ($mux).
Removed top 11 bits (of 22) from mux cell module198.$ternary$rtl.v:911$817 ($mux).
Removed top 11 bits (of 22) from mux cell module198.$ternary$rtl.v:911$819 ($mux).
Removed top 6 bits (of 7) from port B of cell module198.$mul$rtl.v:919$821 ($mul).
Removed top 6 bits (of 7) from port B of cell module198.$gt$rtl.v:919$822 ($gt).
Removed top 8 bits (of 11) from mux cell module198.$ternary$rtl.v:928$826 ($mux).
Removed top 1 bits (of 4) from mux cell module198.$procmux$2353 ($mux).
Removed top 12 bits (of 13) from mux cell module198.$procmux$2358 ($mux).
Removed top 2 bits (of 3) from mux cell module198.$procmux$2383 ($mux).
Removed top 9 bits (of 16) from mux cell module198.$procmux$2392 ($mux).
Removed top 4 bits (of 8) from mux cell module198.$procmux$2410 ($mux).
Removed top 10 bits (of 11) from FF cell module198.$procdff$2800 ($dff).
Removed top 3 bits (of 4) from FF cell module198.$procdff$2813 ($dff).
Removed top 1 bits (of 4) from FF cell module198.$procdff$2814 ($dff).
Removed top 9 bits (of 10) from FF cell module198.$procdff$2815 ($dff).
Removed top 12 bits (of 17) from FF cell module198.$procdff$2817 ($dff).
Removed top 6 bits (of 11) from mux cell module198.$ternary$rtl.v:812$684 ($mux).
Removed top 5 bits (of 16) from mux cell module198.$ternary$rtl.v:819$693 ($mux).
Removed top 2 bits (of 11) from mux cell module198.$ternary$rtl.v:819$691 ($mux).
Removed top 4 bits (of 9) from mux cell module198.$ternary$rtl.v:827$714 ($mux).
Removed top 4 bits (of 9) from port A of cell module198.$xnor$rtl.v:827$715 ($xnor).
Removed top 6 bits (of 11) from port B of cell module198.$xnor$rtl.v:827$715 ($xnor).
Removed top 6 bits (of 16) from mux cell module198.$ternary$rtl.v:847$733 ($mux).
Removed top 10 bits (of 13) from mux cell module198.$ternary$rtl.v:853$742 ($mux).
Removed top 3 bits (of 4) from port B of cell module198.$xor$rtl.v:864$766 ($xor).
Removed top 4 bits (of 9) from port B of cell module198.$lt$rtl.v:865$773 ($lt).
Removed top 4 bits (of 9) from port B of cell module198.$sshr$rtl.v:869$777 ($sshr).
Removed top 6 bits (of 11) from port B of cell module198.$le$rtl.v:879$785 ($le).
Removed top 1 bits (of 4) from mux cell module198.$ternary$rtl.v:890$802 ($mux).
Removed top 6 bits (of 11) from mux cell module198.$ternary$rtl.v:911$817 ($mux).
Removed top 6 bits (of 16) from port Y of cell module198.$not$rtl.v:847$731 ($not).
Removed top 6 bits (of 16) from port A of cell module198.$not$rtl.v:847$731 ($not).
Removed top 6 bits (of 16) from mux cell module198.$ternary$rtl.v:847$730 ($mux).
Removed top 9 bits (of 10) from wire module198.$0\reg211[9:0].
Removed top 3 bits (of 4) from wire module198.$0\reg213[3:0].
Removed top 10 bits (of 11) from wire module198.$0\reg228[10:0].
Removed top 19 bits (of 20) from wire module198.$eq$rtl.v:855$748_Y.
Removed top 13 bits (of 14) from wire module198.$gt$rtl.v:919$822_Y.
Removed top 3 bits (of 4) from wire module198.$logic_and$rtl.v:909$811_Y.
Removed top 9 bits (of 10) from wire module198.$logic_not$rtl.v:862$757_Y.
Removed top 7 bits (of 8) from wire module198.$logic_not$rtl.v:869$780_Y.
Removed top 3 bits (of 4) from wire module198.$logic_not$rtl.v:880$787_Y.
Removed top 2 bits (of 3) from wire module198.$lt$rtl.v:865$773_Y.
Removed top 12 bits (of 13) from wire module198.$lt$rtl.v:881$793_Y.
Removed top 6 bits (of 16) from wire module198.$not$rtl.v:847$731_Y.
Removed top 1 bits (of 4) from wire module198.$procmux$2353_Y.
Removed top 12 bits (of 13) from wire module198.$procmux$2358_Y.
Removed top 2 bits (of 3) from wire module198.$procmux$2383_Y.
Removed top 9 bits (of 16) from wire module198.$procmux$2392_Y.
Removed top 4 bits (of 8) from wire module198.$procmux$2410_Y.
Removed top 7 bits (of 8) from wire module198.$reduce_and$rtl.v:811$678_Y.
Removed top 35 bits (of 36) from wire module198.$reduce_or$rtl.v:819$694_Y.
Removed top 16 bits (of 17) from wire module198.$reduce_xnor$rtl.v:812$682_Y.
Removed top 7 bits (of 8) from wire module198.$reduce_xnor$rtl.v:855$744_Y.
Removed top 1 bits (of 2) from wire module198.$reduce_xnor$rtl.v:881$789_Y.
Removed top 15 bits (of 16) from wire module198.$reduce_xnor$rtl.v:899$807_Y.
Removed top 1 bits (of 2) from wire module198.$reduce_xor$rtl.v:896$803_Y.
Removed top 12 bits (of 17) from wire module198.$ternary$rtl.v:812$684_Y.
Removed top 7 bits (of 16) from wire module198.$ternary$rtl.v:819$691_Y.
Removed top 5 bits (of 16) from wire module198.$ternary$rtl.v:819$693_Y.
Removed top 19 bits (of 31) from wire module198.$ternary$rtl.v:824$709_Y.
Removed top 6 bits (of 16) from wire module198.$ternary$rtl.v:847$733_Y.
Removed top 6 bits (of 16) from wire module198.$ternary$rtl.v:847$734_Y.
Removed top 11 bits (of 20) from wire module198.$ternary$rtl.v:855$750_Y.
Removed top 7 bits (of 8) from wire module198.$ternary$rtl.v:869$783_Y.
Removed top 7 bits (of 10) from wire module198.$ternary$rtl.v:890$802_Y.
Removed top 3 bits (of 11) from wire module198.$ternary$rtl.v:906$809_Y.
Removed top 17 bits (of 22) from wire module198.$ternary$rtl.v:911$817_Y.
Removed top 11 bits (of 22) from wire module198.$ternary$rtl.v:911$819_Y.
Removed top 16 bits (of 20) from wire module198.$xor$rtl.v:864$766_Y.
Removed top 19 bits (of 22) from wire module198.wire203.
Removed top 4 bits (of 9) from wire module198.wire205.
Removed top 6 bits (of 11) from wire module198.wire209.
Removed top 16 bits (of 17) from wire module198.wire230.
Removed top 4 bits (of 8) from port A of cell module241.$neg$rtl.v:676$606 ($neg).
Removed top 1 bits (of 22) from port A of cell module241.$sshr$rtl.v:678$607 ($sshr).
Removed top 1 bits (of 7) from mux cell module241.$ternary$rtl.v:688$617 ($mux).
Removed top 17 bits (of 22) from mux cell module241.$ternary$rtl.v:704$637 ($mux).
Removed top 17 bits (of 22) from mux cell module241.$ternary$rtl.v:704$640 ($mux).
Removed top 20 bits (of 22) from port A of cell module241.$sshl$rtl.v:713$645 ($sshl).
Removed top 18 bits (of 19) from port A of cell module241.$add$rtl.v:724$654 ($add).
Removed top 11 bits (of 19) from port B of cell module241.$eq$rtl.v:724$655 ($eq).
Removed top 11 bits (of 19) from mux cell module241.$procmux$2454 ($mux).
Removed top 12 bits (of 19) from mux cell module241.$procmux$2448 ($mux).
Removed top 19 bits (of 20) from wire module241.$le$rtl.v:727$661_Y.
Removed top 18 bits (of 19) from wire module241.$logic_not$rtl.v:724$657_Y.
Removed top 12 bits (of 19) from wire module241.$procmux$2448_Y.
Removed top 11 bits (of 19) from wire module241.$procmux$2454_Y.
Removed top 17 bits (of 18) from wire module241.$reduce_and$rtl.v:700$626_Y.
Removed top 21 bits (of 22) from wire module241.$reduce_xnor$rtl.v:704$633_Y.
Removed top 18 bits (of 19) from wire module241.$reduce_xnor$rtl.v:723$651_Y.
Removed top 1 bits (of 7) from wire module241.$ternary$rtl.v:688$617_Y.
Removed top 17 bits (of 22) from wire module241.$ternary$rtl.v:704$637_Y.
Removed top 17 bits (of 22) from wire module241.$ternary$rtl.v:704$640_Y.
Removed top 2 bits (of 5) from wire module241.wire250.
Removed top 16 bits (of 17) from wire module241.wire251.
Removed top 2 bits (of 3) from port A of cell module4.$shr$rtl.v:462$394 ($shr).
Removed top 21 bits (of 22) from port B of cell module4.$sub$rtl.v:479$419 ($sub).
Removed top 18 bits (of 22) from port Y of cell module4.$sub$rtl.v:479$419 ($sub).
Removed top 18 bits (of 22) from port A of cell module4.$sub$rtl.v:479$419 ($sub).
Removed top 3 bits (of 16) from port A of cell module4.$not$rtl.v:487$424 ($not).
Removed top 3 bits (of 16) from mux cell module4.$ternary$rtl.v:489$431 ($mux).
Removed top 3 bits (of 16) from port B of cell module4.$xor$rtl.v:489$432 ($xor).
Removed top 7 bits (of 28) from mux cell module4.$ternary$rtl.v:493$443 ($mux).
Removed top 1 bits (of 22) from port Y of cell module4.$not$rtl.v:493$442 ($not).
Removed top 1 bits (of 22) from port A of cell module4.$not$rtl.v:493$442 ($not).
Removed top 7 bits (of 22) from port A of cell module4.$not$rtl.v:549$452 ($not).
Removed top 5 bits (of 13) from port B of cell module4.$eq$rtl.v:549$459 ($eq).
Removed top 20 bits (of 21) from port B of cell module4.$xnor$rtl.v:553$464 ($xnor).
Removed top 17 bits (of 37) from mux cell module4.$ternary$rtl.v:553$466 ($mux).
Removed top 6 bits (of 22) from mux cell module4.$ternary$rtl.v:601$520 ($mux).
Removed top 21 bits (of 42) from port A of cell module4.$and$rtl.v:614$536 ($and).
Removed top 41 bits (of 42) from port B of cell module4.$and$rtl.v:614$536 ($and).
Removed top 21 bits (of 42) from port Y of cell module4.$and$rtl.v:614$536 ($and).
Removed top 28 bits (of 42) from mux cell module4.$ternary$rtl.v:614$539 ($mux).
Removed top 16 bits (of 22) from port A of cell module4.$neg$rtl.v:623$551 ($neg).
Removed top 13 bits (of 14) from port A of cell module4.$le$rtl.v:626$566 ($le).
Removed top 2 bits (of 8) from port Y of cell module4.$xnor$rtl.v:631$572 ($xnor).
Removed top 9 bits (of 10) from FF cell module4.$procdff$2828 ($dff).
Removed top 3 bits (of 6) from FF cell module4.$procdff$2832 ($dff).
Removed top 2 bits (of 6) from FF cell module4.$procdff$2844 ($dff).
Removed top 1 bits (of 5) from FF cell module4.$procdff$2845 ($dff).
Removed top 12 bits (of 13) from FF cell module4.$procdff$2847 ($dff).
Removed top 20 bits (of 21) from FF cell module4.$procdff$2852 ($dff).
Removed top 18 bits (of 22) from mux cell module4.$ternary$rtl.v:479$414 ($mux).
Removed top 5 bits (of 13) from mux cell module4.$ternary$rtl.v:489$431 ($mux).
Removed top 17 bits (of 21) from port Y of cell module4.$xnor$rtl.v:553$464 ($xnor).
Removed top 6 bits (of 22) from port Y of cell module4.$not$rtl.v:600$513 ($not).
Removed top 6 bits (of 22) from port A of cell module4.$not$rtl.v:600$513 ($not).
Removed top 7 bits (of 21) from port Y of cell module4.$and$rtl.v:614$536 ($and).
Removed top 7 bits (of 21) from port A of cell module4.$and$rtl.v:614$536 ($and).
Removed top 3 bits (of 6) from port A of cell module4.$neg$rtl.v:623$551 ($neg).
Removed top 18 bits (of 22) from mux cell module4.$ternary$rtl.v:479$411 ($mux).
Removed top 7 bits (of 21) from mux cell module4.$ternary$rtl.v:614$530 ($mux).
Removed top 18 bits (of 22) from mux cell module4.$ternary$rtl.v:479$408 ($mux).
Removed top 18 bits (of 22) from mux cell module4.$ternary$rtl.v:479$406 ($mux).
Removed top 12 bits (of 13) from wire module4.$0\reg165[12:0].
Removed top 9 bits (of 10) from wire module4.$0\reg235[9:0].
Removed top 28 bits (of 42) from wire module4.$and$rtl.v:614$536_Y.
Removed top 21 bits (of 22) from wire module4.$ge$rtl.v:478$403_Y.
Removed top 6 bits (of 22) from wire module4.$mul$rtl.v:600$514_Y.
Removed top 1 bits (of 22) from wire module4.$not$rtl.v:493$442_Y.
Removed top 18 bits (of 22) from wire module4.$sub$rtl.v:479$419_Y.
Removed top 18 bits (of 22) from wire module4.$ternary$rtl.v:479$406_Y.
Removed top 18 bits (of 22) from wire module4.$ternary$rtl.v:479$408_Y.
Removed top 18 bits (of 22) from wire module4.$ternary$rtl.v:479$411_Y.
Removed top 18 bits (of 22) from wire module4.$ternary$rtl.v:479$414_Y.
Removed top 8 bits (of 16) from wire module4.$ternary$rtl.v:489$431_Y.
Removed top 17 bits (of 21) from wire module4.$xnor$rtl.v:553$464_Y.
Removed top 14 bits (of 16) from wire module4.wire10.
Removed top 7 bits (of 8) from wire module4.wire179.
Removed top 17 bits (of 18) from wire module4.wire236.
Removed top 14 bits (of 21) from mux cell module90.$ternary$rtl.v:1081$862 ($mux).
Removed top 14 bits (of 15) from port A of cell module90.$xnor$rtl.v:1081$864 ($xnor).
Removed top 15 bits (of 16) from port A of cell module90.$gt$rtl.v:1085$866 ($gt).
Removed top 13 bits (of 21) from port A of cell module90.$sshl$rtl.v:1085$869 ($sshl).
Removed top 17 bits (of 21) from port Y of cell module90.$sshl$rtl.v:1085$869 ($sshl).
Removed top 14 bits (of 15) from port B of cell module90.$xnor$rtl.v:1088$873 ($xnor).
Removed top 15 bits (of 22) from mux cell module90.$ternary$rtl.v:1089$879 ($mux).
Removed top 2 bits (of 8) from mux cell module90.$ternary$rtl.v:1089$877 ($mux).
Removed top 12 bits (of 13) from port A of cell module90.$xnor$rtl.v:1091$883 ($xnor).
Removed top 10 bits (of 13) from port Y of cell module90.$xnor$rtl.v:1091$883 ($xnor).
Removed top 14 bits (of 15) from port A of cell module90.$lt$rtl.v:1098$885 ($lt).
Removed top 8 bits (of 9) from port A of cell module90.$add$rtl.v:1102$898 ($add).
Removed top 1 bits (of 9) from port B of cell module90.$add$rtl.v:1102$898 ($add).
Removed top 7 bits (of 15) from port B of cell module90.$gt$rtl.v:1107$901 ($gt).
Removed top 4 bits (of 20) from mux cell module90.$ternary$rtl.v:1108$906 ($mux).
Removed top 4 bits (of 20) from mux cell module90.$ternary$rtl.v:1108$907 ($mux).
Removed top 8 bits (of 12) from port A of cell module90.$sshr$rtl.v:1110$909 ($sshr).
Removed top 4 bits (of 20) from port A of cell module90.$xnor$rtl.v:1112$920 ($xnor).
Removed top 19 bits (of 20) from port B of cell module90.$xnor$rtl.v:1112$920 ($xnor).
Removed top 14 bits (of 20) from port Y of cell module90.$xnor$rtl.v:1112$920 ($xnor).
Removed top 7 bits (of 8) from port A of cell module90.$xnor$rtl.v:1115$925 ($xnor).
Removed top 2 bits (of 3) from port A of cell module90.$le$rtl.v:1115$924 ($le).
Removed top 14 bits (of 15) from port B of cell module90.$shl$rtl.v:1119$930 ($shl).
Removed top 2 bits (of 9) from mux cell module90.$ternary$rtl.v:1123$937 ($mux).
Removed top 3 bits (of 16) from mux cell module90.$ternary$rtl.v:1125$940 ($mux).
Removed top 6 bits (of 9) from port A of cell module90.$shl$rtl.v:1140$957 ($shl).
Removed top 6 bits (of 20) from mux cell module90.$ternary$rtl.v:1142$960 ($mux).
Removed top 14 bits (of 15) from port A of cell module90.$xnor$rtl.v:1158$985 ($xnor).
Removed top 5 bits (of 7) from mux cell module90.$ternary$rtl.v:1162$1001 ($mux).
Removed top 5 bits (of 6) from port A of cell module90.$ge$rtl.v:1167$1008 ($ge).
Removed top 26 bits (of 28) from mux cell module90.$ternary$rtl.v:1169$1011 ($mux).
Removed top 14 bits (of 28) from port A of cell module90.$eq$rtl.v:1172$1021 ($eq).
Removed top 1 bits (of 6) from mux cell module90.$ternary$rtl.v:1176$1023 ($mux).
Removed cell module90.$ternary$rtl.v:1191$1043 ($mux).
Removed top 14 bits (of 15) from port B of cell module90.$or$rtl.v:1210$1053 ($or).
Removed top 3 bits (of 15) from port Y of cell module90.$or$rtl.v:1210$1053 ($or).
Removed top 3 bits (of 15) from port A of cell module90.$or$rtl.v:1210$1053 ($or).
Removed top 2 bits (of 8) from mux cell module90.$ternary$rtl.v:1214$1063 ($mux).
Removed top 10 bits (of 13) from port A of cell module90.$not$rtl.v:1217$1067 ($not).
Removed top 17 bits (of 18) from port B of cell module90.$mul$rtl.v:1223$1076 ($mul).
Removed top 14 bits (of 15) from port B of cell module90.$shr$rtl.v:1228$1079 ($shr).
Removed top 14 bits (of 22) from mux cell module90.$ternary$rtl.v:1245$1100 ($mux).
Removed top 14 bits (of 22) from port B of cell module90.$eq$rtl.v:1245$1101 ($eq).
Removed top 4 bits (of 20) from port B of cell module90.$sshr$rtl.v:1250$1103 ($sshr).
Removed top 8 bits (of 9) from port A of cell module90.$mul$rtl.v:1250$1108 ($mul).
Removed top 4 bits (of 8) from mux cell module90.$ternary$rtl.v:1251$1112 ($mux).
Removed top 4 bits (of 5) from port A of cell module90.$neg$rtl.v:1256$1116 ($neg).
Removed top 14 bits (of 15) from mux cell module90.$ternary$rtl.v:1265$1133 ($mux).
Removed top 3 bits (of 4) from port A of cell module90.$eq$rtl.v:1268$1138 ($eq).
Removed top 13 bits (of 23) from port Y of cell module90.$not$rtl.v:1265$1135 ($not).
Removed top 13 bits (of 23) from port A of cell module90.$not$rtl.v:1265$1135 ($not).
Removed top 4 bits (of 5) from mux cell module90.$ternary$rtl.v:1268$1141 ($mux).
Removed top 4 bits (of 5) from port A of cell module90.$neg$rtl.v:1278$1146 ($neg).
Removed top 19 bits (of 20) from port B of cell module90.$mul$rtl.v:1284$1154 ($mul).
Removed top 7 bits (of 15) from port B of cell module90.$xnor$rtl.v:1285$1155 ($xnor).
Removed top 8 bits (of 15) from mux cell module90.$ternary$rtl.v:1285$1158 ($mux).
Removed top 20 bits (of 21) from mux cell module90.$ternary$rtl.v:1294$1170 ($mux).
Removed top 2 bits (of 21) from mux cell module90.$ternary$rtl.v:1294$1172 ($mux).
Removed top 7 bits (of 21) from mux cell module90.$ternary$rtl.v:1294$1174 ($mux).
Removed top 11 bits (of 12) from mux cell module90.$ternary$rtl.v:1298$1178 ($mux).
Removed top 6 bits (of 14) from port B of cell module90.$add$rtl.v:1303$1183 ($add).
Removed top 7 bits (of 11) from port A of cell module90.$not$rtl.v:1304$1184 ($not).
Removed top 1 bits (of 11) from mux cell module90.$ternary$rtl.v:1304$1186 ($mux).
Removed top 6 bits (of 14) from mux cell module90.$ternary$rtl.v:1306$1189 ($mux).
Removed top 4 bits (of 5) from port B of cell module90.$sub$rtl.v:1318$1203 ($sub).
Removed top 14 bits (of 15) from port B of cell module90.$sshl$rtl.v:1318$1199 ($sshl).
Removed top 10 bits (of 20) from port A of cell module90.$sshr$rtl.v:1318$1200 ($sshr).
Removed top 5 bits (of 13) from port A of cell module90.$xnor$rtl.v:1339$1232 ($xnor).
Removed top 12 bits (of 13) from port B of cell module90.$xnor$rtl.v:1339$1232 ($xnor).
Removed top 6 bits (of 28) from port Y of cell module90.$mul$rtl.v:1337$1225 ($mul).
Removed top 10 bits (of 11) from port B of cell module90.$le$rtl.v:1339$1231 ($le).
Removed top 8 bits (of 15) from port B of cell module90.$le$rtl.v:1344$1243 ($le).
Removed top 3 bits (of 12) from mux cell module90.$ternary$rtl.v:1347$1249 ($mux).
Removed top 3 bits (of 12) from mux cell module90.$ternary$rtl.v:1347$1251 ($mux).
Removed top 3 bits (of 12) from mux cell module90.$ternary$rtl.v:1347$1253 ($mux).
Removed top 3 bits (of 12) from mux cell module90.$ternary$rtl.v:1347$1255 ($mux).
Removed top 2 bits (of 3) from port A of cell module90.$not$rtl.v:1354$1264 ($not).
Removed top 7 bits (of 8) from port B of cell module90.$and$rtl.v:1368$1281 ($and).
Removed top 2 bits (of 17) from port B of cell module90.$and$rtl.v:1371$1286 ($and).
Removed top 4 bits (of 5) from port B of cell module90.$add$rtl.v:1374$1297 ($add).
Removed top 19 bits (of 22) from port A of cell module90.$xnor$rtl.v:1374$1298 ($xnor).
Removed top 17 bits (of 22) from port B of cell module90.$xnor$rtl.v:1374$1298 ($xnor).
Removed top 11 bits (of 16) from mux cell module90.$procmux$2106 ($mux).
Removed top 3 bits (of 12) from mux cell module90.$procmux$2115 ($mux).
Removed top 4 bits (of 9) from mux cell module90.$procmux$2122 ($mux).
Removed top 11 bits (of 14) from mux cell module90.$procmux$2163 ($mux).
Removed top 2 bits (of 4) from mux cell module90.$procmux$2214 ($mux).
Removed top 11 bits (of 20) from mux cell module90.$procmux$2263 ($mux).
Removed top 3 bits (of 12) from mux cell module90.$procmux$2286 ($mux).
Removed top 6 bits (of 14) from mux cell module90.$procmux$2290 ($mux).
Removed top 1 bits (of 7) from mux cell module90.$procmux$2295 ($mux).
Removed top 7 bits (of 13) from mux cell module90.$procmux$2313 ($mux).
Removed top 3 bits (of 12) from FF cell module90.$procdff$2755 ($dff).
Removed top 11 bits (of 16) from FF cell module90.$procdff$2757 ($dff).
Removed top 8 bits (of 21) from FF cell module90.$procdff$2759 ($dff).
Removed top 7 bits (of 8) from FF cell module90.$procdff$2760 ($dff).
Removed top 6 bits (of 14) from FF cell module90.$procdff$2761 ($dff).
Removed top 18 bits (of 19) from FF cell module90.$procdff$2763 ($dff).
Removed top 2 bits (of 4) from FF cell module90.$procdff$2786 ($dff).
Removed top 9 bits (of 15) from FF cell module90.$procdff$2787 ($dff).
Removed top 17 bits (of 18) from FF cell module90.$procdff$2788 ($dff).
Removed top 3 bits (of 12) from FF cell module90.$procdff$2795 ($dff).
Removed top 7 bits (of 8) from FF cell module90.$procdff$2797 ($dff).
Removed top 15 bits (of 22) from port Y of cell module90.$mul$rtl.v:1088$874 ($mul).
Removed top 6 bits (of 8) from port A of cell module90.$sshl$rtl.v:1101$893 ($sshl).
Removed top 7 bits (of 8) from port A of cell module90.$xor$rtl.v:1107$900 ($xor).
Removed top 7 bits (of 23) from port B of cell module90.$sshr$rtl.v:1110$909 ($sshr).
Removed top 7 bits (of 8) from mux cell module90.$ternary$rtl.v:1112$914 ($mux).
Removed top 3 bits (of 12) from mux cell module90.$ternary$rtl.v:1140$955 ($mux).
Removed top 14 bits (of 15) from mux cell module90.$ternary$rtl.v:1159$988 ($mux).
Removed top 3 bits (of 12) from mux cell module90.$ternary$rtl.v:1171$1019 ($mux).
Removed top 3 bits (of 28) from mux cell module90.$ternary$rtl.v:1172$1020 ($mux).
Removed top 6 bits (of 8) from port A of cell module90.$lt$rtl.v:1178$1029 ($lt).
Removed top 16 bits (of 18) from port B of cell module90.$lt$rtl.v:1178$1029 ($lt).
Converting cell module90.$lt$rtl.v:1178$1029 ($lt) from signed to unsigned.
Removed top 1 bits (of 2) from port A of cell module90.$lt$rtl.v:1178$1029 ($lt).
Removed top 1 bits (of 2) from port B of cell module90.$lt$rtl.v:1178$1029 ($lt).
Removed top 10 bits (of 18) from mux cell module90.$ternary$rtl.v:1223$1072 ($mux).
Removed top 2 bits (of 4) from port B of cell module90.$sub$rtl.v:1235$1091 ($sub).
Removed top 17 bits (of 18) from mux cell module90.$ternary$rtl.v:1263$1126 ($mux).
Removed top 5 bits (of 15) from mux cell module90.$ternary$rtl.v:1265$1134 ($mux).
Removed top 8 bits (of 15) from port Y of cell module90.$xnor$rtl.v:1285$1155 ($xnor).
Removed top 5 bits (of 19) from mux cell module90.$ternary$rtl.v:1294$1172 ($mux).
Removed top 6 bits (of 8) from port B of cell module90.$add$rtl.v:1303$1183 ($add).
Removed top 1 bits (of 11) from port Y of cell module90.$not$rtl.v:1304$1184 ($not).
Removed top 2 bits (of 4) from port A of cell module90.$shl$rtl.v:1339$1229 ($shl).
Removed top 7 bits (of 8) from port A of cell module90.$mul$rtl.v:1364$1273 ($mul).
Removed top 3 bits (of 12) from mux cell module90.$ternary$rtl.v:1367$1284 ($mux).
Removed top 5 bits (of 14) from mux cell module90.$ternary$rtl.v:1291$1161 ($mux).
Removed top 7 bits (of 8) from wire module90.$0\reg104[7:0].
Removed top 1 bits (of 9) from wire module90.$0\reg105[8:0].
Removed top 3 bits (of 12) from wire module90.$0\reg109[11:0].
Removed top 17 bits (of 18) from wire module90.$0\reg116[17:0].
Removed top 2 bits (of 4) from wire module90.$0\reg118[3:0].
Removed top 6 bits (of 14) from wire module90.$0\reg144[13:0].
Removed top 7 bits (of 8) from wire module90.$0\reg145[7:0].
Removed top 11 bits (of 16) from wire module90.$0\reg148[15:0].
Removed top 3 bits (of 12) from wire module90.$0\reg150[11:0].
Removed top 5 bits (of 16) from wire module90.$0\reg151[15:0].
Removed top 12 bits (of 13) from wire module90.$eq$rtl.v:1172$1021_Y.
Removed top 11 bits (of 12) from wire module90.$eq$rtl.v:1347$1246_Y.
Removed top 19 bits (of 20) from wire module90.$gt$rtl.v:1107$901_Y.
Removed top 19 bits (of 20) from wire module90.$gt$rtl.v:1112$919_Y.
Removed top 4 bits (of 5) from wire module90.$gt$rtl.v:1318$1202_Y.
Removed top 7 bits (of 8) from wire module90.$le$rtl.v:1115$924_Y.
Removed top 19 bits (of 20) from wire module90.$logic_and$rtl.v:1142$958_Y.
Removed top 11 bits (of 12) from wire module90.$logic_and$rtl.v:1332$1217_Y.
Removed top 14 bits (of 15) from wire module90.$logic_and$rtl.v:1366$1279_Y.
Removed top 4 bits (of 5) from wire module90.$logic_and$rtl.v:1374$1296_Y.
Removed top 7 bits (of 8) from wire module90.$logic_not$rtl.v:1089$875_Y.
Removed top 29 bits (of 30) from wire module90.$logic_not$rtl.v:1099$887_Y.
Removed top 2 bits (of 3) from wire module90.$logic_not$rtl.v:1115$923_Y.
Removed top 6 bits (of 7) from wire module90.$logic_not$rtl.v:1235$1093_Y.
Removed top 8 bits (of 9) from wire module90.$logic_not$rtl.v:1250$1106_Y.
Removed top 7 bits (of 8) from wire module90.$logic_not$rtl.v:1251$1111_Y.
Removed top 19 bits (of 20) from wire module90.$logic_not$rtl.v:1284$1153_Y.
Removed top 20 bits (of 21) from wire module90.$logic_not$rtl.v:1294$1164_Y.
Removed top 11 bits (of 12) from wire module90.$logic_not$rtl.v:1298$1176_Y.
Removed top 15 bits (of 16) from wire module90.$logic_not$rtl.v:1335$1220_Y.
Removed top 10 bits (of 11) from wire module90.$logic_not$rtl.v:1339$1230_Y.
Removed top 11 bits (of 12) from wire module90.$logic_not$rtl.v:1342$1239_Y.
Removed top 8 bits (of 9) from wire module90.$logic_not$rtl.v:1360$1269_Y.
Removed top 15 bits (of 16) from wire module90.$logic_or$rtl.v:1085$865_Y.
Removed top 15 bits (of 22) from wire module90.$mul$rtl.v:1088$874_Y.
Removed top 6 bits (of 28) from wire module90.$mul$rtl.v:1337$1225_Y.
Removed top 13 bits (of 14) from wire module90.$ne$rtl.v:1261$1123_Y.
Removed top 13 bits (of 23) from wire module90.$not$rtl.v:1265$1135_Y.
Removed top 1 bits (of 11) from wire module90.$not$rtl.v:1304$1184_Y.
Removed top 3 bits (of 15) from wire module90.$or$rtl.v:1210$1053_Y.
Removed top 6 bits (of 20) from wire module90.$pos$rtl.v:1142$961_Y.
Removed top 4 bits (of 9) from wire module90.$procmux$2122_Y.
Removed top 11 bits (of 14) from wire module90.$procmux$2163_Y.
Removed top 3 bits (of 4) from wire module90.$procmux$2212_Y.
Removed top 11 bits (of 20) from wire module90.$procmux$2263_Y.
Removed top 6 bits (of 14) from wire module90.$procmux$2290_Y.
Removed top 1 bits (of 7) from wire module90.$procmux$2295_Y.
Removed top 14 bits (of 15) from wire module90.$reduce_and$rtl.v:1382$1312_Y.
Removed top 8 bits (of 9) from wire module90.$reduce_or$rtl.v:1101$894_Y.
Removed top 19 bits (of 20) from wire module90.$reduce_or$rtl.v:1224$1078_Y.
Removed top 20 bits (of 21) from wire module90.$reduce_or$rtl.v:1290$1159_Y.
Removed top 11 bits (of 12) from wire module90.$reduce_xnor$rtl.v:1326$1209_Y.
Removed top 11 bits (of 12) from wire module90.$reduce_xnor$rtl.v:1341$1236_Y.
Removed top 5 bits (of 6) from wire module90.$reduce_xor$rtl.v:1133$946_Y.
Removed top 2 bits (of 3) from wire module90.$reduce_xor$rtl.v:1354$1263_Y.
Removed top 14 bits (of 21) from wire module90.$ternary$rtl.v:1081$862_Y.
Removed top 2 bits (of 8) from wire module90.$ternary$rtl.v:1089$877_Y.
Removed top 4 bits (of 20) from wire module90.$ternary$rtl.v:1108$906_Y.
Removed top 7 bits (of 8) from wire module90.$ternary$rtl.v:1112$914_Y.
Removed top 2 bits (of 9) from wire module90.$ternary$rtl.v:1123$937_Y.
Removed top 3 bits (of 16) from wire module90.$ternary$rtl.v:1125$940_Y.
Removed top 3 bits (of 12) from wire module90.$ternary$rtl.v:1140$955_Y.
Removed top 14 bits (of 15) from wire module90.$ternary$rtl.v:1159$988_Y.
Removed top 5 bits (of 7) from wire module90.$ternary$rtl.v:1162$1001_Y.
Removed top 26 bits (of 28) from wire module90.$ternary$rtl.v:1169$1011_Y.
Removed top 3 bits (of 12) from wire module90.$ternary$rtl.v:1171$1019_Y.
Removed top 3 bits (of 28) from wire module90.$ternary$rtl.v:1172$1020_Y.
Removed top 14 bits (of 22) from wire module90.$ternary$rtl.v:1245$1100_Y.
Removed top 4 bits (of 8) from wire module90.$ternary$rtl.v:1251$1112_Y.
Removed top 14 bits (of 15) from wire module90.$ternary$rtl.v:1265$1133_Y.
Removed top 5 bits (of 15) from wire module90.$ternary$rtl.v:1265$1134_Y.
Removed top 4 bits (of 5) from wire module90.$ternary$rtl.v:1268$1141_Y.
Removed top 8 bits (of 15) from wire module90.$ternary$rtl.v:1285$1158_Y.
Removed top 20 bits (of 21) from wire module90.$ternary$rtl.v:1294$1170_Y.
Removed top 7 bits (of 21) from wire module90.$ternary$rtl.v:1294$1172_Y.
Removed top 7 bits (of 21) from wire module90.$ternary$rtl.v:1294$1174_Y.
Removed top 3 bits (of 12) from wire module90.$ternary$rtl.v:1347$1249_Y.
Removed top 3 bits (of 12) from wire module90.$ternary$rtl.v:1347$1251_Y.
Removed top 3 bits (of 12) from wire module90.$ternary$rtl.v:1347$1253_Y.
Removed top 3 bits (of 12) from wire module90.$ternary$rtl.v:1347$1255_Y.
Removed top 3 bits (of 12) from wire module90.$ternary$rtl.v:1367$1284_Y.
Removed top 8 bits (of 15) from wire module90.$xnor$rtl.v:1285$1155_Y.
Removed top 5 bits (of 6) from wire module90.wire101.
Removed top 4 bits (of 20) from wire module90.wire106.
Removed top 14 bits (of 15) from wire module90.wire97.
Removed top 1 bits (of 7) from port B of cell top.$xnor$rtl.v:118$2 ($xnor).
Removed top 1 bits (of 22) from port B of cell top.$xnor$rtl.v:119$3 ($xnor).
Removed top 1 bits (of 2) from port B of cell top.$add$rtl.v:126$17 ($add).
Removed top 6 bits (of 23) from mux cell top.$ternary$rtl.v:122$15 ($mux).
Removed top 8 bits (of 21) from mux cell top.$ternary$rtl.v:129$25 ($mux).
Removed top 8 bits (of 21) from mux cell top.$ternary$rtl.v:130$29 ($mux).
Removed top 8 bits (of 21) from port B of cell top.$gt$rtl.v:134$32 ($gt).
Removed top 6 bits (of 19) from port A of cell top.$not$rtl.v:140$44 ($not).
Removed top 17 bits (of 19) from mux cell top.$ternary$rtl.v:141$48 ($mux).
Removed top 17 bits (of 19) from port B of cell top.$ne$rtl.v:156$58 ($ne).
Removed top 33 bits (of 35) from port B of cell top.$or$rtl.v:160$59 ($or).
Removed top 13 bits (of 35) from mux cell top.$ternary$rtl.v:161$68 ($mux).
Removed top 2 bits (of 8) from mux cell top.$ternary$rtl.v:167$72 ($mux).
Removed top 2 bits (of 10) from port A of cell top.$ge$rtl.v:167$73 ($ge).
Removed top 21 bits (of 22) from port A of cell top.$or$rtl.v:169$77 ($or).
Removed top 13 bits (of 21) from port B of cell top.$le$rtl.v:171$82 ($le).
Removed top 15 bits (of 22) from mux cell top.$ternary$rtl.v:171$84 ($mux).
Removed top 15 bits (of 22) from port A of cell top.$neg$rtl.v:171$85 ($neg).
Removed top 17 bits (of 22) from mux cell top.$ternary$rtl.v:171$87 ($mux).
Removed top 2 bits (of 21) from mux cell top.$ternary$rtl.v:182$111 ($mux).
Removed top 6 bits (of 21) from mux cell top.$ternary$rtl.v:182$113 ($mux).
Removed top 20 bits (of 21) from mux cell top.$ternary$rtl.v:194$121 ($mux).
Removed top 20 bits (of 21) from port B of cell top.$eq$rtl.v:194$122 ($eq).
Removed top 4 bits (of 9) from port B of cell top.$xor$rtl.v:202$132 ($xor).
Removed top 3 bits (of 9) from port Y of cell top.$xor$rtl.v:202$132 ($xor).
Removed top 4 bits (of 9) from port A of cell top.$or$rtl.v:204$133 ($or).
Removed top 9 bits (of 15) from mux cell top.$ternary$rtl.v:220$159 ($mux).
Removed top 6 bits (of 7) from port A of cell top.$le$rtl.v:218$161 ($le).
Removed top 12 bits (of 13) from port A of cell top.$not$rtl.v:225$169 ($not).
Removed top 12 bits (of 17) from port A of cell top.$neg$rtl.v:232$176 ($neg).
Removed top 13 bits (of 17) from port Y of cell top.$neg$rtl.v:232$176 ($neg).
Removed top 1 bits (of 5) from port A of cell top.$neg$rtl.v:232$176 ($neg).
Removed top 6 bits (of 8) from port A of cell top.$neg$rtl.v:240$184 ($neg).
Removed top 4 bits (of 14) from port B of cell top.$xnor$rtl.v:243$197 ($xnor).
Removed top 9 bits (of 10) from port A of cell top.$xnor$rtl.v:243$194 ($xnor).
Removed top 9 bits (of 10) from port B of cell top.$xnor$rtl.v:243$194 ($xnor).
Removed top 18 bits (of 19) from port B of cell top.$sub$rtl.v:255$207 ($sub).
Removed top 2 bits (of 12) from mux cell top.$ternary$rtl.v:253$219 ($mux).
Removed top 7 bits (of 8) from port A of cell top.$sub$rtl.v:266$228 ($sub).
Removed top 8 bits (of 14) from mux cell top.$ternary$rtl.v:259$225 ($mux).
Removed top 2 bits (of 8) from mux cell top.$ternary$rtl.v:266$231 ($mux).
Removed top 4 bits (of 12) from port B of cell top.$sub$rtl.v:269$233 ($sub).
Removed top 10 bits (of 19) from mux cell top.$ternary$rtl.v:277$246 ($mux).
Removed top 16 bits (of 17) from port A of cell top.$lt$rtl.v:270$239 ($lt).
Removed top 16 bits (of 17) from port B of cell top.$add$rtl.v:270$240 ($add).
Removed top 4 bits (of 17) from port Y of cell top.$add$rtl.v:270$240 ($add).
Removed top 4 bits (of 17) from port A of cell top.$add$rtl.v:270$240 ($add).
Removed top 4 bits (of 9) from port A of cell top.$sshr$rtl.v:277$241 ($sshr).
Removed top 10 bits (of 19) from mux cell top.$ternary$rtl.v:277$248 ($mux).
Removed top 6 bits (of 8) from mux cell top.$ternary$rtl.v:284$258 ($mux).
Removed top 2 bits (of 9) from mux cell top.$ternary$rtl.v:286$267 ($mux).
Removed top 2 bits (of 3) from mux cell top.$ternary$rtl.v:288$276 ($mux).
Removed top 3 bits (of 22) from mux cell top.$ternary$rtl.v:292$283 ($mux).
Removed top 3 bits (of 22) from port A of cell top.$ne$rtl.v:293$290 ($ne).
Removed top 1 bits (of 20) from mux cell top.$ternary$rtl.v:294$295 ($mux).
Removed top 19 bits (of 20) from port A of cell top.$neg$rtl.v:294$293 ($neg).
Removed top 1 bits (of 20) from port Y of cell top.$neg$rtl.v:294$293 ($neg).
Removed top 1 bits (of 20) from port Y of cell top.$neg$rtl.v:294$294 ($neg).
Removed top 1 bits (of 20) from port A of cell top.$neg$rtl.v:294$294 ($neg).
Removed top 7 bits (of 8) from port B of cell top.$ne$rtl.v:300$298 ($ne).
Removed top 13 bits (of 19) from mux cell top.$ternary$rtl.v:309$305 ($mux).
Removed top 6 bits (of 17) from mux cell top.$ternary$rtl.v:317$316 ($mux).
Removed top 3 bits (of 18) from mux cell top.$ternary$rtl.v:319$325 ($mux).
Removed top 15 bits (of 16) from port B of cell top.$lt$rtl.v:324$327 ($lt).
Removed top 10 bits (of 11) from port B of cell top.$ne$rtl.v:329$339 ($ne).
Removed top 11 bits (of 22) from port Y of cell top.$sshr$rtl.v:327$336 ($sshr).
Removed top 10 bits (of 11) from port A of cell top.$mul$rtl.v:329$337 ($mul).
Removed top 3 bits (of 5) from mux cell top.$procmux$2550 ($mux).
Removed top 4 bits (of 19) from mux cell top.$procmux$2568 ($mux).
Removed top 17 bits (of 19) from mux cell top.$procmux$2643 ($mux).
Removed top 3 bits (of 16) from mux cell top.$procmux$2646 ($mux).
Removed top 1 bits (of 14) from FF cell top.$procdff$2860 ($dff).
Removed top 4 bits (of 19) from FF cell top.$procdff$2861 ($dff).
Removed top 6 bits (of 15) from FF cell top.$procdff$2862 ($dff).
Removed top 4 bits (of 19) from FF cell top.$procdff$2869 ($dff).
Removed top 17 bits (of 19) from FF cell top.$procdff$2887 ($dff).
Removed top 5 bits (of 6) from FF cell top.$procdff$2888 ($dff).
Removed top 9 bits (of 10) from FF cell top.$procdff$2889 ($dff).
Removed top 5 bits (of 22) from port Y of cell top.$xnor$rtl.v:122$13 ($xnor).
Removed top 16 bits (of 19) from mux cell top.$ternary$rtl.v:156$57 ($mux).
Removed top 13 bits (of 35) from mux cell top.$ternary$rtl.v:161$66 ($mux).
Removed top 4 bits (of 6) from mux cell top.$ternary$rtl.v:168$75 ($mux).
Removed top 17 bits (of 22) from port Y of cell top.$or$rtl.v:169$77 ($or).
Removed top 17 bits (of 22) from port B of cell top.$or$rtl.v:169$77 ($or).
Removed top 17 bits (of 22) from port Y of cell top.$neg$rtl.v:171$85 ($neg).
Removed top 2 bits (of 7) from port A of cell top.$neg$rtl.v:171$85 ($neg).
Removed top 6 bits (of 21) from mux cell top.$ternary$rtl.v:179$98 ($mux).
Removed top 13 bits (of 19) from mux cell top.$ternary$rtl.v:182$109 ($mux).
Removed top 13 bits (of 19) from mux cell top.$ternary$rtl.v:182$111 ($mux).
Removed top 5 bits (of 6) from port A of cell top.$xor$rtl.v:202$132 ($xor).
Removed top 4 bits (of 5) from port B of cell top.$xor$rtl.v:202$132 ($xor).
Removed top 5 bits (of 6) from port Y of cell top.$xor$rtl.v:202$132 ($xor).
Removed top 4 bits (of 5) from port A of cell top.$or$rtl.v:204$133 ($or).
Removed top 5 bits (of 6) from mux cell top.$ternary$rtl.v:220$159 ($mux).
Removed top 3 bits (of 4) from port A of cell top.$neg$rtl.v:232$176 ($neg).
Removed top 4 bits (of 19) from mux cell top.$ternary$rtl.v:251$211 ($mux).
Removed top 2 bits (of 8) from port Y of cell top.$sub$rtl.v:266$228 ($sub).
Removed top 2 bits (of 8) from port B of cell top.$sub$rtl.v:266$228 ($sub).
Removed top 4 bits (of 19) from port B of cell top.$lt$rtl.v:266$227 ($lt).
Removed top 4 bits (of 17) from mux cell top.$ternary$rtl.v:269$236 ($mux).
Removed top 4 bits (of 5) from port A of cell top.$sshr$rtl.v:277$241 ($sshr).
Removed top 4 bits (of 19) from port A of cell top.$neg$rtl.v:285$255 ($neg).
Removed top 4 bits (of 19) from mux cell top.$ternary$rtl.v:285$264 ($mux).
Removed top 4 bits (of 19) from mux cell top.$ternary$rtl.v:292$283 ($mux).
Removed top 4 bits (of 19) from port B of cell top.$shr$rtl.v:294$291 ($shr).
Removed top 6 bits (of 17) from mux cell top.$ternary$rtl.v:317$314 ($mux).
Removed cell top.$procdff$2862 ($dff).
Removed top 7 bits (of 8) from FF cell top.$procdff$2870 ($dff).
Removed top 13 bits (of 35) from port Y of cell top.$or$rtl.v:160$59 ($or).
Removed top 13 bits (of 35) from port A of cell top.$or$rtl.v:160$59 ($or).
Removed top 5 bits (of 7) from mux cell top.$ternary$rtl.v:171$84 ($mux).
Removed top 6 bits (of 21) from mux cell top.$ternary$rtl.v:179$97 ($mux).
Removed top 4 bits (of 17) from port Y of cell top.$sub$rtl.v:269$233 ($sub).
Removed top 4 bits (of 17) from port A of cell top.$sub$rtl.v:269$233 ($sub).
Removed top 5 bits (of 6) from wire top.$0\reg273[5:0].
Removed top 17 bits (of 19) from wire top.$0\reg274[18:0].
Removed top 4 bits (of 19) from wire top.$0\reg304[18:0].
Removed top 4 bits (of 17) from wire top.$add$rtl.v:270$240_Y.
Removed top 9 bits (of 10) from wire top.$ge$rtl.v:243$193_Y.
Removed top 4 bits (of 5) from wire top.$gt$rtl.v:334$349_Y.
Removed top 21 bits (of 22) from wire top.$le$rtl.v:171$82_Y.
Removed top 6 bits (of 7) from wire top.$logic_and$rtl.v:263$226_Y.
Removed top 34 bits (of 35) from wire top.$logic_not$rtl.v:161$64_Y.
Removed top 20 bits (of 21) from wire top.$logic_not$rtl.v:194$118_Y.
Removed top 6 bits (of 7) from wire top.$logic_not$rtl.v:210$154_Y.
Removed top 21 bits (of 22) from wire top.$logic_not$rtl.v:293$287_Y.
Removed top 7 bits (of 8) from wire top.$logic_not$rtl.v:300$297_Y.
Removed top 16 bits (of 17) from wire top.$logic_not$rtl.v:317$315_Y.
Removed top 16 bits (of 17) from wire top.$logic_or$rtl.v:270$238_Y.
Removed top 21 bits (of 22) from wire top.$ne$rtl.v:156$58_Y.
Removed top 29 bits (of 30) from wire top.$ne$rtl.v:329$339_Y.
Removed top 17 bits (of 22) from wire top.$neg$rtl.v:171$85_Y.
Removed top 13 bits (of 17) from wire top.$neg$rtl.v:232$176_Y.
Removed top 1 bits (of 20) from wire top.$neg$rtl.v:294$293_Y.
Removed top 13 bits (of 35) from wire top.$or$rtl.v:160$59_Y.
Removed top 17 bits (of 22) from wire top.$or$rtl.v:169$77_Y.
Removed top 4 bits (of 17) from wire top.$pos$rtl.v:269$237_Y.
Removed top 3 bits (of 5) from wire top.$procmux$2550_Y.
Removed top 3 bits (of 16) from wire top.$procmux$2646_Y.
Removed top 21 bits (of 22) from wire top.$reduce_or$rtl.v:122$10_Y.
Removed top 1 bits (of 2) from wire top.$reduce_or$rtl.v:126$16_Y.
Removed top 6 bits (of 7) from wire top.$reduce_or$rtl.v:218$160_Y.
Removed top 20 bits (of 21) from wire top.$reduce_xnor$rtl.v:194$116_Y.
Removed top 4 bits (of 5) from wire top.$reduce_xnor$rtl.v:217$156_Y.
Removed top 16 bits (of 17) from wire top.$reduce_xnor$rtl.v:269$234_Y.
Removed top 2 bits (of 3) from wire top.$reduce_xnor$rtl.v:288$274_Y.
Removed top 20 bits (of 21) from wire top.$reduce_xor$rtl.v:178$91_Y.
Removed top 20 bits (of 21) from wire top.$reduce_xor$rtl.v:180$100_Y.
Removed top 2 bits (of 8) from wire top.$sub$rtl.v:266$228_Y.
Removed top 4 bits (of 17) from wire top.$sub$rtl.v:269$233_Y.
Removed top 8 bits (of 21) from wire top.$ternary$rtl.v:129$25_Y.
Removed top 17 bits (of 19) from wire top.$ternary$rtl.v:141$48_Y.
Removed top 16 bits (of 19) from wire top.$ternary$rtl.v:156$57_Y.
Removed top 13 bits (of 35) from wire top.$ternary$rtl.v:161$66_Y.
Removed top 13 bits (of 35) from wire top.$ternary$rtl.v:161$68_Y.
Removed top 2 bits (of 8) from wire top.$ternary$rtl.v:167$72_Y.
Removed top 6 bits (of 21) from wire top.$ternary$rtl.v:179$97_Y.
Removed top 6 bits (of 21) from wire top.$ternary$rtl.v:179$98_Y.
Removed top 6 bits (of 21) from wire top.$ternary$rtl.v:182$113_Y.
Removed top 4 bits (of 19) from wire top.$ternary$rtl.v:251$211_Y.
Removed top 2 bits (of 12) from wire top.$ternary$rtl.v:253$219_Y.
Removed top 8 bits (of 14) from wire top.$ternary$rtl.v:259$225_Y.
Removed top 2 bits (of 8) from wire top.$ternary$rtl.v:266$231_Y.
Removed top 10 bits (of 19) from wire top.$ternary$rtl.v:277$246_Y.
Removed top 10 bits (of 19) from wire top.$ternary$rtl.v:277$248_Y.
Removed top 6 bits (of 8) from wire top.$ternary$rtl.v:284$258_Y.
Removed top 4 bits (of 19) from wire top.$ternary$rtl.v:285$264_Y.
Removed top 2 bits (of 9) from wire top.$ternary$rtl.v:286$267_Y.
Removed top 2 bits (of 3) from wire top.$ternary$rtl.v:288$276_Y.
Removed top 7 bits (of 22) from wire top.$ternary$rtl.v:292$283_Y.
Removed top 13 bits (of 19) from wire top.$ternary$rtl.v:309$305_Y.
Removed top 5 bits (of 22) from wire top.$xnor$rtl.v:122$13_Y.
Removed top 8 bits (of 9) from wire top.$xor$rtl.v:202$132_Y.
Removed top 8 bits (of 21) from wire top.wire271.
Removed top 8 bits (of 9) from wire top.wire283.
Removed top 9 bits (of 10) from wire top.wire284.
Removed top 14 bits (of 15) from wire top.wire286.
Removed top 3 bits (of 4) from wire top.wire301.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 327 unused wires.
<suppressed ~7 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~1288 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module module11:
  creating $macc model for $add$rtl.v:1611$1494 ($add).
  creating $macc model for $add$rtl.v:1619$1498 ($add).
  creating $macc model for $add$rtl.v:1637$1542 ($add).
  creating $macc model for $add$rtl.v:1642$1552 ($add).
  creating $macc model for $add$rtl.v:1759$1687 ($add).
  creating $macc model for $mul$rtl.v:1549$1414 ($mul).
  creating $macc model for $mul$rtl.v:1641$1547 ($mul).
  creating $macc model for $mul$rtl.v:1643$1554 ($mul).
  creating $macc model for $mul$rtl.v:1737$1645 ($mul).
  creating $macc model for $mul$rtl.v:1738$1647 ($mul).
  creating $macc model for $mul$rtl.v:1765$1693 ($mul).
  creating $macc model for $mul$rtl.v:1792$1728 ($mul).
  creating $macc model for $mul$rtl.v:1793$1733 ($mul).
  creating $macc model for $neg$rtl.v:1596$1475 ($neg).
  creating $macc model for $neg$rtl.v:1637$1540 ($neg).
  creating $macc model for $neg$rtl.v:1641$1546 ($neg).
  creating $macc model for $neg$rtl.v:1692$1582 ($neg).
  creating $macc model for $neg$rtl.v:1726$1626 ($neg).
  creating $macc model for $sub$rtl.v:1637$1537 ($sub).
  creating $macc model for $sub$rtl.v:1735$1639 ($sub).
  creating $macc model for $sub$rtl.v:1737$1644 ($sub).
  creating $macc model for $sub$rtl.v:1757$1677 ($sub).
  creating $macc model for $sub$rtl.v:1792$1729 ($sub).
  creating $alu model for $macc $sub$rtl.v:1792$1729.
  creating $alu model for $macc $sub$rtl.v:1757$1677.
  creating $alu model for $macc $sub$rtl.v:1737$1644.
  creating $alu model for $macc $sub$rtl.v:1735$1639.
  creating $alu model for $macc $sub$rtl.v:1637$1537.
  creating $alu model for $macc $neg$rtl.v:1726$1626.
  creating $alu model for $macc $neg$rtl.v:1692$1582.
  creating $alu model for $macc $neg$rtl.v:1641$1546.
  creating $alu model for $macc $neg$rtl.v:1637$1540.
  creating $alu model for $macc $neg$rtl.v:1596$1475.
  creating $alu model for $macc $add$rtl.v:1759$1687.
  creating $alu model for $macc $add$rtl.v:1642$1552.
  creating $alu model for $macc $add$rtl.v:1637$1542.
  creating $alu model for $macc $add$rtl.v:1619$1498.
  creating $alu model for $macc $add$rtl.v:1611$1494.
  creating $macc cell for $mul$rtl.v:1643$1554: $auto$alumacc.cc:354:replace_macc$3197
  creating $macc cell for $mul$rtl.v:1641$1547: $auto$alumacc.cc:354:replace_macc$3198
  creating $macc cell for $mul$rtl.v:1549$1414: $auto$alumacc.cc:354:replace_macc$3199
  creating $macc cell for $mul$rtl.v:1793$1733: $auto$alumacc.cc:354:replace_macc$3200
  creating $macc cell for $mul$rtl.v:1792$1728: $auto$alumacc.cc:354:replace_macc$3201
  creating $macc cell for $mul$rtl.v:1765$1693: $auto$alumacc.cc:354:replace_macc$3202
  creating $macc cell for $mul$rtl.v:1738$1647: $auto$alumacc.cc:354:replace_macc$3203
  creating $macc cell for $mul$rtl.v:1737$1645: $auto$alumacc.cc:354:replace_macc$3204
  creating $alu model for $ge$rtl.v:1554$1429 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1573$1438 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1706$1607 ($ge): new $alu
  creating $alu model for $gt$rtl.v:1546$1405 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1547$1407 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1558$1431 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1637$1536 ($gt): new $alu
  creating $alu model for $le$rtl.v:1621$1503 ($le): new $alu
  creating $alu model for $le$rtl.v:1728$1627 ($le): new $alu
  creating $alu model for $le$rtl.v:1728$1628 ($le): new $alu
  creating $alu model for $le$rtl.v:1743$1657 ($le): new $alu
  creating $alu model for $le$rtl.v:1789$1725 ($le): new $alu
  creating $alu model for $le$rtl.v:1793$1736 ($le): new $alu
  creating $alu model for $le$rtl.v:1796$1738 ($le): new $alu
  creating $alu model for $lt$rtl.v:1587$1469 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1611$1493 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1620$1502 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:1620$1502: $auto$alumacc.cc:474:replace_alu$3222
  creating $alu cell for $lt$rtl.v:1611$1493: $auto$alumacc.cc:474:replace_alu$3235
  creating $alu cell for $lt$rtl.v:1587$1469: $auto$alumacc.cc:474:replace_alu$3246
  creating $alu cell for $le$rtl.v:1796$1738: $auto$alumacc.cc:474:replace_alu$3251
  creating $alu cell for $le$rtl.v:1793$1736: $auto$alumacc.cc:474:replace_alu$3264
  creating $alu cell for $le$rtl.v:1789$1725: $auto$alumacc.cc:474:replace_alu$3277
  creating $alu cell for $le$rtl.v:1743$1657: $auto$alumacc.cc:474:replace_alu$3290
  creating $alu cell for $le$rtl.v:1728$1628: $auto$alumacc.cc:474:replace_alu$3303
  creating $alu cell for $le$rtl.v:1728$1627: $auto$alumacc.cc:474:replace_alu$3316
  creating $alu cell for $le$rtl.v:1621$1503: $auto$alumacc.cc:474:replace_alu$3325
  creating $alu cell for $gt$rtl.v:1637$1536: $auto$alumacc.cc:474:replace_alu$3334
  creating $alu cell for $gt$rtl.v:1558$1431: $auto$alumacc.cc:474:replace_alu$3345
  creating $alu cell for $gt$rtl.v:1547$1407: $auto$alumacc.cc:474:replace_alu$3356
  creating $alu cell for $gt$rtl.v:1546$1405: $auto$alumacc.cc:474:replace_alu$3361
  creating $alu cell for $ge$rtl.v:1706$1607: $auto$alumacc.cc:474:replace_alu$3366
  creating $alu cell for $ge$rtl.v:1573$1438: $auto$alumacc.cc:474:replace_alu$3375
  creating $alu cell for $ge$rtl.v:1554$1429: $auto$alumacc.cc:474:replace_alu$3390
  creating $alu cell for $add$rtl.v:1611$1494: $auto$alumacc.cc:474:replace_alu$3403
  creating $alu cell for $add$rtl.v:1619$1498: $auto$alumacc.cc:474:replace_alu$3406
  creating $alu cell for $add$rtl.v:1637$1542: $auto$alumacc.cc:474:replace_alu$3409
  creating $alu cell for $add$rtl.v:1642$1552: $auto$alumacc.cc:474:replace_alu$3412
  creating $alu cell for $add$rtl.v:1759$1687: $auto$alumacc.cc:474:replace_alu$3415
  creating $alu cell for $neg$rtl.v:1596$1475: $auto$alumacc.cc:474:replace_alu$3418
  creating $alu cell for $neg$rtl.v:1637$1540: $auto$alumacc.cc:474:replace_alu$3421
  creating $alu cell for $neg$rtl.v:1641$1546: $auto$alumacc.cc:474:replace_alu$3424
  creating $alu cell for $neg$rtl.v:1692$1582: $auto$alumacc.cc:474:replace_alu$3427
  creating $alu cell for $neg$rtl.v:1726$1626: $auto$alumacc.cc:474:replace_alu$3430
  creating $alu cell for $sub$rtl.v:1637$1537: $auto$alumacc.cc:474:replace_alu$3433
  creating $alu cell for $sub$rtl.v:1735$1639: $auto$alumacc.cc:474:replace_alu$3436
  creating $alu cell for $sub$rtl.v:1737$1644: $auto$alumacc.cc:474:replace_alu$3439
  creating $alu cell for $sub$rtl.v:1757$1677: $auto$alumacc.cc:474:replace_alu$3442
  creating $alu cell for $sub$rtl.v:1792$1729: $auto$alumacc.cc:474:replace_alu$3445
  created 32 $alu and 8 $macc cells.
Extracting $alu and $macc cells in module module198:
  creating $macc model for $mul$rtl.v:919$821 ($mul).
  creating $macc model for $neg$rtl.v:833$722 ($neg).
  creating $macc model for $neg$rtl.v:854$743 ($neg).
  creating $macc model for $sub$rtl.v:811$681 ($sub).
  creating $alu model for $macc $sub$rtl.v:811$681.
  creating $alu model for $macc $neg$rtl.v:854$743.
  creating $alu model for $macc $neg$rtl.v:833$722.
  creating $macc cell for $mul$rtl.v:919$821: $auto$alumacc.cc:354:replace_macc$3448
  creating $alu model for $gt$rtl.v:850$739 ($gt): new $alu
  creating $alu model for $gt$rtl.v:919$822 ($gt): new $alu
  creating $alu model for $le$rtl.v:855$745 ($le): new $alu
  creating $alu model for $le$rtl.v:879$785 ($le): new $alu
  creating $alu model for $lt$rtl.v:865$773 ($lt): new $alu
  creating $alu model for $lt$rtl.v:881$793 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:881$793: $auto$alumacc.cc:474:replace_alu$3455
  creating $alu cell for $lt$rtl.v:865$773: $auto$alumacc.cc:474:replace_alu$3460
  creating $alu cell for $le$rtl.v:879$785: $auto$alumacc.cc:474:replace_alu$3471
  creating $alu cell for $le$rtl.v:855$745: $auto$alumacc.cc:474:replace_alu$3480
  creating $alu cell for $gt$rtl.v:919$822: $auto$alumacc.cc:474:replace_alu$3489
  creating $alu cell for $gt$rtl.v:850$739: $auto$alumacc.cc:474:replace_alu$3494
  creating $alu cell for $neg$rtl.v:833$722: $auto$alumacc.cc:474:replace_alu$3505
  creating $alu cell for $neg$rtl.v:854$743: $auto$alumacc.cc:474:replace_alu$3508
  creating $alu cell for $sub$rtl.v:811$681: $auto$alumacc.cc:474:replace_alu$3511
  created 9 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module module241:
  creating $macc model for $add$rtl.v:724$654 ($add).
  creating $macc model for $neg$rtl.v:676$606 ($neg).
  creating $macc model for $sub$rtl.v:724$653 ($sub).
  merging $macc model for $sub$rtl.v:724$653 into $add$rtl.v:724$654.
  creating $alu model for $macc $neg$rtl.v:676$606.
  creating $macc cell for $add$rtl.v:724$654: $auto$alumacc.cc:354:replace_macc$3514
  creating $alu model for $le$rtl.v:727$661 ($le): new $alu
  creating $alu cell for $le$rtl.v:727$661: $auto$alumacc.cc:474:replace_alu$3516
  creating $alu cell for $neg$rtl.v:676$606: $auto$alumacc.cc:474:replace_alu$3527
  created 2 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module module4:
  creating $macc model for $neg$rtl.v:549$458 ($neg).
  creating $macc model for $neg$rtl.v:623$551 ($neg).
  creating $macc model for $sub$rtl.v:479$419 ($sub).
  creating $macc model for $sub$rtl.v:549$457 ($sub).
  merging $macc model for $sub$rtl.v:549$457 into $neg$rtl.v:549$458.
  creating $alu model for $macc $sub$rtl.v:479$419.
  creating $alu model for $macc $neg$rtl.v:623$551.
  creating $alu model for $macc $neg$rtl.v:549$458.
  creating $alu model for $ge$rtl.v:478$403 ($ge): new $alu
  creating $alu model for $gt$rtl.v:492$441 ($gt): new $alu
  creating $alu model for $le$rtl.v:626$566 ($le): new $alu
  creating $alu model for $lt$rtl.v:495$447 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:495$447: $auto$alumacc.cc:474:replace_alu$3534
  creating $alu cell for $le$rtl.v:626$566: $auto$alumacc.cc:474:replace_alu$3545
  creating $alu cell for $gt$rtl.v:492$441: $auto$alumacc.cc:474:replace_alu$3554
  creating $alu cell for $ge$rtl.v:478$403: $auto$alumacc.cc:474:replace_alu$3565
  creating $alu cell for $neg$rtl.v:549$458: $auto$alumacc.cc:474:replace_alu$3578
  creating $alu cell for $neg$rtl.v:623$551: $auto$alumacc.cc:474:replace_alu$3581
  creating $alu cell for $sub$rtl.v:479$419: $auto$alumacc.cc:474:replace_alu$3584
  created 7 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module90:
  creating $macc model for $add$rtl.v:1102$898 ($add).
  creating $macc model for $add$rtl.v:1303$1183 ($add).
  creating $macc model for $add$rtl.v:1374$1297 ($add).
  creating $macc model for $mul$rtl.v:1088$874 ($mul).
  creating $macc model for $mul$rtl.v:1223$1076 ($mul).
  creating $macc model for $mul$rtl.v:1250$1108 ($mul).
  creating $macc model for $mul$rtl.v:1256$1113 ($mul).
  creating $macc model for $mul$rtl.v:1284$1154 ($mul).
  creating $macc model for $mul$rtl.v:1336$1224 ($mul).
  creating $macc model for $mul$rtl.v:1337$1225 ($mul).
  creating $macc model for $mul$rtl.v:1364$1273 ($mul).
  creating $macc model for $neg$rtl.v:1140$956 ($neg).
  creating $macc model for $neg$rtl.v:1178$1028 ($neg).
  creating $macc model for $neg$rtl.v:1256$1116 ($neg).
  creating $macc model for $neg$rtl.v:1278$1146 ($neg).
  creating $macc model for $sub$rtl.v:1235$1091 ($sub).
  creating $macc model for $sub$rtl.v:1250$1107 ($sub).
  creating $macc model for $sub$rtl.v:1318$1203 ($sub).
  creating $alu model for $macc $sub$rtl.v:1318$1203.
  creating $alu model for $macc $sub$rtl.v:1250$1107.
  creating $alu model for $macc $sub$rtl.v:1235$1091.
  creating $alu model for $macc $neg$rtl.v:1256$1116.
  creating $alu model for $macc $neg$rtl.v:1178$1028.
  creating $alu model for $macc $neg$rtl.v:1140$956.
  creating $alu model for $macc $add$rtl.v:1374$1297.
  creating $alu model for $macc $add$rtl.v:1303$1183.
  creating $alu model for $macc $add$rtl.v:1102$898.
  creating $macc cell for $mul$rtl.v:1336$1224: $auto$alumacc.cc:354:replace_macc$3587
  creating $macc cell for $mul$rtl.v:1284$1154: $auto$alumacc.cc:354:replace_macc$3588
  creating $macc cell for $mul$rtl.v:1256$1113: $auto$alumacc.cc:354:replace_macc$3589
  creating $macc cell for $mul$rtl.v:1250$1108: $auto$alumacc.cc:354:replace_macc$3590
  creating $macc cell for $mul$rtl.v:1223$1076: $auto$alumacc.cc:354:replace_macc$3591
  creating $macc cell for $mul$rtl.v:1088$874: $auto$alumacc.cc:354:replace_macc$3592
  creating $macc cell for $neg$rtl.v:1278$1146: $auto$alumacc.cc:354:replace_macc$3593
  creating $macc cell for $mul$rtl.v:1364$1273: $auto$alumacc.cc:354:replace_macc$3594
  creating $macc cell for $mul$rtl.v:1337$1225: $auto$alumacc.cc:354:replace_macc$3595
  creating $alu model for $ge$rtl.v:1100$891 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1167$1008 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1175$1022 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1263$1127 ($ge): new $alu
  creating $alu model for $gt$rtl.v:1085$866 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1107$901 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1112$919 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1177$1026 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1233$1098 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1318$1202 ($gt): new $alu
  creating $alu model for $le$rtl.v:1115$924 ($le): new $alu
  creating $alu model for $le$rtl.v:1267$1136 ($le): new $alu
  creating $alu model for $le$rtl.v:1339$1231 ($le): new $alu
  creating $alu model for $le$rtl.v:1344$1243 ($le): new $alu
  creating $alu model for $le$rtl.v:1365$1278 ($le): new $alu
  creating $alu model for $lt$rtl.v:1098$885 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1178$1029 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1272$1142 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:1272$1142: $auto$alumacc.cc:474:replace_alu$3614
  creating $alu cell for $lt$rtl.v:1178$1029: $auto$alumacc.cc:474:replace_alu$3619
  creating $alu cell for $lt$rtl.v:1098$885: $auto$alumacc.cc:474:replace_alu$3630
  creating $alu cell for $le$rtl.v:1365$1278: $auto$alumacc.cc:474:replace_alu$3641
  creating $alu cell for $le$rtl.v:1344$1243: $auto$alumacc.cc:474:replace_alu$3654
  creating $alu cell for $le$rtl.v:1339$1231: $auto$alumacc.cc:474:replace_alu$3667
  creating $alu cell for $le$rtl.v:1267$1136: $auto$alumacc.cc:474:replace_alu$3680
  creating $alu cell for $le$rtl.v:1115$924: $auto$alumacc.cc:474:replace_alu$3689
  creating $alu cell for $gt$rtl.v:1318$1202: $auto$alumacc.cc:474:replace_alu$3698
  creating $alu cell for $gt$rtl.v:1233$1098: $auto$alumacc.cc:474:replace_alu$3709
  creating $alu cell for $gt$rtl.v:1177$1026: $auto$alumacc.cc:474:replace_alu$3720
  creating $alu cell for $gt$rtl.v:1112$919: $auto$alumacc.cc:474:replace_alu$3725
  creating $alu cell for $gt$rtl.v:1107$901: $auto$alumacc.cc:474:replace_alu$3736
  creating $alu cell for $gt$rtl.v:1085$866: $auto$alumacc.cc:474:replace_alu$3741
  creating $alu cell for $ge$rtl.v:1263$1127: $auto$alumacc.cc:474:replace_alu$3752
  creating $alu cell for $ge$rtl.v:1175$1022: $auto$alumacc.cc:474:replace_alu$3761
  creating $alu cell for $ge$rtl.v:1167$1008: $auto$alumacc.cc:474:replace_alu$3776
  creating $alu cell for $ge$rtl.v:1100$891: $auto$alumacc.cc:474:replace_alu$3789
  creating $alu cell for $add$rtl.v:1102$898: $auto$alumacc.cc:474:replace_alu$3802
  creating $alu cell for $add$rtl.v:1303$1183: $auto$alumacc.cc:474:replace_alu$3805
  creating $alu cell for $add$rtl.v:1374$1297: $auto$alumacc.cc:474:replace_alu$3808
  creating $alu cell for $neg$rtl.v:1140$956: $auto$alumacc.cc:474:replace_alu$3811
  creating $alu cell for $neg$rtl.v:1178$1028: $auto$alumacc.cc:474:replace_alu$3814
  creating $alu cell for $neg$rtl.v:1256$1116: $auto$alumacc.cc:474:replace_alu$3817
  creating $alu cell for $sub$rtl.v:1235$1091: $auto$alumacc.cc:474:replace_alu$3820
  creating $alu cell for $sub$rtl.v:1250$1107: $auto$alumacc.cc:474:replace_alu$3823
  creating $alu cell for $sub$rtl.v:1318$1203: $auto$alumacc.cc:474:replace_alu$3826
  created 27 $alu and 9 $macc cells.
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$rtl.v:126$17 ($add).
  creating $macc model for $add$rtl.v:270$240 ($add).
  creating $macc model for $mul$rtl.v:140$45 ($mul).
  creating $macc model for $mul$rtl.v:217$155 ($mul).
  creating $macc model for $mul$rtl.v:329$337 ($mul).
  creating $macc model for $neg$rtl.v:135$38 ($neg).
  creating $macc model for $neg$rtl.v:171$85 ($neg).
  creating $macc model for $neg$rtl.v:220$162 ($neg).
  creating $macc model for $neg$rtl.v:232$176 ($neg).
  creating $macc model for $neg$rtl.v:240$184 ($neg).
  creating $macc model for $neg$rtl.v:278$252 ($neg).
  creating $macc model for $neg$rtl.v:281$254 ($neg).
  creating $macc model for $neg$rtl.v:285$255 ($neg).
  creating $macc model for $neg$rtl.v:294$293 ($neg).
  creating $macc model for $neg$rtl.v:294$294 ($neg).
  creating $macc model for $neg$rtl.v:318$317 ($neg).
  creating $macc model for $sub$rtl.v:255$207 ($sub).
  creating $macc model for $sub$rtl.v:266$228 ($sub).
  creating $macc model for $sub$rtl.v:269$233 ($sub).
  creating $macc model for $sub$rtl.v:289$277 ($sub).
  creating $alu model for $macc $sub$rtl.v:289$277.
  creating $alu model for $macc $sub$rtl.v:269$233.
  creating $alu model for $macc $sub$rtl.v:266$228.
  creating $alu model for $macc $sub$rtl.v:255$207.
  creating $alu model for $macc $neg$rtl.v:318$317.
  creating $alu model for $macc $neg$rtl.v:294$294.
  creating $alu model for $macc $neg$rtl.v:294$293.
  creating $alu model for $macc $neg$rtl.v:285$255.
  creating $alu model for $macc $neg$rtl.v:281$254.
  creating $alu model for $macc $neg$rtl.v:278$252.
  creating $alu model for $macc $neg$rtl.v:240$184.
  creating $alu model for $macc $neg$rtl.v:232$176.
  creating $alu model for $macc $neg$rtl.v:220$162.
  creating $alu model for $macc $neg$rtl.v:171$85.
  creating $alu model for $macc $neg$rtl.v:135$38.
  creating $alu model for $macc $add$rtl.v:270$240.
  creating $alu model for $macc $add$rtl.v:126$17.
  creating $macc cell for $mul$rtl.v:140$45: $auto$alumacc.cc:354:replace_macc$3829
  creating $macc cell for $mul$rtl.v:329$337: $auto$alumacc.cc:354:replace_macc$3830
  creating $macc cell for $mul$rtl.v:217$155: $auto$alumacc.cc:354:replace_macc$3831
  creating $alu model for $ge$rtl.v:167$73 ($ge): new $alu
  creating $alu model for $ge$rtl.v:225$168 ($ge): new $alu
  creating $alu model for $ge$rtl.v:239$183 ($ge): new $alu
  creating $alu model for $ge$rtl.v:243$193 ($ge): new $alu
  creating $alu model for $gt$rtl.v:134$32 ($gt): new $alu
  creating $alu model for $gt$rtl.v:169$76 ($gt): new $alu
  creating $alu model for $gt$rtl.v:334$349 ($gt): new $alu
  creating $alu model for $le$rtl.v:171$82 ($le): new $alu
  creating $alu model for $le$rtl.v:218$161 ($le): new $alu
  creating $alu model for $le$rtl.v:292$284 ($le): new $alu
  creating $alu model for $lt$rtl.v:266$227 ($lt): new $alu
  creating $alu model for $lt$rtl.v:270$239 ($lt): new $alu
  creating $alu model for $lt$rtl.v:324$327 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:324$327: $auto$alumacc.cc:474:replace_alu$3845
  creating $alu cell for $lt$rtl.v:270$239: $auto$alumacc.cc:474:replace_alu$3856
  creating $alu cell for $lt$rtl.v:266$227: $auto$alumacc.cc:474:replace_alu$3861
  creating $alu cell for $le$rtl.v:292$284: $auto$alumacc.cc:474:replace_alu$3872
  creating $alu cell for $le$rtl.v:218$161: $auto$alumacc.cc:474:replace_alu$3885
  creating $alu cell for $le$rtl.v:171$82: $auto$alumacc.cc:474:replace_alu$3894
  creating $alu cell for $gt$rtl.v:334$349: $auto$alumacc.cc:474:replace_alu$3907
  creating $alu cell for $gt$rtl.v:169$76: $auto$alumacc.cc:474:replace_alu$3912
  creating $alu cell for $gt$rtl.v:134$32: $auto$alumacc.cc:474:replace_alu$3923
  creating $alu cell for $ge$rtl.v:243$193: $auto$alumacc.cc:474:replace_alu$3934
  creating $alu cell for $ge$rtl.v:239$183: $auto$alumacc.cc:474:replace_alu$3947
  creating $alu cell for $ge$rtl.v:225$168: $auto$alumacc.cc:474:replace_alu$3956
  creating $alu cell for $ge$rtl.v:167$73: $auto$alumacc.cc:474:replace_alu$3969
  creating $alu cell for $add$rtl.v:126$17: $auto$alumacc.cc:474:replace_alu$3982
  creating $alu cell for $add$rtl.v:270$240: $auto$alumacc.cc:474:replace_alu$3985
  creating $alu cell for $neg$rtl.v:135$38: $auto$alumacc.cc:474:replace_alu$3988
  creating $alu cell for $neg$rtl.v:171$85: $auto$alumacc.cc:474:replace_alu$3991
  creating $alu cell for $neg$rtl.v:220$162: $auto$alumacc.cc:474:replace_alu$3994
  creating $alu cell for $neg$rtl.v:232$176: $auto$alumacc.cc:474:replace_alu$3997
  creating $alu cell for $neg$rtl.v:240$184: $auto$alumacc.cc:474:replace_alu$4000
  creating $alu cell for $neg$rtl.v:278$252: $auto$alumacc.cc:474:replace_alu$4003
  creating $alu cell for $neg$rtl.v:281$254: $auto$alumacc.cc:474:replace_alu$4006
  creating $alu cell for $neg$rtl.v:285$255: $auto$alumacc.cc:474:replace_alu$4009
  creating $alu cell for $neg$rtl.v:294$293: $auto$alumacc.cc:474:replace_alu$4012
  creating $alu cell for $neg$rtl.v:294$294: $auto$alumacc.cc:474:replace_alu$4015
  creating $alu cell for $neg$rtl.v:318$317: $auto$alumacc.cc:474:replace_alu$4018
  creating $alu cell for $sub$rtl.v:255$207: $auto$alumacc.cc:474:replace_alu$4021
  creating $alu cell for $sub$rtl.v:266$228: $auto$alumacc.cc:474:replace_alu$4024
  creating $alu cell for $sub$rtl.v:269$233: $auto$alumacc.cc:474:replace_alu$4027
  creating $alu cell for $sub$rtl.v:289$277: $auto$alumacc.cc:474:replace_alu$4030
  created 30 $alu and 3 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).
Found 9 cells in module module11 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:1738$1649 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1952_CMP $procmux$1921_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1659$1569 ($sshr):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:1659$1570_Y.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1625$1515 ($sshr):
    Found 1 activation_patterns using ctrl signal \reg27 [14].
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:1760$1692 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1952_CMP $procmux$1921_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:1558$1427 ($sshl):
    Found 1 activation_patterns using ctrl signal $reduce_xor$rtl.v:1555$1419_Y.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1820$1769 ($shr):
    Found 1 activation_patterns using ctrl signal $auto$rtlil.cc:1836:ReduceOr$3276.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1732$1633 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$1952_CMP $procmux$1921_CMP $reduce_and$rtl.v:1731$1630_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1766$1695 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1921_CMP $reduce_bool$rtl.v:1766$1696_Y \reg28 [4] }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1735$1636 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1952_CMP $procmux$1921_CMP $reduce_bool$rtl.v:1735$1637_Y }.
    No candidates found.
Found 3 cells in module module198 that may be considered for resource sharing.
  Analyzing resource sharing options for $shr$rtl.v:881$792 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$2341_CMP $procmux$2338_CMP }.
    Found 1 candidates: $shr$rtl.v:855$746
    Analyzing resource sharing with $shr$rtl.v:855$746 ($shr):
      Found 1 activation_patterns using ctrl signal { $procmux$2338_CMP $reduce_bool$rtl.v:855$749_Y $logic_not$rtl.v:848$735_Y }.
      Activation pattern for cell $shr$rtl.v:881$792: { $procmux$2341_CMP $procmux$2338_CMP } = 2'10
      Activation pattern for cell $shr$rtl.v:855$746: { $procmux$2338_CMP $reduce_bool$rtl.v:855$749_Y $logic_not$rtl.v:848$735_Y } = 3'100
      According to the SAT solver the cell $shr$rtl.v:881$792 is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $shr$rtl.v:855$746 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$2338_CMP $reduce_bool$rtl.v:855$749_Y $logic_not$rtl.v:848$735_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:883$794 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$2341_CMP $procmux$2338_CMP }.
    No candidates found.
Removing 1 cells in module module198:
  Removing cell $shr$rtl.v:881$792 ($shr).
Found 2 cells in module module241 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:722$649 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$2443_CMP $procmux$2437_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:713$645 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$2443_CMP $procmux$2437_CMP }.
    No candidates found.
Found 6 cells in module module90 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:1318$1200 ($sshr):
    Found 1 activation_patterns using ctrl signal $procmux$2104_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:1318$1199 ($sshl):
    Found 1 activation_patterns using ctrl signal $procmux$2104_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1335$1218 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$2104_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1140$957 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$2287_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1119$930 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$2287_CMP $reduce_bool$rtl.v:1119$932_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1088$872 ($shl):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:1089$878_Y.
    No candidates found.
Found 5 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:327$336 ($sshr):
    Found 1 activation_patterns using ctrl signal \reg282 [1].
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:277$241 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$2569_CMP $reduce_bool$rtl.v:277$243_Y \reg276 [1] \reg299 [0] }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:294$291 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$2572_CMP $procmux$2569_CMP $ne$rtl.v:293$290_Y }.
    Found 1 candidates: $shr$rtl.v:284$259
    Analyzing resource sharing with $shr$rtl.v:284$259 ($shr):
      Found 1 activation_patterns using ctrl signal { $procmux$2572_CMP $procmux$2569_CMP $reduce_bool$rtl.v:286$268_Y $reduce_bool$rtl.v:129$20_Y }.
      Forbidden control signals for this pair of cells: $reduce_bool$rtl.v:288$275_Y
      Activation pattern for cell $shr$rtl.v:294$291: { $procmux$2572_CMP $procmux$2569_CMP $ne$rtl.v:293$290_Y } = 3'101
      Activation pattern for cell $shr$rtl.v:284$259: { $procmux$2572_CMP $procmux$2569_CMP $reduce_bool$rtl.v:286$268_Y $reduce_bool$rtl.v:129$20_Y } = 4'1010
      Size of SAT problem: 43 cells, 3367 variables, 8801 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $procmux$2572_CMP $procmux$2569_CMP $ne$rtl.v:293$290_Y $reduce_bool$rtl.v:286$268_Y $reduce_bool$rtl.v:129$20_Y } = 5'10110
  Analyzing resource sharing options for $shr$rtl.v:284$259 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$2572_CMP $procmux$2569_CMP $reduce_bool$rtl.v:286$268_Y $reduce_bool$rtl.v:129$20_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:292$285 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$2572_CMP $procmux$2569_CMP }.
    No candidates found.

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~35 debug messages>
Optimizing module module198.
<suppressed ~5 debug messages>
Optimizing module module241.
<suppressed ~2 debug messages>
Optimizing module module4.
<suppressed ~2 debug messages>
Optimizing module module90.
<suppressed ~22 debug messages>
Optimizing module top.
<suppressed ~14 debug messages>

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module241'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 4 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:881$791.
    dead port 2/2 on $mux $ternary$rtl.v:881$791.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1245$1100.
    dead port 2/2 on $mux $ternary$rtl.v:1245$1100.
    dead port 1/2 on $mux $ternary$rtl.v:1367$1284.
    dead port 2/2 on $mux $ternary$rtl.v:1367$1284.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $ternary$rtl.v:136$37: { \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] } -> 17'11111111111111111
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:161$66.
    dead port 2/2 on $mux $ternary$rtl.v:161$66.
    dead port 1/2 on $mux $ternary$rtl.v:161$68.
    dead port 1/2 on $mux $ternary$rtl.v:285$264.
    dead port 2/2 on $mux $ternary$rtl.v:285$264.
    dead port 1/2 on $mux $ternary$rtl.v:317$314.
    dead port 2/2 on $mux $ternary$rtl.v:317$314.
Removed 13 multiplexer ports.
<suppressed ~276 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1790$1726: { $auto$rtlil.cc:1835:ReduceAnd$3281 $auto$rtlil.cc:1832:Not$3287 \reg25 [0] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1760$1691: { $auto$wreduce.cc:455:run$2966 [0] $auto$wreduce.cc:455:run$2966 [1] $auto$wreduce.cc:455:run$2966 [2] $auto$wreduce.cc:455:run$2966 [3] $auto$wreduce.cc:455:run$2966 [4] $auto$wreduce.cc:455:run$2966 [5] $auto$wreduce.cc:455:run$2966 [6] $auto$wreduce.cc:455:run$2966 [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1612$1495: { \reg39 [0] \reg39 [1] \reg39 [2] \reg39 [3] \reg39 [4] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3262: { $auto$rtlil.cc:1832:Not$3261 $auto$rtlil.cc:1835:ReduceAnd$3255 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3275: { $auto$rtlil.cc:1832:Not$3274 $auto$rtlil.cc:1835:ReduceAnd$3268 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3314: { $auto$rtlil.cc:1832:Not$3313 $auto$rtlil.cc:1835:ReduceAnd$3307 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3401: { $auto$rtlil.cc:1832:Not$3400 $auto$rtlil.cc:1835:ReduceAnd$3394 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3393: { $auto$alumacc.cc:490:replace_alu$3391 [0] $auto$alumacc.cc:490:replace_alu$3391 [1] $auto$alumacc.cc:490:replace_alu$3391 [2] $auto$alumacc.cc:490:replace_alu$3391 [3] $auto$alumacc.cc:490:replace_alu$3391 [4] $auto$alumacc.cc:490:replace_alu$3391 [5] $auto$alumacc.cc:490:replace_alu$3391 [6] $auto$alumacc.cc:490:replace_alu$3391 [7] $auto$alumacc.cc:490:replace_alu$3391 [8] $auto$alumacc.cc:490:replace_alu$3391 [9] $auto$alumacc.cc:490:replace_alu$3391 [10] $auto$alumacc.cc:490:replace_alu$3391 [11] $auto$alumacc.cc:490:replace_alu$3391 [12] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3330: { $auto$alumacc.cc:490:replace_alu$3326 [0] $auto$alumacc.cc:490:replace_alu$3326 [1] $auto$alumacc.cc:490:replace_alu$3326 [2] $auto$alumacc.cc:490:replace_alu$3326 [3] $auto$alumacc.cc:490:replace_alu$3326 [4] $auto$alumacc.cc:490:replace_alu$3326 [5] $auto$alumacc.cc:490:replace_alu$3326 [6] $auto$alumacc.cc:490:replace_alu$3326 [7] $auto$alumacc.cc:490:replace_alu$3326 [8] $auto$alumacc.cc:490:replace_alu$3326 [9] $auto$alumacc.cc:490:replace_alu$3326 [10] $auto$alumacc.cc:490:replace_alu$3326 [11] $auto$alumacc.cc:490:replace_alu$3326 [12] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3337: { $auto$alumacc.cc:490:replace_alu$3335 [0] $auto$alumacc.cc:490:replace_alu$3335 [1] $auto$alumacc.cc:490:replace_alu$3335 [2] $auto$alumacc.cc:490:replace_alu$3335 [3] $auto$alumacc.cc:490:replace_alu$3335 [4] $auto$alumacc.cc:490:replace_alu$3335 [5] $auto$alumacc.cc:490:replace_alu$3335 [6] $auto$alumacc.cc:490:replace_alu$3335 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3348: { $auto$alumacc.cc:490:replace_alu$3346 [0] $auto$alumacc.cc:490:replace_alu$3346 [1] $auto$alumacc.cc:490:replace_alu$3346 [2] $auto$alumacc.cc:490:replace_alu$3346 [3] $auto$alumacc.cc:490:replace_alu$3346 [4] $auto$alumacc.cc:490:replace_alu$3346 [5] $auto$alumacc.cc:490:replace_alu$3346 [6] $auto$alumacc.cc:490:replace_alu$3346 [7] $auto$alumacc.cc:490:replace_alu$3346 [8] $auto$alumacc.cc:490:replace_alu$3346 [9] $auto$alumacc.cc:490:replace_alu$3346 [10] $auto$alumacc.cc:490:replace_alu$3346 [11] $auto$alumacc.cc:490:replace_alu$3346 [12] $auto$alumacc.cc:490:replace_alu$3346 [13] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3371: { $auto$alumacc.cc:490:replace_alu$3367 [0] $auto$alumacc.cc:490:replace_alu$3367 [1] $auto$alumacc.cc:490:replace_alu$3367 [2] $auto$alumacc.cc:490:replace_alu$3367 [3] $auto$alumacc.cc:490:replace_alu$3367 [4] $auto$alumacc.cc:490:replace_alu$3367 [5] $auto$alumacc.cc:490:replace_alu$3367 [6] $auto$alumacc.cc:490:replace_alu$3367 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3378: { $auto$alumacc.cc:490:replace_alu$3376 [0] $auto$alumacc.cc:490:replace_alu$3376 [1] $auto$alumacc.cc:490:replace_alu$3376 [2] $auto$alumacc.cc:490:replace_alu$3376 [3] $auto$alumacc.cc:490:replace_alu$3376 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3321: { $auto$alumacc.cc:490:replace_alu$3317 [0] $auto$alumacc.cc:490:replace_alu$3317 [1] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3225: { $auto$alumacc.cc:490:replace_alu$3223 [0] $auto$alumacc.cc:490:replace_alu$3223 [1] $auto$alumacc.cc:490:replace_alu$3223 [2] $auto$alumacc.cc:490:replace_alu$3223 [3] $auto$alumacc.cc:490:replace_alu$3223 [4] $auto$alumacc.cc:490:replace_alu$3223 [5] $auto$alumacc.cc:490:replace_alu$3223 [6] $auto$alumacc.cc:490:replace_alu$3223 [7] $auto$alumacc.cc:490:replace_alu$3223 [8] $auto$alumacc.cc:490:replace_alu$3223 [9] $auto$alumacc.cc:490:replace_alu$3223 [10] $auto$alumacc.cc:490:replace_alu$3223 [11] $auto$alumacc.cc:490:replace_alu$3223 [12] $auto$alumacc.cc:490:replace_alu$3223 [13] $auto$alumacc.cc:490:replace_alu$3223 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3238: { $auto$alumacc.cc:490:replace_alu$3236 [0] $auto$alumacc.cc:490:replace_alu$3236 [1] $auto$alumacc.cc:490:replace_alu$3236 [2] $auto$alumacc.cc:490:replace_alu$3236 [3] $auto$alumacc.cc:490:replace_alu$3236 [4] $auto$alumacc.cc:490:replace_alu$3236 [5] $auto$alumacc.cc:490:replace_alu$3236 [6] $auto$alumacc.cc:490:replace_alu$3236 [7] $auto$alumacc.cc:490:replace_alu$3236 [8] $auto$alumacc.cc:490:replace_alu$3236 [9] $auto$alumacc.cc:490:replace_alu$3236 [10] $auto$alumacc.cc:490:replace_alu$3236 [11] $auto$alumacc.cc:490:replace_alu$3236 [12] $auto$alumacc.cc:490:replace_alu$3236 [13] $auto$alumacc.cc:490:replace_alu$3236 [14] $auto$alumacc.cc:490:replace_alu$3236 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3254: { $auto$alumacc.cc:490:replace_alu$3252 [0] $auto$alumacc.cc:490:replace_alu$3252 [1] $auto$alumacc.cc:490:replace_alu$3252 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3267: { $auto$alumacc.cc:490:replace_alu$3265 [0] $auto$alumacc.cc:490:replace_alu$3265 [1] $auto$alumacc.cc:490:replace_alu$3265 [2] $auto$alumacc.cc:490:replace_alu$3265 [3] $auto$alumacc.cc:490:replace_alu$3265 [4] $auto$alumacc.cc:490:replace_alu$3265 [5] $auto$alumacc.cc:490:replace_alu$3265 [6] $auto$alumacc.cc:490:replace_alu$3265 [7] $auto$alumacc.cc:490:replace_alu$3265 [8] $auto$alumacc.cc:490:replace_alu$3265 [9] $auto$alumacc.cc:490:replace_alu$3265 [10] $auto$alumacc.cc:490:replace_alu$3265 [11] $auto$alumacc.cc:490:replace_alu$3265 [12] $auto$alumacc.cc:490:replace_alu$3265 [13] $auto$alumacc.cc:490:replace_alu$3265 [14] $auto$alumacc.cc:490:replace_alu$3265 [15] $auto$alumacc.cc:490:replace_alu$3265 [16] $auto$alumacc.cc:490:replace_alu$3265 [17] $auto$alumacc.cc:490:replace_alu$3265 [18] $auto$alumacc.cc:490:replace_alu$3265 [19] $auto$alumacc.cc:490:replace_alu$3265 [20] $auto$alumacc.cc:490:replace_alu$3265 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3280: { $auto$alumacc.cc:490:replace_alu$3278 [0] $auto$alumacc.cc:490:replace_alu$3278 [1] $auto$alumacc.cc:490:replace_alu$3278 [2] $auto$alumacc.cc:490:replace_alu$3278 [3] $auto$alumacc.cc:490:replace_alu$3278 [4] $auto$alumacc.cc:490:replace_alu$3278 [5] $auto$alumacc.cc:490:replace_alu$3278 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3306: { $auto$alumacc.cc:490:replace_alu$3304 [0] $auto$alumacc.cc:490:replace_alu$3304 [1] $auto$alumacc.cc:490:replace_alu$3304 [2] }
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
    New input vector for $reduce_or cell $reduce_or$rtl.v:830$719: { \wire209 [0] \wire209 [1] \wire209 [2] \wire209 [3] \wire209 [4] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:819$694: { $auto$wreduce.cc:455:run$3005 [0] $auto$wreduce.cc:455:run$3005 [1] $auto$wreduce.cc:455:run$3005 [2] $auto$wreduce.cc:455:run$3005 [3] $auto$wreduce.cc:455:run$3005 [4] $auto$wreduce.cc:455:run$3005 [5] $auto$wreduce.cc:455:run$3005 [6] $auto$wreduce.cc:455:run$3005 [7] $auto$wreduce.cc:455:run$3005 [8] $auto$wreduce.cc:455:run$3005 [9] $auto$wreduce.cc:455:run$3005 [10] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3487: { $auto$rtlil.cc:1832:Not$3484 $auto$rtlil.cc:1835:ReduceAnd$3486 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3485: { $auto$alumacc.cc:490:replace_alu$3481 [0] $auto$alumacc.cc:490:replace_alu$3481 [1] $auto$alumacc.cc:490:replace_alu$3481 [2] $auto$alumacc.cc:490:replace_alu$3481 [3] $auto$alumacc.cc:490:replace_alu$3481 [4] $auto$alumacc.cc:490:replace_alu$3481 [5] $auto$alumacc.cc:490:replace_alu$3481 [6] $auto$alumacc.cc:490:replace_alu$3481 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3497: { $auto$alumacc.cc:490:replace_alu$3495 [0] $auto$alumacc.cc:490:replace_alu$3495 [1] $auto$alumacc.cc:490:replace_alu$3495 [2] $auto$alumacc.cc:490:replace_alu$3495 [3] $auto$alumacc.cc:490:replace_alu$3495 [4] $auto$alumacc.cc:490:replace_alu$3495 [5] $auto$alumacc.cc:490:replace_alu$3495 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3463: { $auto$alumacc.cc:490:replace_alu$3461 [0] $auto$alumacc.cc:490:replace_alu$3461 [1] $auto$alumacc.cc:490:replace_alu$3461 [2] $auto$alumacc.cc:490:replace_alu$3461 [3] $auto$alumacc.cc:490:replace_alu$3461 [4] $auto$alumacc.cc:490:replace_alu$3461 [5] $auto$alumacc.cc:490:replace_alu$3461 [6] $auto$alumacc.cc:490:replace_alu$3461 [7] $auto$alumacc.cc:490:replace_alu$3461 [8] $auto$alumacc.cc:490:replace_alu$3461 [9] $auto$alumacc.cc:490:replace_alu$3461 [10] $auto$alumacc.cc:490:replace_alu$3461 [11] $auto$alumacc.cc:490:replace_alu$3461 [12] $auto$alumacc.cc:490:replace_alu$3461 [13] $auto$alumacc.cc:490:replace_alu$3461 [14] $auto$alumacc.cc:490:replace_alu$3461 [15] $auto$alumacc.cc:490:replace_alu$3461 [16] $auto$alumacc.cc:490:replace_alu$3461 [17] $auto$alumacc.cc:490:replace_alu$3461 [18] $auto$alumacc.cc:490:replace_alu$3461 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3476: { $auto$alumacc.cc:490:replace_alu$3472 [0] $auto$alumacc.cc:490:replace_alu$3472 [1] $auto$alumacc.cc:490:replace_alu$3472 [2] $auto$alumacc.cc:490:replace_alu$3472 [3] $auto$alumacc.cc:490:replace_alu$3472 [4] }
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3525: { $auto$rtlil.cc:1864:Xor$3522 $auto$rtlil.cc:1835:ReduceAnd$3524 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3523: { $auto$alumacc.cc:490:replace_alu$3517 [0] $auto$alumacc.cc:490:replace_alu$3517 [1] $auto$alumacc.cc:490:replace_alu$3517 [2] $auto$alumacc.cc:490:replace_alu$3517 [3] $auto$alumacc.cc:490:replace_alu$3517 [4] $auto$alumacc.cc:490:replace_alu$3517 [5] $auto$alumacc.cc:490:replace_alu$3517 [6] $auto$alumacc.cc:490:replace_alu$3517 [7] $auto$alumacc.cc:490:replace_alu$3517 [8] $auto$alumacc.cc:490:replace_alu$3517 [9] $auto$alumacc.cc:490:replace_alu$3517 [10] $auto$alumacc.cc:490:replace_alu$3517 [11] $auto$alumacc.cc:490:replace_alu$3517 [12] $auto$alumacc.cc:490:replace_alu$3517 [13] $auto$alumacc.cc:490:replace_alu$3517 [14] $auto$alumacc.cc:490:replace_alu$3517 [15] $auto$alumacc.cc:490:replace_alu$3517 [16] $auto$alumacc.cc:490:replace_alu$3517 [17] $auto$alumacc.cc:490:replace_alu$3517 [18] }
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3576: { $auto$rtlil.cc:1832:Not$3575 $auto$rtlil.cc:1835:ReduceAnd$3569 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3537: { $auto$alumacc.cc:490:replace_alu$3535 [0] $auto$alumacc.cc:490:replace_alu$3535 [1] $auto$alumacc.cc:490:replace_alu$3535 [2] $auto$alumacc.cc:490:replace_alu$3535 [3] $auto$alumacc.cc:490:replace_alu$3535 [4] $auto$alumacc.cc:490:replace_alu$3535 [5] $auto$alumacc.cc:490:replace_alu$3535 [6] $auto$alumacc.cc:490:replace_alu$3535 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3550: { $auto$alumacc.cc:490:replace_alu$3546 [0] $auto$alumacc.cc:490:replace_alu$3546 [1] $auto$alumacc.cc:490:replace_alu$3546 [2] $auto$alumacc.cc:490:replace_alu$3546 [3] $auto$alumacc.cc:490:replace_alu$3546 [4] $auto$alumacc.cc:490:replace_alu$3546 [5] $auto$alumacc.cc:490:replace_alu$3546 [6] $auto$alumacc.cc:490:replace_alu$3546 [7] $auto$alumacc.cc:490:replace_alu$3546 [8] $auto$alumacc.cc:490:replace_alu$3546 [9] $auto$alumacc.cc:490:replace_alu$3546 [10] $auto$alumacc.cc:490:replace_alu$3546 [11] $auto$alumacc.cc:490:replace_alu$3546 [12] $auto$alumacc.cc:490:replace_alu$3546 [13] $auto$alumacc.cc:490:replace_alu$3546 [14] $auto$alumacc.cc:490:replace_alu$3546 [15] $auto$alumacc.cc:490:replace_alu$3546 [16] $auto$alumacc.cc:490:replace_alu$3546 [17] $auto$alumacc.cc:490:replace_alu$3546 [18] $auto$alumacc.cc:490:replace_alu$3546 [19] $auto$alumacc.cc:490:replace_alu$3546 [20] $auto$alumacc.cc:490:replace_alu$3546 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3557: { $auto$alumacc.cc:490:replace_alu$3555 [0] $auto$alumacc.cc:490:replace_alu$3555 [1] $auto$alumacc.cc:490:replace_alu$3555 [2] $auto$alumacc.cc:490:replace_alu$3555 [3] $auto$alumacc.cc:490:replace_alu$3555 [4] $auto$alumacc.cc:490:replace_alu$3555 [5] $auto$alumacc.cc:490:replace_alu$3555 [6] $auto$alumacc.cc:490:replace_alu$3555 [7] $auto$alumacc.cc:490:replace_alu$3555 [8] $auto$alumacc.cc:490:replace_alu$3555 [9] $auto$alumacc.cc:490:replace_alu$3555 [10] $auto$alumacc.cc:490:replace_alu$3555 [11] $auto$alumacc.cc:490:replace_alu$3555 [12] $auto$alumacc.cc:490:replace_alu$3555 [13] $auto$alumacc.cc:490:replace_alu$3555 [14] $auto$alumacc.cc:490:replace_alu$3555 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3568: { $auto$alumacc.cc:490:replace_alu$3566 [0] $auto$alumacc.cc:490:replace_alu$3566 [1] $auto$alumacc.cc:490:replace_alu$3566 [2] $auto$alumacc.cc:490:replace_alu$3566 [3] $auto$alumacc.cc:490:replace_alu$3566 [4] $auto$alumacc.cc:490:replace_alu$3566 [5] $auto$alumacc.cc:490:replace_alu$3566 [6] $auto$alumacc.cc:490:replace_alu$3566 [7] $auto$alumacc.cc:490:replace_alu$3566 [8] $auto$alumacc.cc:490:replace_alu$3566 [9] $auto$alumacc.cc:490:replace_alu$3566 [10] $auto$alumacc.cc:490:replace_alu$3566 [11] $auto$alumacc.cc:490:replace_alu$3566 [12] $auto$alumacc.cc:490:replace_alu$3566 [13] $auto$alumacc.cc:490:replace_alu$3566 [14] $auto$alumacc.cc:490:replace_alu$3566 [15] $auto$alumacc.cc:490:replace_alu$3566 [16] $auto$alumacc.cc:490:replace_alu$3566 [17] $auto$alumacc.cc:490:replace_alu$3566 [18] $auto$alumacc.cc:490:replace_alu$3566 [19] $auto$alumacc.cc:490:replace_alu$3566 [20] $auto$alumacc.cc:490:replace_alu$3566 [21] }
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1176$1024: { $ternary$rtl.v:1176$1023_Y [0] $ternary$rtl.v:1176$1023_Y [1] $ternary$rtl.v:1176$1023_Y [2] $ternary$rtl.v:1176$1023_Y [3] $ternary$rtl.v:1176$1023_Y [4] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3774: { $auto$rtlil.cc:1832:Not$3773 $auto$rtlil.cc:1835:ReduceAnd$3765 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3787: { $auto$rtlil.cc:1832:Not$3786 $auto$rtlil.cc:1835:ReduceAnd$3780 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3800: { $auto$rtlil.cc:1832:Not$3799 $auto$rtlil.cc:1835:ReduceAnd$3793 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3757: { $auto$alumacc.cc:490:replace_alu$3753 [0] $auto$alumacc.cc:490:replace_alu$3753 [1] $auto$alumacc.cc:490:replace_alu$3753 [2] $auto$alumacc.cc:490:replace_alu$3753 [3] $auto$alumacc.cc:490:replace_alu$3753 [4] $auto$alumacc.cc:490:replace_alu$3753 [5] $auto$alumacc.cc:490:replace_alu$3753 [6] $auto$alumacc.cc:490:replace_alu$3753 [7] $auto$alumacc.cc:490:replace_alu$3753 [8] $auto$alumacc.cc:490:replace_alu$3753 [9] $auto$alumacc.cc:490:replace_alu$3753 [10] $auto$alumacc.cc:490:replace_alu$3753 [11] $auto$alumacc.cc:490:replace_alu$3753 [12] $auto$alumacc.cc:490:replace_alu$3753 [13] $auto$alumacc.cc:490:replace_alu$3753 [14] $auto$alumacc.cc:490:replace_alu$3753 [15] $auto$alumacc.cc:490:replace_alu$3753 [16] $auto$alumacc.cc:490:replace_alu$3753 [17] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3792: { $auto$alumacc.cc:490:replace_alu$3790 [0] $auto$alumacc.cc:490:replace_alu$3790 [1] $auto$alumacc.cc:490:replace_alu$3790 [2] $auto$alumacc.cc:490:replace_alu$3790 [3] $auto$alumacc.cc:490:replace_alu$3790 [4] $auto$alumacc.cc:490:replace_alu$3790 [5] $auto$alumacc.cc:490:replace_alu$3790 [6] $auto$alumacc.cc:490:replace_alu$3790 [7] $auto$alumacc.cc:490:replace_alu$3790 [8] $auto$alumacc.cc:490:replace_alu$3790 [9] $auto$alumacc.cc:490:replace_alu$3790 [10] $auto$alumacc.cc:490:replace_alu$3790 [11] $auto$alumacc.cc:490:replace_alu$3790 [12] $auto$alumacc.cc:490:replace_alu$3790 [13] $auto$alumacc.cc:490:replace_alu$3790 [14] $auto$alumacc.cc:490:replace_alu$3790 [15] $auto$alumacc.cc:490:replace_alu$3790 [16] $auto$alumacc.cc:490:replace_alu$3790 [17] $auto$alumacc.cc:490:replace_alu$3790 [18] $auto$alumacc.cc:490:replace_alu$3790 [19] $auto$alumacc.cc:490:replace_alu$3790 [20] $auto$alumacc.cc:490:replace_alu$3790 [21] $auto$alumacc.cc:490:replace_alu$3790 [22] $auto$alumacc.cc:490:replace_alu$3790 [23] $auto$alumacc.cc:490:replace_alu$3790 [24] $auto$alumacc.cc:490:replace_alu$3790 [25] $auto$alumacc.cc:490:replace_alu$3790 [26] $auto$alumacc.cc:490:replace_alu$3790 [27] $auto$alumacc.cc:490:replace_alu$3790 [28] $auto$alumacc.cc:490:replace_alu$3790 [29] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3779: { $auto$alumacc.cc:490:replace_alu$3777 [0] $auto$alumacc.cc:490:replace_alu$3777 [1] $auto$alumacc.cc:490:replace_alu$3777 [2] $auto$alumacc.cc:490:replace_alu$3777 [3] $auto$alumacc.cc:490:replace_alu$3777 [4] $auto$alumacc.cc:490:replace_alu$3777 [5] $auto$alumacc.cc:490:replace_alu$3777 [6] $auto$alumacc.cc:490:replace_alu$3777 [7] $auto$alumacc.cc:490:replace_alu$3777 [8] $auto$alumacc.cc:490:replace_alu$3777 [9] $auto$alumacc.cc:490:replace_alu$3777 [10] $auto$alumacc.cc:490:replace_alu$3777 [11] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3644: { $auto$alumacc.cc:490:replace_alu$3642 [0] $auto$alumacc.cc:490:replace_alu$3642 [1] $auto$alumacc.cc:490:replace_alu$3642 [2] $auto$alumacc.cc:490:replace_alu$3642 [3] $auto$alumacc.cc:490:replace_alu$3642 [4] $auto$alumacc.cc:490:replace_alu$3642 [5] $auto$alumacc.cc:490:replace_alu$3642 [6] $auto$alumacc.cc:490:replace_alu$3642 [7] $auto$alumacc.cc:490:replace_alu$3642 [8] $auto$alumacc.cc:490:replace_alu$3642 [9] $auto$alumacc.cc:490:replace_alu$3642 [10] $auto$alumacc.cc:490:replace_alu$3642 [11] $auto$alumacc.cc:490:replace_alu$3642 [12] $auto$alumacc.cc:490:replace_alu$3642 [13] $auto$alumacc.cc:490:replace_alu$3642 [14] $auto$alumacc.cc:490:replace_alu$3642 [15] $auto$alumacc.cc:490:replace_alu$3642 [16] $auto$alumacc.cc:490:replace_alu$3642 [17] $auto$alumacc.cc:490:replace_alu$3642 [18] $auto$alumacc.cc:490:replace_alu$3642 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3657: { $auto$alumacc.cc:490:replace_alu$3655 [0] $auto$alumacc.cc:490:replace_alu$3655 [1] $auto$alumacc.cc:490:replace_alu$3655 [2] $auto$alumacc.cc:490:replace_alu$3655 [3] $auto$alumacc.cc:490:replace_alu$3655 [4] $auto$alumacc.cc:490:replace_alu$3655 [5] $auto$alumacc.cc:490:replace_alu$3655 [6] $auto$alumacc.cc:490:replace_alu$3655 [7] $auto$alumacc.cc:490:replace_alu$3655 [8] $auto$alumacc.cc:490:replace_alu$3655 [9] $auto$alumacc.cc:490:replace_alu$3655 [10] $auto$alumacc.cc:490:replace_alu$3655 [11] $auto$alumacc.cc:490:replace_alu$3655 [12] $auto$alumacc.cc:490:replace_alu$3655 [13] $auto$alumacc.cc:490:replace_alu$3655 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3670: { $auto$alumacc.cc:490:replace_alu$3668 [0] $auto$alumacc.cc:490:replace_alu$3668 [1] $auto$alumacc.cc:490:replace_alu$3668 [2] $auto$alumacc.cc:490:replace_alu$3668 [3] $auto$alumacc.cc:490:replace_alu$3668 [4] $auto$alumacc.cc:490:replace_alu$3668 [5] $auto$alumacc.cc:490:replace_alu$3668 [6] $auto$alumacc.cc:490:replace_alu$3668 [7] $auto$alumacc.cc:490:replace_alu$3668 [8] $auto$alumacc.cc:490:replace_alu$3668 [9] $auto$alumacc.cc:490:replace_alu$3668 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3685: { $auto$alumacc.cc:490:replace_alu$3681 [0] $auto$alumacc.cc:490:replace_alu$3681 [1] $auto$alumacc.cc:490:replace_alu$3681 [2] $auto$alumacc.cc:490:replace_alu$3681 [3] $auto$alumacc.cc:490:replace_alu$3681 [4] $auto$alumacc.cc:490:replace_alu$3681 [5] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3694: { $auto$alumacc.cc:490:replace_alu$3690 [0] $auto$alumacc.cc:490:replace_alu$3690 [1] $auto$alumacc.cc:490:replace_alu$3690 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3701: { $auto$alumacc.cc:490:replace_alu$3699 [0] $auto$alumacc.cc:490:replace_alu$3699 [1] $auto$alumacc.cc:490:replace_alu$3699 [2] $auto$alumacc.cc:490:replace_alu$3699 [3] $auto$alumacc.cc:490:replace_alu$3699 [4] $auto$alumacc.cc:490:replace_alu$3699 [5] $auto$alumacc.cc:490:replace_alu$3699 [6] $auto$alumacc.cc:490:replace_alu$3699 [7] $auto$alumacc.cc:490:replace_alu$3699 [8] $auto$alumacc.cc:490:replace_alu$3699 [9] $auto$alumacc.cc:490:replace_alu$3699 [10] $auto$alumacc.cc:490:replace_alu$3699 [11] $auto$alumacc.cc:490:replace_alu$3699 [12] $auto$alumacc.cc:490:replace_alu$3699 [13] $auto$alumacc.cc:490:replace_alu$3699 [14] $auto$alumacc.cc:490:replace_alu$3699 [15] $auto$alumacc.cc:490:replace_alu$3699 [16] $auto$alumacc.cc:490:replace_alu$3699 [17] $auto$alumacc.cc:490:replace_alu$3699 [18] $auto$alumacc.cc:490:replace_alu$3699 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3764: { $auto$alumacc.cc:490:replace_alu$3762 [0] $auto$alumacc.cc:490:replace_alu$3762 [1] $auto$alumacc.cc:490:replace_alu$3762 [2] $auto$alumacc.cc:490:replace_alu$3762 [3] $auto$alumacc.cc:490:replace_alu$3762 [4] $auto$alumacc.cc:490:replace_alu$3762 [5] $auto$alumacc.cc:490:replace_alu$3762 [6] $auto$alumacc.cc:490:replace_alu$3762 [7] $auto$alumacc.cc:490:replace_alu$3762 [8] $auto$alumacc.cc:490:replace_alu$3762 [9] $auto$alumacc.cc:490:replace_alu$3762 [10] $auto$alumacc.cc:490:replace_alu$3762 [11] $auto$alumacc.cc:490:replace_alu$3762 [12] $auto$alumacc.cc:490:replace_alu$3762 [13] $auto$alumacc.cc:490:replace_alu$3762 [14] $auto$alumacc.cc:490:replace_alu$3762 [15] $auto$alumacc.cc:490:replace_alu$3762 [16] $auto$alumacc.cc:490:replace_alu$3762 [17] $auto$alumacc.cc:490:replace_alu$3762 [18] $auto$alumacc.cc:490:replace_alu$3762 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3744: { $auto$alumacc.cc:490:replace_alu$3742 [0] $auto$alumacc.cc:490:replace_alu$3742 [1] $auto$alumacc.cc:490:replace_alu$3742 [2] $auto$alumacc.cc:490:replace_alu$3742 [3] $auto$alumacc.cc:490:replace_alu$3742 [4] $auto$alumacc.cc:490:replace_alu$3742 [5] $auto$alumacc.cc:490:replace_alu$3742 [6] $auto$alumacc.cc:490:replace_alu$3742 [7] $auto$alumacc.cc:490:replace_alu$3742 [8] $auto$alumacc.cc:490:replace_alu$3742 [9] $auto$alumacc.cc:490:replace_alu$3742 [10] $auto$alumacc.cc:490:replace_alu$3742 [11] $auto$alumacc.cc:490:replace_alu$3742 [12] $auto$alumacc.cc:490:replace_alu$3742 [13] $auto$alumacc.cc:490:replace_alu$3742 [14] $auto$alumacc.cc:490:replace_alu$3742 [15] }
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3905: { $auto$rtlil.cc:1832:Not$3904 $auto$rtlil.cc:1835:ReduceAnd$3898 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3967: { $auto$rtlil.cc:1832:Not$3966 $auto$rtlil.cc:1835:ReduceAnd$3960 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3980: { $auto$rtlil.cc:1832:Not$3979 $auto$rtlil.cc:1835:ReduceAnd$3973 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3937: { $auto$alumacc.cc:490:replace_alu$3935 [0] $auto$alumacc.cc:490:replace_alu$3935 [1] $auto$alumacc.cc:490:replace_alu$3935 [2] $auto$alumacc.cc:490:replace_alu$3935 [3] $auto$alumacc.cc:490:replace_alu$3935 [4] $auto$alumacc.cc:490:replace_alu$3935 [5] $auto$alumacc.cc:490:replace_alu$3935 [6] $auto$alumacc.cc:490:replace_alu$3935 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3972: { $auto$alumacc.cc:490:replace_alu$3970 [0] $auto$alumacc.cc:490:replace_alu$3970 [1] $auto$alumacc.cc:490:replace_alu$3970 [2] $auto$alumacc.cc:490:replace_alu$3970 [3] $auto$alumacc.cc:490:replace_alu$3970 [4] $auto$alumacc.cc:490:replace_alu$3970 [5] $auto$alumacc.cc:490:replace_alu$3970 [6] $auto$alumacc.cc:490:replace_alu$3970 [7] $auto$alumacc.cc:490:replace_alu$3970 [8] $auto$alumacc.cc:490:replace_alu$3970 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3952: { $auto$alumacc.cc:490:replace_alu$3948 [0] $auto$alumacc.cc:490:replace_alu$3948 [1] $auto$alumacc.cc:490:replace_alu$3948 [2] $auto$alumacc.cc:490:replace_alu$3948 [3] $auto$alumacc.cc:490:replace_alu$3948 [4] $auto$alumacc.cc:490:replace_alu$3948 [5] $auto$alumacc.cc:490:replace_alu$3948 [6] $auto$alumacc.cc:490:replace_alu$3948 [7] $auto$alumacc.cc:490:replace_alu$3948 [8] $auto$alumacc.cc:490:replace_alu$3948 [9] $auto$alumacc.cc:490:replace_alu$3948 [10] $auto$alumacc.cc:490:replace_alu$3948 [11] $auto$alumacc.cc:490:replace_alu$3948 [12] $auto$alumacc.cc:490:replace_alu$3948 [13] $auto$alumacc.cc:490:replace_alu$3948 [14] $auto$alumacc.cc:490:replace_alu$3948 [15] $auto$alumacc.cc:490:replace_alu$3948 [16] $auto$alumacc.cc:490:replace_alu$3948 [17] $auto$alumacc.cc:490:replace_alu$3948 [18] $auto$alumacc.cc:490:replace_alu$3948 [19] $auto$alumacc.cc:490:replace_alu$3948 [20] $auto$alumacc.cc:490:replace_alu$3948 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3959: { $auto$alumacc.cc:490:replace_alu$3957 [0] $auto$alumacc.cc:490:replace_alu$3957 [1] $auto$alumacc.cc:490:replace_alu$3957 [2] $auto$alumacc.cc:490:replace_alu$3957 [3] $auto$alumacc.cc:490:replace_alu$3957 [4] $auto$alumacc.cc:490:replace_alu$3957 [5] $auto$alumacc.cc:490:replace_alu$3957 [6] $auto$alumacc.cc:490:replace_alu$3957 [7] $auto$alumacc.cc:490:replace_alu$3957 [8] $auto$alumacc.cc:490:replace_alu$3957 [9] $auto$alumacc.cc:490:replace_alu$3957 [10] $auto$alumacc.cc:490:replace_alu$3957 [11] $auto$alumacc.cc:490:replace_alu$3957 [12] $auto$alumacc.cc:490:replace_alu$3957 [13] $auto$alumacc.cc:490:replace_alu$3957 [14] $auto$alumacc.cc:490:replace_alu$3957 [15] $auto$alumacc.cc:490:replace_alu$3957 [16] $auto$alumacc.cc:490:replace_alu$3957 [17] $auto$alumacc.cc:490:replace_alu$3957 [18] $auto$alumacc.cc:490:replace_alu$3957 [19] $auto$alumacc.cc:490:replace_alu$3957 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3848: { $auto$alumacc.cc:490:replace_alu$3846 [0] $auto$alumacc.cc:490:replace_alu$3846 [1] $auto$alumacc.cc:490:replace_alu$3846 [2] $auto$alumacc.cc:490:replace_alu$3846 [3] $auto$alumacc.cc:490:replace_alu$3846 [4] $auto$alumacc.cc:490:replace_alu$3846 [5] $auto$alumacc.cc:490:replace_alu$3846 [6] $auto$alumacc.cc:490:replace_alu$3846 [7] $auto$alumacc.cc:490:replace_alu$3846 [8] $auto$alumacc.cc:490:replace_alu$3846 [9] $auto$alumacc.cc:490:replace_alu$3846 [10] $auto$alumacc.cc:490:replace_alu$3846 [11] $auto$alumacc.cc:490:replace_alu$3846 [12] $auto$alumacc.cc:490:replace_alu$3846 [13] $auto$alumacc.cc:490:replace_alu$3846 [14] $auto$alumacc.cc:490:replace_alu$3846 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3864: { $auto$alumacc.cc:490:replace_alu$3862 [0] $auto$alumacc.cc:490:replace_alu$3862 [1] $auto$alumacc.cc:490:replace_alu$3862 [2] $auto$alumacc.cc:490:replace_alu$3862 [3] $auto$alumacc.cc:490:replace_alu$3862 [4] $auto$alumacc.cc:490:replace_alu$3862 [5] $auto$alumacc.cc:490:replace_alu$3862 [6] $auto$alumacc.cc:490:replace_alu$3862 [7] $auto$alumacc.cc:490:replace_alu$3862 [8] $auto$alumacc.cc:490:replace_alu$3862 [9] $auto$alumacc.cc:490:replace_alu$3862 [10] $auto$alumacc.cc:490:replace_alu$3862 [11] $auto$alumacc.cc:490:replace_alu$3862 [12] $auto$alumacc.cc:490:replace_alu$3862 [13] $auto$alumacc.cc:490:replace_alu$3862 [14] $auto$alumacc.cc:490:replace_alu$3862 [15] $auto$alumacc.cc:490:replace_alu$3862 [16] $auto$alumacc.cc:490:replace_alu$3862 [17] $auto$alumacc.cc:490:replace_alu$3862 [18] $auto$alumacc.cc:490:replace_alu$3862 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3875: { $auto$alumacc.cc:490:replace_alu$3873 [0] $auto$alumacc.cc:490:replace_alu$3873 [1] $auto$alumacc.cc:490:replace_alu$3873 [2] $auto$alumacc.cc:490:replace_alu$3873 [3] $auto$alumacc.cc:490:replace_alu$3873 [4] $auto$alumacc.cc:490:replace_alu$3873 [5] $auto$alumacc.cc:490:replace_alu$3873 [6] $auto$alumacc.cc:490:replace_alu$3873 [7] $auto$alumacc.cc:490:replace_alu$3873 [8] $auto$alumacc.cc:490:replace_alu$3873 [9] $auto$alumacc.cc:490:replace_alu$3873 [10] $auto$alumacc.cc:490:replace_alu$3873 [11] $auto$alumacc.cc:490:replace_alu$3873 [12] $auto$alumacc.cc:490:replace_alu$3873 [13] $auto$alumacc.cc:490:replace_alu$3873 [14] $auto$alumacc.cc:490:replace_alu$3873 [15] $auto$alumacc.cc:490:replace_alu$3873 [16] $auto$alumacc.cc:490:replace_alu$3873 [17] $auto$alumacc.cc:490:replace_alu$3873 [18] $auto$alumacc.cc:490:replace_alu$3873 [19] $auto$alumacc.cc:490:replace_alu$3873 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3890: { $auto$alumacc.cc:490:replace_alu$3886 [0] $auto$alumacc.cc:490:replace_alu$3886 [1] $auto$alumacc.cc:490:replace_alu$3886 [2] $auto$alumacc.cc:490:replace_alu$3886 [3] $auto$alumacc.cc:490:replace_alu$3886 [4] $auto$alumacc.cc:490:replace_alu$3886 [5] $auto$alumacc.cc:490:replace_alu$3886 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3897: { $auto$alumacc.cc:490:replace_alu$3895 [0] $auto$alumacc.cc:490:replace_alu$3895 [1] $auto$alumacc.cc:490:replace_alu$3895 [2] $auto$alumacc.cc:490:replace_alu$3895 [3] $auto$alumacc.cc:490:replace_alu$3895 [4] $auto$alumacc.cc:490:replace_alu$3895 [5] $auto$alumacc.cc:490:replace_alu$3895 [6] $auto$alumacc.cc:490:replace_alu$3895 [7] $auto$alumacc.cc:490:replace_alu$3895 [8] $auto$alumacc.cc:490:replace_alu$3895 [9] $auto$alumacc.cc:490:replace_alu$3895 [10] $auto$alumacc.cc:490:replace_alu$3895 [11] $auto$alumacc.cc:490:replace_alu$3895 [12] $auto$alumacc.cc:490:replace_alu$3895 [13] $auto$alumacc.cc:490:replace_alu$3895 [14] $auto$alumacc.cc:490:replace_alu$3895 [15] $auto$alumacc.cc:490:replace_alu$3895 [16] $auto$alumacc.cc:490:replace_alu$3895 [17] $auto$alumacc.cc:490:replace_alu$3895 [18] $auto$alumacc.cc:490:replace_alu$3895 [19] $auto$alumacc.cc:490:replace_alu$3895 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3926: { $auto$alumacc.cc:490:replace_alu$3924 [0] $auto$alumacc.cc:490:replace_alu$3924 [1] $auto$alumacc.cc:490:replace_alu$3924 [2] $auto$alumacc.cc:490:replace_alu$3924 [3] $auto$alumacc.cc:490:replace_alu$3924 [4] $auto$alumacc.cc:490:replace_alu$3924 [5] $auto$alumacc.cc:490:replace_alu$3924 [6] $auto$alumacc.cc:490:replace_alu$3924 [7] $auto$alumacc.cc:490:replace_alu$3924 [8] $auto$alumacc.cc:490:replace_alu$3924 [9] $auto$alumacc.cc:490:replace_alu$3924 [10] $auto$alumacc.cc:490:replace_alu$3924 [11] $auto$alumacc.cc:490:replace_alu$3924 [12] }
  Optimizing cells in module \top.
Performed a total of 62 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2745 ($dff) from module module11.
Promoting init spec \reg78 [7:6] = 2'xx to constant driver in module module11.
Promoted 1 init specs to constant drivers.
Replaced 1 DFF cells.

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 26 unused cells and 160 unused wires.
<suppressed ~33 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~3 debug messages>
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
<suppressed ~1 debug messages>
Optimizing module top.

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~273 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 4 unused wires.
<suppressed ~3 debug messages>

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~273 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.13.23. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking module11.reg52 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking module241.reg260 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking module90.reg139 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.reg295 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~176 debug messages>
Optimizing module module198.
<suppressed ~52 debug messages>
Optimizing module module241.
<suppressed ~10 debug messages>
Optimizing module module4.
<suppressed ~44 debug messages>
Optimizing module module90.
<suppressed ~229 debug messages>
Optimizing module top.
<suppressed ~95 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module198'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 8 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2789 ($dff) from module module90.
Removing $procdff$2888 ($dff) from module top.
Replaced 2 DFF cells.

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 55 unused cells and 226 unused wires.
<suppressed ~69 debug messages>

2.18.5. Rerunning OPT passes. (Removed registers in this run.)

2.18.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
<suppressed ~14 debug messages>
Optimizing module top.
<suppressed ~12 debug messages>

2.18.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.18.8. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 6 unused cells and 23 unused wires.
<suppressed ~8 debug messages>

2.18.10. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~250 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
    Consolidated identical input bits for $mux cell $procmux$1908:
      Old ports: A={ 7'0000000 $auto$rtlil.cc:1836:ReduceOr$3374 }, B=8'10110001, Y=$0\reg58[21:0]
      New ports: A={ 1'0 $auto$rtlil.cc:1836:ReduceOr$3374 }, B=2'11, Y={ $0\reg58[21:0] [4] $0\reg58[21:0] [0] }
      New connections: { $0\reg58[21:0] [7:5] $0\reg58[21:0] [3:1] } = { $0\reg58[21:0] [4] 1'0 $0\reg58[21:0] [4] 3'000 }
    Consolidated identical input bits for $mux cell $procmux$1911:
      Old ports: A={ 1'0 \reg23 [0] }, B=2'00, Y=$0\reg59[7:0]
      New ports: A=\reg23 [0], B=1'0, Y=$0\reg59[7:0] [0]
      New connections: $0\reg59[7:0] [1] = 1'0
    Consolidated identical input bits for $mux cell $procmux$1920:
      Old ports: A={ 18'000000000000000000 $auto$wreduce.cc:455:run$2917 [0] }, B={ 11'00000000000 $auto$wreduce.cc:455:run$2930 [7:0] }, Y=$0\reg61[18:0]
      New ports: A={ 7'0000000 $auto$wreduce.cc:455:run$2917 [0] }, B=$auto$wreduce.cc:455:run$2930 [7:0], Y=$0\reg61[18:0] [7:0]
      New connections: $0\reg61[18:0] [18:8] = 11'00000000000
    Consolidated identical input bits for $mux cell $procmux$1987:
      Old ports: A={ 9'000000000 $sshl$rtl.v:1780$1720_Y }, B={ \wire16 [8] \wire16 }, Y=$procmux$1987_Y
      New ports: A={ 8'00000000 $sshl$rtl.v:1780$1720_Y }, B=\wire16, Y=$procmux$1987_Y [8:0]
      New connections: $procmux$1987_Y [9] = $procmux$1987_Y [8]
    Consolidated identical input bits for $mux cell $procmux$2005:
      Old ports: A={ 21'000000000000000000000 $auto$wreduce.cc:455:run$2932 [0] }, B={ \reg45 [14] \reg45 [14] \reg45 [14] \reg45 [14] \reg45 [14] \reg45 [14] \reg45 [14] \reg45 }, Y=$procmux$2005_Y
      New ports: A={ 14'00000000000000 $auto$wreduce.cc:455:run$2932 [0] }, B=\reg45, Y=$procmux$2005_Y [14:0]
      New connections: $procmux$2005_Y [21:15] = { $procmux$2005_Y [14] $procmux$2005_Y [14] $procmux$2005_Y [14] $procmux$2005_Y [14] $procmux$2005_Y [14] $procmux$2005_Y [14] $procmux$2005_Y [14] }
    Consolidated identical input bits for $mux cell $procmux$2079:
      Old ports: A={ 14'00000000000000 $sshr$rtl.v:1625$1515_Y [4:0] }, B={ 18'000000000000000000 \reg29 [0] }, Y=$0\reg43[18:0]
      New ports: A=$sshr$rtl.v:1625$1515_Y [4:0], B={ 4'0000 \reg29 [0] }, Y=$0\reg43[18:0] [4:0]
      New connections: $0\reg43[18:0] [18:5] = 14'00000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1548$1410:
      Old ports: A=7'1000100, B=7'0000001, Y=$ternary$rtl.v:1548$1410_Y
      New ports: A=2'10, B=2'01, Y={ $ternary$rtl.v:1548$1410_Y [2] $ternary$rtl.v:1548$1410_Y [0] }
      New connections: { $ternary$rtl.v:1548$1410_Y [6:3] $ternary$rtl.v:1548$1410_Y [1] } = { $ternary$rtl.v:1548$1410_Y [2] 4'0000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1557$1423:
      Old ports: A={ 12'000000000000 $auto$wreduce.cc:455:run$2903 [0] }, B={ 8'11111111 $auto$opt_expr.cc:189:group_cell_inputs$4045 }, Y=$ternary$rtl.v:1557$1423_Y
      New ports: A={ 5'00000 $auto$wreduce.cc:455:run$2903 [0] }, B={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$4045 }, Y=$ternary$rtl.v:1557$1423_Y [5:0]
      New connections: $ternary$rtl.v:1557$1423_Y [12:6] = { $ternary$rtl.v:1557$1423_Y [5] $ternary$rtl.v:1557$1423_Y [5] $ternary$rtl.v:1557$1423_Y [5] $ternary$rtl.v:1557$1423_Y [5] $ternary$rtl.v:1557$1423_Y [5] $ternary$rtl.v:1557$1423_Y [5] $ternary$rtl.v:1557$1423_Y [5] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1577$1452:
      Old ports: A=8'10100100, B={ 7'0000000 \wire16 [2] }, Y=$ternary$rtl.v:1577$1452_Y
      New ports: A=2'10, B={ 1'0 \wire16 [2] }, Y={ $ternary$rtl.v:1577$1452_Y [2] $ternary$rtl.v:1577$1452_Y [0] }
      New connections: { $ternary$rtl.v:1577$1452_Y [7:3] $ternary$rtl.v:1577$1452_Y [1] } = { $ternary$rtl.v:1577$1452_Y [2] 1'0 $ternary$rtl.v:1577$1452_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1578$1455:
      Old ports: A={ $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [3:0] }, B=14'00000001010001, Y=$ternary$rtl.v:1578$1455_Y
      New ports: A={ $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [13] $and$rtl.v:1578$1453_Y [3:0] }, B=6'010001, Y=$ternary$rtl.v:1578$1455_Y [5:0]
      New connections: $ternary$rtl.v:1578$1455_Y [13:6] = { $ternary$rtl.v:1578$1455_Y [5] $ternary$rtl.v:1578$1455_Y [5] $ternary$rtl.v:1578$1455_Y [5] $ternary$rtl.v:1578$1455_Y [5] $ternary$rtl.v:1578$1455_Y [5] $ternary$rtl.v:1578$1455_Y [5] $ternary$rtl.v:1578$1455_Y [5:4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1582$1463:
      Old ports: A=7'0000000, B=7'1000000, Y=$auto$wreduce.cc:455:run$2946 [6:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2946 [6]
      New connections: $auto$wreduce.cc:455:run$2946 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1582$1465:
      Old ports: A=22'0000000000000000000000, B={ 15'000000000000000 $auto$wreduce.cc:455:run$2946 [6:0] }, Y=$ternary$rtl.v:1582$1465_Y
      New ports: A=7'0000000, B=$auto$wreduce.cc:455:run$2946 [6:0], Y=$ternary$rtl.v:1582$1465_Y [6:0]
      New connections: $ternary$rtl.v:1582$1465_Y [21:7] = 15'000000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1597$1483:
      Old ports: A={ 3'000 \reg22 }, B=8'10110100, Y=\wire34
      New ports: A={ 1'0 \reg22 }, B=6'110100, Y=\wire34 [5:0]
      New connections: \wire34 [7:6] = { \wire34 [5] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1621$1504:
      Old ports: A=9'111111111, B={ 8'00000000 $auto$rtlil.cc:1836:ReduceOr$3333 }, Y=$auto$wreduce.cc:455:run$2949 [8:0]
      New ports: A=2'11, B={ 1'0 $auto$rtlil.cc:1836:ReduceOr$3333 }, Y=$auto$wreduce.cc:455:run$2949 [1:0]
      New connections: $auto$wreduce.cc:455:run$2949 [8:2] = { $auto$wreduce.cc:455:run$2949 [1] $auto$wreduce.cc:455:run$2949 [1] $auto$wreduce.cc:455:run$2949 [1] $auto$wreduce.cc:455:run$2949 [1] $auto$wreduce.cc:455:run$2949 [1] $auto$wreduce.cc:455:run$2949 [1] $auto$wreduce.cc:455:run$2949 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1629$1518:
      Old ports: A={ \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 }, B=17'00000000000000001, Y=$ternary$rtl.v:1629$1518_Y
      New ports: A=\wire12, B=8'00000001, Y=$ternary$rtl.v:1629$1518_Y [7:0]
      New connections: $ternary$rtl.v:1629$1518_Y [16:8] = { $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [7] $ternary$rtl.v:1629$1518_Y [7] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1629$1523:
      Old ports: A={ 14'11111111111111 $auto$opt_expr.cc:189:group_cell_inputs$4059 }, B=15'000000000000000, Y=$0\reg45[14:0]
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$4059 }, B=2'00, Y=$0\reg45[14:0] [1:0]
      New connections: $0\reg45[14:0] [14:2] = { $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] $0\reg45[14:0] [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1642$1551:
      Old ports: A=12'000000000000, B={ 6'000000 \reg48 }, Y=$ternary$rtl.v:1642$1551_Y
      New ports: A=6'000000, B=\reg48, Y=$ternary$rtl.v:1642$1551_Y [5:0]
      New connections: $ternary$rtl.v:1642$1551_Y [11:6] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1654$1563:
      Old ports: A={ 2'11 $auto$opt_expr.cc:189:group_cell_inputs$4067 }, B={ 2'00 \reg28 }, Y=$ternary$rtl.v:1654$1563_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$4067 }, B={ 1'0 \reg28 }, Y=$ternary$rtl.v:1654$1563_Y [5:0]
      New connections: $ternary$rtl.v:1654$1563_Y [6] = $ternary$rtl.v:1654$1563_Y [5]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1703$1598:
      Old ports: A=2'00, B=2'01, Y=$ternary$rtl.v:1703$1598_Y
      New ports: A=1'0, B=1'1, Y=$ternary$rtl.v:1703$1598_Y [0]
      New connections: $ternary$rtl.v:1703$1598_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1705$1606:
      Old ports: A={ $auto$opt_expr.cc:189:group_cell_inputs$4033 [1] $auto$opt_expr.cc:189:group_cell_inputs$4033 [1] $auto$opt_expr.cc:189:group_cell_inputs$4033 [1] $auto$opt_expr.cc:189:group_cell_inputs$4033 }, B=5'00000, Y=$auto$wreduce.cc:455:run$2955 [4:0]
      New ports: A=$auto$opt_expr.cc:189:group_cell_inputs$4033, B=2'00, Y=$auto$wreduce.cc:455:run$2955 [1:0]
      New connections: $auto$wreduce.cc:455:run$2955 [4:2] = { $auto$wreduce.cc:455:run$2955 [1] $auto$wreduce.cc:455:run$2955 [1] $auto$wreduce.cc:455:run$2955 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1721$1622:
      Old ports: A={ 8'11111111 $auto$opt_expr.cc:189:group_cell_inputs$4074 }, B={ 7'0000000 \reg55 [6:0] }, Y=$ternary$rtl.v:1721$1622_Y
      New ports: A={ 2'11 $auto$opt_expr.cc:189:group_cell_inputs$4074 }, B={ 1'0 \reg55 [6:0] }, Y=$ternary$rtl.v:1721$1622_Y [7:0]
      New connections: $ternary$rtl.v:1721$1622_Y [13:8] = { $ternary$rtl.v:1721$1622_Y [7] $ternary$rtl.v:1721$1622_Y [7] $ternary$rtl.v:1721$1622_Y [7] $ternary$rtl.v:1721$1622_Y [7] $ternary$rtl.v:1721$1622_Y [7] $ternary$rtl.v:1721$1622_Y [7] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1742$1655:
      Old ports: A={ 7'0000000 \wire18 }, B=8'10110111, Y=$auto$wreduce.cc:455:run$2959 [7:0]
      New ports: A={ 1'0 \wire18 }, B=2'11, Y=$auto$wreduce.cc:455:run$2959 [1:0]
      New connections: $auto$wreduce.cc:455:run$2959 [7:2] = { $auto$wreduce.cc:455:run$2959 [1] 1'0 $auto$wreduce.cc:455:run$2959 [1] $auto$wreduce.cc:455:run$2959 [1] 1'0 $auto$wreduce.cc:455:run$2959 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1750$1664:
      Old ports: A=16'1010001110111000, B=16'0000000010110111, Y=$ternary$rtl.v:1750$1664_Y
      New ports: A=2'10, B=2'01, Y={ $ternary$rtl.v:1750$1664_Y [3] $ternary$rtl.v:1750$1664_Y [0] }
      New connections: { $ternary$rtl.v:1750$1664_Y [15:4] $ternary$rtl.v:1750$1664_Y [2:1] } = { $ternary$rtl.v:1750$1664_Y [3] 1'0 $ternary$rtl.v:1750$1664_Y [3] 3'000 $ternary$rtl.v:1750$1664_Y [3] $ternary$rtl.v:1750$1664_Y [3] 4'1011 $ternary$rtl.v:1750$1664_Y [0] $ternary$rtl.v:1750$1664_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1753$1667:
      Old ports: A=8'10111011, B={ 4'0000 \wire21 }, Y=$auto$wreduce.cc:455:run$2960 [7:0]
      New ports: A=5'11011, B={ 1'0 \wire21 }, Y=$auto$wreduce.cc:455:run$2960 [4:0]
      New connections: $auto$wreduce.cc:455:run$2960 [7:5] = { $auto$wreduce.cc:455:run$2960 [4] 1'0 $auto$wreduce.cc:455:run$2960 [4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1769$1704:
      Old ports: A=8'00000000, B={ 1'0 \reg25 }, Y=$auto$wreduce.cc:455:run$2967 [7:0]
      New ports: A=7'0000000, B=\reg25, Y=$auto$wreduce.cc:455:run$2967 [6:0]
      New connections: $auto$wreduce.cc:455:run$2967 [7] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1770$1710:
      Old ports: A={ 10'1111111111 $auto$opt_expr.cc:189:group_cell_inputs$4100 $auto$opt_expr.cc:189:group_cell_inputs$4098 }, B={ 10'0000000000 \wire34 }, Y=$ternary$rtl.v:1770$1710_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$4100 $auto$opt_expr.cc:189:group_cell_inputs$4098 }, B={ 1'0 \wire34 }, Y=$ternary$rtl.v:1770$1710_Y [8:0]
      New connections: $ternary$rtl.v:1770$1710_Y [17:9] = { $ternary$rtl.v:1770$1710_Y [8] $ternary$rtl.v:1770$1710_Y [8] $ternary$rtl.v:1770$1710_Y [8] $ternary$rtl.v:1770$1710_Y [8] $ternary$rtl.v:1770$1710_Y [8] $ternary$rtl.v:1770$1710_Y [8] $ternary$rtl.v:1770$1710_Y [8] $ternary$rtl.v:1770$1710_Y [8] $ternary$rtl.v:1770$1710_Y [8] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1773$1715:
      Old ports: A=8'10110111, B={ 7'0000000 \reg66 [0] }, Y=$auto$wreduce.cc:455:run$2970
      New ports: A=2'11, B={ 1'0 \reg66 [0] }, Y=$auto$wreduce.cc:455:run$2970 [1:0]
      New connections: $auto$wreduce.cc:455:run$2970 [7:2] = { $auto$wreduce.cc:455:run$2970 [1] 1'0 $auto$wreduce.cc:455:run$2970 [1] $auto$wreduce.cc:455:run$2970 [1] 1'0 $auto$wreduce.cc:455:run$2970 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1784$1723:
      Old ports: A={ 16'0000000000000000 $auto$wreduce.cc:455:run$2939 [0] }, B={ \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 }, Y=$ternary$rtl.v:1784$1723_Y
      New ports: A={ 7'0000000 $auto$wreduce.cc:455:run$2939 [0] }, B=\wire12, Y=$ternary$rtl.v:1784$1723_Y [7:0]
      New connections: $ternary$rtl.v:1784$1723_Y [16:8] = { $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [7] $ternary$rtl.v:1784$1723_Y [7] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1823$1775:
      Old ports: A={ \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 [7] \wire12 }, B={ 8'00000000 \reg67 }, Y=$ternary$rtl.v:1823$1775_Y
      New ports: A={ \wire12 [7] \wire12 [7] \wire12 }, B={ 1'0 \reg67 }, Y=$ternary$rtl.v:1823$1775_Y [9:0]
      New connections: $ternary$rtl.v:1823$1775_Y [16:10] = { $ternary$rtl.v:1823$1775_Y [9] $ternary$rtl.v:1823$1775_Y [9] $ternary$rtl.v:1823$1775_Y [9] $ternary$rtl.v:1823$1775_Y [9] $ternary$rtl.v:1823$1775_Y [9] $ternary$rtl.v:1823$1775_Y [9] $ternary$rtl.v:1823$1775_Y [9] }
  Optimizing cells in module \module11.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1629$1519: { $ternary$rtl.v:1629$1518_Y [0] $ternary$rtl.v:1629$1518_Y [1] $ternary$rtl.v:1629$1518_Y [2] $ternary$rtl.v:1629$1518_Y [3] $ternary$rtl.v:1629$1518_Y [4] $ternary$rtl.v:1629$1518_Y [5] $ternary$rtl.v:1629$1518_Y [6] $ternary$rtl.v:1629$1518_Y [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1582$1466: { $ternary$rtl.v:1582$1465_Y [0] $ternary$rtl.v:1582$1465_Y [1] $ternary$rtl.v:1582$1465_Y [2] $ternary$rtl.v:1582$1465_Y [3] $ternary$rtl.v:1582$1465_Y [4] $ternary$rtl.v:1582$1465_Y [5] $ternary$rtl.v:1582$1465_Y [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1784$1724: { $ternary$rtl.v:1784$1723_Y [0] $ternary$rtl.v:1784$1723_Y [1] $ternary$rtl.v:1784$1723_Y [2] $ternary$rtl.v:1784$1723_Y [3] $ternary$rtl.v:1784$1723_Y [4] $ternary$rtl.v:1784$1723_Y [5] $ternary$rtl.v:1784$1723_Y [6] $ternary$rtl.v:1784$1723_Y [7] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1582$1465:
      Old ports: A=7'0000000, B=$auto$wreduce.cc:455:run$2946 [6:0], Y=$ternary$rtl.v:1582$1465_Y [6:0]
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$2946 [6], Y=$ternary$rtl.v:1582$1465_Y [6]
      New connections: $ternary$rtl.v:1582$1465_Y [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1619$1501:
      Old ports: A=\wire34, B={ 7'0000000 $auto$wreduce.cc:455:run$2914 [0] }, Y=$auto$wreduce.cc:455:run$2948 [7:0]
      New ports: A=\wire34 [5:0], B={ 5'00000 $auto$wreduce.cc:455:run$2914 [0] }, Y=$auto$wreduce.cc:455:run$2948 [5:0]
      New connections: $auto$wreduce.cc:455:run$2948 [7:6] = { $auto$wreduce.cc:455:run$2948 [5] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1753$1669:
      Old ports: A={ 3'000 \reg71 }, B=$auto$wreduce.cc:455:run$2960 [7:0], Y=$auto$wreduce.cc:455:run$2961 [7:0]
      New ports: A={ 1'0 \reg71 }, B={ $auto$wreduce.cc:455:run$2960 [4] $auto$wreduce.cc:455:run$2960 [4:0] }, Y=$auto$wreduce.cc:455:run$2961 [5:0]
      New connections: $auto$wreduce.cc:455:run$2961 [7:6] = { $auto$wreduce.cc:455:run$2961 [5] 1'0 }
  Optimizing cells in module \module11.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1582$1466: $ternary$rtl.v:1582$1465_Y [6]
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
    Consolidated identical input bits for $mux cell $procmux$2337:
      Old ports: A={ \wire200 [16] \wire200 [16] \wire200 [16] \wire200 }, B={ 19'0000000000000000000 $reduce_xnor$rtl.v:830$720_Y }, Y=$0\reg214[19:0]
      New ports: A=\wire200, B={ 16'0000000000000000 $reduce_xnor$rtl.v:830$720_Y }, Y=$0\reg214[19:0] [16:0]
      New connections: $0\reg214[19:0] [19:17] = { $0\reg214[19:0] [16] $0\reg214[19:0] [16] $0\reg214[19:0] [16] }
    Consolidated identical input bits for $mux cell $procmux$2344:
      Old ports: A={ \wire201 [1] \wire201 [1] \wire201 [1] \wire201 [1] }, B={ 3'000 $reduce_xnor$rtl.v:833$723_Y [0] }, Y=$procmux$2344_Y
      New ports: A={ \wire201 [1] \wire201 [1] }, B={ 1'0 $reduce_xnor$rtl.v:833$723_Y [0] }, Y=$procmux$2344_Y [1:0]
      New connections: $procmux$2344_Y [3:2] = { $procmux$2344_Y [1] $procmux$2344_Y [1] }
    Consolidated identical input bits for $mux cell $procmux$2353:
      Old ports: A=3'101, B={ 2'00 \reg212 [0] }, Y=$auto$wreduce.cc:455:run$2991 [2:0]
      New ports: A=2'11, B={ 1'0 \reg212 [0] }, Y={ $auto$wreduce.cc:455:run$2991 [2] $auto$wreduce.cc:455:run$2991 [0] }
      New connections: $auto$wreduce.cc:455:run$2991 [1] = 1'0
    Consolidated identical input bits for $mux cell $procmux$2367:
      Old ports: A={ 8'00000000 \reg204 [3:2] }, B={ \reg220 [2] \reg220 [2] \reg220 [2] \reg220 [2] \reg220 [2] \reg220 [2] \reg220 [2] \reg220 }, Y=$procmux$2367_Y
      New ports: A={ 1'0 \reg204 [3:2] }, B=\reg220, Y=$procmux$2367_Y [2:0]
      New connections: $procmux$2367_Y [9:3] = { $procmux$2367_Y [2] $procmux$2367_Y [2] $procmux$2367_Y [2] $procmux$2367_Y [2] $procmux$2367_Y [2] $procmux$2367_Y [2] $procmux$2367_Y [2] }
    Consolidated identical input bits for $mux cell $procmux$2385:
      Old ports: A={ $ternary$rtl.v:896$805_Y [1] $ternary$rtl.v:896$805_Y }, B={ 2'00 $auto$wreduce.cc:455:run$2993 [0] }, Y=$0\reg220[2:0]
      New ports: A=$ternary$rtl.v:896$805_Y, B={ 1'0 $auto$wreduce.cc:455:run$2993 [0] }, Y=$0\reg220[2:0] [1:0]
      New connections: $0\reg220[2:0] [2] = $0\reg220[2:0] [1]
    Consolidated identical input bits for $mux cell $procmux$2401:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$3009 [8:0] }, B={ \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3:0] }, Y=$procmux$2401_Y
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$3009 [8:0] }, B={ \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3] \reg204 [3:0] }, Y=$procmux$2401_Y [9:0]
      New connections: $procmux$2401_Y [19:10] = { $procmux$2401_Y [9] $procmux$2401_Y [9] $procmux$2401_Y [9] $procmux$2401_Y [9] $procmux$2401_Y [9] $procmux$2401_Y [9] $procmux$2401_Y [9] $procmux$2401_Y [9] $procmux$2401_Y [9] $procmux$2401_Y [9] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:811$680:
      Old ports: A={ 7'0000000 $auto$wreduce.cc:455:run$2996 [0] }, B=8'10101011, Y=$ternary$rtl.v:811$680_Y
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$2996 [0] }, B=2'11, Y=$ternary$rtl.v:811$680_Y [1:0]
      New connections: $ternary$rtl.v:811$680_Y [7:2] = { $ternary$rtl.v:811$680_Y [1] 1'0 $ternary$rtl.v:811$680_Y [1] 1'0 $ternary$rtl.v:811$680_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:819$693:
      Old ports: A={ 2'00 $auto$wreduce.cc:455:run$3004 [8:0] }, B={ 6'000000 \reg204 [4:0] }, Y=$auto$wreduce.cc:455:run$3005 [10:0]
      New ports: A=$auto$wreduce.cc:455:run$3004 [8:0], B={ 4'0000 \reg204 [4:0] }, Y=$auto$wreduce.cc:455:run$3005 [8:0]
      New connections: $auto$wreduce.cc:455:run$3005 [10:9] = 2'00
    Consolidated identical input bits for $mux cell $ternary$rtl.v:824$709:
      Old ports: A={ \wire199 [2:0] 4'0000 \reg204 [4:0] }, B={ 9'000001000 $auto$opt_expr.cc:189:group_cell_inputs$4121 }, Y=$auto$wreduce.cc:455:run$3006 [11:0]
      New ports: A={ \wire199 [2:0] 1'0 \reg204 [4:0] }, B={ 6'000100 $auto$opt_expr.cc:189:group_cell_inputs$4121 }, Y={ $auto$wreduce.cc:455:run$3006 [11:9] $auto$wreduce.cc:455:run$3006 [6] $auto$wreduce.cc:455:run$3006 [4:0] }
      New connections: { $auto$wreduce.cc:455:run$3006 [8:7] $auto$wreduce.cc:455:run$3006 [5] } = 3'000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:845$727:
      Old ports: A=10'0000000000, B={ 7'0000000 \wire199 [2:0] }, Y=$ternary$rtl.v:845$727_Y [9:0]
      New ports: A=3'000, B=\wire199 [2:0], Y=$ternary$rtl.v:845$727_Y [2:0]
      New connections: $ternary$rtl.v:845$727_Y [9:3] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:906$809:
      Old ports: A={ 3'000 \wire209 }, B=8'00000000, Y=$auto$wreduce.cc:455:run$3012 [7:0]
      New ports: A=\wire209, B=5'00000, Y=$auto$wreduce.cc:455:run$3012 [4:0]
      New connections: $auto$wreduce.cc:455:run$3012 [7:5] = 3'000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:910$814:
      Old ports: A={ \reg212 [2] \reg212 [2:0] }, B={ 3'000 $auto$wreduce.cc:455:run$2984 [0] }, Y=$ternary$rtl.v:910$814_Y
      New ports: A=\reg212 [2:0], B={ 2'00 $auto$wreduce.cc:455:run$2984 [0] }, Y=$ternary$rtl.v:910$814_Y [2:0]
      New connections: $ternary$rtl.v:910$814_Y [3] = $ternary$rtl.v:910$814_Y [2]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:911$819:
      Old ports: A={ 6'000000 $auto$wreduce.cc:455:run$3013 [4:0] }, B={ 7'0000000 $ternary$rtl.v:910$814_Y }, Y=$auto$wreduce.cc:455:run$3014 [10:0]
      New ports: A=$auto$wreduce.cc:455:run$3013 [4:0], B={ 1'0 $ternary$rtl.v:910$814_Y }, Y=$auto$wreduce.cc:455:run$3014 [4:0]
      New connections: $auto$wreduce.cc:455:run$3014 [10:5] = 6'000000
  Optimizing cells in module \module198.
    New input vector for $reduce_or cell $reduce_or$rtl.v:819$694: { $auto$wreduce.cc:455:run$3005 [0] $auto$wreduce.cc:455:run$3005 [1] $auto$wreduce.cc:455:run$3005 [2] $auto$wreduce.cc:455:run$3005 [3] $auto$wreduce.cc:455:run$3005 [4] $auto$wreduce.cc:455:run$3005 [5] $auto$wreduce.cc:455:run$3005 [6] $auto$wreduce.cc:455:run$3005 [7] $auto$wreduce.cc:455:run$3005 [8] }
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
    Consolidated identical input bits for $mux cell $procmux$2427:
      Old ports: A={ \wire245 [6] \wire245 [6] \wire245 [6] \wire245 [6] \wire245 [6] \wire245 [6] \wire245 [6] \wire245 }, B={ 13'0000000000000 \wire242 [1] }, Y=$0\reg252[13:0]
      New ports: A=\wire245, B={ 6'000000 \wire242 [1] }, Y=$0\reg252[13:0] [6:0]
      New connections: $0\reg252[13:0] [13:7] = { $0\reg252[13:0] [6] $0\reg252[13:0] [6] $0\reg252[13:0] [6] $0\reg252[13:0] [6] $0\reg252[13:0] [6] $0\reg252[13:0] [6] $0\reg252[13:0] [6] }
    Consolidated identical input bits for $mux cell $procmux$2454:
      Old ports: A={ 7'0000000 $auto$wreduce.cc:455:run$3021 [0] }, B=8'10100101, Y=$auto$wreduce.cc:455:run$3023 [7:0]
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$3021 [0] }, B=2'11, Y={ $auto$wreduce.cc:455:run$3023 [2] $auto$wreduce.cc:455:run$3023 [0] }
      New connections: { $auto$wreduce.cc:455:run$3023 [7:3] $auto$wreduce.cc:455:run$3023 [1] } = { $auto$wreduce.cc:455:run$3023 [2] 1'0 $auto$wreduce.cc:455:run$3023 [2] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:701$621:
      Old ports: A={ 2'00 \reg253 }, B=8'10110100, Y=$ternary$rtl.v:701$621_Y
      New ports: A={ 1'0 \reg253 }, B=7'1110100, Y={ $ternary$rtl.v:701$621_Y [7] $ternary$rtl.v:701$621_Y [5:0] }
      New connections: $ternary$rtl.v:701$621_Y [6] = 1'0
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:488$428:
      Old ports: A=22'0000000000000001000010, B={ \wire9 [12] \wire9 [12] \wire9 [12] \wire9 [12] \wire9 [12] \wire9 [12] \wire9 [12] \wire9 [12] \wire9 [12] \wire9 }, Y=$ternary$rtl.v:488$428_Y
      New ports: A=13'0000001000010, B=\wire9, Y=$ternary$rtl.v:488$428_Y [12:0]
      New connections: $ternary$rtl.v:488$428_Y [21:13] = { $ternary$rtl.v:488$428_Y [12] $ternary$rtl.v:488$428_Y [12] $ternary$rtl.v:488$428_Y [12] $ternary$rtl.v:488$428_Y [12] $ternary$rtl.v:488$428_Y [12] $ternary$rtl.v:488$428_Y [12] $ternary$rtl.v:488$428_Y [12] $ternary$rtl.v:488$428_Y [12] $ternary$rtl.v:488$428_Y [12] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:489$431:
      Old ports: A=8'10100010, B={ 7'0000000 \reg165 [0] }, Y=$auto$wreduce.cc:455:run$3043 [7:0]
      New ports: A=2'10, B={ 1'0 \reg165 [0] }, Y=$auto$wreduce.cc:455:run$3043 [1:0]
      New connections: $auto$wreduce.cc:455:run$3043 [7:2] = { $auto$wreduce.cc:455:run$3043 [1] 1'0 $auto$wreduce.cc:455:run$3043 [1] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:495$446:
      Old ports: A={ 2'00 \wire9 [5:0] }, B=8'10100110, Y=$ternary$rtl.v:495$446_Y
      New ports: A={ 1'0 \wire9 [5:0] }, B=7'1100110, Y={ $ternary$rtl.v:495$446_Y [7] $ternary$rtl.v:495$446_Y [5:0] }
      New connections: $ternary$rtl.v:495$446_Y [6] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:614$530:
      Old ports: A={ 11'00000000000 \wire87 }, B={ \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] }, Y=$ternary$rtl.v:614$530_Y [13:0]
      New ports: A={ 1'0 \wire87 }, B={ \reg170 [0] \reg170 [0] \reg170 [0] \reg170 [0] }, Y=$ternary$rtl.v:614$530_Y [3:0]
      New connections: $ternary$rtl.v:614$530_Y [13:4] = { $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] $ternary$rtl.v:614$530_Y [3] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:614$539:
      Old ports: A={ 13'0000000000000 \reg194 [2] }, B={ 13'0000000000000 $and$rtl.v:614$536_Y [0] }, Y=\wire234
      New ports: A=\reg194 [2], B=$and$rtl.v:614$536_Y [0], Y=\wire234 [0]
      New connections: \wire234 [13:1] = 13'0000000000000
  Optimizing cells in module \module4.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:622$549:
      Old ports: A=\wire234, B=14'00000010111010, Y=$ternary$rtl.v:622$549_Y
      New ports: A={ 1'0 \wire234 [0] }, B=2'10, Y=$ternary$rtl.v:622$549_Y [1:0]
      New connections: $ternary$rtl.v:622$549_Y [13:2] = { 6'000000 $ternary$rtl.v:622$549_Y [1] 1'0 $ternary$rtl.v:622$549_Y [1] $ternary$rtl.v:622$549_Y [1] $ternary$rtl.v:622$549_Y [1] 1'0 }
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
    New input vector for $reduce_and cell $reduce_and$rtl.v:1234$1088: { \wire94 [1] \wire94 [2] \wire94 [3] \wire94 [4] \wire94 [5] \wire94 [6] \wire94 [7] \wire94 [8] \wire94 [9] \wire94 [10] \wire94 [11] \wire94 [12] \wire94 [13] \wire94 [14] \wire94 [15] \wire94 [16] \wire94 [17] \wire94 [18] \wire94 [19] \wire94 [20] $auto$opt_expr.cc:189:group_cell_inputs$4177 }
    Consolidated identical input bits for $mux cell $procmux$2110:
      Old ports: A={ 10'0000000000 $sshr$rtl.v:1324$1206_Y }, B={ \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] }, Y=$procmux$2110_Y
      New ports: A={ 1'0 $sshr$rtl.v:1324$1206_Y }, B={ \reg142 [0] \reg142 [0] \reg142 [0] \reg142 [0] }, Y=$procmux$2110_Y [3:0]
      New connections: $procmux$2110_Y [12:4] = { $procmux$2110_Y [3] $procmux$2110_Y [3] $procmux$2110_Y [3] $procmux$2110_Y [3] $procmux$2110_Y [3] $procmux$2110_Y [3] $procmux$2110_Y [3] $procmux$2110_Y [3] $procmux$2110_Y [3] }
    Consolidated identical input bits for $mux cell $procmux$2157:
      Old ports: A={ 3'000 \reg135 [7:2] }, B={ \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] }, Y=$procmux$2157_Y
      New ports: A={ 1'0 \reg135 [7:2] }, B={ \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] \reg116 [0] }, Y=$procmux$2157_Y [6:0]
      New connections: $procmux$2157_Y [8:7] = { $procmux$2157_Y [6] $procmux$2157_Y [6] }
    Consolidated identical input bits for $mux cell $procmux$2257:
      Old ports: A={ $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y }, B={ 4'0000 \reg103 }, Y=$procmux$2257_Y
      New ports: A={ $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y $reduce_xnor$rtl.v:1228$1082_Y }, B={ 1'0 \reg103 }, Y=$procmux$2257_Y [5:0]
      New connections: $procmux$2257_Y [8:6] = { $procmux$2257_Y [5] $procmux$2257_Y [5] $procmux$2257_Y [5] }
    Consolidated identical input bits for $mux cell $procmux$2269:
      Old ports: A=6'101100, B={ $logic_not$rtl.v:1223$1077_Y $logic_not$rtl.v:1223$1077_Y $logic_not$rtl.v:1223$1077_Y $logic_not$rtl.v:1223$1077_Y $logic_not$rtl.v:1223$1077_Y $logic_not$rtl.v:1223$1077_Y }, Y=$procmux$2269_Y
      New ports: A=2'10, B={ $logic_not$rtl.v:1223$1077_Y $logic_not$rtl.v:1223$1077_Y }, Y={ $procmux$2269_Y [2] $procmux$2269_Y [0] }
      New connections: { $procmux$2269_Y [5:3] $procmux$2269_Y [1] } = { $procmux$2269_Y [2] $procmux$2269_Y [0] $procmux$2269_Y [2] $procmux$2269_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$2275:
      Old ports: A={ $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y [7] $ternary$rtl.v:1232$1085_Y }, B={ 19'0000000000000000000 $auto$wreduce.cc:455:run$3097 [0] }, Y=$procmux$2275_Y
      New ports: A=$ternary$rtl.v:1232$1085_Y, B={ 7'0000000 $auto$wreduce.cc:455:run$3097 [0] }, Y=$procmux$2275_Y [7:0]
      New connections: $procmux$2275_Y [19:8] = { $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] $procmux$2275_Y [7] }
    Consolidated identical input bits for $mux cell $procmux$2290:
      Old ports: A={ 5'00000 \wire99 }, B=8'10011100, Y=$0\reg110[13:0] [7:0]
      New ports: A={ 1'0 \wire99 }, B=4'1100, Y=$0\reg110[13:0] [3:0]
      New connections: $0\reg110[13:0] [7:4] = { $0\reg110[13:0] [3] 2'00 $0\reg110[13:0] [3] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1081$862:
      Old ports: A=7'0000000, B=7'1000011, Y=$auto$wreduce.cc:455:run$3103 [6:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3103 [0]
      New connections: $auto$wreduce.cc:455:run$3103 [6:1] = { $auto$wreduce.cc:455:run$3103 [0] 4'0000 $auto$wreduce.cc:455:run$3103 [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1100$890:
      Old ports: A={ 29'00000000000000000000000000000 $auto$wreduce.cc:455:run$3069 [0] }, B={ 23'00000000000000000000000 $and$rtl.v:1100$889_Y [6:0] }, Y=$ternary$rtl.v:1100$890_Y
      New ports: A={ 6'000000 $auto$wreduce.cc:455:run$3069 [0] }, B=$and$rtl.v:1100$889_Y [6:0], Y=$ternary$rtl.v:1100$890_Y [6:0]
      New connections: $ternary$rtl.v:1100$890_Y [29:7] = 23'00000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1102$897:
      Old ports: A=8'10111001, B={ 7'0000000 $reduce_and$rtl.v:1102$895_Y }, Y=$ternary$rtl.v:1102$897_Y
      New ports: A=2'11, B={ 1'0 $reduce_and$rtl.v:1102$895_Y }, Y={ $ternary$rtl.v:1102$897_Y [3] $ternary$rtl.v:1102$897_Y [0] }
      New connections: { $ternary$rtl.v:1102$897_Y [7:4] $ternary$rtl.v:1102$897_Y [2:1] } = { $ternary$rtl.v:1102$897_Y [3] 1'0 $ternary$rtl.v:1102$897_Y [3] $ternary$rtl.v:1102$897_Y [3] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1112$916:
      Old ports: A={ 4'0000 \wire107 [7:4] }, B={ 7'0000000 $auto$wreduce.cc:455:run$3106 [0] }, Y=$ternary$rtl.v:1112$916_Y
      New ports: A=\wire107 [7:4], B={ 3'000 $auto$wreduce.cc:455:run$3106 [0] }, Y=$ternary$rtl.v:1112$916_Y [3:0]
      New connections: $ternary$rtl.v:1112$916_Y [7:4] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1118$929:
      Old ports: A={ 5'00000 \wire99 }, B=8'10011101, Y=$ternary$rtl.v:1118$929_Y
      New ports: A={ 1'0 \wire99 }, B=4'1101, Y=$ternary$rtl.v:1118$929_Y [3:0]
      New connections: $ternary$rtl.v:1118$929_Y [7:4] = { $ternary$rtl.v:1118$929_Y [3] 2'00 $ternary$rtl.v:1118$929_Y [3] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1214$1056:
      Old ports: A={ \wire99 [2] \wire99 [2] \wire99 [2] \wire99 [2] \wire99 [2] \wire99 [2] \wire99 [2] \wire99 }, B={ 4'0000 \reg112 }, Y=$ternary$rtl.v:1214$1056_Y
      New ports: A={ \wire99 [2] \wire99 [2] \wire99 [2] \wire99 [2] \wire99 }, B={ 1'0 \reg112 }, Y=$ternary$rtl.v:1214$1056_Y [6:0]
      New connections: $ternary$rtl.v:1214$1056_Y [9:7] = { $ternary$rtl.v:1214$1056_Y [6] $ternary$rtl.v:1214$1056_Y [6] $ternary$rtl.v:1214$1056_Y [6] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1223$1072:
      Old ports: A=8'10110011, B={ 7'0000000 \reg116 [0] }, Y=$ternary$rtl.v:1223$1072_Y [7:0]
      New ports: A=2'11, B={ 1'0 \reg116 [0] }, Y=$ternary$rtl.v:1223$1072_Y [1:0]
      New connections: $ternary$rtl.v:1223$1072_Y [7:2] = { $ternary$rtl.v:1223$1072_Y [1] 1'0 $ternary$rtl.v:1223$1072_Y [1] $ternary$rtl.v:1223$1072_Y [1] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1223$1075:
      Old ports: A={ 10'0000000000 $ternary$rtl.v:1223$1072_Y [7:0] }, B=18'000000000000000000, Y=$ternary$rtl.v:1223$1075_Y
      New ports: A=$ternary$rtl.v:1223$1072_Y [7:0], B=8'00000000, Y=$ternary$rtl.v:1223$1075_Y [7:0]
      New connections: $ternary$rtl.v:1223$1075_Y [17:8] = 10'0000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1265$1134:
      Old ports: A={ 6'111111 \wire95 [3:0] }, B={ 9'000000000 $auto$wreduce.cc:455:run$3117 [0] }, Y=$auto$wreduce.cc:455:run$3118 [9:0]
      New ports: A={ 1'1 \wire95 [3:0] }, B={ 4'0000 $auto$wreduce.cc:455:run$3117 [0] }, Y=$auto$wreduce.cc:455:run$3118 [4:0]
      New connections: $auto$wreduce.cc:455:run$3118 [9:5] = { $auto$wreduce.cc:455:run$3118 [4] $auto$wreduce.cc:455:run$3118 [4] $auto$wreduce.cc:455:run$3118 [4] $auto$wreduce.cc:455:run$3118 [4] $auto$wreduce.cc:455:run$3118 [4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1285$1158:
      Old ports: A=7'1100011, B={ 6'000000 \reg128 [1] }, Y=$auto$wreduce.cc:455:run$3120 [6:0]
      New ports: A=2'11, B={ 1'0 \reg128 [1] }, Y=$auto$wreduce.cc:455:run$3120 [1:0]
      New connections: $auto$wreduce.cc:455:run$3120 [6:2] = { $auto$wreduce.cc:455:run$3120 [1] $auto$wreduce.cc:455:run$3120 [1] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1294$1172:
      Old ports: A={ 13'0000000000000 $auto$wreduce.cc:455:run$3121 [0] }, B={ $ternary$rtl.v:1291$1161_Y [8:0] 5'00000 }, Y=$auto$wreduce.cc:455:run$3122 [13:0]
      New ports: A={ 9'000000000 $auto$wreduce.cc:455:run$3121 [0] }, B={ $ternary$rtl.v:1291$1161_Y [8:0] 1'0 }, Y={ $auto$wreduce.cc:455:run$3122 [13:5] $auto$wreduce.cc:455:run$3122 [0] }
      New connections: $auto$wreduce.cc:455:run$3122 [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1304$1186:
      Old ports: A={ 6'111111 $auto$opt_expr.cc:189:group_cell_inputs$4213 }, B=10'0000000000, Y=$0\reg143[9:0]
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$4213 }, B=5'00000, Y=$0\reg143[9:0] [4:0]
      New connections: $0\reg143[9:0] [9:5] = { $0\reg143[9:0] [4] $0\reg143[9:0] [4] $0\reg143[9:0] [4] $0\reg143[9:0] [4] $0\reg143[9:0] [4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1339$1234:
      Old ports: A={ 12'111110101111 $auto$opt_expr.cc:189:group_cell_inputs$4221 }, B={ 9'000000000 $shl$rtl.v:1339$1229_Y }, Y=$ternary$rtl.v:1339$1234_Y
      New ports: A={ 4'1111 $auto$opt_expr.cc:189:group_cell_inputs$4221 }, B={ 1'0 $shl$rtl.v:1339$1229_Y }, Y=$ternary$rtl.v:1339$1234_Y [4:0]
      New connections: $ternary$rtl.v:1339$1234_Y [12:5] = { $ternary$rtl.v:1339$1234_Y [4] $ternary$rtl.v:1339$1234_Y [4] $ternary$rtl.v:1339$1234_Y [4] $ternary$rtl.v:1339$1234_Y [4] $ternary$rtl.v:1339$1234_Y [4] 1'0 $ternary$rtl.v:1339$1234_Y [4] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1344$1242:
      Old ports: A={ 7'0000000 \reg130 }, B={ \reg117 [5] \reg117 [5] \reg117 [5] \reg117 [5] \reg117 [5] \reg117 [5] \reg117 [5] \reg117 [5] \reg117 [5] \reg117 [5:0] }, Y=$ternary$rtl.v:1344$1242_Y
      New ports: A={ 1'0 \reg130 }, B={ \reg117 [5] \reg117 [5] \reg117 [5] \reg117 [5:0] }, Y=$ternary$rtl.v:1344$1242_Y [8:0]
      New connections: $ternary$rtl.v:1344$1242_Y [14:9] = { $ternary$rtl.v:1344$1242_Y [8] $ternary$rtl.v:1344$1242_Y [8] $ternary$rtl.v:1344$1242_Y [8] $ternary$rtl.v:1344$1242_Y [8] $ternary$rtl.v:1344$1242_Y [8] $ternary$rtl.v:1344$1242_Y [8] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1374$1299:
      Old ports: A={ 17'11111111111111111 $auto$opt_expr.cc:189:group_cell_inputs$4242 $auto$opt_expr.cc:189:group_cell_inputs$4240 }, B={ 19'0000000000000000000 \wire107 [3:2] $logic_not$rtl.v:1374$1295_Y }, Y=$ternary$rtl.v:1374$1299_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$4242 $auto$opt_expr.cc:189:group_cell_inputs$4240 }, B={ 3'000 \wire107 [3:2] $logic_not$rtl.v:1374$1295_Y }, Y=$ternary$rtl.v:1374$1299_Y [5:0]
      New connections: $ternary$rtl.v:1374$1299_Y [21:6] = { $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] $ternary$rtl.v:1374$1299_Y [5] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1380$1302:
      Old ports: A=11'00000000000, B={ 9'000000000 \reg118 [1:0] }, Y=$ternary$rtl.v:1380$1302_Y
      New ports: A=2'00, B=\reg118 [1:0], Y=$ternary$rtl.v:1380$1302_Y [1:0]
      New connections: $ternary$rtl.v:1380$1302_Y [10:2] = 9'000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1381$1305:
      Old ports: A={ 16'0000000000000000 \reg141 }, B=21'000000000000000000000, Y=$ternary$rtl.v:1381$1305_Y
      New ports: A=\reg141, B=5'00000, Y=$ternary$rtl.v:1381$1305_Y [4:0]
      New connections: $ternary$rtl.v:1381$1305_Y [20:5] = 16'0000000000000000
  Optimizing cells in module \module90.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1112$917: { $ternary$rtl.v:1112$916_Y [0] $ternary$rtl.v:1112$916_Y [1] $ternary$rtl.v:1112$916_Y [2] $ternary$rtl.v:1112$916_Y [3] }
    Consolidated identical input bits for $mux cell $procmux$2112:
      Old ports: A=$ternary$rtl.v:1339$1234_Y, B=$procmux$2110_Y, Y=$0\reg149[12:0]
      New ports: A={ 1'0 $ternary$rtl.v:1339$1234_Y [4:0] }, B={ $procmux$2110_Y [3] $procmux$2110_Y [3] $procmux$2110_Y [3:0] }, Y=$0\reg149[12:0] [5:0]
      New connections: $0\reg149[12:0] [12:6] = { $0\reg149[12:0] [4] $0\reg149[12:0] [4] $0\reg149[12:0] [4] $0\reg149[12:0] [4] $0\reg149[12:0] [4] $0\reg149[12:0] [5:4] }
    Consolidated identical input bits for $mux cell $procmux$2187:
      Old ports: A={ 2'00 \reg120 [11:7] }, B=$auto$wreduce.cc:455:run$3120 [6:0], Y=$procmux$2187_Y
      New ports: A={ 1'0 \reg120 [11:7] }, B={ $auto$wreduce.cc:455:run$3120 [1] 3'000 $auto$wreduce.cc:455:run$3120 [1:0] }, Y=$procmux$2187_Y [5:0]
      New connections: $procmux$2187_Y [6] = $procmux$2187_Y [5]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1223$1075:
      Old ports: A=$ternary$rtl.v:1223$1072_Y [7:0], B=8'00000000, Y=$ternary$rtl.v:1223$1075_Y [7:0]
      New ports: A=$ternary$rtl.v:1223$1072_Y [1:0], B=2'00, Y=$ternary$rtl.v:1223$1075_Y [1:0]
      New connections: $ternary$rtl.v:1223$1075_Y [7:2] = { $ternary$rtl.v:1223$1075_Y [1] 1'0 $ternary$rtl.v:1223$1075_Y [1] $ternary$rtl.v:1223$1075_Y [1] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1294$1174:
      Old ports: A={ 13'0000000000000 $auto$wreduce.cc:455:run$3098 [0] }, B=$auto$wreduce.cc:455:run$3122 [13:0], Y=$auto$wreduce.cc:455:run$3123 [13:0]
      New ports: A={ 9'000000000 $auto$wreduce.cc:455:run$3098 [0] }, B={ $auto$wreduce.cc:455:run$3122 [13:5] $auto$wreduce.cc:455:run$3122 [0] }, Y={ $auto$wreduce.cc:455:run$3123 [13:5] $auto$wreduce.cc:455:run$3123 [0] }
      New connections: $auto$wreduce.cc:455:run$3123 [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1381$1307:
      Old ports: A=$ternary$rtl.v:1381$1305_Y, B={ 11'00000000000 \reg143 }, Y=$ternary$rtl.v:1381$1307_Y
      New ports: A={ 5'00000 $ternary$rtl.v:1381$1305_Y [4:0] }, B=\reg143, Y=$ternary$rtl.v:1381$1307_Y [9:0]
      New connections: $ternary$rtl.v:1381$1307_Y [20:10] = 11'00000000000
  Optimizing cells in module \module90.
    Consolidated identical input bits for $mux cell $procmux$2181:
      Old ports: A=$auto$wreduce.cc:455:run$3123 [13:0], B={ 10'0000000000 \wire96 }, Y=$procmux$2181_Y
      New ports: A={ $auto$wreduce.cc:455:run$3123 [13:5] 3'000 $auto$wreduce.cc:455:run$3123 [0] }, B={ 9'000000000 \wire96 }, Y={ $procmux$2181_Y [13:5] $procmux$2181_Y [3:0] }
      New connections: $procmux$2181_Y [4] = 1'0
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$2544:
      Old ports: A={ \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5:1] }, B={ 2'00 \wire271 }, Y=$procmux$2544_Y
      New ports: A={ \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5] \reg294 [5:1] }, B={ 1'0 \wire271 }, Y=$procmux$2544_Y [13:0]
      New connections: $procmux$2544_Y [14] = $procmux$2544_Y [13]
    Consolidated identical input bits for $mux cell $procmux$2568:
      Old ports: A={ 6'000000 $auto$wreduce.cc:455:run$3183 [8:0] }, B={ 5'11111 \wire303 [9:0] }, Y=$0\reg304[18:0]
      New ports: A={ 2'00 $auto$wreduce.cc:455:run$3183 [8:0] }, B={ 1'1 \wire303 [9:0] }, Y=$0\reg304[18:0] [10:0]
      New connections: $0\reg304[18:0] [14:11] = { $0\reg304[18:0] [10] $0\reg304[18:0] [10] $0\reg304[18:0] [10] $0\reg304[18:0] [10] }
    Consolidated identical input bits for $mux cell $procmux$2571:
      Old ports: A={ $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y }, B={ 5'00000 \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] }, Y=$procmux$2571_Y
      New ports: A={ $ne$rtl.v:300$298_Y $ne$rtl.v:300$298_Y }, B={ 1'0 \reg272 [0] }, Y={ $procmux$2571_Y [10] $procmux$2571_Y [0] }
      New connections: { $procmux$2571_Y [14:11] $procmux$2571_Y [9:1] } = { $procmux$2571_Y [10] $procmux$2571_Y [10] $procmux$2571_Y [10] $procmux$2571_Y [10] $procmux$2571_Y [0] $procmux$2571_Y [0] $procmux$2571_Y [0] $procmux$2571_Y [0] $procmux$2571_Y [0] $procmux$2571_Y [0] $procmux$2571_Y [0] $procmux$2571_Y [0] $procmux$2571_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$2616:
      Old ports: A={ 17'00000000000000000 \reg272 [0] \reg272 [0] \reg272 [0] }, B={ \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 [3] \wire289 }, Y=$0\reg292[19:0]
      New ports: A={ 1'0 \reg272 [0] \reg272 [0] \reg272 [0] }, B=\wire289, Y=$0\reg292[19:0] [3:0]
      New connections: $0\reg292[19:0] [19:4] = { $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] $0\reg292[19:0] [3] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:167$72:
      Old ports: A=6'110010, B=6'011101, Y=$auto$wreduce.cc:455:run$3174 [5:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$3174 [1:0]
      New connections: $auto$wreduce.cc:455:run$3174 [5:2] = { $auto$wreduce.cc:455:run$3174 [1] 1'1 $auto$wreduce.cc:455:run$3174 [0] $auto$wreduce.cc:455:run$3174 [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:243$196:
      Old ports: A={ \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] }, B={ 9'111111111 $auto$opt_expr.cc:189:group_cell_inputs$4286 }, Y=$ternary$rtl.v:243$196_Y
      New ports: A={ \reg272 [0] \reg272 [0] }, B={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$4286 }, Y=$ternary$rtl.v:243$196_Y [1:0]
      New connections: $ternary$rtl.v:243$196_Y [9:2] = { $ternary$rtl.v:243$196_Y [1] $ternary$rtl.v:243$196_Y [1] $ternary$rtl.v:243$196_Y [1] $ternary$rtl.v:243$196_Y [1] $ternary$rtl.v:243$196_Y [1] $ternary$rtl.v:243$196_Y [1] $ternary$rtl.v:243$196_Y [1] $ternary$rtl.v:243$196_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:284$258:
      Old ports: A=2'11, B=2'01, Y=$auto$wreduce.cc:455:run$3184 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$3184 [1]
      New connections: $auto$wreduce.cc:455:run$3184 [0] = 1'1
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$2574:
      Old ports: A=$procmux$2571_Y, B={ 5'00000 \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] \reg272 [0] }, Y=$0\reg305[14:0]
      New ports: A={ $procmux$2571_Y [10] $procmux$2571_Y [0] }, B={ 1'0 \reg272 [0] }, Y={ $0\reg305[14:0] [10] $0\reg305[14:0] [0] }
      New connections: { $0\reg305[14:0] [14:11] $0\reg305[14:0] [9:1] } = { $0\reg305[14:0] [10] $0\reg305[14:0] [10] $0\reg305[14:0] [10] $0\reg305[14:0] [10] $0\reg305[14:0] [0] $0\reg305[14:0] [0] $0\reg305[14:0] [0] $0\reg305[14:0] [0] $0\reg305[14:0] [0] $0\reg305[14:0] [0] $0\reg305[14:0] [0] $0\reg305[14:0] [0] $0\reg305[14:0] [0] }
  Optimizing cells in module \top.
Performed a total of 98 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~24 debug messages>
Optimizing module module198.
<suppressed ~1 debug messages>
Optimizing module module241.
<suppressed ~1 debug messages>
Optimizing module module4.
<suppressed ~9 debug messages>
Optimizing module module90.
<suppressed ~7 debug messages>
Optimizing module top.
<suppressed ~5 debug messages>

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1750$1664.
    dead port 2/2 on $mux $ternary$rtl.v:1750$1664.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~246 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1721$1624: { $auto$opt_expr.cc:189:group_cell_inputs$4296 [0] $auto$opt_expr.cc:189:group_cell_inputs$4296 [1] $auto$opt_expr.cc:189:group_cell_inputs$4296 [2] $auto$opt_expr.cc:189:group_cell_inputs$4296 [3] $auto$opt_expr.cc:189:group_cell_inputs$4296 [4] $auto$opt_expr.cc:189:group_cell_inputs$4296 [5] $auto$opt_expr.cc:189:group_cell_inputs$4296 [6] $auto$opt_expr.cc:189:group_cell_inputs$4078 }
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
    Consolidated identical input bits for $mux cell $procmux$2169:
      Old ports: A={ 9'000000000 \reg104 [0] }, B=$auto$wreduce.cc:455:run$3085 [9:0], Y=$procmux$2169_Y
      New ports: A={ 4'0000 \reg104 [0] }, B=$auto$opt_expr.cc:189:group_cell_inputs$4306, Y=$procmux$2169_Y [4:0]
      New connections: $procmux$2169_Y [9:5] = { $procmux$2169_Y [4] $procmux$2169_Y [4] $procmux$2169_Y [4] $procmux$2169_Y [4] $procmux$2169_Y [4] }
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $reduce_and$rtl.v:293$286: { $auto$opt_expr.cc:189:group_cell_inputs$4308 [0] $auto$opt_expr.cc:189:group_cell_inputs$4308 [1] }
  Optimizing cells in module \top.
Performed a total of 3 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 17 unused wires.
<suppressed ~6 debug messages>

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.20.16. Rerunning OPT passes. (Maybe there is more to do..)

2.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~246 debug messages>

2.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1721$1624: { $auto$opt_expr.cc:189:group_cell_inputs$4078 $auto$opt_expr.cc:189:group_cell_inputs$4080 [0] $auto$opt_expr.cc:189:group_cell_inputs$4080 [1] $auto$opt_expr.cc:189:group_cell_inputs$4080 [2] $auto$opt_expr.cc:189:group_cell_inputs$4080 [3] $auto$opt_expr.cc:189:group_cell_inputs$4080 [4] $auto$opt_expr.cc:189:group_cell_inputs$4080 [5] $auto$opt_expr.cc:189:group_cell_inputs$4080 [12] }
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $reduce_and$rtl.v:293$286: { \wire303 [0] \wire303 [9] }
  Optimizing cells in module \top.
Performed a total of 2 changes.

2.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.20.23. Rerunning OPT passes. (Maybe there is more to do..)

2.20.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module198..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module241..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module90..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~246 debug messages>

2.20.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module11.
  Optimizing cells in module \module198.
  Optimizing cells in module \module241.
  Optimizing cells in module \module4.
  Optimizing cells in module \module90.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.20.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.27. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..

2.20.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.20.30. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$constmap:2dcdcbb48bea3d969bc6f5a6e9456b8913d30248$paramod$46b913c31ccd7c49ed2a12814beb407797642b32\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xnor.
Using extmapper simplemap for cells of type $reduce_xnor.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$constmap:f7f33e30b235ed77ada1bec971ec85600b72463e$paramod$fc9301d50d05d8e56bc2038c0c2bc2a048dc927b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:e0f315ac4830689ad20a4735eea70cd5df1039fd$paramod$4fe8c41c92de264026421898d6dc634764eb5260\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $or.
Using template $paramod$constmap:dbc43acb91fe909136bbc53aee419135d691f351$paramod$ff3655b8e37fd8ba788d8a47ab248526e6a14ce5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:59f1bd0582e7c4c8997df07743098126be50f6ab$paramod$b891e545951fa70a74b6f38e8151d105e9f86dc3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:b4ea8adc087800eda0ea93f4b1022fa0130ef4ab$paramod$2166cac33bb457b80817715268e74ef881fc9a76\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:da2b115ae4c31f15d09231d892187191a3de5a59$paramod$82de96adb5412b52ea5f5835dc592f28c1b815d2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=13\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \wire287 * 8'10110010 (20x8 bits, unsigned)
  add \reg282 [10:0] * \wire0 [0] (11x1 bits, unsigned)
  add \wire0 [18:0] * { $auto$opt_expr.cc:189:group_cell_inputs$4266 [12] $auto$opt_expr.cc:189:group_cell_inputs$4266 [12] $auto$opt_expr.cc:189:group_cell_inputs$4266 [12] $auto$opt_expr.cc:189:group_cell_inputs$4266 [12] $auto$opt_expr.cc:189:group_cell_inputs$4266 [12] $auto$opt_expr.cc:189:group_cell_inputs$4266 [12] $auto$opt_expr.cc:189:group_cell_inputs$4266 } (19x19 bits, signed)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=46\Y_WIDTH=46 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=2\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=15\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=13\B_WIDTH=8\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=21 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=20 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=16 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=13 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=20 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=19 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=15 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=46 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=22 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=19 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=6 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=3\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod$constmap:1a198ca054f2fca285f34e83a55b15177dab3827$paramod$186112e1235f2976ed346032d52c78b7c3d8fcf2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod$constmap:591da9236c7c0e0c1d2778543c68aea23355b44a$paramod$7c83b6808e2d8644f399d376b90d9919a45171b5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:f485fbb5f2d5bb2fe879be7e69dbbce21f835a87$paramod$cb6e1d36856e3c932b497d8113686d1b370c84b6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4dddb0514b3b9c58b64dd5f66c93eb88f442e2df$paramod$e5662d987c3e4224da520c3ed38c53afb6d478f0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:485f21055859082cbb6b121fd001e8c89185a973$paramod$703488f76ed1fadf625dde038ab9f6e709262976\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4eddb3b6113864520130bf87bc7f6a3a4a0cdac2$paramod$818de01436016e448cf31b34b4efcd3e435835f9\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
  add $neg$rtl.v:1641$1546_Y * \reg28 (9x5 bits, unsigned)
  add \reg50 * \reg23 [0] (7x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=5\Y_WIDTH=22 for cells of type $alu.
Using template $paramod$constmap:12962069d2702f1f53b2535c80cce13955717b69$paramod$6e23741156fb17ab16e1eee74d3d38ba3ee9bda3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
  add \reg53 * 8'10100111 (11x8 bits, unsigned)
  add \reg28 * \wire35 [5] (5x1 bits, unsigned)
  add $sub$rtl.v:1737$1644_Y * $ternary$rtl.v:1736$1642_Y (21x15 bits, unsigned)
  add \reg63 [3:2] * \reg41 [0] (2x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=6\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
  add \reg22 [2:0] * \wire12 [3] (3x1 bits, unsigned)
Using template $paramod$constmap:95333bfc94d2bf333f5efad0e2da812bfd32ad7f$paramod$89f72bc79bb489b3cce458e2f9bf2cd624f3493f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod$constmap:0c268c616a7a8ef906200186b98895f7249ec1d6$paramod$f9bc40dd924916f85d47878f9cab7eace3fd5b02\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:02a5c98c7f0253c1f5df817df810b22e35563885$paramod$0411071cd2679b2023e302806abfd72923398885\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:48115514539b6f3f69c4032972edad524c0433cf$paramod$52e0b120167cdb4e7ca7914f9943728e3eae49f3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=18\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=3 for cells of type $alu.
Using template $paramod$constmap:d60d752dbc28e8cd57922f5684ed978f850f3545$paramod$da10bf197b9eaa6c5c6fd8ee3d23fd584a72ffba\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod$constmap:a1a49587e2bab6ffb86f52bf67a25f1ac7eaf95c$paramod$ab40ad11e64bd9e9adf059fef7a7714a6ee934ff\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:f4807607cfbc1de48e03491dea2e713124d98539$paramod$ebb15fe49ef8aec8ee9c8560ea89f805801c96b1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:394432ff0764f6c0902297d84a3ae27611af3ed3$paramod$b4159c94d7f1a0d773a46b4fe8e161ecd932fdce\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=5\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod$constmap:9eeac9f1ce26a39eabf1e92a8502a8e5942e3102$paramod$0fdcc13fce04b7233948830f6a23507d38e9c4d4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:058c4c889a873737769c2a21d5236847c82a6184$paramod$a2dcb05d19ecd5158b08c29585a7cb70a0e3b903\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:1bb7ff77b97344afde83db282dd76bd741351374$paramod$dae66b82bdbfc60dc9bcd94d60849c122e7c2c91\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:956991ad4638304d30e47440432e3b210ec2134f$paramod$a8d91ab98695df83a92b915ae751a818b12d7fe5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:8f641d4cae280ba30721d7b189592aff11d2dc31$paramod$cf9f2772195419dadd19a71657e154d48f928fef\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=7\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:4aa1a200c8b5276c10018e9e017fb49837256a39$paramod$5967be57e3d47e11253cd5e28e55d0ff0588cc6e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:f6e0df7ee2ad22549e488c5676dba7007783df40$paramod$9c4abe908c9f9b8d50fd9b9f32cc7ad3fd199e53\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
  add { $ternary$rtl.v:1548$1410_Y [6] 3'000 $ternary$rtl.v:1548$1410_Y [6] 1'0 $ternary$rtl.v:1548$1410_Y [0] } * { 4'0000 \wire18 } (7x5 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=9 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=11 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=21 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=12 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=4 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
  add \reg134 * 8'10101011 (14x8 bits, unsigned)
  add \reg147 * \reg145 [0] (12x1 bits, unsigned)
  sub $ternary$rtl.v:1278$1145_Y (1 bits, signed)
  add { $auto$opt_expr.cc:189:group_cell_inputs$4157 $auto$opt_expr.cc:189:group_cell_inputs$4155 } * \wire96 (22x4 bits, unsigned)
  add { 10'0000000000 $ternary$rtl.v:1223$1075_Y [7] 1'0 $ternary$rtl.v:1223$1075_Y [7] $ternary$rtl.v:1223$1075_Y [7] 2'00 $ternary$rtl.v:1223$1075_Y [7] $ternary$rtl.v:1223$1075_Y [0] } * \wire101 (18x1 bits, unsigned)
  add $sub$rtl.v:1250$1107_Y * $auto$wreduce.cc:455:run$3072 [0] (9x1 bits, unsigned)
  add \reg110 [6:2] * \reg103 [2:0] (5x3 bits, unsigned)
  add \reg129 * $auto$wreduce.cc:455:run$3074 [0] (20x1 bits, unsigned)
  add \reg147 * 8'10111011 (12x8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=8\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=2\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=5\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod$constmap:7b22e93b2a2e42b5007dac061ea11afc101169c2$paramod$a9eed0e6e5dfd7cd78c0d8aa95007b194dbd6764\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:254055c3848b81b4c7da4200f5e006fb92486b6c$paramod$67aa70e2b377453634a0bb03ca2c610a5730b574\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:37c4eea528f35af29159ae5a94fa0131449bbcf3$paramod$66b261389a10ce7ba8a584fe01d3bd8ddee05b93\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:2e0ebaa08d03d38fd94115c83e73c6d5a14f6670$paramod$12a60b3d74bb86fbde3522ce7aa735bf6459634a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4860411f3a861706e821fb9da0ad886b047b5a33$paramod$febc9b01a70d636d90a914ec227afe478af9c454\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:c76abc75928a1a875b5ac39e0df2f205ce16eab9$paramod$e709b4441e9d177e4ab96e7afad0076bc65d5f3d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:5e937be60e6ea86027139d6284f8b70b2ed48bd9$paramod$e5f27175f67d6e140f5ac47f1c6f39373f388e0c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:f19b651d553c12207faf624d4c52e427a498d678$paramod$20ab23ddd43bbdf5b1b3e5bee156872fa28b866f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:ed4fd64d5369c594dc3e20b732e95a5dfd8be209$paramod$7675d6f636e0d43683917ac23585f779a76c8854\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:683abecd81e2f9439651042f375b730df8a76792$paramod$391420d9d90157ff89649ab21ea2b9c3ab571c30\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:65fbb2f65e26e8683cf755a9e46c342ba91b13cb$paramod$118da161252789ebefe6e87521727fe2e71d5b65\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:9c03a6bbdd8bfa97997f329771cc0f3872bb930c$paramod$3f9f7aa5f65803b873faa71cc1fab462ec2ac6a4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:67468baf91ff576cbc3b7e295cff7e7f11732d95$paramod$b28cc8db624d106f99d0839f91fd86b861d99b9e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:8b357457d6626874cea047b1a412140cde0d9715$paramod$1a672cd8cadd2900d55a8a25a6b6dd93a48acca2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:a68466dfcf770cc13ef1de01d9cc415de3051120$paramod$45867acb01fad221ff1ee2ad5ca79f00fe88bfb6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_fa\WIDTH=22 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=7 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=5 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=12 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=30 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=18 for cells of type $lcu.
Using template $paramod$constmap:76488a565cf4bef3812299e11ecfb9ccf9519527$paramod$4b3417d9f1c5fc73c867c6a540984ed7df5fcaeb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:41351aac0bab577d4825e933351c98268fb76ebb$paramod$3c19e986e642706bec61108e147298b30db882ad\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:7386824468eaf33ced28feaec28d99675724661c$paramod$2774fba60e7119af57a5c5ef60d9b1e91f3956fc\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=14\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
  add \reg218 [6:0] * \wire209 [1] (7x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=23 for cells of type $lcu.
  add \reg259 (19 bits, unsigned)
  add 19'1111111111101011110 (19 bits, unsigned)
  add bits \wire251 (1 bits)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=4\Y_WIDTH=8 for cells of type $alu.
Using template $paramod$constmap:f03bb24b2928c4396810fa82a9549fa98cceb1ec$paramod$9be4e524cbf82b24299131f75080a93bff46a27c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:418b11e5069e590347f3aaa441eeff73ebd6f3be$paramod$6f16b9430a9100ae5ecea6ccfc9feb0aa8a4dea2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:ec2e54bd98c7f12bf670ffca7357cf8cc3782da4$paramod$f495b49d875313232dd9711023a014b85d38df7c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:815cc7485588a64bc62599a9bada5e51195aa96d$paramod$e0e3cdc6ae9cc8675a1dc418b62b1dfc8b99f93b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=19\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
No more expansions possible.
<suppressed ~22506 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~3087 debug messages>
Optimizing module module198.
<suppressed ~656 debug messages>
Optimizing module module241.
<suppressed ~152 debug messages>
Optimizing module module4.
<suppressed ~476 debug messages>
Optimizing module module90.
<suppressed ~2909 debug messages>
Optimizing module top.
<suppressed ~4551 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
<suppressed ~2097 debug messages>
Finding identical cells in module `\module198'.
<suppressed ~330 debug messages>
Finding identical cells in module `\module241'.
<suppressed ~60 debug messages>
Finding identical cells in module `\module4'.
<suppressed ~660 debug messages>
Finding identical cells in module `\module90'.
<suppressed ~1164 debug messages>
Finding identical cells in module `\top'.
<suppressed ~1953 debug messages>
Removed a total of 2088 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$27899 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$45053 ($_DFF_P_) from module module198.
Removing $auto$simplemap.cc:420:simplemap_dff$21052 ($_DFF_P_) from module module4.
Removing $auto$simplemap.cc:420:simplemap_dff$39055 ($_DFF_P_) from module module90.
Replaced 4 DFF cells.

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 2839 unused cells and 7593 unused wires.
<suppressed ~2845 debug messages>

2.22.5. Rerunning OPT passes. (Removed registers in this run.)

2.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~154 debug messages>
Optimizing module module198.
<suppressed ~8 debug messages>
Optimizing module module241.
<suppressed ~3 debug messages>
Optimizing module module4.
<suppressed ~8 debug messages>
Optimizing module module90.
<suppressed ~69 debug messages>
Optimizing module top.
<suppressed ~27 debug messages>

2.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
<suppressed ~24 debug messages>
Finding identical cells in module `\top'.
<suppressed ~141 debug messages>
Removed a total of 57 cells.

2.22.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$27709 ($_DFF_P_) from module module11.
Promoting init spec \reg261 [19:6] = 14'00000000000000 to constant driver in module module241.
Removing $auto$simplemap.cc:420:simplemap_dff$38681 ($_DFF_P_) from module module90.
Promoting init spec \reg157 [21:14] = 8'00000000 to constant driver in module module90.
Promoting init spec \reg317 [4:2] = 3'000 to constant driver in module top.
Promoted 3 init specs to constant drivers.
Replaced 2 DFF cells.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 16 unused cells and 72 unused wires.
<suppressed ~20 debug messages>

2.22.10. Rerunning OPT passes. (Removed registers in this run.)

2.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~6 debug messages>
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
<suppressed ~2 debug messages>
Optimizing module top.
<suppressed ~1 debug messages>

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.22.15. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\module11' to `<abc-temp-dir>/input.blif'..
Extracted 3003 gates and 3409 wires to a netlist network with 404 inputs and 385 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       90
ABC RESULTS:            ANDNOT cells:      447
ABC RESULTS:              AOI3 cells:       75
ABC RESULTS:              AOI4 cells:        3
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               MUX cells:      501
ABC RESULTS:              NAND cells:       80
ABC RESULTS:               NOR cells:       84
ABC RESULTS:               NOT cells:      161
ABC RESULTS:              OAI3 cells:       61
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      441
ABC RESULTS:             ORNOT cells:       57
ABC RESULTS:              XNOR cells:      128
ABC RESULTS:               XOR cells:      316
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:        internal signals:     2620
ABC RESULTS:           input signals:      404
ABC RESULTS:          output signals:      385
Removing temp directory.

2.23.2. Extracting gate netlist of module `\module198' to `<abc-temp-dir>/input.blif'..
Extracted 962 gates and 1148 wires to a netlist network with 183 inputs and 148 outputs.

2.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       51
ABC RESULTS:            ANDNOT cells:      151
ABC RESULTS:              AOI3 cells:       38
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      197
ABC RESULTS:              NAND cells:       48
ABC RESULTS:               NOR cells:       23
ABC RESULTS:               NOT cells:       55
ABC RESULTS:              OAI3 cells:       17
ABC RESULTS:                OR cells:      175
ABC RESULTS:             ORNOT cells:       13
ABC RESULTS:              XNOR cells:       19
ABC RESULTS:               XOR cells:       45
ABC RESULTS:        internal signals:      817
ABC RESULTS:           input signals:      183
ABC RESULTS:          output signals:      148
Removing temp directory.

2.23.3. Extracting gate netlist of module `\module241' to `<abc-temp-dir>/input.blif'..
Extracted 862 gates and 1042 wires to a netlist network with 178 inputs and 162 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       17
ABC RESULTS:            ANDNOT cells:      152
ABC RESULTS:              AOI3 cells:       24
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               MUX cells:      196
ABC RESULTS:              NAND cells:       24
ABC RESULTS:               NOR cells:       29
ABC RESULTS:               NOT cells:       74
ABC RESULTS:              OAI3 cells:       37
ABC RESULTS:                OR cells:      163
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:       25
ABC RESULTS:               XOR cells:       29
ABC RESULTS:        internal signals:      702
ABC RESULTS:           input signals:      178
ABC RESULTS:          output signals:      162
Removing temp directory.

2.23.4. Extracting gate netlist of module `\module4' to `<abc-temp-dir>/input.blif'..
Extracted 965 gates and 1124 wires to a netlist network with 157 inputs and 99 outputs.

2.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:            ANDNOT cells:       87
ABC RESULTS:              AOI3 cells:       26
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      169
ABC RESULTS:              NAND cells:       35
ABC RESULTS:               NOR cells:       49
ABC RESULTS:               NOT cells:       34
ABC RESULTS:              OAI3 cells:       22
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      268
ABC RESULTS:             ORNOT cells:       30
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       39
ABC RESULTS:        internal signals:      868
ABC RESULTS:           input signals:      157
ABC RESULTS:          output signals:       99
Removing temp directory.

2.23.5. Extracting gate netlist of module `\module90' to `<abc-temp-dir>/input.blif'..
Extracted 3211 gates and 3730 wires to a netlist network with 517 inputs and 461 outputs.

2.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      135
ABC RESULTS:            ANDNOT cells:      398
ABC RESULTS:              AOI3 cells:      168
ABC RESULTS:              AOI4 cells:       11
ABC RESULTS:               MUX cells:      524
ABC RESULTS:              NAND cells:       98
ABC RESULTS:               NOR cells:       91
ABC RESULTS:               NOT cells:      188
ABC RESULTS:              OAI3 cells:       59
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:      594
ABC RESULTS:             ORNOT cells:       99
ABC RESULTS:              XNOR cells:      138
ABC RESULTS:               XOR cells:      295
ABC RESULTS:        internal signals:     2752
ABC RESULTS:           input signals:      517
ABC RESULTS:          output signals:      461
Removing temp directory.

2.23.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 4672 gates and 5075 wires to a netlist network with 401 inputs and 319 outputs.

2.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       98
ABC RESULTS:            ANDNOT cells:      861
ABC RESULTS:              AOI3 cells:      162
ABC RESULTS:              AOI4 cells:        5
ABC RESULTS:               MUX cells:      684
ABC RESULTS:              NAND cells:      135
ABC RESULTS:               NOR cells:      125
ABC RESULTS:               NOT cells:      215
ABC RESULTS:              OAI3 cells:      106
ABC RESULTS:              OAI4 cells:        3
ABC RESULTS:                OR cells:      804
ABC RESULTS:             ORNOT cells:      125
ABC RESULTS:              XNOR cells:      195
ABC RESULTS:               XOR cells:      589
ABC RESULTS:        internal signals:     4355
ABC RESULTS:           input signals:      401
ABC RESULTS:          output signals:      319
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~82 debug messages>
Optimizing module module198.
<suppressed ~42 debug messages>
Optimizing module module241.
<suppressed ~63 debug messages>
Optimizing module module4.
<suppressed ~14 debug messages>
Optimizing module module90.
<suppressed ~245 debug messages>
Optimizing module top.
<suppressed ~134 debug messages>

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module198'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module241'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module4'.
<suppressed ~21 debug messages>
Finding identical cells in module `\module90'.
<suppressed ~3 debug messages>
Finding identical cells in module `\top'.
<suppressed ~57 debug messages>
Removed a total of 35 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$27961 ($_DFF_P_) from module module11.
Replaced 1 DFF cells.

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 13 unused cells and 6650 unused wires.
<suppressed ~19 debug messages>

2.24.5. Rerunning OPT passes. (Removed registers in this run.)

2.24.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~53 debug messages>
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.24.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
<suppressed ~144 debug messages>
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 48 cells.

2.24.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$27927 ($_DFF_P_) from module module11.
Replaced 1 DFF cells.

2.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 72 unused wires.
<suppressed ~1 debug messages>

2.24.10. Rerunning OPT passes. (Removed registers in this run.)

2.24.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~24 debug messages>
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.24.13. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$27867 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$27868 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$27869 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$27870 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$27871 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$27872 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$27874 ($_DFF_P_) from module module11.
Removing $auto$simplemap.cc:420:simplemap_dff$27902 ($_DFF_P_) from module module11.
Replaced 8 DFF cells.

2.24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 19 unused cells and 36 unused wires.
<suppressed ~20 debug messages>

2.24.15. Rerunning OPT passes. (Removed registers in this run.)

2.24.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module module11.
<suppressed ~8 debug messages>
Optimizing module module198.
Optimizing module module241.
Optimizing module module4.
Optimizing module module90.
Optimizing module top.

2.24.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module11'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module198'.
Finding identical cells in module `\module241'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module90'.
Finding identical cells in module `\top'.
Removed a total of 2 cells.

2.24.18. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module11..
Finding unused cells or wires in module \module198..
Finding unused cells or wires in module \module241..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module90..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

2.24.20. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== module11 ===

   Number of wires:               2062
   Number of wire bits:           4036
   Number of public wires:          75
   Number of public wire bits:    1661
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2652
     $_ANDNOT_                     443
     $_AND_                         76
     $_AOI3_                        71
     $_AOI4_                         3
     $_DFF_P_                      355
     $_MUX_                        448
     $_NAND_                        79
     $_NOR_                         82
     $_NOT_                        147
     $_OAI3_                        58
     $_OAI4_                         2
     $_ORNOT_                       55
     $_OR_                         406
     $_XNOR_                       128
     $_XOR_                        299

=== module198 ===

   Number of wires:                733
   Number of wire bits:           1489
   Number of public wires:          34
   Number of public wire bits:     659
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                979
     $_ANDNOT_                     150
     $_AND_                         51
     $_AOI3_                        38
     $_AOI4_                         1
     $_DFF_P_                      148
     $_MUX_                        197
     $_NAND_                        48
     $_NOR_                         23
     $_NOT_                         54
     $_OAI3_                        17
     $_ORNOT_                       13
     $_OR_                         175
     $_XNOR_                        19
     $_XOR_                         45

=== module241 ===

   Number of wires:                645
   Number of wire bits:           1228
   Number of public wires:          22
   Number of public wire bits:     459
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                909
     $_ANDNOT_                     152
     $_AND_                         17
     $_AOI3_                        24
     $_DFF_P_                      135
     $_MUX_                        196
     $_NAND_                        24
     $_NOR_                         27
     $_NOT_                         74
     $_OAI3_                        37
     $_ORNOT_                        7
     $_OR_                         162
     $_XNOR_                        25
     $_XOR_                         29

=== module4 ===

   Number of wires:                748
   Number of wire bits:           4139
   Number of public wires:          55
   Number of public wire bits:    1352
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                879
     $_ANDNOT_                      87
     $_AND_                         24
     $_AOI3_                        25
     $_AOI4_                         1
     $_DFF_P_                       95
     $_MUX_                        169
     $_NAND_                        35
     $_NOR_                         45
     $_NOT_                         33
     $_OAI3_                        22
     $_OAI4_                         2
     $_ORNOT_                       30
     $_OR_                         266
     $_XNOR_                         2
     $_XOR_                         39
     module11                        1
     module198                       1
     module241                       1
     module90                        1

=== module90 ===

   Number of wires:               2452
   Number of wire bits:           4372
   Number of public wires:          70
   Number of public wire bits:    1546
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3242
     $_ANDNOT_                     398
     $_AND_                        135
     $_AOI3_                       168
     $_AOI4_                        11
     $_DFF_P_                      450
     $_MUX_                        523
     $_NAND_                        98
     $_NOR_                         91
     $_NOT_                        182
     $_OAI3_                        59
     $_OAI4_                         1
     $_ORNOT_                       99
     $_OR_                         594
     $_XNOR_                       138
     $_XOR_                        295

=== top ===

   Number of wires:               3856
   Number of wire bits:           7299
   Number of public wires:          60
   Number of public wire bits:    1358
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4398
     $_ANDNOT_                     861
     $_AND_                         96
     $_AOI3_                       158
     $_AOI4_                         5
     $_DFF_P_                      310
     $_MUX_                        680
     $_NAND_                       135
     $_NOR_                        121
     $_NOT_                        212
     $_OAI3_                       104
     $_OAI4_                         3
     $_ORNOT_                      125
     $_OR_                         801
     $_XNOR_                       195
     $_XOR_                        589
     module4                         3

2.27. Executing CHECK pass (checking for obvious problems).
checking module module11..
checking module module198..
checking module module241..
checking module module4..
checking module module90..
checking module top..
found and reported 0 problems.

3. Executing Verilog backend.
Dumping module `\module11'.
Dumping module `\module198'.
Dumping module `\module241'.
Dumping module `\module4'.
Dumping module `\module90'.
Dumping module `\top'.

Warnings: 25 unique messages, 25 total
End of script. Logfile hash: 1e5bcd7404
CPU: user 19.51s system 0.02s, MEM: 130.06 MB total, 120.49 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 23% 77x proc (4 sec), 16% 2x techmap (3 sec), ...
