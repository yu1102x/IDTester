
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `read_verilog rtl.v; synth; write_verilog -noattr syn_yosys.v' --

1. Executing Verilog-2005 frontend: rtl.v
Parsing Verilog input from `rtl.v' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\module114'.
Generating RTLIL representation for module `\module5'.
Generating RTLIL representation for module `\module37'.
Generating RTLIL representation for module `\module13'.
Generating RTLIL representation for module `\module200'.
Generating RTLIL representation for module `\module175'.
Generating RTLIL representation for module `\module128'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).
Mapping positional arguments of cell module5.modinst98 (module37).
Mapping positional arguments of cell module114.modinst196 (module175).
Mapping positional arguments of cell top.modinst267 (module175).
Mapping positional arguments of cell top.modinst252 (module114).
Mapping positional arguments of cell top.modinst113 (module5).
Warning: Resizing cell port module5.modinst98.y from 18 bits to 684 bits.
Warning: Resizing cell port module5.modinst98.wire41 from 15 bits to 6 bits.
Warning: Resizing cell port module5.modinst33.y from 20 bits to 125 bits.
Warning: Resizing cell port module114.modinst236.wire204 from 16 bits to 6 bits.
Warning: Resizing cell port module114.modinst236.y from 6 bits to 256 bits.
Warning: Resizing cell port module114.modinst236.wire203 from 4 bits to 3 bits.
Warning: Resizing cell port module114.modinst196.y from 5 bits to 195 bits.
Warning: Resizing cell port module114.modinst196.wire180 from 14 bits to 4 bits.
Warning: Resizing cell port module114.modinst196.wire179 from 15 bits to 3 bits.
Warning: Resizing cell port module114.modinst196.wire178 from 22 bits to 17 bits.
Warning: Resizing cell port module114.modinst196.wire177 from 22 bits to 7 bits.
Warning: Resizing cell port module114.modinst170.wire129 from 15 bits to 7 bits.
Warning: Resizing cell port module114.modinst170.wire131 from 22 bits to 13 bits.
Warning: Resizing cell port module114.modinst170.y from 18 bits to 470 bits.
Warning: Resizing cell port top.modinst267.y from 3 bits to 195 bits.
Warning: Resizing cell port top.modinst267.wire180 from 11 bits to 4 bits.
Warning: Resizing cell port top.modinst267.wire179 from 20 bits to 3 bits.
Warning: Resizing cell port top.modinst267.wire177 from 10 bits to 7 bits.
Warning: Resizing cell port top.modinst257.wire38 from 20 bits to 18 bits.
Warning: Resizing cell port top.modinst257.wire41 from 13 bits to 6 bits.
Warning: Resizing cell port top.modinst257.y from 8 bits to 684 bits.
Warning: Resizing cell port top.modinst252.y from 10 bits to 398 bits.
Warning: Resizing cell port top.modinst252.wire117 from 20 bits to 8 bits.
Warning: Resizing cell port top.modinst252.wire116 from 18 bits to 15 bits.
Warning: Resizing cell port top.modinst113.y from 16 bits to 252 bits.
Warning: Resizing cell port top.modinst113.wire7 from 20 bits to 14 bits.
Warning: Resizing cell port top.modinst113.wire6 from 13 bits to 11 bits.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\module200.$proc$rtl.v:850$746'.
Found and cleaned up 1 empty switch in `\module5.$proc$rtl.v:345$262'.
Cleaned up 2 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 6 switch rules as full_case in process $proc$rtl.v:1168$982 in module module128.
Marked 2 switch rules as full_case in process $proc$rtl.v:1126$935 in module module128.
Marked 3 switch rules as full_case in process $proc$rtl.v:850$746 in module module200.
Marked 6 switch rules as full_case in process $proc$rtl.v:602$487 in module module37.
Marked 4 switch rules as full_case in process $proc$rtl.v:499$313 in module module37.
Marked 1 switch rules as full_case in process $proc$rtl.v:232$139 in module module114.
Marked 3 switch rules as full_case in process $proc$rtl.v:159$60 in module module114.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\module128.$proc$rtl.v:1075$1135'.
  Set init value: \reg136 = 14'00000000000000
Found init rule in `\module128.$proc$rtl.v:1074$1134'.
  Set init value: \reg137 = 18'000000000000000000
Found init rule in `\module128.$proc$rtl.v:1072$1133'.
  Set init value: \reg139 = 21'000000000000000000000
Found init rule in `\module128.$proc$rtl.v:1071$1132'.
  Set init value: \reg140 = 15'000000000000000
Found init rule in `\module128.$proc$rtl.v:1070$1131'.
  Set init value: \reg141 = 3'000
Found init rule in `\module128.$proc$rtl.v:1069$1130'.
  Set init value: \reg142 = 18'000000000000000000
Found init rule in `\module128.$proc$rtl.v:1068$1129'.
  Set init value: \reg143 = 4'0000
Found init rule in `\module128.$proc$rtl.v:1067$1128'.
  Set init value: \reg144 = 22'0000000000000000000000
Found init rule in `\module128.$proc$rtl.v:1066$1127'.
  Set init value: \reg145 = 19'0000000000000000000
Found init rule in `\module128.$proc$rtl.v:1065$1126'.
  Set init value: \reg146 = 17'00000000000000000
Found init rule in `\module128.$proc$rtl.v:1064$1125'.
  Set init value: \reg147 = 15'000000000000000
Found init rule in `\module128.$proc$rtl.v:1061$1124'.
  Set init value: \reg150 = 10'0000000000
Found init rule in `\module128.$proc$rtl.v:1060$1123'.
  Set init value: \reg151 = 11'00000000000
Found init rule in `\module128.$proc$rtl.v:1059$1122'.
  Set init value: \reg152 = 19'0000000000000000000
Found init rule in `\module128.$proc$rtl.v:1058$1121'.
  Set init value: \reg153 = 6'000000
Found init rule in `\module128.$proc$rtl.v:1057$1120'.
  Set init value: \reg154 = 11'00000000000
Found init rule in `\module128.$proc$rtl.v:1056$1119'.
  Set init value: \reg155 = 22'0000000000000000000000
Found init rule in `\module128.$proc$rtl.v:1055$1118'.
  Set init value: \reg156 = 20'00000000000000000000
Found init rule in `\module128.$proc$rtl.v:1054$1117'.
  Set init value: \reg157 = 22'0000000000000000000000
Found init rule in `\module128.$proc$rtl.v:1053$1116'.
  Set init value: \reg158 = 18'000000000000000000
Found init rule in `\module128.$proc$rtl.v:1052$1115'.
  Set init value: \reg159 = 16'0000000000000000
Found init rule in `\module128.$proc$rtl.v:1051$1114'.
  Set init value: \reg160 = 19'0000000000000000000
Found init rule in `\module128.$proc$rtl.v:1050$1113'.
  Set init value: \reg161 = 10'0000000000
Found init rule in `\module128.$proc$rtl.v:1049$1112'.
  Set init value: \reg162 = 6'000000
Found init rule in `\module175.$proc$rtl.v:977$919'.
  Set init value: \reg183 = 6'000000
Found init rule in `\module175.$proc$rtl.v:976$918'.
  Set init value: \reg184 = 20'00000000000000000000
Found init rule in `\module175.$proc$rtl.v:975$917'.
  Set init value: \reg185 = 15'000000000000000
Found init rule in `\module175.$proc$rtl.v:974$916'.
  Set init value: \reg186 = 14'00000000000000
Found init rule in `\module175.$proc$rtl.v:973$915'.
  Set init value: \reg187 = 6'000000
Found init rule in `\module200.$proc$rtl.v:810$831'.
  Set init value: \reg208 = 5'00000
Found init rule in `\module200.$proc$rtl.v:809$830'.
  Set init value: \reg209 = 12'000000000000
Found init rule in `\module200.$proc$rtl.v:808$829'.
  Set init value: \reg210 = 11'00000000000
Found init rule in `\module200.$proc$rtl.v:807$828'.
  Set init value: \reg211 = 10'0000000000
Found init rule in `\module200.$proc$rtl.v:806$827'.
  Set init value: \reg212 = 6'000000
Found init rule in `\module200.$proc$rtl.v:805$826'.
  Set init value: \reg213 = 5'00000
Found init rule in `\module200.$proc$rtl.v:804$825'.
  Set init value: \reg214 = 15'000000000000000
Found init rule in `\module200.$proc$rtl.v:803$824'.
  Set init value: \reg215 = 7'0000000
Found init rule in `\module200.$proc$rtl.v:802$823'.
  Set init value: \reg216 = 19'0000000000000000000
Found init rule in `\module200.$proc$rtl.v:801$822'.
  Set init value: \reg217 = 18'000000000000000000
Found init rule in `\module200.$proc$rtl.v:800$821'.
  Set init value: \reg218 = 14'00000000000000
Found init rule in `\module200.$proc$rtl.v:799$820'.
  Set init value: \reg219 = 8'00000000
Found init rule in `\module200.$proc$rtl.v:798$819'.
  Set init value: \reg220 = 3'000
Found init rule in `\module200.$proc$rtl.v:797$818'.
  Set init value: \reg221 = 3'000
Found init rule in `\module200.$proc$rtl.v:796$817'.
  Set init value: \reg222 = 8'00000000
Found init rule in `\module37.$proc$rtl.v:423$689'.
  Set init value: \reg49 = 15'000000000000000
Found init rule in `\module37.$proc$rtl.v:422$688'.
  Set init value: \reg50 = 5'00000
Found init rule in `\module37.$proc$rtl.v:421$687'.
  Set init value: \reg51 = 22'0000000000000000000000
Found init rule in `\module37.$proc$rtl.v:420$686'.
  Set init value: \reg52 = 5'00000
Found init rule in `\module37.$proc$rtl.v:419$685'.
  Set init value: \reg53 = 18'000000000000000000
Found init rule in `\module37.$proc$rtl.v:418$684'.
  Set init value: \reg54 = 7'0000000
Found init rule in `\module37.$proc$rtl.v:417$683'.
  Set init value: \reg55 = 6'000000
Found init rule in `\module37.$proc$rtl.v:416$682'.
  Set init value: \reg56 = 20'00000000000000000000
Found init rule in `\module37.$proc$rtl.v:415$681'.
  Set init value: \reg57 = 5'00000
Found init rule in `\module37.$proc$rtl.v:414$680'.
  Set init value: \reg58 = 11'00000000000
Found init rule in `\module37.$proc$rtl.v:413$679'.
  Set init value: \reg59 = 10'0000000000
Found init rule in `\module37.$proc$rtl.v:412$678'.
  Set init value: \reg60 = 17'00000000000000000
Found init rule in `\module37.$proc$rtl.v:411$677'.
  Set init value: \reg61 = 19'0000000000000000000
Found init rule in `\module37.$proc$rtl.v:410$676'.
  Set init value: \reg62 = 3'000
Found init rule in `\module37.$proc$rtl.v:409$675'.
  Set init value: \reg63 = 7'0000000
Found init rule in `\module37.$proc$rtl.v:402$674'.
  Set init value: \reg70 = 6'000000
Found init rule in `\module37.$proc$rtl.v:401$673'.
  Set init value: \reg71 = 11'00000000000
Found init rule in `\module37.$proc$rtl.v:400$672'.
  Set init value: \reg72 = 9'000000000
Found init rule in `\module37.$proc$rtl.v:399$671'.
  Set init value: \reg73 = 12'000000000000
Found init rule in `\module37.$proc$rtl.v:398$670'.
  Set init value: \reg74 = 11'00000000000
Found init rule in `\module37.$proc$rtl.v:397$669'.
  Set init value: \reg75 = 4'0000
Found init rule in `\module37.$proc$rtl.v:396$668'.
  Set init value: \reg76 = 13'0000000000000
Found init rule in `\module37.$proc$rtl.v:395$667'.
  Set init value: \reg77 = 20'00000000000000000000
Found init rule in `\module37.$proc$rtl.v:394$666'.
  Set init value: \reg78 = 11'00000000000
Found init rule in `\module37.$proc$rtl.v:393$665'.
  Set init value: \reg79 = 20'00000000000000000000
Found init rule in `\module37.$proc$rtl.v:392$664'.
  Set init value: \reg80 = 18'000000000000000000
Found init rule in `\module37.$proc$rtl.v:391$663'.
  Set init value: \reg81 = 11'00000000000
Found init rule in `\module37.$proc$rtl.v:390$662'.
  Set init value: \reg82 = 19'0000000000000000000
Found init rule in `\module37.$proc$rtl.v:389$661'.
  Set init value: \reg83 = 4'0000
Found init rule in `\module37.$proc$rtl.v:388$660'.
  Set init value: \reg84 = 18'000000000000000000
Found init rule in `\module37.$proc$rtl.v:387$659'.
  Set init value: \reg85 = 18'000000000000000000
Found init rule in `\module37.$proc$rtl.v:386$658'.
  Set init value: \reg86 = 19'0000000000000000000
Found init rule in `\module37.$proc$rtl.v:385$657'.
  Set init value: \reg87 = 22'0000000000000000000000
Found init rule in `\module37.$proc$rtl.v:384$656'.
  Set init value: \reg88 = 12'000000000000
Found init rule in `\module37.$proc$rtl.v:383$655'.
  Set init value: \reg89 = 18'000000000000000000
Found init rule in `\module37.$proc$rtl.v:382$654'.
  Set init value: \reg90 = 18'000000000000000000
Found init rule in `\module37.$proc$rtl.v:381$653'.
  Set init value: \reg91 = 22'0000000000000000000000
Found init rule in `\module5.$proc$rtl.v:288$283'.
  Set init value: \reg100 = 12'000000000000
Found init rule in `\module5.$proc$rtl.v:287$282'.
  Set init value: \reg101 = 15'000000000000000
Found init rule in `\module5.$proc$rtl.v:283$281'.
  Set init value: \reg105 = 12'000000000000
Found init rule in `\module5.$proc$rtl.v:282$280'.
  Set init value: \reg106 = 5'00000
Found init rule in `\module5.$proc$rtl.v:281$279'.
  Set init value: \reg107 = 3'000
Found init rule in `\module5.$proc$rtl.v:280$278'.
  Set init value: \reg108 = 6'000000
Found init rule in `\module5.$proc$rtl.v:279$277'.
  Set init value: \reg109 = 22'0000000000000000000000
Found init rule in `\module5.$proc$rtl.v:278$276'.
  Set init value: \reg110 = 16'0000000000000000
Found init rule in `\module114.$proc$rtl.v:107$221'.
  Set init value: \reg121 = 4'0000
Found init rule in `\module114.$proc$rtl.v:106$220'.
  Set init value: \reg122 = 15'000000000000000
Found init rule in `\module114.$proc$rtl.v:105$219'.
  Set init value: \reg123 = 22'0000000000000000000000
Found init rule in `\module114.$proc$rtl.v:104$218'.
  Set init value: \reg124 = 13'0000000000000
Found init rule in `\module114.$proc$rtl.v:103$217'.
  Set init value: \reg125 = 7'0000000
Found init rule in `\module114.$proc$rtl.v:102$216'.
  Set init value: \reg126 = 19'0000000000000000000
Found init rule in `\module114.$proc$rtl.v:101$215'.
  Set init value: \reg127 = 14'00000000000000
Found init rule in `\module114.$proc$rtl.v:95$214'.
  Set init value: \reg237 = 16'0000000000000000
Found init rule in `\module114.$proc$rtl.v:94$213'.
  Set init value: \reg238 = 4'0000
Found init rule in `\module114.$proc$rtl.v:93$212'.
  Set init value: \reg239 = 14'00000000000000
Found init rule in `\module114.$proc$rtl.v:92$211'.
  Set init value: \reg240 = 9'000000000
Found init rule in `\module114.$proc$rtl.v:89$210'.
  Set init value: \reg243 = 19'0000000000000000000
Found init rule in `\module114.$proc$rtl.v:88$209'.
  Set init value: \reg244 = 14'00000000000000
Found init rule in `\module114.$proc$rtl.v:87$208'.
  Set init value: \reg245 = 17'00000000000000000
Found init rule in `\module114.$proc$rtl.v:86$207'.
  Set init value: \reg246 = 16'0000000000000000
Found init rule in `\module114.$proc$rtl.v:85$206'.
  Set init value: \reg247 = 16'0000000000000000
Found init rule in `\module114.$proc$rtl.v:84$205'.
  Set init value: \reg248 = 4'0000

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module128.$proc$rtl.v:1075$1135'.
     1/1: $1\reg136[13:0]
Creating decoders for process `\module128.$proc$rtl.v:1074$1134'.
     1/1: $1\reg137[17:0]
Creating decoders for process `\module128.$proc$rtl.v:1072$1133'.
     1/1: $1\reg139[20:0]
Creating decoders for process `\module128.$proc$rtl.v:1071$1132'.
     1/1: $1\reg140[14:0]
Creating decoders for process `\module128.$proc$rtl.v:1070$1131'.
     1/1: $1\reg141[2:0]
Creating decoders for process `\module128.$proc$rtl.v:1069$1130'.
     1/1: $1\reg142[17:0]
Creating decoders for process `\module128.$proc$rtl.v:1068$1129'.
     1/1: $1\reg143[3:0]
Creating decoders for process `\module128.$proc$rtl.v:1067$1128'.
     1/1: $1\reg144[21:0]
Creating decoders for process `\module128.$proc$rtl.v:1066$1127'.
     1/1: $1\reg145[18:0]
Creating decoders for process `\module128.$proc$rtl.v:1065$1126'.
     1/1: $1\reg146[16:0]
Creating decoders for process `\module128.$proc$rtl.v:1064$1125'.
     1/1: $1\reg147[14:0]
Creating decoders for process `\module128.$proc$rtl.v:1061$1124'.
     1/1: $1\reg150[9:0]
Creating decoders for process `\module128.$proc$rtl.v:1060$1123'.
     1/1: $1\reg151[10:0]
Creating decoders for process `\module128.$proc$rtl.v:1059$1122'.
     1/1: $1\reg152[18:0]
Creating decoders for process `\module128.$proc$rtl.v:1058$1121'.
     1/1: $1\reg153[5:0]
Creating decoders for process `\module128.$proc$rtl.v:1057$1120'.
     1/1: $1\reg154[10:0]
Creating decoders for process `\module128.$proc$rtl.v:1056$1119'.
     1/1: $1\reg155[21:0]
Creating decoders for process `\module128.$proc$rtl.v:1055$1118'.
     1/1: $1\reg156[19:0]
Creating decoders for process `\module128.$proc$rtl.v:1054$1117'.
     1/1: $1\reg157[21:0]
Creating decoders for process `\module128.$proc$rtl.v:1053$1116'.
     1/1: $1\reg158[17:0]
Creating decoders for process `\module128.$proc$rtl.v:1052$1115'.
     1/1: $1\reg159[15:0]
Creating decoders for process `\module128.$proc$rtl.v:1051$1114'.
     1/1: $1\reg160[18:0]
Creating decoders for process `\module128.$proc$rtl.v:1050$1113'.
     1/1: $1\reg161[9:0]
Creating decoders for process `\module128.$proc$rtl.v:1049$1112'.
     1/1: $1\reg162[5:0]
Creating decoders for process `\module128.$proc$rtl.v:1168$982'.
     1/13: $0\reg162[5:0]
     2/13: $0\reg151[10:0]
     3/13: $0\reg150[9:0]
     4/13: $0\reg152[18:0]
     5/13: $0\reg153[5:0]
     6/13: $0\reg154[10:0]
     7/13: $0\reg155[21:0]
     8/13: $0\reg156[19:0]
     9/13: $0\reg157[21:0]
    10/13: $0\reg158[17:0]
    11/13: $0\reg159[15:0]
    12/13: $0\reg160[18:0]
    13/13: $0\reg161[9:0]
Creating decoders for process `\module128.$proc$rtl.v:1126$935'.
     1/9: $0\reg147[14:0]
     2/9: $0\reg146[16:0]
     3/9: $0\reg145[18:0]
     4/9: $0\reg139[20:0]
     5/9: $0\reg140[14:0]
     6/9: $0\reg141[2:0]
     7/9: $0\reg142[17:0]
     8/9: $0\reg143[3:0]
     9/9: $0\reg144[21:0]
Creating decoders for process `\module128.$proc$rtl.v:1120$934'.
     1/2: $0\reg137[17:0]
     2/2: $0\reg136[13:0]
Creating decoders for process `\module175.$proc$rtl.v:977$919'.
     1/1: $1\reg183[5:0]
Creating decoders for process `\module175.$proc$rtl.v:976$918'.
     1/1: $1\reg184[19:0]
Creating decoders for process `\module175.$proc$rtl.v:975$917'.
     1/1: $1\reg185[14:0]
Creating decoders for process `\module175.$proc$rtl.v:974$916'.
     1/1: $1\reg186[13:0]
Creating decoders for process `\module175.$proc$rtl.v:973$915'.
     1/1: $1\reg187[5:0]
Creating decoders for process `\module175.$proc$rtl.v:999$844'.
     1/5: $0\reg187[5:0]
     2/5: $0\reg186[13:0]
     3/5: $0\reg185[14:0]
     4/5: $0\reg184[19:0]
     5/5: $0\reg183[5:0]
Creating decoders for process `\module200.$proc$rtl.v:810$831'.
     1/1: $1\reg208[4:0]
Creating decoders for process `\module200.$proc$rtl.v:809$830'.
     1/1: $1\reg209[11:0]
Creating decoders for process `\module200.$proc$rtl.v:808$829'.
     1/1: $1\reg210[10:0]
Creating decoders for process `\module200.$proc$rtl.v:807$828'.
     1/1: $1\reg211[9:0]
Creating decoders for process `\module200.$proc$rtl.v:806$827'.
     1/1: $1\reg212[5:0]
Creating decoders for process `\module200.$proc$rtl.v:805$826'.
     1/1: $1\reg213[4:0]
Creating decoders for process `\module200.$proc$rtl.v:804$825'.
     1/1: $1\reg214[14:0]
Creating decoders for process `\module200.$proc$rtl.v:803$824'.
     1/1: $1\reg215[6:0]
Creating decoders for process `\module200.$proc$rtl.v:802$823'.
     1/1: $1\reg216[18:0]
Creating decoders for process `\module200.$proc$rtl.v:801$822'.
     1/1: $1\reg217[17:0]
Creating decoders for process `\module200.$proc$rtl.v:800$821'.
     1/1: $1\reg218[13:0]
Creating decoders for process `\module200.$proc$rtl.v:799$820'.
     1/1: $1\reg219[7:0]
Creating decoders for process `\module200.$proc$rtl.v:798$819'.
     1/1: $1\reg220[2:0]
Creating decoders for process `\module200.$proc$rtl.v:797$818'.
     1/1: $1\reg221[2:0]
Creating decoders for process `\module200.$proc$rtl.v:796$817'.
     1/1: $1\reg222[7:0]
Creating decoders for process `\module200.$proc$rtl.v:850$746'.
     1/15: $0\reg222[7:0]
     2/15: $0\reg221[2:0]
     3/15: $0\reg216[18:0]
     4/15: $0\reg208[4:0]
     5/15: $0\reg209[11:0]
     6/15: $0\reg210[10:0]
     7/15: $0\reg211[9:0]
     8/15: $0\reg212[5:0]
     9/15: $0\reg213[4:0]
    10/15: $0\reg214[14:0]
    11/15: $0\reg215[6:0]
    12/15: $0\reg217[17:0]
    13/15: $0\reg218[13:0]
    14/15: $0\reg219[7:0]
    15/15: $0\reg220[2:0]
Creating decoders for process `\module37.$proc$rtl.v:423$689'.
     1/1: $1\reg49[14:0]
Creating decoders for process `\module37.$proc$rtl.v:422$688'.
     1/1: $1\reg50[4:0]
Creating decoders for process `\module37.$proc$rtl.v:421$687'.
     1/1: $1\reg51[21:0]
Creating decoders for process `\module37.$proc$rtl.v:420$686'.
     1/1: $1\reg52[4:0]
Creating decoders for process `\module37.$proc$rtl.v:419$685'.
     1/1: $1\reg53[17:0]
Creating decoders for process `\module37.$proc$rtl.v:418$684'.
     1/1: $1\reg54[6:0]
Creating decoders for process `\module37.$proc$rtl.v:417$683'.
     1/1: $1\reg55[5:0]
Creating decoders for process `\module37.$proc$rtl.v:416$682'.
     1/1: $1\reg56[19:0]
Creating decoders for process `\module37.$proc$rtl.v:415$681'.
     1/1: $1\reg57[4:0]
Creating decoders for process `\module37.$proc$rtl.v:414$680'.
     1/1: $1\reg58[10:0]
Creating decoders for process `\module37.$proc$rtl.v:413$679'.
     1/1: $1\reg59[9:0]
Creating decoders for process `\module37.$proc$rtl.v:412$678'.
     1/1: $1\reg60[16:0]
Creating decoders for process `\module37.$proc$rtl.v:411$677'.
     1/1: $1\reg61[18:0]
Creating decoders for process `\module37.$proc$rtl.v:410$676'.
     1/1: $1\reg62[2:0]
Creating decoders for process `\module37.$proc$rtl.v:409$675'.
     1/1: $1\reg63[6:0]
Creating decoders for process `\module37.$proc$rtl.v:402$674'.
     1/1: $1\reg70[5:0]
Creating decoders for process `\module37.$proc$rtl.v:401$673'.
     1/1: $1\reg71[10:0]
Creating decoders for process `\module37.$proc$rtl.v:400$672'.
     1/1: $1\reg72[8:0]
Creating decoders for process `\module37.$proc$rtl.v:399$671'.
     1/1: $1\reg73[11:0]
Creating decoders for process `\module37.$proc$rtl.v:398$670'.
     1/1: $1\reg74[10:0]
Creating decoders for process `\module37.$proc$rtl.v:397$669'.
     1/1: $1\reg75[3:0]
Creating decoders for process `\module37.$proc$rtl.v:396$668'.
     1/1: $1\reg76[12:0]
Creating decoders for process `\module37.$proc$rtl.v:395$667'.
     1/1: $1\reg77[19:0]
Creating decoders for process `\module37.$proc$rtl.v:394$666'.
     1/1: $1\reg78[10:0]
Creating decoders for process `\module37.$proc$rtl.v:393$665'.
     1/1: $1\reg79[19:0]
Creating decoders for process `\module37.$proc$rtl.v:392$664'.
     1/1: $1\reg80[17:0]
Creating decoders for process `\module37.$proc$rtl.v:391$663'.
     1/1: $1\reg81[10:0]
Creating decoders for process `\module37.$proc$rtl.v:390$662'.
     1/1: $1\reg82[18:0]
Creating decoders for process `\module37.$proc$rtl.v:389$661'.
     1/1: $1\reg83[3:0]
Creating decoders for process `\module37.$proc$rtl.v:388$660'.
     1/1: $1\reg84[17:0]
Creating decoders for process `\module37.$proc$rtl.v:387$659'.
     1/1: $1\reg85[17:0]
Creating decoders for process `\module37.$proc$rtl.v:386$658'.
     1/1: $1\reg86[18:0]
Creating decoders for process `\module37.$proc$rtl.v:385$657'.
     1/1: $1\reg87[21:0]
Creating decoders for process `\module37.$proc$rtl.v:384$656'.
     1/1: $1\reg88[11:0]
Creating decoders for process `\module37.$proc$rtl.v:383$655'.
     1/1: $1\reg89[17:0]
Creating decoders for process `\module37.$proc$rtl.v:382$654'.
     1/1: $1\reg90[17:0]
Creating decoders for process `\module37.$proc$rtl.v:381$653'.
     1/1: $1\reg91[21:0]
Creating decoders for process `\module37.$proc$rtl.v:602$487'.
     1/17: $0\reg86[18:0]
     2/17: $0\reg76[12:0]
     3/17: $0\reg75[3:0]
     4/17: $0\reg77[19:0]
     5/17: $0\reg78[10:0]
     6/17: $0\reg79[19:0]
     7/17: $0\reg80[17:0]
     8/17: $0\reg81[10:0]
     9/17: $0\reg82[18:0]
    10/17: $0\reg83[3:0]
    11/17: $0\reg84[17:0]
    12/17: $0\reg85[17:0]
    13/17: $0\reg87[21:0]
    14/17: $0\reg88[11:0]
    15/17: $0\reg89[17:0]
    16/17: $0\reg90[17:0]
    17/17: $0\reg91[21:0]
Creating decoders for process `\module37.$proc$rtl.v:590$470'.
     1/5: $0\reg74[10:0]
     2/5: $0\reg73[11:0]
     3/5: $0\reg72[8:0]
     4/5: $0\reg71[10:0]
     5/5: $0\reg70[5:0]
Creating decoders for process `\module37.$proc$rtl.v:499$313'.
     1/15: $0\reg63[6:0]
     2/15: $0\reg56[19:0]
     3/15: $0\reg49[14:0]
     4/15: $0\reg50[4:0]
     5/15: $0\reg51[21:0]
     6/15: $0\reg52[4:0]
     7/15: $0\reg53[17:0]
     8/15: $0\reg54[6:0]
     9/15: $0\reg55[5:0]
    10/15: $0\reg57[4:0]
    11/15: $0\reg58[10:0]
    12/15: $0\reg59[9:0]
    13/15: $0\reg60[16:0]
    14/15: $0\reg61[18:0]
    15/15: $0\reg62[2:0]
Creating decoders for process `\module5.$proc$rtl.v:288$283'.
     1/1: $1\reg100[11:0]
Creating decoders for process `\module5.$proc$rtl.v:287$282'.
     1/1: $1\reg101[14:0]
Creating decoders for process `\module5.$proc$rtl.v:283$281'.
     1/1: $1\reg105[11:0]
Creating decoders for process `\module5.$proc$rtl.v:282$280'.
     1/1: $1\reg106[4:0]
Creating decoders for process `\module5.$proc$rtl.v:281$279'.
     1/1: $1\reg107[2:0]
Creating decoders for process `\module5.$proc$rtl.v:280$278'.
     1/1: $1\reg108[5:0]
Creating decoders for process `\module5.$proc$rtl.v:279$277'.
     1/1: $1\reg109[21:0]
Creating decoders for process `\module5.$proc$rtl.v:278$276'.
     1/1: $1\reg110[15:0]
Creating decoders for process `\module5.$proc$rtl.v:345$262'.
     1/6: $0\reg110[15:0]
     2/6: $0\reg109[21:0]
     3/6: $0\reg108[5:0]
     4/6: $0\reg105[11:0]
     5/6: $0\reg106[4:0]
     6/6: $0\reg107[2:0]
Creating decoders for process `\module5.$proc$rtl.v:337$261'.
     1/2: $0\reg101[14:0]
     2/2: $0\reg100[11:0]
Creating decoders for process `\module114.$proc$rtl.v:107$221'.
     1/1: $1\reg121[3:0]
Creating decoders for process `\module114.$proc$rtl.v:106$220'.
     1/1: $1\reg122[14:0]
Creating decoders for process `\module114.$proc$rtl.v:105$219'.
     1/1: $1\reg123[21:0]
Creating decoders for process `\module114.$proc$rtl.v:104$218'.
     1/1: $1\reg124[12:0]
Creating decoders for process `\module114.$proc$rtl.v:103$217'.
     1/1: $1\reg125[6:0]
Creating decoders for process `\module114.$proc$rtl.v:102$216'.
     1/1: $1\reg126[18:0]
Creating decoders for process `\module114.$proc$rtl.v:101$215'.
     1/1: $1\reg127[13:0]
Creating decoders for process `\module114.$proc$rtl.v:95$214'.
     1/1: $1\reg237[15:0]
Creating decoders for process `\module114.$proc$rtl.v:94$213'.
     1/1: $1\reg238[3:0]
Creating decoders for process `\module114.$proc$rtl.v:93$212'.
     1/1: $1\reg239[13:0]
Creating decoders for process `\module114.$proc$rtl.v:92$211'.
     1/1: $1\reg240[8:0]
Creating decoders for process `\module114.$proc$rtl.v:89$210'.
     1/1: $1\reg243[18:0]
Creating decoders for process `\module114.$proc$rtl.v:88$209'.
     1/1: $1\reg244[13:0]
Creating decoders for process `\module114.$proc$rtl.v:87$208'.
     1/1: $1\reg245[16:0]
Creating decoders for process `\module114.$proc$rtl.v:86$207'.
     1/1: $1\reg246[15:0]
Creating decoders for process `\module114.$proc$rtl.v:85$206'.
     1/1: $1\reg247[15:0]
Creating decoders for process `\module114.$proc$rtl.v:84$205'.
     1/1: $1\reg248[3:0]
Creating decoders for process `\module114.$proc$rtl.v:232$139'.
     1/6: $0\reg243[18:0]
     2/6: $0\reg244[13:0]
     3/6: $0\reg245[16:0]
     4/6: $0\reg246[15:0]
     5/6: $0\reg247[15:0]
     6/6: $0\reg248[3:0]
Creating decoders for process `\module114.$proc$rtl.v:217$111'.
     1/4: $0\reg240[8:0]
     2/4: $0\reg239[13:0]
     3/4: $0\reg238[3:0]
     4/4: $0\reg237[15:0]
Creating decoders for process `\module114.$proc$rtl.v:159$60'.
     1/7: $0\reg122[14:0]
     2/7: $0\reg121[3:0]
     3/7: $0\reg123[21:0]
     4/7: $0\reg124[12:0]
     5/7: $0\reg125[6:0]
     6/7: $0\reg126[18:0]
     7/7: $0\reg127[13:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\module128.\reg162' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1452' with positive edge clock.
Creating register for signal `\module128.\reg161' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1453' with positive edge clock.
Creating register for signal `\module128.\reg160' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1454' with positive edge clock.
Creating register for signal `\module128.\reg159' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1455' with positive edge clock.
Creating register for signal `\module128.\reg158' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1456' with positive edge clock.
Creating register for signal `\module128.\reg157' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1457' with positive edge clock.
Creating register for signal `\module128.\reg156' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1458' with positive edge clock.
Creating register for signal `\module128.\reg155' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1459' with positive edge clock.
Creating register for signal `\module128.\reg154' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1460' with positive edge clock.
Creating register for signal `\module128.\reg153' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1461' with positive edge clock.
Creating register for signal `\module128.\reg152' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1462' with positive edge clock.
Creating register for signal `\module128.\reg151' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1463' with positive edge clock.
Creating register for signal `\module128.\reg150' using process `\module128.$proc$rtl.v:1168$982'.
  created $dff cell `$procdff$1464' with positive edge clock.
Creating register for signal `\module128.\reg147' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1465' with positive edge clock.
Creating register for signal `\module128.\reg146' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1466' with positive edge clock.
Creating register for signal `\module128.\reg145' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1467' with positive edge clock.
Creating register for signal `\module128.\reg144' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1468' with positive edge clock.
Creating register for signal `\module128.\reg143' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1469' with positive edge clock.
Creating register for signal `\module128.\reg142' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1470' with positive edge clock.
Creating register for signal `\module128.\reg141' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1471' with positive edge clock.
Creating register for signal `\module128.\reg140' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1472' with positive edge clock.
Creating register for signal `\module128.\reg139' using process `\module128.$proc$rtl.v:1126$935'.
  created $dff cell `$procdff$1473' with positive edge clock.
Creating register for signal `\module128.\reg137' using process `\module128.$proc$rtl.v:1120$934'.
  created $dff cell `$procdff$1474' with positive edge clock.
Creating register for signal `\module128.\reg136' using process `\module128.$proc$rtl.v:1120$934'.
  created $dff cell `$procdff$1475' with positive edge clock.
Creating register for signal `\module175.\reg187' using process `\module175.$proc$rtl.v:999$844'.
  created $dff cell `$procdff$1476' with positive edge clock.
Creating register for signal `\module175.\reg186' using process `\module175.$proc$rtl.v:999$844'.
  created $dff cell `$procdff$1477' with positive edge clock.
Creating register for signal `\module175.\reg185' using process `\module175.$proc$rtl.v:999$844'.
  created $dff cell `$procdff$1478' with positive edge clock.
Creating register for signal `\module175.\reg184' using process `\module175.$proc$rtl.v:999$844'.
  created $dff cell `$procdff$1479' with positive edge clock.
Creating register for signal `\module175.\reg183' using process `\module175.$proc$rtl.v:999$844'.
  created $dff cell `$procdff$1480' with positive edge clock.
Creating register for signal `\module200.\reg222' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1481' with positive edge clock.
Creating register for signal `\module200.\reg221' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1482' with positive edge clock.
Creating register for signal `\module200.\reg220' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1483' with positive edge clock.
Creating register for signal `\module200.\reg219' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1484' with positive edge clock.
Creating register for signal `\module200.\reg218' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1485' with positive edge clock.
Creating register for signal `\module200.\reg217' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1486' with positive edge clock.
Creating register for signal `\module200.\reg216' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1487' with positive edge clock.
Creating register for signal `\module200.\reg215' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1488' with positive edge clock.
Creating register for signal `\module200.\reg214' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1489' with positive edge clock.
Creating register for signal `\module200.\reg213' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1490' with positive edge clock.
Creating register for signal `\module200.\reg212' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1491' with positive edge clock.
Creating register for signal `\module200.\reg211' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1492' with positive edge clock.
Creating register for signal `\module200.\reg210' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1493' with positive edge clock.
Creating register for signal `\module200.\reg209' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1494' with positive edge clock.
Creating register for signal `\module200.\reg208' using process `\module200.$proc$rtl.v:850$746'.
  created $dff cell `$procdff$1495' with positive edge clock.
Creating register for signal `\module37.\reg91' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1496' with positive edge clock.
Creating register for signal `\module37.\reg90' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1497' with positive edge clock.
Creating register for signal `\module37.\reg89' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1498' with positive edge clock.
Creating register for signal `\module37.\reg88' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1499' with positive edge clock.
Creating register for signal `\module37.\reg87' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1500' with positive edge clock.
Creating register for signal `\module37.\reg86' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1501' with positive edge clock.
Creating register for signal `\module37.\reg85' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1502' with positive edge clock.
Creating register for signal `\module37.\reg84' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1503' with positive edge clock.
Creating register for signal `\module37.\reg83' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1504' with positive edge clock.
Creating register for signal `\module37.\reg82' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1505' with positive edge clock.
Creating register for signal `\module37.\reg81' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1506' with positive edge clock.
Creating register for signal `\module37.\reg80' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1507' with positive edge clock.
Creating register for signal `\module37.\reg79' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1508' with positive edge clock.
Creating register for signal `\module37.\reg78' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1509' with positive edge clock.
Creating register for signal `\module37.\reg77' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1510' with positive edge clock.
Creating register for signal `\module37.\reg76' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1511' with positive edge clock.
Creating register for signal `\module37.\reg75' using process `\module37.$proc$rtl.v:602$487'.
  created $dff cell `$procdff$1512' with positive edge clock.
Creating register for signal `\module37.\reg74' using process `\module37.$proc$rtl.v:590$470'.
  created $dff cell `$procdff$1513' with positive edge clock.
Creating register for signal `\module37.\reg73' using process `\module37.$proc$rtl.v:590$470'.
  created $dff cell `$procdff$1514' with positive edge clock.
Creating register for signal `\module37.\reg72' using process `\module37.$proc$rtl.v:590$470'.
  created $dff cell `$procdff$1515' with positive edge clock.
Creating register for signal `\module37.\reg71' using process `\module37.$proc$rtl.v:590$470'.
  created $dff cell `$procdff$1516' with positive edge clock.
Creating register for signal `\module37.\reg70' using process `\module37.$proc$rtl.v:590$470'.
  created $dff cell `$procdff$1517' with positive edge clock.
Creating register for signal `\module37.\reg63' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1518' with positive edge clock.
Creating register for signal `\module37.\reg62' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1519' with positive edge clock.
Creating register for signal `\module37.\reg61' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1520' with positive edge clock.
Creating register for signal `\module37.\reg60' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1521' with positive edge clock.
Creating register for signal `\module37.\reg59' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1522' with positive edge clock.
Creating register for signal `\module37.\reg58' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1523' with positive edge clock.
Creating register for signal `\module37.\reg57' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1524' with positive edge clock.
Creating register for signal `\module37.\reg56' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1525' with positive edge clock.
Creating register for signal `\module37.\reg55' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1526' with positive edge clock.
Creating register for signal `\module37.\reg54' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1527' with positive edge clock.
Creating register for signal `\module37.\reg53' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1528' with positive edge clock.
Creating register for signal `\module37.\reg52' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1529' with positive edge clock.
Creating register for signal `\module37.\reg51' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1530' with positive edge clock.
Creating register for signal `\module37.\reg50' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1531' with positive edge clock.
Creating register for signal `\module37.\reg49' using process `\module37.$proc$rtl.v:499$313'.
  created $dff cell `$procdff$1532' with positive edge clock.
Creating register for signal `\module5.\reg110' using process `\module5.$proc$rtl.v:345$262'.
  created $dff cell `$procdff$1533' with positive edge clock.
Creating register for signal `\module5.\reg109' using process `\module5.$proc$rtl.v:345$262'.
  created $dff cell `$procdff$1534' with positive edge clock.
Creating register for signal `\module5.\reg108' using process `\module5.$proc$rtl.v:345$262'.
  created $dff cell `$procdff$1535' with positive edge clock.
Creating register for signal `\module5.\reg107' using process `\module5.$proc$rtl.v:345$262'.
  created $dff cell `$procdff$1536' with positive edge clock.
Creating register for signal `\module5.\reg106' using process `\module5.$proc$rtl.v:345$262'.
  created $dff cell `$procdff$1537' with positive edge clock.
Creating register for signal `\module5.\reg105' using process `\module5.$proc$rtl.v:345$262'.
  created $dff cell `$procdff$1538' with positive edge clock.
Creating register for signal `\module5.\reg101' using process `\module5.$proc$rtl.v:337$261'.
  created $dff cell `$procdff$1539' with positive edge clock.
Creating register for signal `\module5.\reg100' using process `\module5.$proc$rtl.v:337$261'.
  created $dff cell `$procdff$1540' with positive edge clock.
Creating register for signal `\module114.\reg248' using process `\module114.$proc$rtl.v:232$139'.
  created $dff cell `$procdff$1541' with positive edge clock.
Creating register for signal `\module114.\reg247' using process `\module114.$proc$rtl.v:232$139'.
  created $dff cell `$procdff$1542' with positive edge clock.
Creating register for signal `\module114.\reg246' using process `\module114.$proc$rtl.v:232$139'.
  created $dff cell `$procdff$1543' with positive edge clock.
Creating register for signal `\module114.\reg245' using process `\module114.$proc$rtl.v:232$139'.
  created $dff cell `$procdff$1544' with positive edge clock.
Creating register for signal `\module114.\reg244' using process `\module114.$proc$rtl.v:232$139'.
  created $dff cell `$procdff$1545' with positive edge clock.
Creating register for signal `\module114.\reg243' using process `\module114.$proc$rtl.v:232$139'.
  created $dff cell `$procdff$1546' with positive edge clock.
Creating register for signal `\module114.\reg240' using process `\module114.$proc$rtl.v:217$111'.
  created $dff cell `$procdff$1547' with positive edge clock.
Creating register for signal `\module114.\reg239' using process `\module114.$proc$rtl.v:217$111'.
  created $dff cell `$procdff$1548' with positive edge clock.
Creating register for signal `\module114.\reg238' using process `\module114.$proc$rtl.v:217$111'.
  created $dff cell `$procdff$1549' with positive edge clock.
Creating register for signal `\module114.\reg237' using process `\module114.$proc$rtl.v:217$111'.
  created $dff cell `$procdff$1550' with positive edge clock.
Creating register for signal `\module114.\reg127' using process `\module114.$proc$rtl.v:159$60'.
  created $dff cell `$procdff$1551' with positive edge clock.
Creating register for signal `\module114.\reg126' using process `\module114.$proc$rtl.v:159$60'.
  created $dff cell `$procdff$1552' with positive edge clock.
Creating register for signal `\module114.\reg125' using process `\module114.$proc$rtl.v:159$60'.
  created $dff cell `$procdff$1553' with positive edge clock.
Creating register for signal `\module114.\reg124' using process `\module114.$proc$rtl.v:159$60'.
  created $dff cell `$procdff$1554' with positive edge clock.
Creating register for signal `\module114.\reg123' using process `\module114.$proc$rtl.v:159$60'.
  created $dff cell `$procdff$1555' with positive edge clock.
Creating register for signal `\module114.\reg122' using process `\module114.$proc$rtl.v:159$60'.
  created $dff cell `$procdff$1556' with positive edge clock.
Creating register for signal `\module114.\reg121' using process `\module114.$proc$rtl.v:159$60'.
  created $dff cell `$procdff$1557' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `module128.$proc$rtl.v:1075$1135'.
Removing empty process `module128.$proc$rtl.v:1074$1134'.
Removing empty process `module128.$proc$rtl.v:1072$1133'.
Removing empty process `module128.$proc$rtl.v:1071$1132'.
Removing empty process `module128.$proc$rtl.v:1070$1131'.
Removing empty process `module128.$proc$rtl.v:1069$1130'.
Removing empty process `module128.$proc$rtl.v:1068$1129'.
Removing empty process `module128.$proc$rtl.v:1067$1128'.
Removing empty process `module128.$proc$rtl.v:1066$1127'.
Removing empty process `module128.$proc$rtl.v:1065$1126'.
Removing empty process `module128.$proc$rtl.v:1064$1125'.
Removing empty process `module128.$proc$rtl.v:1061$1124'.
Removing empty process `module128.$proc$rtl.v:1060$1123'.
Removing empty process `module128.$proc$rtl.v:1059$1122'.
Removing empty process `module128.$proc$rtl.v:1058$1121'.
Removing empty process `module128.$proc$rtl.v:1057$1120'.
Removing empty process `module128.$proc$rtl.v:1056$1119'.
Removing empty process `module128.$proc$rtl.v:1055$1118'.
Removing empty process `module128.$proc$rtl.v:1054$1117'.
Removing empty process `module128.$proc$rtl.v:1053$1116'.
Removing empty process `module128.$proc$rtl.v:1052$1115'.
Removing empty process `module128.$proc$rtl.v:1051$1114'.
Removing empty process `module128.$proc$rtl.v:1050$1113'.
Removing empty process `module128.$proc$rtl.v:1049$1112'.
Found and cleaned up 6 empty switches in `\module128.$proc$rtl.v:1168$982'.
Removing empty process `module128.$proc$rtl.v:1168$982'.
Found and cleaned up 2 empty switches in `\module128.$proc$rtl.v:1126$935'.
Removing empty process `module128.$proc$rtl.v:1126$935'.
Removing empty process `module128.$proc$rtl.v:1120$934'.
Removing empty process `module175.$proc$rtl.v:977$919'.
Removing empty process `module175.$proc$rtl.v:976$918'.
Removing empty process `module175.$proc$rtl.v:975$917'.
Removing empty process `module175.$proc$rtl.v:974$916'.
Removing empty process `module175.$proc$rtl.v:973$915'.
Removing empty process `module175.$proc$rtl.v:999$844'.
Removing empty process `module200.$proc$rtl.v:810$831'.
Removing empty process `module200.$proc$rtl.v:809$830'.
Removing empty process `module200.$proc$rtl.v:808$829'.
Removing empty process `module200.$proc$rtl.v:807$828'.
Removing empty process `module200.$proc$rtl.v:806$827'.
Removing empty process `module200.$proc$rtl.v:805$826'.
Removing empty process `module200.$proc$rtl.v:804$825'.
Removing empty process `module200.$proc$rtl.v:803$824'.
Removing empty process `module200.$proc$rtl.v:802$823'.
Removing empty process `module200.$proc$rtl.v:801$822'.
Removing empty process `module200.$proc$rtl.v:800$821'.
Removing empty process `module200.$proc$rtl.v:799$820'.
Removing empty process `module200.$proc$rtl.v:798$819'.
Removing empty process `module200.$proc$rtl.v:797$818'.
Removing empty process `module200.$proc$rtl.v:796$817'.
Found and cleaned up 3 empty switches in `\module200.$proc$rtl.v:850$746'.
Removing empty process `module200.$proc$rtl.v:850$746'.
Removing empty process `module37.$proc$rtl.v:423$689'.
Removing empty process `module37.$proc$rtl.v:422$688'.
Removing empty process `module37.$proc$rtl.v:421$687'.
Removing empty process `module37.$proc$rtl.v:420$686'.
Removing empty process `module37.$proc$rtl.v:419$685'.
Removing empty process `module37.$proc$rtl.v:418$684'.
Removing empty process `module37.$proc$rtl.v:417$683'.
Removing empty process `module37.$proc$rtl.v:416$682'.
Removing empty process `module37.$proc$rtl.v:415$681'.
Removing empty process `module37.$proc$rtl.v:414$680'.
Removing empty process `module37.$proc$rtl.v:413$679'.
Removing empty process `module37.$proc$rtl.v:412$678'.
Removing empty process `module37.$proc$rtl.v:411$677'.
Removing empty process `module37.$proc$rtl.v:410$676'.
Removing empty process `module37.$proc$rtl.v:409$675'.
Removing empty process `module37.$proc$rtl.v:402$674'.
Removing empty process `module37.$proc$rtl.v:401$673'.
Removing empty process `module37.$proc$rtl.v:400$672'.
Removing empty process `module37.$proc$rtl.v:399$671'.
Removing empty process `module37.$proc$rtl.v:398$670'.
Removing empty process `module37.$proc$rtl.v:397$669'.
Removing empty process `module37.$proc$rtl.v:396$668'.
Removing empty process `module37.$proc$rtl.v:395$667'.
Removing empty process `module37.$proc$rtl.v:394$666'.
Removing empty process `module37.$proc$rtl.v:393$665'.
Removing empty process `module37.$proc$rtl.v:392$664'.
Removing empty process `module37.$proc$rtl.v:391$663'.
Removing empty process `module37.$proc$rtl.v:390$662'.
Removing empty process `module37.$proc$rtl.v:389$661'.
Removing empty process `module37.$proc$rtl.v:388$660'.
Removing empty process `module37.$proc$rtl.v:387$659'.
Removing empty process `module37.$proc$rtl.v:386$658'.
Removing empty process `module37.$proc$rtl.v:385$657'.
Removing empty process `module37.$proc$rtl.v:384$656'.
Removing empty process `module37.$proc$rtl.v:383$655'.
Removing empty process `module37.$proc$rtl.v:382$654'.
Removing empty process `module37.$proc$rtl.v:381$653'.
Found and cleaned up 6 empty switches in `\module37.$proc$rtl.v:602$487'.
Removing empty process `module37.$proc$rtl.v:602$487'.
Removing empty process `module37.$proc$rtl.v:590$470'.
Found and cleaned up 4 empty switches in `\module37.$proc$rtl.v:499$313'.
Removing empty process `module37.$proc$rtl.v:499$313'.
Removing empty process `module5.$proc$rtl.v:288$283'.
Removing empty process `module5.$proc$rtl.v:287$282'.
Removing empty process `module5.$proc$rtl.v:283$281'.
Removing empty process `module5.$proc$rtl.v:282$280'.
Removing empty process `module5.$proc$rtl.v:281$279'.
Removing empty process `module5.$proc$rtl.v:280$278'.
Removing empty process `module5.$proc$rtl.v:279$277'.
Removing empty process `module5.$proc$rtl.v:278$276'.
Removing empty process `module5.$proc$rtl.v:345$262'.
Removing empty process `module5.$proc$rtl.v:337$261'.
Removing empty process `module114.$proc$rtl.v:107$221'.
Removing empty process `module114.$proc$rtl.v:106$220'.
Removing empty process `module114.$proc$rtl.v:105$219'.
Removing empty process `module114.$proc$rtl.v:104$218'.
Removing empty process `module114.$proc$rtl.v:103$217'.
Removing empty process `module114.$proc$rtl.v:102$216'.
Removing empty process `module114.$proc$rtl.v:101$215'.
Removing empty process `module114.$proc$rtl.v:95$214'.
Removing empty process `module114.$proc$rtl.v:94$213'.
Removing empty process `module114.$proc$rtl.v:93$212'.
Removing empty process `module114.$proc$rtl.v:92$211'.
Removing empty process `module114.$proc$rtl.v:89$210'.
Removing empty process `module114.$proc$rtl.v:88$209'.
Removing empty process `module114.$proc$rtl.v:87$208'.
Removing empty process `module114.$proc$rtl.v:86$207'.
Removing empty process `module114.$proc$rtl.v:85$206'.
Removing empty process `module114.$proc$rtl.v:84$205'.
Found and cleaned up 1 empty switch in `\module114.$proc$rtl.v:232$139'.
Removing empty process `module114.$proc$rtl.v:232$139'.
Removing empty process `module114.$proc$rtl.v:217$111'.
Found and cleaned up 3 empty switches in `\module114.$proc$rtl.v:159$60'.
Removing empty process `module114.$proc$rtl.v:159$60'.
Cleaned up 25 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module module128.
<suppressed ~25 debug messages>
Optimizing module module175.
<suppressed ~6 debug messages>
Optimizing module module200.
<suppressed ~11 debug messages>
Optimizing module module13.
<suppressed ~5 debug messages>
Optimizing module module37.
<suppressed ~59 debug messages>
Optimizing module module5.
<suppressed ~4 debug messages>
Optimizing module module114.
<suppressed ~22 debug messages>
Optimizing module top.
<suppressed ~5 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \top..
Removed 71 unused cells and 667 unused wires.
<suppressed ~211 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module module114..
checking module module128..
checking module module13..
checking module module175..
checking module module200..
checking module module37..
checking module module5..
checking module top..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
<suppressed ~1 debug messages>
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
<suppressed ~1 debug messages>
Optimizing module top.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module128'.
<suppressed ~21 debug messages>
Finding identical cells in module `\module13'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module175'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module200'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module37'.
<suppressed ~36 debug messages>
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 30 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module114..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$1221: { \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 } -> { \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6:4] 1'1 \wire129 [2:0] }
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module175..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $ternary$rtl.v:1019$881.
    dead port 2/2 on $mux $ternary$rtl.v:997$835.
Running muxtree optimizer on module \module200..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$1249: { \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] } -> 14'11111111111111
      Replacing known input bits on port B of cell $ternary$rtl.v:847$738: { \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] } -> 16'1111111111111111
  Analyzing evaluation results.
Running muxtree optimizer on module \module37..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$rtl.v:508$325: { \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [7:0] \wire46 [2] \wire46 [2] \wire46 [2] 8'00000000 \wire41 [5:2] } -> { \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [16] \wire44 [7:0] 11'11100000000 \wire41 [5:2] }
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$rtl.v:331$249: \wire10 -> { \wire10 [10:6] 1'1 \wire10 [4:0] }
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~179 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module114.
    New input vector for $reduce_or cell $reduce_or$rtl.v:261$200: { $xnor$rtl.v:261$199_Y [0] $xnor$rtl.v:261$199_Y [1] $xnor$rtl.v:261$199_Y [2] $xnor$rtl.v:261$199_Y [3] $xnor$rtl.v:261$199_Y [4] $xnor$rtl.v:261$199_Y [5] $xnor$rtl.v:261$199_Y [6] $xnor$rtl.v:261$199_Y [7] $xnor$rtl.v:261$199_Y [8] $xnor$rtl.v:261$199_Y [9] $xnor$rtl.v:261$199_Y [10] $xnor$rtl.v:261$199_Y [11] $xnor$rtl.v:261$199_Y [12] $xnor$rtl.v:261$199_Y [13] $xnor$rtl.v:261$199_Y [14] $xnor$rtl.v:261$199_Y [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:246$164: { \wire235 [0] \wire235 [1] \wire235 [2] \wire235 [3] \wire235 [4] \wire235 [5] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:223$118: { $ternary$rtl.v:223$117_Y [0] $ternary$rtl.v:223$117_Y [1] $ternary$rtl.v:223$117_Y [2] $ternary$rtl.v:223$117_Y [3] $ternary$rtl.v:223$117_Y [4] $ternary$rtl.v:223$117_Y [5] $ternary$rtl.v:223$117_Y [6] $ternary$rtl.v:223$117_Y [7] $ternary$rtl.v:223$117_Y [8] $ternary$rtl.v:223$117_Y [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:214$102: { \reg125 [0] \reg125 [1] \reg125 [2] \reg125 [3] \reg125 [4] \reg125 [5] \reg125 [6] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:188$84: { \reg122 [4] \reg122 [5] \reg122 [6] \reg122 [7] \reg122 [8] \reg122 [9] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:243$161: { \wire242 [0] \wire242 [1] \wire242 [2] \wire242 [3] \wire242 [4] \wire242 [5] }
  Optimizing cells in module \module114.
  Optimizing cells in module \module128.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1248$1097: { \reg150 [3] \reg150 [4] \reg150 [5] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1210$1032: { \reg146 [0] \reg146 [1] \reg146 [2] \reg146 [3] \reg146 [4] \reg146 [5] \reg146 [6] \reg146 [7] \reg146 [8] \reg146 [9] \reg146 [10] \reg146 [11] \reg146 [12] \reg146 [13] \reg146 [14] \reg146 [15] \reg146 [16] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1195$1026: { \reg152 [0] \reg152 [1] \reg152 [2] \reg152 [3] \reg152 [4] \reg152 [5] \reg152 [6] \reg152 [7] \reg152 [8] \reg152 [9] \reg152 [10] \reg152 [11] \reg152 [12] \reg152 [13] \reg152 [14] \reg152 [15] \reg152 [16] \reg152 [17] \reg152 [18] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1171$987: { $xnor$rtl.v:1170$986_Y [0] $xnor$rtl.v:1170$986_Y [1] $xnor$rtl.v:1170$986_Y [2] $xnor$rtl.v:1170$986_Y [3] $xnor$rtl.v:1170$986_Y [4] $xnor$rtl.v:1170$986_Y [5] $xnor$rtl.v:1170$986_Y [6] $xnor$rtl.v:1170$986_Y [7] $xnor$rtl.v:1170$986_Y [8] $xnor$rtl.v:1170$986_Y [9] $xnor$rtl.v:1170$986_Y [10] $xnor$rtl.v:1170$986_Y [11] $xnor$rtl.v:1170$986_Y [12] $xnor$rtl.v:1170$986_Y [13] $xnor$rtl.v:1170$986_Y [14] $xnor$rtl.v:1170$986_Y [15] $xnor$rtl.v:1170$986_Y [16] $xnor$rtl.v:1170$986_Y [17] $xnor$rtl.v:1170$986_Y [18] $xnor$rtl.v:1170$986_Y [19] $xnor$rtl.v:1170$986_Y [20] $xnor$rtl.v:1170$986_Y [21] $xnor$rtl.v:1170$986_Y [22] $xnor$rtl.v:1170$986_Y [23] $xnor$rtl.v:1170$986_Y [24] $xnor$rtl.v:1170$986_Y [25] $eq$rtl.v:1171$984_Y }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1166$981: { \wire129 [0] \wire129 [1] \wire129 [2] \wire129 [3] \wire129 [4] \wire129 [5] \wire129 [6] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1151$970: { \reg137 [5] \reg137 [6] \reg137 [7] \reg137 [8] \reg137 [9] \reg137 [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1244$1086: { \reg158 [0] \reg158 [1] \reg158 [2] \reg158 [3] \reg158 [4] \reg158 [5] \reg158 [6] \reg158 [7] \reg158 [8] \reg158 [9] \reg158 [10] \reg158 [11] \reg158 [12] \reg158 [13] \reg158 [14] \reg158 [15] \reg158 [16] \reg158 [17] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1224$1062: { \reg157 [0] \reg157 [1] \reg157 [2] \reg157 [3] \reg157 [4] \reg157 [5] \reg157 [6] \reg157 [7] \reg157 [8] \reg157 [9] \reg157 [10] \reg157 [11] \reg157 [12] \reg157 [13] \reg157 [14] \reg157 [15] \reg157 [16] \reg157 [17] \reg157 [18] \reg157 [19] \reg157 [20] \reg157 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1213$1043: { \wire130 [9] \wire130 [10] \wire130 [11] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1207$1029: { \reg153 [3] \reg153 [4] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1194$1021: { $shl$rtl.v:1194$1020_Y [0] $shl$rtl.v:1194$1020_Y [1] $shl$rtl.v:1194$1020_Y [2] $shl$rtl.v:1194$1020_Y [3] $shl$rtl.v:1194$1020_Y [4] $shl$rtl.v:1194$1020_Y [5] $shl$rtl.v:1194$1020_Y [6] $shl$rtl.v:1194$1020_Y [7] $shl$rtl.v:1194$1020_Y [8] $shl$rtl.v:1194$1020_Y [9] $shl$rtl.v:1194$1020_Y [10] $shl$rtl.v:1194$1020_Y [11] $shl$rtl.v:1194$1020_Y [12] $shl$rtl.v:1194$1020_Y [13] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1193$1019: { \wire148 [0] \wire148 [1] \wire148 [2] \wire148 [3] \wire148 [4] \wire148 [5] \wire148 [6] \wire148 [7] \wire148 [8] \wire148 [9] \wire148 [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1180$1000: { \reg146 [5] \reg146 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1144$955: { $xor$rtl.v:1144$954_Y [0] $xor$rtl.v:1144$954_Y [1] $xor$rtl.v:1144$954_Y [2] $xor$rtl.v:1144$954_Y [3] $xor$rtl.v:1144$954_Y [4] $xor$rtl.v:1144$954_Y [5] $xor$rtl.v:1144$954_Y [6] $xor$rtl.v:1144$954_Y [7] $xor$rtl.v:1144$954_Y [8] $xor$rtl.v:1144$954_Y [9] $xor$rtl.v:1144$954_Y [10] $xor$rtl.v:1144$954_Y [11] $xor$rtl.v:1144$954_Y [12] $xor$rtl.v:1144$954_Y [13] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1129$936: { \wire129 [0] \wire129 [1] \wire129 [2] \wire129 [3] \wire129 [4] \wire129 [5] \wire129 [6] }
  Optimizing cells in module \module128.
  Optimizing cells in module \module13.
    New input vector for $reduce_or cell $reduce_or$rtl.v:757$700: { $xnor$rtl.v:757$699_Y [0] $xnor$rtl.v:757$699_Y [1] $xnor$rtl.v:757$699_Y [2] $xnor$rtl.v:757$699_Y [3] $xnor$rtl.v:757$699_Y [4] $xnor$rtl.v:757$699_Y [5] $xnor$rtl.v:757$699_Y [6] $xnor$rtl.v:757$699_Y [7] $xnor$rtl.v:757$699_Y [8] $xnor$rtl.v:757$699_Y [9] $xnor$rtl.v:757$699_Y [10] $xnor$rtl.v:757$699_Y [11] $xnor$rtl.v:757$699_Y [12] $xnor$rtl.v:757$699_Y [13] $xnor$rtl.v:757$699_Y [14] $xnor$rtl.v:757$699_Y [15] $xnor$rtl.v:757$699_Y [16] $xnor$rtl.v:757$699_Y [17] $xnor$rtl.v:757$699_Y [18] $xnor$rtl.v:757$699_Y [19] $xnor$rtl.v:757$699_Y [20] $xnor$rtl.v:757$699_Y [21] }
  Optimizing cells in module \module13.
  Optimizing cells in module \module175.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1027$908: { $ternary$rtl.v:1027$907_Y [0] $ternary$rtl.v:1027$907_Y [1] $ternary$rtl.v:1027$907_Y [2] $ternary$rtl.v:1027$907_Y [3] $ternary$rtl.v:1027$907_Y [4] $ternary$rtl.v:1027$907_Y [5] $ternary$rtl.v:1027$907_Y [6] $ternary$rtl.v:1027$907_Y [7] $ternary$rtl.v:1027$907_Y [8] $ternary$rtl.v:1027$907_Y [9] $ternary$rtl.v:1027$907_Y [10] $ternary$rtl.v:1027$907_Y [11] $ternary$rtl.v:1027$907_Y [12] $ternary$rtl.v:1027$907_Y [13] $ternary$rtl.v:1027$907_Y [14] $ternary$rtl.v:1027$907_Y [15] $ternary$rtl.v:1027$907_Y [16] $ternary$rtl.v:1027$907_Y [17] $ternary$rtl.v:1027$907_Y [18] $ternary$rtl.v:1027$907_Y [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1015$877: { $ternary$rtl.v:1015$876_Y [0] $ternary$rtl.v:1015$876_Y [1] $ternary$rtl.v:1015$876_Y [2] $ternary$rtl.v:1015$876_Y [3] $ternary$rtl.v:1015$876_Y [4] $ternary$rtl.v:1015$876_Y [5] $ternary$rtl.v:1015$876_Y [6] $ternary$rtl.v:1015$876_Y [7] $ternary$rtl.v:1015$876_Y [8] $ternary$rtl.v:1015$876_Y [9] $ternary$rtl.v:1015$876_Y [10] $ternary$rtl.v:1015$876_Y [11] $ternary$rtl.v:1015$876_Y [12] $ternary$rtl.v:1015$876_Y [13] $ternary$rtl.v:1015$876_Y [14] $ternary$rtl.v:1015$876_Y [15] $ternary$rtl.v:1015$876_Y [16] $ternary$rtl.v:1015$876_Y [17] $ternary$rtl.v:1015$876_Y [18] $ternary$rtl.v:1015$876_Y [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1007$859: { \wire178 [0] \wire178 [1] \wire178 [2] \wire178 [3] \wire178 [4] \wire178 [5] \wire178 [6] \wire178 [7] \wire178 [8] \wire178 [9] \wire178 [10] \wire178 [11] \wire178 [12] \wire178 [13] \wire178 [14] \wire178 [15] \wire178 [16] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1005$854: { \wire176 [0] \wire176 [1] \wire176 [2] \wire176 [3] \wire176 [4] \wire176 [5] \wire176 [6] \wire176 [7] \wire176 [8] \wire176 [9] \wire176 [10] \wire176 [11] \wire176 [12] \wire176 [13] \wire176 [14] \wire176 [15] \wire176 [16] \wire176 [17] \wire176 [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1025$899: { $ternary$rtl.v:1025$898_Y [0] $ternary$rtl.v:1025$898_Y [1] $ternary$rtl.v:1025$898_Y [2] $ternary$rtl.v:1025$898_Y [3] $ternary$rtl.v:1025$898_Y [4] $ternary$rtl.v:1025$898_Y [5] $ternary$rtl.v:1025$898_Y [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1021$888: { \reg183 [0] \reg183 [1] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1007$862: { $ternary$rtl.v:1007$861_Y [0] $ternary$rtl.v:1007$861_Y [1] $ternary$rtl.v:1007$861_Y [2] $ternary$rtl.v:1007$861_Y [3] $ternary$rtl.v:1007$861_Y [4] $ternary$rtl.v:1007$861_Y [5] $ternary$rtl.v:1007$861_Y [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1002$845: { \wire181 [0] \wire181 [1] \wire181 [2] \wire181 [3] \wire181 [4] \wire181 [5] \wire181 [6] \wire181 [7] \wire181 [8] \wire181 [9] \wire181 [10] \wire181 [11] \wire181 [12] \wire181 [13] \wire181 [14] \wire181 [15] \wire181 [16] \wire181 [17] \wire181 [18] \wire181 [19] \wire181 [20] \wire181 [21] }
  Optimizing cells in module \module175.
  Optimizing cells in module \module200.
    New input vector for $reduce_or cell $reduce_or$rtl.v:875$759: { \wire201 [0] \wire201 [1] \wire201 [2] \wire201 [3] \wire201 [4] \wire201 [5] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:860$753: { $ternary$rtl.v:860$752_Y [0] $ternary$rtl.v:860$752_Y [1] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [3] $ternary$rtl.v:860$752_Y [4] $ternary$rtl.v:860$752_Y [5] $ternary$rtl.v:860$752_Y [6] $ternary$rtl.v:860$752_Y [7] $ternary$rtl.v:860$752_Y [8] $ternary$rtl.v:860$752_Y [9] $ternary$rtl.v:860$752_Y [10] $ternary$rtl.v:860$752_Y [11] $ternary$rtl.v:860$752_Y [12] $ternary$rtl.v:860$752_Y [13] $ternary$rtl.v:860$752_Y [14] $ternary$rtl.v:860$752_Y [15] $ternary$rtl.v:860$752_Y [16] $ternary$rtl.v:860$752_Y [17] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:848$740: { \wire202 [0] \wire202 [1] \wire202 [2] \wire202 [3] \wire202 [4] \wire202 [5] \wire202 [6] \wire202 [7] \wire202 [8] \wire202 [9] \wire202 [10] \wire202 [11] \wire202 [12] \wire202 [13] \wire202 [14] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:844$730: { \wire201 [0] \wire201 [1] \wire201 [2] \wire201 [3] \wire201 [4] \wire201 [5] \wire201 [6] \wire201 [7] \wire201 [8] \wire201 [9] \wire201 [10] \wire201 [11] \wire201 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:945$806: { $ternary$rtl.v:945$805_Y [0] $ternary$rtl.v:945$805_Y [1] $ternary$rtl.v:945$805_Y [2] $ternary$rtl.v:945$805_Y [3] $ternary$rtl.v:945$805_Y [4] $ternary$rtl.v:945$805_Y [5] $ternary$rtl.v:945$805_Y [6] $ternary$rtl.v:945$805_Y [7] $ternary$rtl.v:945$805_Y [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:944$801: { \reg213 [0] \reg213 [1] \reg213 [2] \reg213 [3] \reg213 [4] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:844$733: { \wire202 [0] \wire202 [1] \wire202 [2] \wire202 [3] \wire202 [4] \wire202 [5] \wire202 [6] \wire202 [7] \wire202 [8] \wire202 [9] \wire202 [10] \wire202 [11] \wire202 [12] \wire202 [13] \wire202 [14] }
  Optimizing cells in module \module200.
  Optimizing cells in module \module37.
    New input vector for $reduce_or cell $reduce_or$rtl.v:695$627: { \reg57 [0] \reg57 [1] \reg57 [2] \reg57 [3] \reg57 [4] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:658$578: { $ternary$rtl.v:658$577_Y [0] $ternary$rtl.v:658$577_Y [1] $ternary$rtl.v:658$577_Y [2] $ternary$rtl.v:658$577_Y [3] $ternary$rtl.v:658$577_Y [4] $ternary$rtl.v:658$577_Y [5] $ternary$rtl.v:658$577_Y [6] $ternary$rtl.v:658$577_Y [7] $ternary$rtl.v:658$577_Y [8] $ternary$rtl.v:658$577_Y [9] $ternary$rtl.v:658$577_Y [10] $ternary$rtl.v:658$577_Y [11] $ternary$rtl.v:658$577_Y [12] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:631$521: { $and$rtl.v:631$520_Y [0] $and$rtl.v:631$520_Y [1] $and$rtl.v:631$520_Y [2] $and$rtl.v:631$520_Y [3] $and$rtl.v:631$520_Y [4] $and$rtl.v:631$520_Y [5] $and$rtl.v:631$520_Y [6] $and$rtl.v:631$520_Y [7] $and$rtl.v:631$520_Y [8] $and$rtl.v:631$520_Y [9] $and$rtl.v:631$520_Y [10] $and$rtl.v:631$520_Y [11] $and$rtl.v:631$520_Y [12] $and$rtl.v:631$520_Y [13] $and$rtl.v:631$520_Y [14] $and$rtl.v:631$520_Y [15] $and$rtl.v:631$520_Y [16] $and$rtl.v:631$520_Y [17] $and$rtl.v:631$520_Y [18] $and$rtl.v:631$520_Y [19] $and$rtl.v:631$520_Y [20] $and$rtl.v:631$520_Y [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:604$488: { \reg61 [0] \reg61 [1] \reg61 [2] \reg61 [3] \reg61 [4] \reg61 [5] \reg61 [6] \reg61 [7] \reg61 [8] \reg61 [9] \reg61 [10] \reg61 [11] \reg61 [12] \reg61 [13] \reg61 [14] \reg61 [15] \reg61 [16] \reg61 [17] \reg61 [18] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:558$418: { \reg58 [0] \reg58 [1] \reg58 [2] \reg58 [3] \reg58 [4] \reg58 [5] \reg58 [6] \reg58 [7] \reg58 [8] \reg58 [9] \reg58 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:532$362: { \reg54 [0] \reg54 [1] \reg54 [2] \reg54 [3] \reg54 [4] \reg54 [5] \reg54 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:664$584: { \reg49 [0] \reg49 [1] \reg49 [2] \reg49 [3] \reg49 [4] \reg49 [5] \reg49 [6] \reg49 [7] \reg49 [8] \reg49 [9] \reg49 [10] \reg49 [11] \reg49 [12] \reg49 [13] \reg49 [14] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:640$541: { \wire69 [0] \wire69 [1] \wire69 [2] \wire69 [3] \wire69 [4] \wire69 [5] \wire69 [6] \wire69 [7] \wire69 [8] \wire69 [9] \wire69 [10] \wire69 [11] \wire69 [12] \wire69 [13] \wire69 [14] \wire69 [15] \wire69 [16] \wire69 [17] \wire69 [18] \wire69 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:632$522: { \reg61 [0] \reg61 [1] \reg61 [2] \reg61 [3] \reg61 [4] \reg61 [5] \reg61 [6] \reg61 [7] \reg61 [8] \reg61 [9] \reg61 [10] \reg61 [11] \reg61 [12] \reg61 [13] \reg61 [14] \reg61 [15] \reg61 [16] \reg61 [17] \reg61 [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:572$440: { \reg54 [0] \reg54 [1] \reg54 [2] \reg54 [3] \reg54 [4] \reg54 [5] \reg54 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:553$410: { $ternary$rtl.v:553$409_Y [0] $ternary$rtl.v:553$409_Y [1] $ternary$rtl.v:553$409_Y [2] $ternary$rtl.v:553$409_Y [3] $ternary$rtl.v:553$409_Y [4] $ternary$rtl.v:553$409_Y [5] $ternary$rtl.v:553$409_Y [6] $ternary$rtl.v:553$409_Y [7] $ternary$rtl.v:553$409_Y [8] $ternary$rtl.v:553$409_Y [9] $ternary$rtl.v:553$409_Y [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:534$372: { $neg$rtl.v:534$371_Y [0] $neg$rtl.v:534$371_Y [1] $neg$rtl.v:534$371_Y [2] $neg$rtl.v:534$371_Y [3] $neg$rtl.v:534$371_Y [4] $neg$rtl.v:534$371_Y [5] $neg$rtl.v:534$371_Y [6] $neg$rtl.v:534$371_Y [7] $neg$rtl.v:534$371_Y [8] $neg$rtl.v:534$371_Y [9] $neg$rtl.v:534$371_Y [10] $neg$rtl.v:534$371_Y [11] $neg$rtl.v:534$371_Y [12] $neg$rtl.v:534$371_Y [13] $neg$rtl.v:534$371_Y [14] $neg$rtl.v:534$371_Y [15] $neg$rtl.v:534$371_Y [16] $neg$rtl.v:534$371_Y [17] $neg$rtl.v:534$371_Y [18] $neg$rtl.v:534$371_Y [19] $neg$rtl.v:534$371_Y [20] $neg$rtl.v:534$371_Y [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:524$358: { $ternary$rtl.v:524$355_Y [0] $ternary$rtl.v:524$355_Y [1] $ternary$rtl.v:524$355_Y [2] $ternary$rtl.v:524$355_Y [3] $ternary$rtl.v:524$355_Y [4] $ternary$rtl.v:524$355_Y [5] $ternary$rtl.v:524$355_Y [6] $ternary$rtl.v:524$355_Y [7] $ternary$rtl.v:524$355_Y [8] $ternary$rtl.v:524$355_Y [9] $ternary$rtl.v:524$355_Y [10] $ternary$rtl.v:524$355_Y [11] $ternary$rtl.v:524$355_Y [12] $ternary$rtl.v:524$355_Y [13] $ternary$rtl.v:524$355_Y [14] $ternary$rtl.v:524$355_Y [15] $ternary$rtl.v:524$355_Y [16] $ternary$rtl.v:524$355_Y [17] $ternary$rtl.v:524$355_Y [18] $ternary$rtl.v:524$355_Y [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:524$351: { $ternary$rtl.v:524$350_Y [0] $ternary$rtl.v:524$350_Y [1] $ternary$rtl.v:524$350_Y [2] $ternary$rtl.v:524$350_Y [3] $ternary$rtl.v:524$350_Y [4] $ternary$rtl.v:524$350_Y [5] $ternary$rtl.v:524$350_Y [6] $ternary$rtl.v:524$350_Y [7] $ternary$rtl.v:524$350_Y [8] $ternary$rtl.v:524$350_Y [9] $ternary$rtl.v:524$350_Y [10] $ternary$rtl.v:524$350_Y [11] $ternary$rtl.v:524$350_Y [12] $ternary$rtl.v:524$350_Y [13] $ternary$rtl.v:524$350_Y [14] }
  Optimizing cells in module \module37.
  Optimizing cells in module \module5.
    New input vector for $reduce_or cell $reduce_or$rtl.v:334$259: { $add$rtl.v:334$258_Y [0] $add$rtl.v:334$258_Y [1] $add$rtl.v:334$258_Y [2] $add$rtl.v:334$258_Y [3] $add$rtl.v:334$258_Y [4] $add$rtl.v:334$258_Y [5] $add$rtl.v:334$258_Y [6] $add$rtl.v:334$258_Y [7] $add$rtl.v:334$258_Y [8] $add$rtl.v:334$258_Y [9] $add$rtl.v:334$258_Y [10] $add$rtl.v:334$258_Y [11] $add$rtl.v:334$258_Y [12] $add$rtl.v:334$258_Y [13] $add$rtl.v:334$258_Y [14] $add$rtl.v:334$258_Y [15] $add$rtl.v:334$258_Y [16] $add$rtl.v:334$258_Y [17] $add$rtl.v:334$258_Y [18] $add$rtl.v:334$258_Y [19] $add$rtl.v:334$258_Y [20] $add$rtl.v:334$258_Y [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:332$245: { \wire8 [0] \wire8 [1] \wire8 [2] \wire8 [3] \wire8 [4] \wire8 [5] \wire8 [6] \wire8 [7] \wire8 [8] \wire8 [9] \wire8 [10] \wire8 [11] \wire8 [12] \wire8 [13] \wire8 [14] \wire8 [15] \wire8 [16] \wire8 [17] }
  Optimizing cells in module \module5.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:63$18: { \wire2 [3] \wire2 [4] \wire2 [5] \wire2 [6] \wire2 [7] \wire2 [8] \wire2 [9] \wire2 [10] \wire2 [11] \wire2 [12] \wire2 [13] }
  Optimizing cells in module \top.
Performed a total of 54 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1467 ($dff) from module module128.
Removing $procdff$1496 ($dff) from module module37.
Replaced 2 DFF cells.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 34 unused wires.
<suppressed ~7 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
<suppressed ~4 debug messages>
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
Optimizing module top.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module114..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module175..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module200..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module37..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~178 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module114.
  Optimizing cells in module \module128.
  Optimizing cells in module \module13.
  Optimizing cells in module \module175.
  Optimizing cells in module \module200.
  Optimizing cells in module \module37.
  Optimizing cells in module \module5.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
Optimizing module top.

2.6.16. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 15) from port A of cell module114.$le$rtl.v:152$42 ($le).
Removed top 8 bits (of 16) from mux cell module114.$ternary$rtl.v:153$47 ($mux).
Removed top 8 bits (of 16) from port B of cell module114.$or$rtl.v:153$48 ($or).
Removed top 6 bits (of 16) from port Y of cell module114.$or$rtl.v:153$48 ($or).
Removed top 6 bits (of 16) from port A of cell module114.$or$rtl.v:153$48 ($or).
Removed top 21 bits (of 29) from port B of cell module114.$xnor$rtl.v:158$59 ($xnor).
Removed top 24 bits (of 29) from port Y of cell module114.$xnor$rtl.v:158$59 ($xnor).
Removed top 2 bits (of 15) from port A of cell module114.$le$rtl.v:167$65 ($le).
Removed top 2 bits (of 15) from port A of cell module114.$ne$rtl.v:166$69 ($ne).
Removed top 3 bits (of 8) from port B of cell module114.$and$rtl.v:181$72 ($and).
Removed top 9 bits (of 19) from port A of cell module114.$xnor$rtl.v:193$86 ($xnor).
Removed top 15 bits (of 20) from mux cell module114.$ternary$rtl.v:205$98 ($mux).
Removed top 15 bits (of 20) from mux cell module114.$ternary$rtl.v:205$99 ($mux).
Removed top 41 bits (of 42) from port A of cell module114.$sub$rtl.v:215$110 ($sub).
Removed top 28 bits (of 42) from port Y of cell module114.$sub$rtl.v:215$110 ($sub).
Removed top 28 bits (of 42) from port B of cell module114.$sub$rtl.v:215$110 ($sub).
Removed top 2 bits (of 16) from mux cell module114.$ternary$rtl.v:215$106 ($mux).
Removed cell module114.$ternary$rtl.v:212$109 ($mux).
Removed top 13 bits (of 14) from port A of cell module114.$and$rtl.v:223$120 ($and).
Removed top 2 bits (of 10) from mux cell module114.$ternary$rtl.v:227$125 ($mux).
Removed top 3 bits (of 14) from port A of cell module114.$and$rtl.v:230$129 ($and).
Removed top 13 bits (of 14) from mux cell module114.$ternary$rtl.v:231$135 ($mux).
Removed top 13 bits (of 14) from port A of cell module114.$add$rtl.v:231$136 ($add).
Removed top 10 bits (of 14) from port Y of cell module114.$add$rtl.v:231$136 ($add).
Removed top 4 bits (of 14) from mux cell module114.$ternary$rtl.v:231$138 ($mux).
Removed top 11 bits (of 21) from mux cell module114.$ternary$rtl.v:238$143 ($mux).
Removed top 11 bits (of 21) from port A of cell module114.$and$rtl.v:239$147 ($and).
Removed top 6 bits (of 21) from port B of cell module114.$and$rtl.v:239$147 ($and).
Removed top 6 bits (of 21) from port Y of cell module114.$and$rtl.v:239$147 ($and).
Removed top 13 bits (of 14) from mux cell module114.$ternary$rtl.v:241$151 ($mux).
Removed top 10 bits (of 14) from mux cell module114.$ternary$rtl.v:241$154 ($mux).
Removed top 9 bits (of 17) from port A of cell module114.$xor$rtl.v:243$158 ($xor).
Removed top 14 bits (of 17) from port B of cell module114.$xor$rtl.v:243$158 ($xor).
Removed top 9 bits (of 17) from port Y of cell module114.$xor$rtl.v:243$158 ($xor).
Removed top 9 bits (of 17) from port A of cell module114.$sub$rtl.v:244$162 ($sub).
Removed top 1 bits (of 17) from port B of cell module114.$sub$rtl.v:244$162 ($sub).
Removed top 18 bits (of 19) from port B of cell module114.$le$rtl.v:249$175 ($le).
Removed top 4 bits (of 16) from mux cell module114.$ternary$rtl.v:249$177 ($mux).
Removed top 10 bits (of 21) from mux cell module114.$ternary$rtl.v:253$181 ($mux).
Removed top 20 bits (of 21) from port A of cell module114.$xnor$rtl.v:253$182 ($xnor).
Removed top 10 bits (of 21) from port B of cell module114.$xnor$rtl.v:253$182 ($xnor).
Removed top 7 bits (of 21) from port B of cell module114.$ne$rtl.v:253$183 ($ne).
Removed top 21 bits (of 22) from port A of cell module114.$and$rtl.v:251$188 ($and).
Removed top 13 bits (of 34) from port A of cell module114.$sshl$rtl.v:255$190 ($sshl).
Removed top 18 bits (of 34) from mux cell module114.$ternary$rtl.v:255$195 ($mux).
Removed top 17 bits (of 22) from port B of cell module114.$or$rtl.v:256$196 ($or).
Removed top 8 bits (of 17) from mux cell module114.$ternary$rtl.v:262$204 ($mux).
Removed top 6 bits (of 14) from mux cell module114.$procmux$1402 ($mux).
Removed top 20 bits (of 22) from mux cell module114.$procmux$1417 ($mux).
Removed top 11 bits (of 13) from mux cell module114.$procmux$1426 ($mux).
Removed top 19 bits (of 22) from mux cell module114.$procmux$1421 ($mux).
Removed top 19 bits (of 22) from mux cell module114.$procmux$1423 ($mux).
Removed top 8 bits (of 14) from mux cell module114.$procmux$1447 ($mux).
Removed top 6 bits (of 14) from FF cell module114.$procdff$1545 ($dff).
Removed top 12 bits (of 19) from FF cell module114.$procdff$1546 ($dff).
Removed top 1 bits (of 4) from FF cell module114.$procdff$1549 ($dff).
Removed top 15 bits (of 16) from FF cell module114.$procdff$1550 ($dff).
Removed top 19 bits (of 22) from FF cell module114.$procdff$1555 ($dff).
Removed top 7 bits (of 15) from FF cell module114.$procdff$1556 ($dff).
Removed top 3 bits (of 4) from FF cell module114.$procdff$1557 ($dff).
Removed top 6 bits (of 8) from port Y of cell module114.$shl$rtl.v:149$38 ($shl).
Removed top 5 bits (of 15) from mux cell module114.$ternary$rtl.v:166$68 ($mux).
Removed top 7 bits (of 15) from port B of cell module114.$mul$rtl.v:167$64 ($mul).
Removed top 2 bits (of 16) from mux cell module114.$ternary$rtl.v:215$105 ($mux).
Removed top 4 bits (of 14) from mux cell module114.$ternary$rtl.v:230$131 ($mux).
Removed top 7 bits (of 15) from port A of cell module114.$shr$rtl.v:244$160 ($shr).
Removed top 6 bits (of 14) from port A of cell module114.$ne$rtl.v:248$170 ($ne).
Removed top 7 bits (of 15) from port B of cell module114.$ne$rtl.v:248$170 ($ne).
Removed top 19 bits (of 22) from mux cell module114.$ternary$rtl.v:248$172 ($mux).
Removed top 14 bits (of 16) from port A of cell module114.$le$rtl.v:249$175 ($le).
Removed top 6 bits (of 14) from port A of cell module114.$xnor$rtl.v:251$185 ($xnor).
Removed top 19 bits (of 22) from port B of cell module114.$xnor$rtl.v:251$185 ($xnor).
Removed top 18 bits (of 34) from port Y of cell module114.$sshl$rtl.v:255$190 ($sshl).
Removed top 19 bits (of 22) from port A of cell module114.$or$rtl.v:256$196 ($or).
Removed top 17 bits (of 22) from port Y of cell module114.$or$rtl.v:256$196 ($or).
Removed top 6 bits (of 9) from mux cell module114.$ternary$rtl.v:262$204 ($mux).
Removed top 18 bits (of 19) from mux cell module114.$procmux$1441 ($mux).
Removed top 6 bits (of 7) from FF cell module114.$procdff$1546 ($dff).
Removed top 8 bits (of 9) from FF cell module114.$procdff$1547 ($dff).
Removed top 2 bits (of 3) from FF cell module114.$procdff$1549 ($dff).
Removed top 4 bits (of 14) from port Y of cell module114.$and$rtl.v:230$129 ($and).
Removed top 1 bits (of 11) from port A of cell module114.$and$rtl.v:230$129 ($and).
Removed top 4 bits (of 14) from port B of cell module114.$and$rtl.v:230$129 ($and).
Removed top 4 bits (of 14) from port Y of cell module114.$xnor$rtl.v:230$128 ($xnor).
Removed top 19 bits (of 22) from wire module114.$0\reg123[21:0].
Removed top 6 bits (of 14) from wire module114.$0\reg244[13:0].
Removed top 10 bits (of 14) from wire module114.$add$rtl.v:231$136_Y.
Removed top 4 bits (of 14) from wire module114.$and$rtl.v:230$129_Y.
Removed top 20 bits (of 21) from wire module114.$gt$rtl.v:252$178_Y.
Removed top 7 bits (of 8) from wire module114.$le$rtl.v:152$42_Y.
Removed top 12 bits (of 13) from wire module114.$logic_and$rtl.v:194$93_Y.
Removed top 18 bits (of 19) from wire module114.$logic_not$rtl.v:188$85_Y.
Removed top 21 bits (of 22) from wire module114.$ne$rtl.v:248$170_Y.
Removed top 17 bits (of 22) from wire module114.$or$rtl.v:256$196_Y.
Removed top 21 bits (of 34) from wire module114.$pos$rtl.v:255$192_Y.
Removed top 20 bits (of 22) from wire module114.$procmux$1417_Y.
Removed top 19 bits (of 22) from wire module114.$procmux$1421_Y.
Removed top 11 bits (of 13) from wire module114.$procmux$1426_Y.
Removed top 18 bits (of 19) from wire module114.$procmux$1441_Y.
Removed top 8 bits (of 14) from wire module114.$procmux$1447_Y.
Removed top 13 bits (of 14) from wire module114.$reduce_or$rtl.v:223$118_Y.
Removed top 13 bits (of 14) from wire module114.$reduce_or$rtl.v:241$150_Y.
Removed top 13 bits (of 14) from wire module114.$reduce_xor$rtl.v:230$127_Y.
Removed top 6 bits (of 8) from wire module114.$shl$rtl.v:149$38_Y.
Removed top 18 bits (of 34) from wire module114.$sshl$rtl.v:255$190_Y.
Removed top 8 bits (of 16) from wire module114.$ternary$rtl.v:153$47_Y.
Removed top 5 bits (of 15) from wire module114.$ternary$rtl.v:166$68_Y.
Removed top 15 bits (of 20) from wire module114.$ternary$rtl.v:205$98_Y.
Removed top 15 bits (of 20) from wire module114.$ternary$rtl.v:205$99_Y.
Removed top 2 bits (of 16) from wire module114.$ternary$rtl.v:215$105_Y.
Removed top 2 bits (of 16) from wire module114.$ternary$rtl.v:215$106_Y.
Removed top 10 bits (of 14) from wire module114.$ternary$rtl.v:241$154_Y.
Removed top 19 bits (of 22) from wire module114.$ternary$rtl.v:248$172_Y.
Removed top 4 bits (of 16) from wire module114.$ternary$rtl.v:249$177_Y.
Removed top 10 bits (of 21) from wire module114.$ternary$rtl.v:253$181_Y.
Removed top 4 bits (of 14) from wire module114.$xnor$rtl.v:230$128_Y.
Removed top 9 bits (of 17) from wire module114.$xor$rtl.v:243$158_Y.
Removed top 11 bits (of 16) from wire module114.wire172.
Removed top 8 bits (of 19) from mux cell module128.$procmux$1146 ($mux).
Removed top 4 bits (of 7) from mux cell module128.$ternary$rtl.v:1119$933 ($mux).
Removed top 4 bits (of 7) from mux cell module128.$ternary$rtl.v:1132$939 ($mux).
Removed top 8 bits (of 13) from port A of cell module128.$neg$rtl.v:1135$944 ($neg).
Removed top 9 bits (of 13) from mux cell module128.$ternary$rtl.v:1136$949 ($mux).
Removed top 9 bits (of 12) from port B of cell module128.$xnor$rtl.v:1145$959 ($xnor).
Removed top 15 bits (of 16) from port A of cell module128.$gt$rtl.v:1148$969 ($gt).
Removed top 15 bits (of 18) from mux cell module128.$ternary$rtl.v:1157$974 ($mux).
Removed top 15 bits (of 18) from port Y of cell module128.$mul$rtl.v:1157$972 ($mul).
Removed top 18 bits (of 19) from port B of cell module128.$xnor$rtl.v:1162$980 ($xnor).
Removed top 2 bits (of 19) from port Y of cell module128.$xnor$rtl.v:1162$980 ($xnor).
Removed top 25 bits (of 26) from port B of cell module128.$xnor$rtl.v:1170$986 ($xnor).
Removed top 4 bits (of 5) from port B of cell module128.$eq$rtl.v:1171$984 ($eq).
Removed top 15 bits (of 20) from mux cell module128.$ternary$rtl.v:1181$1002 ($mux).
Removed top 10 bits (of 11) from port B of cell module128.$ne$rtl.v:1195$1028 ($ne).
Removed top 1 bits (of 19) from port A of cell module128.$sshr$rtl.v:1186$1015 ($sshr).
Removed top 18 bits (of 19) from port B of cell module128.$xnor$rtl.v:1186$1016 ($xnor).
Removed top 11 bits (of 19) from mux cell module128.$ternary$rtl.v:1211$1036 ($mux).
Removed top 11 bits (of 19) from port A of cell module128.$not$rtl.v:1211$1037 ($not).
Removed top 13 bits (of 19) from mux cell module128.$ternary$rtl.v:1211$1042 ($mux).
Removed top 10 bits (of 11) from port B of cell module128.$xnor$rtl.v:1215$1045 ($xnor).
Removed top 2 bits (of 3) from port B of cell module128.$lt$rtl.v:1224$1064 ($lt).
Removed top 16 bits (of 19) from mux cell module128.$ternary$rtl.v:1225$1065 ($mux).
Removed top 4 bits (of 22) from mux cell module128.$ternary$rtl.v:1225$1066 ($mux).
Removed top 4 bits (of 22) from port Y of cell module128.$sshr$rtl.v:1229$1068 ($sshr).
Removed top 4 bits (of 11) from mux cell module128.$ternary$rtl.v:1237$1074 ($mux).
Removed top 14 bits (of 22) from mux cell module128.$ternary$rtl.v:1240$1085 ($mux).
Removed top 19 bits (of 21) from port A of cell module128.$sshl$rtl.v:1241$1088 ($sshl).
Removed top 11 bits (of 12) from port A of cell module128.$neg$rtl.v:1242$1091 ($neg).
Removed top 4 bits (of 5) from port B of cell module128.$xnor$rtl.v:1249$1100 ($xnor).
Removed top 2 bits (of 20) from mux cell module128.$ternary$rtl.v:1262$1106 ($mux).
Removed top 13 bits (of 16) from mux cell module128.$procmux$1191 ($mux).
Removed top 8 bits (of 11) from FF cell module128.$procdff$1463 ($dff).
Removed top 3 bits (of 10) from FF cell module128.$procdff$1464 ($dff).
Removed top 12 bits (of 15) from FF cell module128.$procdff$1465 ($dff).
Removed top 20 bits (of 21) from FF cell module128.$procdff$1473 ($dff).
Removed top 4 bits (of 18) from FF cell module128.$procdff$1474 ($dff).
Removed top 4 bits (of 7) from mux cell module128.$ternary$rtl.v:1119$931 ($mux).
Removed top 9 bits (of 13) from port Y of cell module128.$neg$rtl.v:1135$944 ($neg).
Removed top 1 bits (of 5) from port A of cell module128.$neg$rtl.v:1135$944 ($neg).
Removed top 9 bits (of 13) from mux cell module128.$ternary$rtl.v:1136$947 ($mux).
Removed top 14 bits (of 21) from mux cell module128.$ternary$rtl.v:1145$958 ($mux).
Removed top 14 bits (of 21) from port A of cell module128.$xnor$rtl.v:1145$959 ($xnor).
Removed top 4 bits (of 26) from port A of cell module128.$xnor$rtl.v:1170$986 ($xnor).
Removed top 4 bits (of 5) from port A of cell module128.$eq$rtl.v:1171$984 ($eq).
Removed top 4 bits (of 18) from mux cell module128.$ternary$rtl.v:1186$1014 ($mux).
Removed top 3 bits (of 10) from port B of cell module128.$shl$rtl.v:1194$1020 ($shl).
Removed top 8 bits (of 11) from port B of cell module128.$xnor$rtl.v:1195$1024 ($xnor).
Removed top 13 bits (of 19) from mux cell module128.$ternary$rtl.v:1211$1039 ($mux).
Removed top 12 bits (of 15) from port B of cell module128.$and$rtl.v:1223$1054 ($and).
Removed top 4 bits (of 15) from port Y of cell module128.$and$rtl.v:1223$1054 ($and).
Removed top 4 bits (of 22) from mux cell module128.$ternary$rtl.v:1224$1061 ($mux).
Removed top 14 bits (of 21) from mux cell module128.$ternary$rtl.v:1237$1076 ($mux).
Removed top 19 bits (of 21) from port A of cell module128.$sshr$rtl.v:1241$1087 ($sshr).
Removed top 3 bits (of 10) from port B of cell module128.$sshr$rtl.v:1241$1087 ($sshr).
Removed top 11 bits (of 15) from mux cell module128.$ternary$rtl.v:1243$1095 ($mux).
Removed top 4 bits (of 18) from mux cell module128.$ternary$rtl.v:1262$1106 ($mux).
Removed top 14 bits (of 22) from mux cell module128.$procmux$1182 ($mux).
Removed top 16 bits (of 19) from mux cell module128.$procmux$1197 ($mux).
Removed top 13 bits (of 19) from port Y of cell module128.$not$rtl.v:1211$1037 ($not).
Removed top 2 bits (of 8) from port A of cell module128.$not$rtl.v:1211$1037 ($not).
Removed top 4 bits (of 22) from mux cell module128.$ternary$rtl.v:1224$1058 ($mux).
Removed top 2 bits (of 8) from mux cell module128.$ternary$rtl.v:1211$1036 ($mux).
Removed top 4 bits (of 22) from mux cell module128.$ternary$rtl.v:1224$1057 ($mux).
Removed top 14 bits (of 22) from FF cell module128.$procdff$1457 ($dff).
Removed top 10 bits (of 18) from mux cell module128.$ternary$rtl.v:1224$1057 ($mux).
Removed top 13 bits (of 22) from port A of cell module128.$not$rtl.v:1229$1067 ($not).
Converting cell module128.$not$rtl.v:1229$1067 ($not) from signed to unsigned.
Removed top 1 bits (of 9) from port A of cell module128.$not$rtl.v:1229$1067 ($not).
Removed top 3 bits (of 10) from wire module128.$0\reg150[9:0].
Removed top 2 bits (of 19) from wire module128.$0\reg152[18:0].
Removed top 3 bits (of 6) from wire module128.$0\reg153[5:0].
Removed top 1 bits (of 11) from wire module128.$0\reg154[10:0].
Removed top 14 bits (of 22) from wire module128.$0\reg157[21:0].
Removed top 4 bits (of 15) from wire module128.$and$rtl.v:1223$1054_Y.
Removed top 14 bits (of 15) from wire module128.$gt$rtl.v:1148$969_Y.
Removed top 11 bits (of 12) from wire module128.$le$rtl.v:1242$1090_Y.
Removed top 10 bits (of 11) from wire module128.$logic_and$rtl.v:1215$1044_Y.
Removed top 2 bits (of 3) from wire module128.$logic_not$rtl.v:1224$1063_Y.
Removed top 19 bits (of 20) from wire module128.$logic_not$rtl.v:1262$1103_Y.
Removed top 4 bits (of 5) from wire module128.$logic_or$rtl.v:1171$983_Y.
Removed top 18 bits (of 19) from wire module128.$logic_or$rtl.v:1249$1101_Y.
Removed top 15 bits (of 18) from wire module128.$mul$rtl.v:1157$972_Y.
Removed top 13 bits (of 19) from wire module128.$not$rtl.v:1211$1037_Y.
Removed top 8 bits (of 19) from wire module128.$procmux$1146_Y.
Removed top 13 bits (of 16) from wire module128.$procmux$1191_Y.
Removed top 16 bits (of 19) from wire module128.$procmux$1197_Y.
Removed top 10 bits (of 11) from wire module128.$reduce_and$rtl.v:1213$1043_Y.
Removed top 15 bits (of 16) from wire module128.$reduce_xnor$rtl.v:1254$1102_Y.
Removed top 4 bits (of 22) from wire module128.$sshr$rtl.v:1229$1068_Y.
Removed top 15 bits (of 18) from wire module128.$ternary$rtl.v:1157$974_Y.
Removed top 15 bits (of 20) from wire module128.$ternary$rtl.v:1181$1002_Y.
Removed top 4 bits (of 18) from wire module128.$ternary$rtl.v:1186$1014_Y.
Removed top 13 bits (of 19) from wire module128.$ternary$rtl.v:1211$1039_Y.
Removed top 13 bits (of 19) from wire module128.$ternary$rtl.v:1211$1042_Y.
Removed top 21 bits (of 22) from wire module128.$ternary$rtl.v:1224$1057_Y.
Removed top 4 bits (of 11) from wire module128.$ternary$rtl.v:1237$1074_Y.
Removed top 14 bits (of 21) from wire module128.$ternary$rtl.v:1237$1076_Y.
Removed top 14 bits (of 22) from wire module128.$ternary$rtl.v:1240$1085_Y.
Removed top 11 bits (of 15) from wire module128.$ternary$rtl.v:1243$1095_Y.
Removed top 13 bits (of 19) from wire module128.$xnor$rtl.v:1186$1016_Y.
Removed top 10 bits (of 11) from wire module128.wire148.
Removed top 20 bits (of 21) from wire module128.wire149.
Removed top 6 bits (of 20) from wire module128.wire163.
Removed top 9 bits (of 10) from wire module128.wire167.
Removed top 15 bits (of 16) from port A of cell module13.$sshl$rtl.v:756$695 ($sshl).
Removed top 20 bits (of 22) from port A of cell module13.$ge$rtl.v:763$718 ($ge).
Removed top 6 bits (of 22) from port A of cell module13.$mul$rtl.v:763$717 ($mul).
Removed top 11 bits (of 22) from port B of cell module13.$mul$rtl.v:763$717 ($mul).
Removed top 3 bits (of 18) from port Y of cell module13.$sshl$rtl.v:771$723 ($sshl).
Removed top 17 bits (of 18) from wire module13.$ge$rtl.v:763$718_Y.
Removed top 15 bits (of 16) from wire module13.$logic_not$rtl.v:757$701_Y.
Removed top 15 bits (of 16) from wire module13.$reduce_xor$rtl.v:755$690_Y.
Removed top 1 bits (of 6) from wire module13.wire23.
Removed top 4 bits (of 5) from wire module13.wire27.
Removed top 3 bits (of 18) from wire module13.wire28.
Removed top 2 bits (of 9) from mux cell module175.$ternary$rtl.v:997$838 ($mux).
Removed top 13 bits (of 22) from port A of cell module175.$or$rtl.v:997$843 ($or).
Removed top 13 bits (of 22) from port Y of cell module175.$or$rtl.v:997$843 ($or).
Removed top 3 bits (of 22) from mux cell module175.$ternary$rtl.v:1004$852 ($mux).
Removed top 3 bits (of 22) from port A of cell module175.$ge$rtl.v:1005$858 ($ge).
Removed top 19 bits (of 20) from port A of cell module175.$neg$rtl.v:1007$863 ($neg).
Removed top 1 bits (of 20) from port Y of cell module175.$and$rtl.v:1019$882 ($and).
Removed top 11 bits (of 18) from mux cell module175.$ternary$rtl.v:1023$891 ($mux).
Removed top 11 bits (of 18) from mux cell module175.$ternary$rtl.v:1023$893 ($mux).
Removed top 4 bits (of 18) from mux cell module175.$ternary$rtl.v:1023$895 ($mux).
Removed top 13 bits (of 14) from port A of cell module175.$xnor$rtl.v:1027$911 ($xnor).
Removed top 13 bits (of 14) from port B of cell module175.$xnor$rtl.v:1027$911 ($xnor).
Removed top 5 bits (of 8) from port B of cell module175.$lt$rtl.v:1031$912 ($lt).
Removed top 2 bits (of 16) from port A of cell module175.$or$rtl.v:1032$913 ($or).
Removed top 13 bits (of 19) from mux cell module175.$ternary$rtl.v:1032$914 ($mux).
Removed top 4 bits (of 6) from FF cell module175.$procdff$1476 ($dff).
Removed top 13 bits (of 14) from FF cell module175.$procdff$1477 ($dff).
Removed top 7 bits (of 15) from FF cell module175.$procdff$1478 ($dff).
Removed top 5 bits (of 6) from FF cell module175.$procdff$1480 ($dff).
Removed top 13 bits (of 14) from port A of cell module175.$and$rtl.v:1019$882 ($and).
Removed top 7 bits (of 14) from mux cell module175.$ternary$rtl.v:1023$895 ($mux).
Removed top 4 bits (of 6) from port B of cell module175.$xor$rtl.v:1027$902 ($xor).
Removed top 7 bits (of 14) from port A of cell module175.$or$rtl.v:1032$913 ($or).
Removed top 13 bits (of 19) from port Y of cell module175.$or$rtl.v:1032$913 ($or).
Removed top 1 bits (of 7) from port A of cell module175.$or$rtl.v:1032$913 ($or).
Removed top 13 bits (of 19) from port B of cell module175.$or$rtl.v:1032$913 ($or).
Removed top 13 bits (of 14) from wire module175.$0\reg186[13:0].
Removed top 4 bits (of 6) from wire module175.$0\reg187[5:0].
Removed top 1 bits (of 20) from wire module175.$and$rtl.v:1019$882_Y.
Removed top 13 bits (of 14) from wire module175.$logic_and$rtl.v:1027$910_Y.
Removed top 21 bits (of 22) from wire module175.$logic_not$rtl.v:1005$855_Y.
Removed top 8 bits (of 9) from wire module175.$ne$rtl.v:997$836_Y.
Removed top 13 bits (of 19) from wire module175.$or$rtl.v:1032$913_Y.
Removed top 19 bits (of 20) from wire module175.$reduce_and$rtl.v:1007$862_Y.
Removed top 17 bits (of 18) from wire module175.$reduce_and$rtl.v:1021$888_Y.
Removed top 6 bits (of 7) from wire module175.$reduce_or$rtl.v:1007$859_Y.
Removed top 13 bits (of 14) from wire module175.$reduce_xor$rtl.v:1025$900_Y.
Removed top 3 bits (of 22) from wire module175.$ternary$rtl.v:1004$852_Y.
Removed top 11 bits (of 18) from wire module175.$ternary$rtl.v:1023$891_Y.
Removed top 11 bits (of 18) from wire module175.$ternary$rtl.v:1023$893_Y.
Removed top 11 bits (of 18) from wire module175.$ternary$rtl.v:1023$895_Y.
Removed top 4 bits (of 20) from wire module175.$ternary$rtl.v:1027$907_Y.
Removed top 13 bits (of 19) from wire module175.$ternary$rtl.v:1032$914_Y.
Removed top 2 bits (of 9) from wire module175.$ternary$rtl.v:997$838_Y.
Removed top 13 bits (of 22) from wire module175.wire181.
Removed top 9 bits (of 16) from wire module175.wire188.
Removed top 3 bits (of 14) from wire module175.wire189.
Removed top 15 bits (of 16) from wire module175.wire190.
Removed top 20 bits (of 22) from wire module175.wire192.
Removed top 12 bits (of 18) from wire module175.wire193.
Removed top 15 bits (of 16) from port A of cell module200.$xnor$rtl.v:849$744 ($xnor).
Removed top 10 bits (of 16) from port Y of cell module200.$neg$rtl.v:849$745 ($neg).
Removed top 10 bits (of 16) from port A of cell module200.$neg$rtl.v:849$745 ($neg).
Removed top 1 bits (of 11) from mux cell module200.$ternary$rtl.v:861$756 ($mux).
Removed top 1 bits (of 2) from port B of cell module200.$sshr$rtl.v:873$757 ($sshr).
Removed top 28 bits (of 31) from port B of cell module200.$xnor$rtl.v:884$766 ($xnor).
Removed top 24 bits (of 31) from port Y of cell module200.$xnor$rtl.v:884$766 ($xnor).
Removed top 1 bits (of 6) from mux cell module200.$ternary$rtl.v:921$775 ($mux).
Removed top 1 bits (of 6) from port B of cell module200.$xnor$rtl.v:921$776 ($xnor).
Removed top 4 bits (of 19) from mux cell module200.$ternary$rtl.v:923$783 ($mux).
Removed top 2 bits (of 7) from port A of cell module200.$sub$rtl.v:933$789 ($sub).
Removed top 17 bits (of 18) from mux cell module200.$ternary$rtl.v:934$794 ($mux).
Removed top 5 bits (of 14) from port Y of cell module200.$shl$rtl.v:942$800 ($shl).
Removed top 7 bits (of 14) from port B of cell module200.$ge$rtl.v:947$809 ($ge).
Removed top 17 bits (of 18) from port A of cell module200.$sshr$rtl.v:948$810 ($sshr).
Removed top 13 bits (of 15) from port A of cell module200.$eq$rtl.v:950$815 ($eq).
Removed top 2 bits (of 8) from FF cell module200.$procdff$1481 ($dff).
Removed top 2 bits (of 3) from FF cell module200.$procdff$1482 ($dff).
Removed top 4 bits (of 19) from FF cell module200.$procdff$1487 ($dff).
Removed top 14 bits (of 15) from FF cell module200.$procdff$1489 ($dff).
Removed top 5 bits (of 6) from FF cell module200.$procdff$1491 ($dff).
Removed top 10 bits (of 11) from FF cell module200.$procdff$1493 ($dff).
Removed top 11 bits (of 12) from FF cell module200.$procdff$1494 ($dff).
Removed top 2 bits (of 5) from FF cell module200.$procdff$1495 ($dff).
Removed top 10 bits (of 16) from port Y of cell module200.$xnor$rtl.v:849$744 ($xnor).
Removed top 9 bits (of 10) from mux cell module200.$ternary$rtl.v:861$756 ($mux).
Removed top 5 bits (of 6) from mux cell module200.$ternary$rtl.v:920$769 ($mux).
Removed top 14 bits (of 15) from mux cell module200.$ternary$rtl.v:923$781 ($mux).
Removed top 14 bits (of 15) from mux cell module200.$ternary$rtl.v:923$783 ($mux).
Removed top 14 bits (of 15) from port B of cell module200.$shl$rtl.v:945$803 ($shl).
Removed top 11 bits (of 12) from port B of cell module200.$add$rtl.v:948$811 ($add).
Removed top 3 bits (of 12) from port Y of cell module200.$add$rtl.v:948$811 ($add).
Removed top 14 bits (of 15) from FF cell module200.$procdff$1487 ($dff).
Removed top 9 bits (of 10) from wire module200.$0\reg211[9:0].
Removed top 5 bits (of 6) from wire module200.$0\reg212[5:0].
Removed top 14 bits (of 15) from wire module200.$0\reg214[14:0].
Removed top 18 bits (of 19) from wire module200.$0\reg216[18:0].
Removed top 15 bits (of 16) from wire module200.$logic_not$rtl.v:848$741_Y.
Removed top 18 bits (of 19) from wire module200.$logic_not$rtl.v:922$778_Y.
Removed top 17 bits (of 18) from wire module200.$reduce_xnor$rtl.v:948$812_Y.
Removed top 5 bits (of 6) from wire module200.$ternary$rtl.v:920$769_Y.
Removed top 1 bits (of 6) from wire module200.$ternary$rtl.v:921$775_Y.
Removed top 14 bits (of 15) from wire module200.$ternary$rtl.v:923$781_Y.
Removed top 17 bits (of 18) from wire module200.$ternary$rtl.v:934$794_Y.
Removed top 10 bits (of 16) from wire module200.$xnor$rtl.v:849$744_Y.
Removed top 24 bits (of 31) from wire module200.$xnor$rtl.v:884$766_Y.
Removed top 1 bits (of 6) from wire module200.$xnor$rtl.v:921$776_Y.
Removed top 17 bits (of 18) from wire module200.wire206.
Removed top 1 bits (of 6) from wire module200.wire207.
Removed top 9 bits (of 10) from wire module200.wire224.
Removed top 6 bits (of 7) from wire module200.wire225.
Removed top 10 bits (of 11) from wire module200.wire226.
Removed top 9 bits (of 10) from wire module200.wire227.
Removed top 14 bits (of 15) from wire module200.wire228.
Removed top 7 bits (of 8) from wire module200.wire229.
Removed top 6 bits (of 7) from wire module200.wire231.
Removed top 9 bits (of 10) from wire module200.wire232.
Removed top 7 bits (of 8) from port A of cell module37.$ge$rtl.v:489$292 ($ge).
Removed top 5 bits (of 6) from port A of cell module37.$sshl$rtl.v:487$285 ($sshl).
Removed top 19 bits (of 20) from port B of cell module37.$and$rtl.v:487$287 ($and).
Removed top 7 bits (of 8) from port A of cell module37.$xnor$rtl.v:489$291 ($xnor).
Removed top 17 bits (of 18) from port B of cell module37.$le$rtl.v:495$306 ($le).
Removed top 17 bits (of 32) from mux cell module37.$ternary$rtl.v:508$325 ($mux).
Removed top 10 bits (of 17) from port B of cell module37.$xnor$rtl.v:514$331 ($xnor).
Removed top 12 bits (of 17) from port Y of cell module37.$xnor$rtl.v:514$331 ($xnor).
Removed top 17 bits (of 18) from port B of cell module37.$and$rtl.v:516$333 ($and).
Removed top 11 bits (of 18) from port Y of cell module37.$not$rtl.v:516$336 ($not).
Removed top 11 bits (of 18) from port A of cell module37.$not$rtl.v:516$336 ($not).
Removed top 19 bits (of 20) from mux cell module37.$ternary$rtl.v:524$355 ($mux).
Removed top 2 bits (of 7) from port A of cell module37.$neg$rtl.v:526$361 ($neg).
Removed top 21 bits (of 22) from port A of cell module37.$le$rtl.v:533$369 ($le).
Removed top 14 bits (of 20) from mux cell module37.$ternary$rtl.v:534$373 ($mux).
Removed top 21 bits (of 22) from port B of cell module37.$and$rtl.v:539$384 ($and).
Removed top 7 bits (of 22) from mux cell module37.$ternary$rtl.v:540$391 ($mux).
Removed top 2 bits (of 7) from port Y of cell module37.$not$rtl.v:550$398 ($not).
Removed top 2 bits (of 7) from port A of cell module37.$not$rtl.v:550$398 ($not).
Removed top 6 bits (of 7) from port A of cell module37.$neg$rtl.v:551$400 ($neg).
Removed top 3 bits (of 11) from mux cell module37.$ternary$rtl.v:553$409 ($mux).
Removed top 4 bits (of 22) from port A of cell module37.$sshr$rtl.v:558$417 ($sshr).
Removed top 21 bits (of 22) from port B of cell module37.$add$rtl.v:558$420 ($add).
Removed top 5 bits (of 22) from port Y of cell module37.$xor$rtl.v:558$421 ($xor).
Removed top 5 bits (of 22) from port A of cell module37.$xor$rtl.v:558$421 ($xor).
Removed top 5 bits (of 22) from port B of cell module37.$xor$rtl.v:558$421 ($xor).
Removed top 3 bits (of 8) from mux cell module37.$ternary$rtl.v:567$429 ($mux).
Removed top 19 bits (of 22) from mux cell module37.$ternary$rtl.v:575$450 ($mux).
Removed top 16 bits (of 19) from port A of cell module37.$not$rtl.v:580$452 ($not).
Removed top 1 bits (of 11) from mux cell module37.$ternary$rtl.v:587$459 ($mux).
Removed top 1 bits (of 11) from port B of cell module37.$sshr$rtl.v:587$460 ($sshr).
Removed top 10 bits (of 20) from port A of cell module37.$xor$rtl.v:589$462 ($xor).
Removed top 10 bits (of 20) from port B of cell module37.$xor$rtl.v:589$462 ($xor).
Removed top 10 bits (of 20) from port Y of cell module37.$xor$rtl.v:589$462 ($xor).
Removed top 19 bits (of 20) from port A of cell module37.$xor$rtl.v:589$463 ($xor).
Removed top 10 bits (of 20) from port B of cell module37.$xor$rtl.v:589$463 ($xor).
Removed top 10 bits (of 20) from port Y of cell module37.$xor$rtl.v:589$463 ($xor).
Removed top 10 bits (of 20) from mux cell module37.$ternary$rtl.v:589$466 ($mux).
Removed top 3 bits (of 20) from mux cell module37.$ternary$rtl.v:589$469 ($mux).
Removed top 11 bits (of 13) from port A of cell module37.$xor$rtl.v:594$475 ($xor).
Removed top 5 bits (of 13) from port Y of cell module37.$xor$rtl.v:594$475 ($xor).
Removed top 12 bits (of 19) from mux cell module37.$ternary$rtl.v:595$477 ($mux).
Removed top 36 bits (of 42) from port Y of cell module37.$sshr$rtl.v:595$480 ($sshr).
Removed top 7 bits (of 10) from port A of cell module37.$ne$rtl.v:607$495 ($ne).
Removed top 9 bits (of 10) from port A of cell module37.$neg$rtl.v:607$494 ($neg).
Removed top 11 bits (of 13) from mux cell module37.$ternary$rtl.v:607$498 ($mux).
Removed top 15 bits (of 20) from port A of cell module37.$neg$rtl.v:621$510 ($neg).
Removed top 3 bits (of 22) from mux cell module37.$ternary$rtl.v:631$519 ($mux).
Removed top 3 bits (of 22) from port A of cell module37.$and$rtl.v:631$520 ($and).
Removed top 3 bits (of 22) from port Y of cell module37.$and$rtl.v:631$520 ($and).
Removed top 4 bits (of 8) from mux cell module37.$ternary$rtl.v:636$538 ($mux).
Removed top 17 bits (of 20) from port A of cell module37.$xnor$rtl.v:632$524 ($xnor).
Removed top 19 bits (of 20) from port A of cell module37.$xnor$rtl.v:632$525 ($xnor).
Removed top 2 bits (of 20) from port Y of cell module37.$add$rtl.v:632$526 ($add).
Removed top 2 bits (of 20) from port A of cell module37.$add$rtl.v:632$526 ($add).
Removed top 4 bits (of 15) from port A of cell module37.$xnor$rtl.v:634$531 ($xnor).
Removed top 7 bits (of 8) from port A of cell module37.$gt$rtl.v:640$543 ($gt).
Removed top 18 bits (of 22) from port Y of cell module37.$not$rtl.v:641$547 ($not).
Removed top 18 bits (of 22) from port A of cell module37.$not$rtl.v:641$547 ($not).
Removed top 5 bits (of 11) from mux cell module37.$ternary$rtl.v:647$555 ($mux).
Removed top 15 bits (of 18) from mux cell module37.$ternary$rtl.v:647$563 ($mux).
Removed top 6 bits (of 17) from mux cell module37.$ternary$rtl.v:653$570 ($mux).
Removed top 7 bits (of 22) from mux cell module37.$ternary$rtl.v:667$591 ($mux).
Removed top 5 bits (of 17) from port Y of cell module37.$add$rtl.v:673$592 ($add).
Removed top 5 bits (of 17) from port B of cell module37.$add$rtl.v:673$592 ($add).
Removed top 11 bits (of 18) from port B of cell module37.$eq$rtl.v:676$597 ($eq).
Removed top 4 bits (of 22) from mux cell module37.$ternary$rtl.v:688$613 ($mux).
Removed top 1 bits (of 21) from port B of cell module37.$mul$rtl.v:688$614 ($mul).
Removed top 14 bits (of 22) from port B of cell module37.$gt$rtl.v:688$615 ($gt).
Removed top 12 bits (of 42) from port A of cell module37.$xnor$rtl.v:689$619 ($xnor).
Removed top 29 bits (of 42) from port B of cell module37.$xnor$rtl.v:689$619 ($xnor).
Removed top 17 bits (of 18) from mux cell module37.$ternary$rtl.v:697$634 ($mux).
Removed top 8 bits (of 18) from mux cell module37.$ternary$rtl.v:697$636 ($mux).
Removed top 10 bits (of 18) from mux cell module37.$ternary$rtl.v:700$644 ($mux).
Removed top 10 bits (of 18) from mux cell module37.$ternary$rtl.v:700$646 ($mux).
Removed top 14 bits (of 20) from mux cell module37.$ternary$rtl.v:713$649 ($mux).
Removed top 14 bits (of 19) from mux cell module37.$procmux$1285 ($mux).
Removed top 4 bits (of 22) from mux cell module37.$procmux$1309 ($mux).
Removed top 7 bits (of 22) from mux cell module37.$procmux$1313 ($mux).
Removed top 8 bits (of 18) from mux cell module37.$procmux$1324 ($mux).
Removed top 1 bits (of 12) from mux cell module37.$procmux$1318 ($mux).
Removed top 8 bits (of 18) from mux cell module37.$procmux$1327 ($mux).
Removed top 14 bits (of 18) from mux cell module37.$procmux$1355 ($mux).
Removed top 11 bits (of 19) from mux cell module37.$procmux$1390 ($mux).
Removed top 8 bits (of 18) from FF cell module37.$procdff$1498 ($dff).
Removed top 18 bits (of 19) from FF cell module37.$procdff$1501 ($dff).
Removed top 11 bits (of 13) from FF cell module37.$procdff$1511 ($dff).
Removed top 3 bits (of 4) from FF cell module37.$procdff$1512 ($dff).
Removed top 11 bits (of 12) from FF cell module37.$procdff$1514 ($dff).
Removed top 7 bits (of 9) from FF cell module37.$procdff$1515 ($dff).
Removed top 10 bits (of 11) from FF cell module37.$procdff$1516 ($dff).
Removed top 19 bits (of 20) from FF cell module37.$procdff$1525 ($dff).
Removed top 11 bits (of 18) from port Y of cell module37.$or$rtl.v:516$335 ($or).
Removed top 11 bits (of 18) from port A of cell module37.$or$rtl.v:516$335 ($or).
Removed top 11 bits (of 18) from port B of cell module37.$or$rtl.v:516$335 ($or).
Removed top 2 bits (of 7) from port Y of cell module37.$sshl$rtl.v:550$397 ($sshl).
Removed top 5 bits (of 22) from port Y of cell module37.$add$rtl.v:558$420 ($add).
Removed top 5 bits (of 22) from port A of cell module37.$add$rtl.v:558$420 ($add).
Removed top 19 bits (of 22) from mux cell module37.$ternary$rtl.v:575$449 ($mux).
Removed top 2 bits (of 3) from port A of cell module37.$ne$rtl.v:607$495 ($ne).
Removed top 3 bits (of 4) from mux cell module37.$ternary$rtl.v:636$538 ($mux).
Removed top 2 bits (of 20) from port Y of cell module37.$xnor$rtl.v:632$525 ($xnor).
Removed top 10 bits (of 11) from port A of cell module37.$lt$rtl.v:636$534 ($lt).
Removed top 18 bits (of 22) from mux cell module37.$ternary$rtl.v:641$546 ($mux).
Removed top 11 bits (of 12) from port A of cell module37.$ne$rtl.v:647$558 ($ne).
Removed top 9 bits (of 13) from mux cell module37.$ternary$rtl.v:689$618 ($mux).
Removed top 8 bits (of 18) from mux cell module37.$ternary$rtl.v:688$613 ($mux).
Removed top 5 bits (of 11) from FF cell module37.$procdff$1513 ($dff).
Removed top 1 bits (of 2) from FF cell module37.$procdff$1515 ($dff).
Removed top 11 bits (of 18) from port Y of cell module37.$and$rtl.v:516$333 ($and).
Removed top 11 bits (of 18) from port A of cell module37.$and$rtl.v:516$333 ($and).
Removed top 11 bits (of 18) from port Y of cell module37.$not$rtl.v:516$334 ($not).
Removed top 11 bits (of 18) from port A of cell module37.$not$rtl.v:516$334 ($not).
Removed top 5 bits (of 22) from port Y of cell module37.$sshr$rtl.v:558$417 ($sshr).
Removed top 19 bits (of 22) from port Y of cell module37.$xnor$rtl.v:574$444 ($xnor).
Removed top 19 bits (of 22) from mux cell module37.$ternary$rtl.v:575$447 ($mux).
Removed top 5 bits (of 11) from port B of cell module37.$add$rtl.v:652$566 ($add).
Removed top 11 bits (of 18) from port Y of cell module37.$neg$rtl.v:516$332 ($neg).
Removed top 11 bits (of 18) from port A of cell module37.$neg$rtl.v:516$332 ($neg).
Removed top 10 bits (of 11) from wire module37.$0\reg71[10:0].
Removed top 3 bits (of 4) from wire module37.$0\reg75[3:0].
Removed top 11 bits (of 13) from wire module37.$0\reg76[12:0].
Removed top 18 bits (of 19) from wire module37.$0\reg86[18:0].
Removed top 8 bits (of 18) from wire module37.$0\reg89[17:0].
Removed top 5 bits (of 22) from wire module37.$add$rtl.v:558$420_Y.
Removed top 2 bits (of 20) from wire module37.$add$rtl.v:632$526_Y.
Removed top 5 bits (of 17) from wire module37.$add$rtl.v:673$592_Y.
Removed top 11 bits (of 18) from wire module37.$and$rtl.v:516$333_Y.
Removed top 3 bits (of 22) from wire module37.$and$rtl.v:631$520_Y.
Removed top 18 bits (of 19) from wire module37.$gt$rtl.v:640$543_Y.
Removed top 7 bits (of 8) from wire module37.$logic_and$rtl.v:636$537_Y.
Removed top 7 bits (of 8) from wire module37.$logic_not$rtl.v:489$289_Y.
Removed top 17 bits (of 18) from wire module37.$logic_not$rtl.v:647$561_Y.
Removed top 1 bits (of 2) from wire module37.$logic_not$rtl.v:660$580_Y.
Removed top 8 bits (of 9) from wire module37.$logic_or$rtl.v:493$301_Y.
Removed top 7 bits (of 8) from wire module37.$lt$rtl.v:636$534_Y.
Removed top 19 bits (of 20) from wire module37.$ne$rtl.v:487$286_Y.
Removed top 12 bits (of 13) from wire module37.$ne$rtl.v:607$495_Y.
Removed top 11 bits (of 12) from wire module37.$ne$rtl.v:647$558_Y.
Removed top 11 bits (of 18) from wire module37.$neg$rtl.v:516$332_Y.
Removed top 18 bits (of 22) from wire module37.$not$rtl.v:641$547_Y.
Removed top 8 bits (of 18) from wire module37.$pos$rtl.v:697$637_Y.
Removed top 14 bits (of 19) from wire module37.$procmux$1285_Y.
Removed top 4 bits (of 22) from wire module37.$procmux$1309_Y.
Removed top 7 bits (of 22) from wire module37.$procmux$1313_Y.
Removed top 1 bits (of 12) from wire module37.$procmux$1318_Y.
Removed top 8 bits (of 18) from wire module37.$procmux$1324_Y.
Removed top 14 bits (of 18) from wire module37.$procmux$1355_Y.
Removed top 11 bits (of 19) from wire module37.$procmux$1390_Y.
Removed top 25 bits (of 26) from wire module37.$reduce_or$rtl.v:695$627_Y.
Removed top 5 bits (of 6) from wire module37.$reduce_xnor$rtl.v:487$284_Y.
Removed top 17 bits (of 18) from wire module37.$reduce_xnor$rtl.v:495$305_Y.
Removed top 10 bits (of 11) from wire module37.$reduce_xnor$rtl.v:657$571_Y.
Removed top 17 bits (of 18) from wire module37.$reduce_xnor$rtl.v:697$631_Y.
Removed top 17 bits (of 32) from wire module37.$ternary$rtl.v:508$325_Y.
Removed top 3 bits (of 22) from wire module37.$ternary$rtl.v:631$519_Y.
Removed top 5 bits (of 11) from wire module37.$ternary$rtl.v:647$555_Y.
Removed top 15 bits (of 18) from wire module37.$ternary$rtl.v:647$563_Y.
Removed top 6 bits (of 17) from wire module37.$ternary$rtl.v:653$570_Y.
Removed top 7 bits (of 22) from wire module37.$ternary$rtl.v:667$591_Y.
Removed top 9 bits (of 13) from wire module37.$ternary$rtl.v:689$618_Y.
Removed top 2 bits (of 26) from wire module37.$ternary$rtl.v:695$629_Y.
Removed top 10 bits (of 18) from wire module37.$ternary$rtl.v:700$644_Y.
Removed top 10 bits (of 18) from wire module37.$ternary$rtl.v:700$646_Y.
Removed top 14 bits (of 17) from wire module37.$xnor$rtl.v:514$331_Y.
Removed top 1 bits (of 21) from wire module37.wire42.
Removed top 12 bits (of 13) from wire module37.wire45.
Removed top 8 bits (of 11) from wire module37.wire66.
Removed top 3 bits (of 20) from wire module37.wire69.
Removed top 15 bits (of 21) from wire module37.wire93.
Removed top 4 bits (of 5) from wire module37.wire96.
Removed top 3 bits (of 22) from port Y of cell module5.$not$rtl.v:319$225 ($not).
Removed top 3 bits (of 22) from port A of cell module5.$not$rtl.v:319$225 ($not).
Removed top 9 bits (of 15) from mux cell module5.$ternary$rtl.v:329$243 ($mux).
Removed top 7 bits (of 18) from mux cell module5.$ternary$rtl.v:333$253 ($mux).
Removed top 2 bits (of 22) from port A of cell module5.$add$rtl.v:334$258 ($add).
Removed top 7 bits (of 18) from port A of cell module5.$mul$rtl.v:334$260 ($mul).
Removed top 17 bits (of 18) from port B of cell module5.$mul$rtl.v:334$260 ($mul).
Removed top 6 bits (of 18) from port Y of cell module5.$mul$rtl.v:334$260 ($mul).
Removed top 6 bits (of 8) from port A of cell module5.$and$rtl.v:351$269 ($and).
Removed top 5 bits (of 8) from port Y of cell module5.$and$rtl.v:351$269 ($and).
Removed top 5 bits (of 8) from port B of cell module5.$and$rtl.v:351$269 ($and).
Removed top 1 bits (of 20) from port B of cell module5.$ge$rtl.v:363$275 ($ge).
Removed top 15 bits (of 16) from FF cell module5.$procdff$1533 ($dff).
Removed top 21 bits (of 22) from FF cell module5.$procdff$1534 ($dff).
Removed top 1 bits (of 6) from FF cell module5.$procdff$1535 ($dff).
Removed top 4 bits (of 5) from FF cell module5.$procdff$1537 ($dff).
Removed top 9 bits (of 12) from FF cell module5.$procdff$1538 ($dff).
Removed top 7 bits (of 15) from FF cell module5.$procdff$1539 ($dff).
Removed top 3 bits (of 22) from mux cell module5.$ternary$rtl.v:319$224 ($mux).
Removed top 9 bits (of 15) from port Y of cell module5.$and$rtl.v:328$241 ($and).
Removed top 1 bits (of 7) from port A of cell module5.$and$rtl.v:328$241 ($and).
Removed top 9 bits (of 15) from port B of cell module5.$and$rtl.v:328$241 ($and).
Removed top 9 bits (of 15) from mux cell module5.$ternary$rtl.v:328$240 ($mux).
Removed top 9 bits (of 15) from mux cell module5.$ternary$rtl.v:328$238 ($mux).
Removed top 8 bits (of 14) from mux cell module5.$ternary$rtl.v:328$236 ($mux).
Removed top 21 bits (of 22) from wire module5.$0\reg109[21:0].
Removed top 9 bits (of 15) from wire module5.$and$rtl.v:328$241_Y.
Removed top 17 bits (of 18) from wire module5.$reduce_or$rtl.v:334$259_Y.
Removed top 11 bits (of 12) from wire module5.$reduce_xnor$rtl.v:350$263_Y.
Removed top 7 bits (of 18) from wire module5.$ternary$rtl.v:333$253_Y.
Removed top 8 bits (of 16) from port A of cell top.$xnor$rtl.v:54$4 ($xnor).
Removed top 17 bits (of 18) from port B of cell top.$and$rtl.v:54$5 ($and).
Removed top 11 bits (of 12) from port A of cell top.$sub$rtl.v:54$7 ($sub).
Removed top 22 bits (of 27) from mux cell top.$ternary$rtl.v:54$8 ($mux).
Removed top 9 bits (of 10) from port A of cell top.$ge$rtl.v:58$15 ($ge).
Removed top 9 bits (of 10) from port B of cell top.$ge$rtl.v:58$15 ($ge).
Removed top 5 bits (of 16) from mux cell top.$ternary$rtl.v:66$22 ($mux).
Removed top 22 bits (of 27) from port Y of cell top.$and$rtl.v:54$5 ($and).
Removed top 22 bits (of 27) from port A of cell top.$and$rtl.v:54$5 ($and).
Removed top 7 bits (of 12) from port Y of cell top.$sub$rtl.v:54$7 ($sub).
Removed top 7 bits (of 12) from port B of cell top.$sub$rtl.v:54$7 ($sub).
Removed top 11 bits (of 16) from port Y of cell top.$xnor$rtl.v:54$4 ($xnor).
Removed top 22 bits (of 27) from wire top.$and$rtl.v:54$5_Y.
Removed top 11 bits (of 16) from wire top.$xnor$rtl.v:54$4_Y.
Removed top 11 bits (of 19) from wire top.wire254.
Removed top 9 bits (of 10) from wire top.wire258.
Removed top 3 bits (of 4) from wire top.wire259.
Removed top 4 bits (of 5) from wire top.wire260.
Removed top 19 bits (of 20) from wire top.wire261.
Removed top 10 bits (of 11) from wire top.wire263.
Removed top 9 bits (of 10) from wire top.wire264.
Removed top 6 bits (of 17) from wire top.wire268.
Removed top 17 bits (of 18) from wire top.wire4.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 209 unused wires.
<suppressed ~9 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~816 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module module114:
  creating $macc model for $add$rtl.v:231$136 ($add).
  creating $macc model for $mul$rtl.v:167$64 ($mul).
  creating $macc model for $mul$rtl.v:230$126 ($mul).
  creating $macc model for $neg$rtl.v:206$100 ($neg).
  creating $macc model for $sub$rtl.v:215$110 ($sub).
  creating $macc model for $sub$rtl.v:244$162 ($sub).
  creating $alu model for $macc $sub$rtl.v:244$162.
  creating $alu model for $macc $sub$rtl.v:215$110.
  creating $alu model for $macc $neg$rtl.v:206$100.
  creating $alu model for $macc $add$rtl.v:231$136.
  creating $macc cell for $mul$rtl.v:167$64: $auto$alumacc.cc:354:replace_macc$1750
  creating $macc cell for $mul$rtl.v:230$126: $auto$alumacc.cc:354:replace_macc$1751
  creating $alu model for $gt$rtl.v:184$80 ($gt): new $alu
  creating $alu model for $gt$rtl.v:207$101 ($gt): new $alu
  creating $alu model for $gt$rtl.v:252$178 ($gt): new $alu
  creating $alu model for $le$rtl.v:152$42 ($le): new $alu
  creating $alu model for $le$rtl.v:167$65 ($le): new $alu
  creating $alu model for $le$rtl.v:249$175 ($le): new $alu
  creating $alu model for $le$rtl.v:250$184 ($le): new $alu
  creating $alu cell for $le$rtl.v:250$184: $auto$alumacc.cc:474:replace_alu$1759
  creating $alu cell for $le$rtl.v:249$175: $auto$alumacc.cc:474:replace_alu$1768
  creating $alu cell for $le$rtl.v:167$65: $auto$alumacc.cc:474:replace_alu$1783
  creating $alu cell for $le$rtl.v:152$42: $auto$alumacc.cc:474:replace_alu$1792
  creating $alu cell for $gt$rtl.v:252$178: $auto$alumacc.cc:474:replace_alu$1803
  creating $alu cell for $gt$rtl.v:207$101: $auto$alumacc.cc:474:replace_alu$1814
  creating $alu cell for $gt$rtl.v:184$80: $auto$alumacc.cc:474:replace_alu$1819
  creating $alu cell for $add$rtl.v:231$136: $auto$alumacc.cc:474:replace_alu$1830
  creating $alu cell for $neg$rtl.v:206$100: $auto$alumacc.cc:474:replace_alu$1833
  creating $alu cell for $sub$rtl.v:215$110: $auto$alumacc.cc:474:replace_alu$1836
  creating $alu cell for $sub$rtl.v:244$162: $auto$alumacc.cc:474:replace_alu$1839
  created 11 $alu and 2 $macc cells.
Extracting $alu and $macc cells in module module128:
  creating $macc model for $add$rtl.v:1115$920 ($add).
  creating $macc model for $mul$rtl.v:1157$972 ($mul).
  creating $macc model for $neg$rtl.v:1135$944 ($neg).
  creating $macc model for $neg$rtl.v:1242$1091 ($neg).
  creating $alu model for $macc $neg$rtl.v:1242$1091.
  creating $alu model for $macc $neg$rtl.v:1135$944.
  creating $alu model for $macc $add$rtl.v:1115$920.
  creating $macc cell for $mul$rtl.v:1157$972: $auto$alumacc.cc:354:replace_macc$1842
  creating $alu model for $ge$rtl.v:1222$1053 ($ge): new $alu
  creating $alu model for $gt$rtl.v:1148$969 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1241$1089 ($gt): new $alu
  creating $alu model for $le$rtl.v:1220$1051 ($le): new $alu
  creating $alu model for $le$rtl.v:1242$1090 ($le): new $alu
  creating $alu model for $lt$rtl.v:1195$1027 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1224$1064 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:1224$1064: $auto$alumacc.cc:474:replace_alu$1850
  creating $alu cell for $lt$rtl.v:1195$1027: $auto$alumacc.cc:474:replace_alu$1861
  creating $alu cell for $le$rtl.v:1242$1090: $auto$alumacc.cc:474:replace_alu$1866
  creating $alu cell for $le$rtl.v:1220$1051: $auto$alumacc.cc:474:replace_alu$1875
  creating $alu cell for $gt$rtl.v:1241$1089: $auto$alumacc.cc:474:replace_alu$1884
  creating $alu cell for $gt$rtl.v:1148$969: $auto$alumacc.cc:474:replace_alu$1897
  creating $alu cell for $ge$rtl.v:1222$1053: $auto$alumacc.cc:474:replace_alu$1908
  creating $alu cell for $add$rtl.v:1115$920: $auto$alumacc.cc:474:replace_alu$1917
  creating $alu cell for $neg$rtl.v:1135$944: $auto$alumacc.cc:474:replace_alu$1920
  creating $alu cell for $neg$rtl.v:1242$1091: $auto$alumacc.cc:474:replace_alu$1923
  created 10 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module module13:
  creating $macc model for $mul$rtl.v:763$717 ($mul).
  creating $macc cell for $mul$rtl.v:763$717: $auto$alumacc.cc:354:replace_macc$1926
  creating $alu model for $ge$rtl.v:763$718 ($ge): new $alu
  creating $alu model for $le$rtl.v:770$721 ($le): new $alu
  creating $alu model for $lt$rtl.v:756$694 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:756$694: $auto$alumacc.cc:474:replace_alu$1930
  creating $alu cell for $le$rtl.v:770$721: $auto$alumacc.cc:474:replace_alu$1935
  creating $alu cell for $ge$rtl.v:763$718: $auto$alumacc.cc:474:replace_alu$1944
  created 3 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module module175:
  creating $macc model for $neg$rtl.v:1005$856 ($neg).
  creating $macc model for $neg$rtl.v:1007$863 ($neg).
  creating $macc model for $neg$rtl.v:994$832 ($neg).
  creating $alu model for $macc $neg$rtl.v:994$832.
  creating $alu model for $macc $neg$rtl.v:1007$863.
  creating $alu model for $macc $neg$rtl.v:1005$856.
  creating $alu model for $ge$rtl.v:1005$858 ($ge): new $alu
  creating $alu model for $lt$rtl.v:1031$912 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:1031$912: $auto$alumacc.cc:474:replace_alu$1959
  creating $alu cell for $ge$rtl.v:1005$858: $auto$alumacc.cc:474:replace_alu$1972
  creating $alu cell for $neg$rtl.v:1005$856: $auto$alumacc.cc:474:replace_alu$1985
  creating $alu cell for $neg$rtl.v:1007$863: $auto$alumacc.cc:474:replace_alu$1988
  creating $alu cell for $neg$rtl.v:994$832: $auto$alumacc.cc:474:replace_alu$1991
  created 5 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module200:
  creating $macc model for $add$rtl.v:948$811 ($add).
  creating $macc model for $neg$rtl.v:849$745 ($neg).
  creating $macc model for $sub$rtl.v:933$789 ($sub).
  creating $alu model for $macc $sub$rtl.v:933$789.
  creating $alu model for $macc $neg$rtl.v:849$745.
  creating $alu model for $macc $add$rtl.v:948$811.
  creating $alu model for $ge$rtl.v:873$758 ($ge): new $alu
  creating $alu model for $ge$rtl.v:947$809 ($ge): new $alu
  creating $alu cell for $ge$rtl.v:947$809: $auto$alumacc.cc:474:replace_alu$1996
  creating $alu cell for $ge$rtl.v:873$758: $auto$alumacc.cc:474:replace_alu$2005
  creating $alu cell for $add$rtl.v:948$811: $auto$alumacc.cc:474:replace_alu$2018
  creating $alu cell for $neg$rtl.v:849$745: $auto$alumacc.cc:474:replace_alu$2021
  creating $alu cell for $sub$rtl.v:933$789: $auto$alumacc.cc:474:replace_alu$2024
  created 5 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module37:
  creating $macc model for $add$rtl.v:558$420 ($add).
  creating $macc model for $add$rtl.v:632$526 ($add).
  creating $macc model for $add$rtl.v:652$566 ($add).
  creating $macc model for $add$rtl.v:657$572 ($add).
  creating $macc model for $add$rtl.v:659$579 ($add).
  creating $macc model for $add$rtl.v:673$592 ($add).
  creating $macc model for $add$rtl.v:699$641 ($add).
  creating $macc model for $mul$rtl.v:523$346 ($mul).
  creating $macc model for $mul$rtl.v:647$557 ($mul).
  creating $macc model for $mul$rtl.v:688$614 ($mul).
  creating $macc model for $mul$rtl.v:698$638 ($mul).
  creating $macc model for $neg$rtl.v:512$326 ($neg).
  creating $macc model for $neg$rtl.v:516$332 ($neg).
  creating $macc model for $neg$rtl.v:526$361 ($neg).
  creating $macc model for $neg$rtl.v:534$371 ($neg).
  creating $macc model for $neg$rtl.v:544$395 ($neg).
  creating $macc model for $neg$rtl.v:551$400 ($neg).
  creating $macc model for $neg$rtl.v:596$481 ($neg).
  creating $macc model for $neg$rtl.v:607$494 ($neg).
  creating $macc model for $neg$rtl.v:621$510 ($neg).
  creating $macc model for $sub$rtl.v:592$473 ($sub).
  creating $macc model for $sub$rtl.v:632$523 ($sub).
  creating $macc model for $sub$rtl.v:634$530 ($sub).
  creating $alu model for $macc $sub$rtl.v:634$530.
  creating $alu model for $macc $sub$rtl.v:632$523.
  creating $alu model for $macc $sub$rtl.v:592$473.
  creating $alu model for $macc $neg$rtl.v:621$510.
  creating $alu model for $macc $neg$rtl.v:607$494.
  creating $alu model for $macc $neg$rtl.v:596$481.
  creating $alu model for $macc $neg$rtl.v:551$400.
  creating $alu model for $macc $neg$rtl.v:544$395.
  creating $alu model for $macc $neg$rtl.v:534$371.
  creating $alu model for $macc $neg$rtl.v:526$361.
  creating $alu model for $macc $neg$rtl.v:516$332.
  creating $alu model for $macc $neg$rtl.v:512$326.
  creating $alu model for $macc $add$rtl.v:699$641.
  creating $alu model for $macc $add$rtl.v:673$592.
  creating $alu model for $macc $add$rtl.v:659$579.
  creating $alu model for $macc $add$rtl.v:657$572.
  creating $alu model for $macc $add$rtl.v:652$566.
  creating $alu model for $macc $add$rtl.v:632$526.
  creating $alu model for $macc $add$rtl.v:558$420.
  creating $macc cell for $mul$rtl.v:523$346: $auto$alumacc.cc:354:replace_macc$2027
  creating $macc cell for $mul$rtl.v:698$638: $auto$alumacc.cc:354:replace_macc$2028
  creating $macc cell for $mul$rtl.v:688$614: $auto$alumacc.cc:354:replace_macc$2029
  creating $macc cell for $mul$rtl.v:647$557: $auto$alumacc.cc:354:replace_macc$2030
  creating $alu model for $ge$rtl.v:489$292 ($ge): new $alu
  creating $alu model for $gt$rtl.v:595$479 ($gt): new $alu
  creating $alu model for $gt$rtl.v:640$543 ($gt): new $alu
  creating $alu model for $gt$rtl.v:688$615 ($gt): new $alu
  creating $alu model for $le$rtl.v:495$306 ($le): new $alu
  creating $alu model for $le$rtl.v:533$369 ($le): new $alu
  creating $alu model for $lt$rtl.v:634$532 ($lt): new $alu
  creating $alu model for $lt$rtl.v:636$534 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:636$534: $auto$alumacc.cc:474:replace_alu$2039
  creating $alu cell for $lt$rtl.v:634$532: $auto$alumacc.cc:474:replace_alu$2044
  creating $alu cell for $le$rtl.v:533$369: $auto$alumacc.cc:474:replace_alu$2055
  creating $alu cell for $le$rtl.v:495$306: $auto$alumacc.cc:474:replace_alu$2064
  creating $alu cell for $gt$rtl.v:688$615: $auto$alumacc.cc:474:replace_alu$2077
  creating $alu cell for $gt$rtl.v:640$543: $auto$alumacc.cc:474:replace_alu$2082
  creating $alu cell for $gt$rtl.v:595$479: $auto$alumacc.cc:474:replace_alu$2093
  creating $alu cell for $ge$rtl.v:489$292: $auto$alumacc.cc:474:replace_alu$2104
  creating $alu cell for $add$rtl.v:558$420: $auto$alumacc.cc:474:replace_alu$2117
  creating $alu cell for $add$rtl.v:632$526: $auto$alumacc.cc:474:replace_alu$2120
  creating $alu cell for $add$rtl.v:652$566: $auto$alumacc.cc:474:replace_alu$2123
  creating $alu cell for $add$rtl.v:657$572: $auto$alumacc.cc:474:replace_alu$2126
  creating $alu cell for $add$rtl.v:659$579: $auto$alumacc.cc:474:replace_alu$2129
  creating $alu cell for $add$rtl.v:673$592: $auto$alumacc.cc:474:replace_alu$2132
  creating $alu cell for $add$rtl.v:699$641: $auto$alumacc.cc:474:replace_alu$2135
  creating $alu cell for $neg$rtl.v:512$326: $auto$alumacc.cc:474:replace_alu$2138
  creating $alu cell for $neg$rtl.v:516$332: $auto$alumacc.cc:474:replace_alu$2141
  creating $alu cell for $neg$rtl.v:526$361: $auto$alumacc.cc:474:replace_alu$2144
  creating $alu cell for $neg$rtl.v:534$371: $auto$alumacc.cc:474:replace_alu$2147
  creating $alu cell for $neg$rtl.v:544$395: $auto$alumacc.cc:474:replace_alu$2150
  creating $alu cell for $neg$rtl.v:551$400: $auto$alumacc.cc:474:replace_alu$2153
  creating $alu cell for $neg$rtl.v:596$481: $auto$alumacc.cc:474:replace_alu$2156
  creating $alu cell for $neg$rtl.v:607$494: $auto$alumacc.cc:474:replace_alu$2159
  creating $alu cell for $neg$rtl.v:621$510: $auto$alumacc.cc:474:replace_alu$2162
  creating $alu cell for $sub$rtl.v:592$473: $auto$alumacc.cc:474:replace_alu$2165
  creating $alu cell for $sub$rtl.v:632$523: $auto$alumacc.cc:474:replace_alu$2168
  creating $alu cell for $sub$rtl.v:634$530: $auto$alumacc.cc:474:replace_alu$2171
  created 27 $alu and 4 $macc cells.
Extracting $alu and $macc cells in module module5:
  creating $macc model for $add$rtl.v:334$258 ($add).
  creating $macc model for $add$rtl.v:362$271 ($add).
  creating $macc model for $mul$rtl.v:334$260 ($mul).
  creating $macc model for $neg$rtl.v:350$266 ($neg).
  creating $alu model for $macc $neg$rtl.v:350$266.
  creating $alu model for $macc $add$rtl.v:362$271.
  creating $alu model for $macc $add$rtl.v:334$258.
  creating $macc cell for $mul$rtl.v:334$260: $auto$alumacc.cc:354:replace_macc$2174
  creating $alu model for $ge$rtl.v:363$275 ($ge): new $alu
  creating $alu model for $gt$rtl.v:332$246 ($gt): new $alu
  creating $alu cell for $gt$rtl.v:332$246: $auto$alumacc.cc:474:replace_alu$2177
  creating $alu cell for $ge$rtl.v:363$275: $auto$alumacc.cc:474:replace_alu$2188
  creating $alu cell for $add$rtl.v:334$258: $auto$alumacc.cc:474:replace_alu$2197
  creating $alu cell for $add$rtl.v:362$271: $auto$alumacc.cc:474:replace_alu$2200
  creating $alu cell for $neg$rtl.v:350$266: $auto$alumacc.cc:474:replace_alu$2203
  created 5 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module top:
  creating $macc model for $sub$rtl.v:54$7 ($sub).
  creating $alu model for $macc $sub$rtl.v:54$7.
  creating $alu model for $ge$rtl.v:58$15 ($ge): new $alu
  creating $alu cell for $ge$rtl.v:58$15: $auto$alumacc.cc:474:replace_alu$2207
  creating $alu cell for $sub$rtl.v:54$7: $auto$alumacc.cc:474:replace_alu$2216
  created 2 $alu and 0 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module module114 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshl$rtl.v:255$190 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1403_CMP $reduce_bool$rtl.v:255$194_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:244$160 ($shr):
    Found 1 activation_patterns using ctrl signal $procmux$1403_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:244$159 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$1403_CMP.
    No candidates found.
Found 7 cells in module module128 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:1241$1087 ($sshr):
    Found 1 activation_patterns using ctrl signal $procmux$1183_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1229$1068 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1187_CMP $procmux$1183_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1186$1018 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1153_CMP $procmux$1151_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1186$1015 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1153_CMP $procmux$1151_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:1241$1088 ($sshl):
    Found 1 activation_patterns using ctrl signal $procmux$1183_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1222$1052 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1187_CMP $procmux$1183_CMP $reduce_bool$rtl.v:1224$1059_Y $auto$rtlil.cc:1836:ReduceOr$1883 }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1194$1020 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1153_CMP $procmux$1151_CMP $reduce_and$rtl.v:1193$1019_Y }.
    No candidates found.
Found 2 cells in module module13 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshl$rtl.v:761$710 ($sshl):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:763$719_Y.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:756$695 ($sshl):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:756$691_Y.
    No candidates found.
Found 2 cells in module module200 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:948$810 ($sshr):
    Found 1 activation_patterns using ctrl signal $auto$rtlil.cc:1836:ReduceOr$2004.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:945$803 ($shl):
    Found 1 activation_patterns using ctrl signal $reduce_and$rtl.v:944$801_Y.
    No candidates found.
Found 2 cells in module module37 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:558$417 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1373_CMP $procmux$1370_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:539$385 ($sshl):
    Found 1 activation_patterns using ctrl signal { $auto$rtlil.cc:1836:ReduceOr$2076 $reduce_bool$rtl.v:539$386_Y }.
    No candidates found.

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
<suppressed ~5 debug messages>
Optimizing module module128.
<suppressed ~10 debug messages>
Optimizing module module13.
Optimizing module module175.
<suppressed ~8 debug messages>
Optimizing module module200.
<suppressed ~1 debug messages>
Optimizing module module37.
<suppressed ~13 debug messages>
Optimizing module module5.
<suppressed ~1 debug messages>
Optimizing module top.
<suppressed ~1 debug messages>

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module128'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module37'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 6 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module114..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module175..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module200..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module37..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1267: { \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] } -> 11'00000000000
      Replacing known input bits on port B of cell $ternary$rtl.v:647$563: { \reg56 [0] \reg56 [0] \reg56 [0] } -> 3'000
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:524$355.
    dead port 2/2 on $mux $ternary$rtl.v:524$355.
    dead port 1/2 on $mux $ternary$rtl.v:553$409.
    dead port 2/2 on $mux $ternary$rtl.v:553$409.
    dead port 1/2 on $mux $ternary$rtl.v:560$427.
    dead port 2/2 on $mux $ternary$rtl.v:560$427.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 6 multiplexer ports.
<suppressed ~172 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module114.
    New input vector for $reduce_or cell $reduce_or$rtl.v:188$84: { \reg122 [4] \reg122 [5] \reg122 [6] \reg122 [7] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1781: { $auto$rtlil.cc:1832:Not$1780 $auto$rtlil.cc:1835:ReduceAnd$1772 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1801: { $auto$rtlil.cc:1864:Xor$1798 $auto$rtlil.cc:1835:ReduceAnd$1800 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1822: { $auto$alumacc.cc:490:replace_alu$1820 [0] $auto$alumacc.cc:490:replace_alu$1820 [1] $auto$alumacc.cc:490:replace_alu$1820 [2] $auto$alumacc.cc:490:replace_alu$1820 [3] $auto$alumacc.cc:490:replace_alu$1820 [4] $auto$alumacc.cc:490:replace_alu$1820 [5] $auto$alumacc.cc:490:replace_alu$1820 [6] $auto$alumacc.cc:490:replace_alu$1820 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1764: { $auto$alumacc.cc:490:replace_alu$1760 [0] $auto$alumacc.cc:490:replace_alu$1760 [1] $auto$alumacc.cc:490:replace_alu$1760 [2] $auto$alumacc.cc:490:replace_alu$1760 [3] $auto$alumacc.cc:490:replace_alu$1760 [4] $auto$alumacc.cc:490:replace_alu$1760 [5] $auto$alumacc.cc:490:replace_alu$1760 [6] $auto$alumacc.cc:490:replace_alu$1760 [7] $auto$alumacc.cc:490:replace_alu$1760 [8] $auto$alumacc.cc:490:replace_alu$1760 [9] $auto$alumacc.cc:490:replace_alu$1760 [10] $auto$alumacc.cc:490:replace_alu$1760 [11] $auto$alumacc.cc:490:replace_alu$1760 [12] $auto$alumacc.cc:490:replace_alu$1760 [13] $auto$alumacc.cc:490:replace_alu$1760 [14] $auto$alumacc.cc:490:replace_alu$1760 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1771: { $auto$alumacc.cc:490:replace_alu$1769 [0] $auto$alumacc.cc:490:replace_alu$1769 [1] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1788: { $auto$alumacc.cc:490:replace_alu$1784 [0] $auto$alumacc.cc:490:replace_alu$1784 [1] $auto$alumacc.cc:490:replace_alu$1784 [2] $auto$alumacc.cc:490:replace_alu$1784 [3] $auto$alumacc.cc:490:replace_alu$1784 [4] $auto$alumacc.cc:490:replace_alu$1784 [5] $auto$alumacc.cc:490:replace_alu$1784 [6] $auto$alumacc.cc:490:replace_alu$1784 [7] $auto$alumacc.cc:490:replace_alu$1784 [8] $auto$alumacc.cc:490:replace_alu$1784 [9] $auto$alumacc.cc:490:replace_alu$1784 [10] $auto$alumacc.cc:490:replace_alu$1784 [11] $auto$alumacc.cc:490:replace_alu$1784 [12] $auto$alumacc.cc:490:replace_alu$1784 [13] $auto$alumacc.cc:490:replace_alu$1784 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1799: { $auto$alumacc.cc:490:replace_alu$1793 [0] $auto$alumacc.cc:490:replace_alu$1793 [1] $auto$alumacc.cc:490:replace_alu$1793 [2] $auto$alumacc.cc:490:replace_alu$1793 [3] $auto$alumacc.cc:490:replace_alu$1793 [4] $auto$alumacc.cc:490:replace_alu$1793 [5] $auto$alumacc.cc:490:replace_alu$1793 [6] $auto$alumacc.cc:490:replace_alu$1793 [7] $auto$alumacc.cc:490:replace_alu$1793 [8] $auto$alumacc.cc:490:replace_alu$1793 [9] $auto$alumacc.cc:490:replace_alu$1793 [10] $auto$alumacc.cc:490:replace_alu$1793 [11] $auto$alumacc.cc:490:replace_alu$1793 [12] $auto$alumacc.cc:490:replace_alu$1793 [13] $auto$alumacc.cc:490:replace_alu$1793 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1806: { $auto$alumacc.cc:490:replace_alu$1804 [0] $auto$alumacc.cc:490:replace_alu$1804 [1] $auto$alumacc.cc:490:replace_alu$1804 [2] $auto$alumacc.cc:490:replace_alu$1804 [3] $auto$alumacc.cc:490:replace_alu$1804 [4] $auto$alumacc.cc:490:replace_alu$1804 [5] $auto$alumacc.cc:490:replace_alu$1804 [6] $auto$alumacc.cc:490:replace_alu$1804 [7] $auto$alumacc.cc:490:replace_alu$1804 [8] $auto$alumacc.cc:490:replace_alu$1804 [9] $auto$alumacc.cc:490:replace_alu$1804 [10] $auto$alumacc.cc:490:replace_alu$1804 [11] $auto$alumacc.cc:490:replace_alu$1804 [12] $auto$alumacc.cc:490:replace_alu$1804 [13] $auto$alumacc.cc:490:replace_alu$1804 [14] $auto$alumacc.cc:490:replace_alu$1804 [15] $auto$alumacc.cc:490:replace_alu$1804 [16] $auto$alumacc.cc:490:replace_alu$1804 [17] $auto$alumacc.cc:490:replace_alu$1804 [18] }
  Optimizing cells in module \module114.
  Optimizing cells in module \module128.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1882: { $auto$rtlil.cc:1832:Not$1879 $auto$rtlil.cc:1835:ReduceAnd$1881 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1900: { $auto$alumacc.cc:490:replace_alu$1898 [0] $auto$alumacc.cc:490:replace_alu$1898 [1] $auto$alumacc.cc:490:replace_alu$1898 [2] $auto$alumacc.cc:490:replace_alu$1898 [3] $auto$alumacc.cc:490:replace_alu$1898 [4] $auto$alumacc.cc:490:replace_alu$1898 [5] $auto$alumacc.cc:490:replace_alu$1898 [6] $auto$alumacc.cc:490:replace_alu$1898 [7] $auto$alumacc.cc:490:replace_alu$1898 [8] $auto$alumacc.cc:490:replace_alu$1898 [9] $auto$alumacc.cc:490:replace_alu$1898 [10] $auto$alumacc.cc:490:replace_alu$1898 [11] $auto$alumacc.cc:490:replace_alu$1898 [12] $auto$alumacc.cc:490:replace_alu$1898 [13] $auto$alumacc.cc:490:replace_alu$1898 [14] $auto$alumacc.cc:490:replace_alu$1898 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1913: { $auto$alumacc.cc:490:replace_alu$1909 [0] $auto$alumacc.cc:490:replace_alu$1909 [1] $auto$alumacc.cc:490:replace_alu$1909 [2] $auto$alumacc.cc:490:replace_alu$1909 [3] $auto$alumacc.cc:490:replace_alu$1909 [4] $auto$alumacc.cc:490:replace_alu$1909 [5] $auto$alumacc.cc:490:replace_alu$1909 [6] $auto$alumacc.cc:490:replace_alu$1909 [7] $auto$alumacc.cc:490:replace_alu$1909 [8] $auto$alumacc.cc:490:replace_alu$1909 [9] $auto$alumacc.cc:490:replace_alu$1909 [10] $auto$alumacc.cc:490:replace_alu$1909 [11] $auto$alumacc.cc:490:replace_alu$1909 [12] $auto$alumacc.cc:490:replace_alu$1909 [13] $auto$alumacc.cc:490:replace_alu$1909 [14] $auto$alumacc.cc:490:replace_alu$1909 [15] $auto$alumacc.cc:490:replace_alu$1909 [16] $auto$alumacc.cc:490:replace_alu$1909 [17] $auto$alumacc.cc:490:replace_alu$1909 [18] $auto$alumacc.cc:490:replace_alu$1909 [19] $auto$alumacc.cc:490:replace_alu$1909 [20] $auto$alumacc.cc:490:replace_alu$1909 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1853: { $auto$alumacc.cc:490:replace_alu$1851 [0] $auto$alumacc.cc:490:replace_alu$1851 [1] $auto$alumacc.cc:490:replace_alu$1851 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1871: { $auto$alumacc.cc:490:replace_alu$1867 [0] $auto$alumacc.cc:490:replace_alu$1867 [1] $auto$alumacc.cc:490:replace_alu$1867 [2] $auto$alumacc.cc:490:replace_alu$1867 [3] $auto$alumacc.cc:490:replace_alu$1867 [4] $auto$alumacc.cc:490:replace_alu$1867 [5] $auto$alumacc.cc:490:replace_alu$1867 [6] $auto$alumacc.cc:490:replace_alu$1867 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1880: { $auto$alumacc.cc:490:replace_alu$1876 [0] $auto$alumacc.cc:490:replace_alu$1876 [1] $auto$alumacc.cc:490:replace_alu$1876 [2] $auto$alumacc.cc:490:replace_alu$1876 [3] $auto$alumacc.cc:490:replace_alu$1876 [4] $auto$alumacc.cc:490:replace_alu$1876 [5] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1887: { $auto$alumacc.cc:490:replace_alu$1885 [0] $auto$alumacc.cc:490:replace_alu$1885 [1] $auto$alumacc.cc:490:replace_alu$1885 [2] $auto$alumacc.cc:490:replace_alu$1885 [3] $auto$alumacc.cc:490:replace_alu$1885 [4] $auto$alumacc.cc:490:replace_alu$1885 [5] $auto$alumacc.cc:490:replace_alu$1885 [6] $auto$alumacc.cc:490:replace_alu$1885 [7] $auto$alumacc.cc:490:replace_alu$1885 [8] $auto$alumacc.cc:490:replace_alu$1885 [9] $auto$alumacc.cc:490:replace_alu$1885 [10] $auto$alumacc.cc:490:replace_alu$1885 [11] $auto$alumacc.cc:490:replace_alu$1885 [12] $auto$alumacc.cc:490:replace_alu$1885 [13] $auto$alumacc.cc:490:replace_alu$1885 [14] $auto$alumacc.cc:490:replace_alu$1885 [15] $auto$alumacc.cc:490:replace_alu$1885 [16] $auto$alumacc.cc:490:replace_alu$1885 [17] $auto$alumacc.cc:490:replace_alu$1885 [18] $auto$alumacc.cc:490:replace_alu$1885 [19] $auto$alumacc.cc:490:replace_alu$1885 [20] }
  Optimizing cells in module \module128.
  Optimizing cells in module \module13.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1955: { $auto$rtlil.cc:1832:Not$1954 $auto$rtlil.cc:1835:ReduceAnd$1948 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1940: { $auto$alumacc.cc:490:replace_alu$1936 [0] $auto$alumacc.cc:490:replace_alu$1936 [1] $auto$alumacc.cc:490:replace_alu$1936 [2] $auto$alumacc.cc:490:replace_alu$1936 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1947: { $auto$alumacc.cc:490:replace_alu$1945 [0] $auto$alumacc.cc:490:replace_alu$1945 [1] $auto$alumacc.cc:490:replace_alu$1945 [2] $auto$alumacc.cc:490:replace_alu$1945 [3] $auto$alumacc.cc:490:replace_alu$1945 [4] $auto$alumacc.cc:490:replace_alu$1945 [5] $auto$alumacc.cc:490:replace_alu$1945 [6] $auto$alumacc.cc:490:replace_alu$1945 [7] $auto$alumacc.cc:490:replace_alu$1945 [8] $auto$alumacc.cc:490:replace_alu$1945 [9] $auto$alumacc.cc:490:replace_alu$1945 [10] $auto$alumacc.cc:490:replace_alu$1945 [11] $auto$alumacc.cc:490:replace_alu$1945 [12] $auto$alumacc.cc:490:replace_alu$1945 [13] $auto$alumacc.cc:490:replace_alu$1945 [14] $auto$alumacc.cc:490:replace_alu$1945 [15] $auto$alumacc.cc:490:replace_alu$1945 [16] $auto$alumacc.cc:490:replace_alu$1945 [17] $auto$alumacc.cc:490:replace_alu$1945 [18] $auto$alumacc.cc:490:replace_alu$1945 [19] $auto$alumacc.cc:490:replace_alu$1945 [20] $auto$alumacc.cc:490:replace_alu$1945 [21] }
  Optimizing cells in module \module13.
  Optimizing cells in module \module175.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1983: { $auto$rtlil.cc:1832:Not$1982 $auto$rtlil.cc:1835:ReduceAnd$1976 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1975: { $auto$alumacc.cc:490:replace_alu$1973 [0] $auto$alumacc.cc:490:replace_alu$1973 [1] $auto$alumacc.cc:490:replace_alu$1973 [2] $auto$alumacc.cc:490:replace_alu$1973 [3] $auto$alumacc.cc:490:replace_alu$1973 [4] $auto$alumacc.cc:490:replace_alu$1973 [5] $auto$alumacc.cc:490:replace_alu$1973 [6] $auto$alumacc.cc:490:replace_alu$1973 [7] $auto$alumacc.cc:490:replace_alu$1973 [8] $auto$alumacc.cc:490:replace_alu$1973 [9] $auto$alumacc.cc:490:replace_alu$1973 [10] $auto$alumacc.cc:490:replace_alu$1973 [11] $auto$alumacc.cc:490:replace_alu$1973 [12] $auto$alumacc.cc:490:replace_alu$1973 [13] $auto$alumacc.cc:490:replace_alu$1973 [14] $auto$alumacc.cc:490:replace_alu$1973 [15] $auto$alumacc.cc:490:replace_alu$1973 [16] $auto$alumacc.cc:490:replace_alu$1973 [17] $auto$alumacc.cc:490:replace_alu$1973 [18] $auto$alumacc.cc:490:replace_alu$1973 [19] $auto$alumacc.cc:490:replace_alu$1973 [20] $auto$alumacc.cc:490:replace_alu$1973 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1962: { $auto$alumacc.cc:490:replace_alu$1960 [0] $auto$alumacc.cc:490:replace_alu$1960 [1] $auto$alumacc.cc:490:replace_alu$1960 [2] $auto$alumacc.cc:490:replace_alu$1960 [3] $auto$alumacc.cc:490:replace_alu$1960 [4] $auto$alumacc.cc:490:replace_alu$1960 [5] $auto$alumacc.cc:490:replace_alu$1960 [6] $auto$alumacc.cc:490:replace_alu$1960 [7] }
  Optimizing cells in module \module175.
  Optimizing cells in module \module200.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2003: { $auto$rtlil.cc:1832:Not$2000 $auto$rtlil.cc:1835:ReduceAnd$2002 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2001: { $auto$alumacc.cc:490:replace_alu$1997 [0] $auto$alumacc.cc:490:replace_alu$1997 [1] $auto$alumacc.cc:490:replace_alu$1997 [2] $auto$alumacc.cc:490:replace_alu$1997 [3] $auto$alumacc.cc:490:replace_alu$1997 [4] $auto$alumacc.cc:490:replace_alu$1997 [5] $auto$alumacc.cc:490:replace_alu$1997 [6] $auto$alumacc.cc:490:replace_alu$1997 [7] $auto$alumacc.cc:490:replace_alu$1997 [8] $auto$alumacc.cc:490:replace_alu$1997 [9] $auto$alumacc.cc:490:replace_alu$1997 [10] $auto$alumacc.cc:490:replace_alu$1997 [11] $auto$alumacc.cc:490:replace_alu$1997 [12] $auto$alumacc.cc:490:replace_alu$1997 [13] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2008: { $auto$alumacc.cc:490:replace_alu$2006 [0] $auto$alumacc.cc:490:replace_alu$2006 [1] }
  Optimizing cells in module \module200.
  Optimizing cells in module \module37.
    New input vector for $reduce_or cell $reduce_or$rtl.v:631$521: { $and$rtl.v:631$520_Y [0] $and$rtl.v:631$520_Y [1] $and$rtl.v:631$520_Y [2] $and$rtl.v:631$520_Y [3] $and$rtl.v:631$520_Y [4] $and$rtl.v:631$520_Y [5] $and$rtl.v:631$520_Y [6] $and$rtl.v:631$520_Y [7] $and$rtl.v:631$520_Y [8] $and$rtl.v:631$520_Y [9] $and$rtl.v:631$520_Y [10] $and$rtl.v:631$520_Y [11] $and$rtl.v:631$520_Y [12] $and$rtl.v:631$520_Y [13] $and$rtl.v:631$520_Y [14] $and$rtl.v:631$520_Y [15] $and$rtl.v:631$520_Y [16] $and$rtl.v:631$520_Y [17] $and$rtl.v:631$520_Y [18] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2075: { $auto$rtlil.cc:1832:Not$2074 $auto$rtlil.cc:1835:ReduceAnd$2068 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2115: { $auto$rtlil.cc:1832:Not$2114 $auto$rtlil.cc:1835:ReduceAnd$2108 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2107: { $auto$alumacc.cc:490:replace_alu$2105 [0] $auto$alumacc.cc:490:replace_alu$2105 [1] $auto$alumacc.cc:490:replace_alu$2105 [2] $auto$alumacc.cc:490:replace_alu$2105 [3] $auto$alumacc.cc:490:replace_alu$2105 [4] $auto$alumacc.cc:490:replace_alu$2105 [5] $auto$alumacc.cc:490:replace_alu$2105 [6] $auto$alumacc.cc:490:replace_alu$2105 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2085: { $auto$alumacc.cc:490:replace_alu$2083 [0] $auto$alumacc.cc:490:replace_alu$2083 [1] $auto$alumacc.cc:490:replace_alu$2083 [2] $auto$alumacc.cc:490:replace_alu$2083 [3] $auto$alumacc.cc:490:replace_alu$2083 [4] $auto$alumacc.cc:490:replace_alu$2083 [5] $auto$alumacc.cc:490:replace_alu$2083 [6] $auto$alumacc.cc:490:replace_alu$2083 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2096: { $auto$alumacc.cc:490:replace_alu$2094 [0] $auto$alumacc.cc:490:replace_alu$2094 [1] $auto$alumacc.cc:490:replace_alu$2094 [2] $auto$alumacc.cc:490:replace_alu$2094 [3] $auto$alumacc.cc:490:replace_alu$2094 [4] $auto$alumacc.cc:490:replace_alu$2094 [5] $auto$alumacc.cc:490:replace_alu$2094 [6] $auto$alumacc.cc:490:replace_alu$2094 [7] $auto$alumacc.cc:490:replace_alu$2094 [8] $auto$alumacc.cc:490:replace_alu$2094 [9] $auto$alumacc.cc:490:replace_alu$2094 [10] $auto$alumacc.cc:490:replace_alu$2094 [11] $auto$alumacc.cc:490:replace_alu$2094 [12] $auto$alumacc.cc:490:replace_alu$2094 [13] $auto$alumacc.cc:490:replace_alu$2094 [14] $auto$alumacc.cc:490:replace_alu$2094 [15] $auto$alumacc.cc:490:replace_alu$2094 [16] $auto$alumacc.cc:490:replace_alu$2094 [17] $auto$alumacc.cc:490:replace_alu$2094 [18] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2047: { $auto$alumacc.cc:490:replace_alu$2045 [0] $auto$alumacc.cc:490:replace_alu$2045 [1] $auto$alumacc.cc:490:replace_alu$2045 [2] $auto$alumacc.cc:490:replace_alu$2045 [3] $auto$alumacc.cc:490:replace_alu$2045 [4] $auto$alumacc.cc:490:replace_alu$2045 [5] $auto$alumacc.cc:490:replace_alu$2045 [6] $auto$alumacc.cc:490:replace_alu$2045 [7] $auto$alumacc.cc:490:replace_alu$2045 [8] $auto$alumacc.cc:490:replace_alu$2045 [9] $auto$alumacc.cc:490:replace_alu$2045 [10] $auto$alumacc.cc:490:replace_alu$2045 [11] $auto$alumacc.cc:490:replace_alu$2045 [12] $auto$alumacc.cc:490:replace_alu$2045 [13] $auto$alumacc.cc:490:replace_alu$2045 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2060: { $auto$alumacc.cc:490:replace_alu$2056 [0] $auto$alumacc.cc:490:replace_alu$2056 [1] $auto$alumacc.cc:490:replace_alu$2056 [2] $auto$alumacc.cc:490:replace_alu$2056 [3] $auto$alumacc.cc:490:replace_alu$2056 [4] $auto$alumacc.cc:490:replace_alu$2056 [5] $auto$alumacc.cc:490:replace_alu$2056 [6] $auto$alumacc.cc:490:replace_alu$2056 [7] $auto$alumacc.cc:490:replace_alu$2056 [8] $auto$alumacc.cc:490:replace_alu$2056 [9] $auto$alumacc.cc:490:replace_alu$2056 [10] $auto$alumacc.cc:490:replace_alu$2056 [11] $auto$alumacc.cc:490:replace_alu$2056 [12] $auto$alumacc.cc:490:replace_alu$2056 [13] $auto$alumacc.cc:490:replace_alu$2056 [14] $auto$alumacc.cc:490:replace_alu$2056 [15] $auto$alumacc.cc:490:replace_alu$2056 [16] $auto$alumacc.cc:490:replace_alu$2056 [17] $auto$alumacc.cc:490:replace_alu$2056 [18] $auto$alumacc.cc:490:replace_alu$2056 [19] $auto$alumacc.cc:490:replace_alu$2056 [20] $auto$alumacc.cc:490:replace_alu$2056 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2067: { $auto$alumacc.cc:490:replace_alu$2065 [0] $auto$alumacc.cc:490:replace_alu$2065 [1] $auto$alumacc.cc:490:replace_alu$2065 [2] $auto$alumacc.cc:490:replace_alu$2065 [3] $auto$alumacc.cc:490:replace_alu$2065 [4] $auto$alumacc.cc:490:replace_alu$2065 [5] $auto$alumacc.cc:490:replace_alu$2065 [6] $auto$alumacc.cc:490:replace_alu$2065 [7] $auto$alumacc.cc:490:replace_alu$2065 [8] $auto$alumacc.cc:490:replace_alu$2065 [9] $auto$alumacc.cc:490:replace_alu$2065 [10] $auto$alumacc.cc:490:replace_alu$2065 [11] $auto$alumacc.cc:490:replace_alu$2065 [12] $auto$alumacc.cc:490:replace_alu$2065 [13] $auto$alumacc.cc:490:replace_alu$2065 [14] $auto$alumacc.cc:490:replace_alu$2065 [15] $auto$alumacc.cc:490:replace_alu$2065 [16] $auto$alumacc.cc:490:replace_alu$2065 [17] }
  Optimizing cells in module \module37.
  Optimizing cells in module \module5.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2193: { $auto$alumacc.cc:490:replace_alu$2189 [0] $auto$alumacc.cc:490:replace_alu$2189 [1] $auto$alumacc.cc:490:replace_alu$2189 [2] $auto$alumacc.cc:490:replace_alu$2189 [3] $auto$alumacc.cc:490:replace_alu$2189 [4] $auto$alumacc.cc:490:replace_alu$2189 [5] $auto$alumacc.cc:490:replace_alu$2189 [6] $auto$alumacc.cc:490:replace_alu$2189 [7] $auto$alumacc.cc:490:replace_alu$2189 [8] $auto$alumacc.cc:490:replace_alu$2189 [9] $auto$alumacc.cc:490:replace_alu$2189 [10] $auto$alumacc.cc:490:replace_alu$2189 [11] $auto$alumacc.cc:490:replace_alu$2189 [12] $auto$alumacc.cc:490:replace_alu$2189 [13] $auto$alumacc.cc:490:replace_alu$2189 [14] $auto$alumacc.cc:490:replace_alu$2189 [15] $auto$alumacc.cc:490:replace_alu$2189 [16] $auto$alumacc.cc:490:replace_alu$2189 [17] $auto$alumacc.cc:490:replace_alu$2189 [18] $auto$alumacc.cc:490:replace_alu$2189 [19] }
  Optimizing cells in module \module5.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2214: { $auto$rtlil.cc:1832:Not$2211 $auto$alumacc.cc:490:replace_alu$2208 }
  Optimizing cells in module \top.
Performed a total of 36 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1490 ($dff) from module module200.
Removing $procdff$1522 ($dff) from module module37.
Replaced 2 DFF cells.

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 30 unused cells and 106 unused wires.
<suppressed ~38 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
<suppressed ~3 debug messages>
Optimizing module module37.
<suppressed ~5 debug messages>
Optimizing module module5.
Optimizing module top.

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module114..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module175..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module200..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module37..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module114.
  Optimizing cells in module \module128.
  Optimizing cells in module \module13.
  Optimizing cells in module \module175.
  Optimizing cells in module \module200.
  Optimizing cells in module \module37.
  Optimizing cells in module \module5.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 7 unused wires.
<suppressed ~4 debug messages>

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
Optimizing module top.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module114..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module175..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module200..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module37..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module114.
  Optimizing cells in module \module128.
  Optimizing cells in module \module13.
  Optimizing cells in module \module175.
  Optimizing cells in module \module200.
  Optimizing cells in module \module37.
  Optimizing cells in module \module5.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
Optimizing module top.

2.13.23. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking module128.reg162 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking module37.reg51 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking module37.reg61 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
Optimizing module top.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
<suppressed ~114 debug messages>
Optimizing module module128.
<suppressed ~69 debug messages>
Optimizing module module13.
Optimizing module module175.
<suppressed ~33 debug messages>
Optimizing module module200.
<suppressed ~31 debug messages>
Optimizing module module37.
<suppressed ~127 debug messages>
Optimizing module module5.
<suppressed ~14 debug messages>
Optimizing module top.
<suppressed ~8 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 45 unused cells and 159 unused wires.
<suppressed ~56 debug messages>

2.18.5. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
Optimizing module top.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module114..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module175..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module200..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module37..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~156 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module114.
    Consolidated identical input bits for $mux cell $procmux$1402:
      Old ports: A=8'10110101, B={ 4'0000 $auto$wreduce.cc:455:run$1585 [3:0] }, Y=$0\reg244[13:0]
      New ports: A=5'10101, B={ 1'0 $auto$wreduce.cc:455:run$1585 [3:0] }, Y=$0\reg244[13:0] [4:0]
      New connections: $0\reg244[13:0] [7:5] = { $0\reg244[13:0] [4] 1'0 $0\reg244[13:0] [4] }
    Consolidated identical input bits for $mux cell $procmux$1432:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$1571 [1:0] }, B=13'0000000000000, Y=$0\reg124[12:0]
      New ports: A=$auto$wreduce.cc:455:run$1571 [1:0], B=2'00, Y=$0\reg124[12:0] [1:0]
      New connections: $0\reg124[12:0] [12:2] = 11'00000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:157$55:
      Old ports: A={ $and$rtl.v:157$52_Y [9:8] 1'1 $and$rtl.v:157$52_Y [6] 3'111 $and$rtl.v:157$52_Y [2] 1'1 $and$rtl.v:157$52_Y [0] }, B={ 9'000000000 \wire118 [0] }, Y=$ternary$rtl.v:157$55_Y
      New ports: A={ $and$rtl.v:157$52_Y [9:8] $and$rtl.v:157$52_Y [6] $and$rtl.v:157$52_Y [2] 1'1 $and$rtl.v:157$52_Y [0] }, B={ 5'00000 \wire118 [0] }, Y={ $ternary$rtl.v:157$55_Y [9:8] $ternary$rtl.v:157$55_Y [6] $ternary$rtl.v:157$55_Y [2:0] }
      New connections: { $ternary$rtl.v:157$55_Y [7] $ternary$rtl.v:157$55_Y [5:3] } = { $ternary$rtl.v:157$55_Y [1] $ternary$rtl.v:157$55_Y [1] $ternary$rtl.v:157$55_Y [1] $ternary$rtl.v:157$55_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:181$73:
      Old ports: A={ 5'00000 \reg125 [3:1] }, B={ 6'000000 \wire118 [1:0] }, Y=$ternary$rtl.v:181$73_Y
      New ports: A=\reg125 [3:1], B={ 1'0 \wire118 [1:0] }, Y=$ternary$rtl.v:181$73_Y [2:0]
      New connections: $ternary$rtl.v:181$73_Y [7:3] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:223$117:
      Old ports: A={ \wire119 [9:8] 1'1 \wire119 [6] 3'111 \wire119 [2] 1'1 \wire119 [0] }, B=10'0000000000, Y=$ternary$rtl.v:223$117_Y
      New ports: A={ \wire119 [9:8] \wire119 [6] \wire119 [2] 1'1 \wire119 [0] }, B=6'000000, Y={ $ternary$rtl.v:223$117_Y [9:8] $ternary$rtl.v:223$117_Y [6] $ternary$rtl.v:223$117_Y [2:0] }
      New connections: { $ternary$rtl.v:223$117_Y [7] $ternary$rtl.v:223$117_Y [5:3] } = { $ternary$rtl.v:223$117_Y [1] $ternary$rtl.v:223$117_Y [1] $ternary$rtl.v:223$117_Y [1] $ternary$rtl.v:223$117_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:223$123:
      Old ports: A=14'00000000000000, B={ 13'0000000000000 $and$rtl.v:223$120_Y [0] }, Y=$0\reg239[13:0]
      New ports: A=1'0, B=$and$rtl.v:223$120_Y [0], Y=$0\reg239[13:0] [0]
      New connections: $0\reg239[13:0] [13:1] = 13'0000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:238$143:
      Old ports: A=10'0010100100, B={ \wire119 [9:8] 1'1 \wire119 [6] 3'111 \wire119 [2] 1'1 \wire119 [0] }, Y=$ternary$rtl.v:238$143_Y [9:0]
      New ports: A=6'000100, B={ \wire119 [9:8] \wire119 [6] \wire119 [2] 1'1 \wire119 [0] }, Y={ $ternary$rtl.v:238$143_Y [9:8] $ternary$rtl.v:238$143_Y [6] $ternary$rtl.v:238$143_Y [2:0] }
      New connections: { $ternary$rtl.v:238$143_Y [7] $ternary$rtl.v:238$143_Y [5:3] } = { 2'11 $ternary$rtl.v:238$143_Y [1] $ternary$rtl.v:238$143_Y [1] }
  Optimizing cells in module \module114.
    New input vector for $reduce_or cell $reduce_or$rtl.v:223$118: { $ternary$rtl.v:223$117_Y [0] $ternary$rtl.v:223$117_Y [1] $ternary$rtl.v:223$117_Y [2] $ternary$rtl.v:223$117_Y [6] $ternary$rtl.v:223$117_Y [8] $ternary$rtl.v:223$117_Y [9] }
  Optimizing cells in module \module114.
  Optimizing cells in module \module128.
    Consolidated identical input bits for $mux cell $procmux$1209:
      Old ports: A={ \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 [2] \wire135 }, B={ 14'00000000000000 $auto$rtlil.cc:1832:Not$1907 }, Y=$procmux$1209_Y
      New ports: A=\wire135, B={ 2'00 $auto$rtlil.cc:1832:Not$1907 }, Y=$procmux$1209_Y [2:0]
      New connections: $procmux$1209_Y [14:3] = { $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] $procmux$1209_Y [2] }
    Consolidated identical input bits for $mux cell $procmux$1221:
      Old ports: A={ \wire131 [12] \wire131 [12] \wire131 [12] \wire131 [12] \wire131 [12] \wire131 }, B={ \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6:4] 1'1 \wire129 [2:0] }, Y=$procmux$1221_Y
      New ports: A=\wire131, B={ \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6] \wire129 [6:4] 1'1 \wire129 [2:0] }, Y=$procmux$1221_Y [12:0]
      New connections: $procmux$1221_Y [17:13] = { $procmux$1221_Y [12] $procmux$1221_Y [12] $procmux$1221_Y [12] $procmux$1221_Y [12] $procmux$1221_Y [12] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1145$958:
      Old ports: A={ 6'000000 \reg139 [0] }, B=7'1000001, Y=$ternary$rtl.v:1145$958_Y [6:0]
      New ports: A={ 1'0 \reg139 [0] }, B=2'11, Y={ $ternary$rtl.v:1145$958_Y [6] $ternary$rtl.v:1145$958_Y [0] }
      New connections: $ternary$rtl.v:1145$958_Y [5:1] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1145$961:
      Old ports: A={ 14'11111111111111 $auto$opt_expr.cc:189:group_cell_inputs$2276 $auto$opt_expr.cc:189:group_cell_inputs$2274 }, B={ 20'00000000000000000000 $reduce_and$rtl.v:1144$955_Y [0] }, Y=$ternary$rtl.v:1145$961_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$2276 $auto$opt_expr.cc:189:group_cell_inputs$2274 }, B={ 7'0000000 $reduce_and$rtl.v:1144$955_Y [0] }, Y=$ternary$rtl.v:1145$961_Y [7:0]
      New connections: $ternary$rtl.v:1145$961_Y [20:8] = { $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] $ternary$rtl.v:1145$961_Y [7] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1183$1008:
      Old ports: A={ $logic_or$rtl.v:1182$1006_Y 19'0000000000000000000 }, B=20'00000000000000000000, Y=$ternary$rtl.v:1183$1008_Y
      New ports: A=$logic_or$rtl.v:1182$1006_Y, B=1'0, Y=$ternary$rtl.v:1183$1008_Y [19]
      New connections: $ternary$rtl.v:1183$1008_Y [18:0] = 19'0000000000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1211$1036:
      Old ports: A=6'100110, B=6'000000, Y=$ternary$rtl.v:1211$1036_Y [5:0]
      New ports: A=1'1, B=1'0, Y=$ternary$rtl.v:1211$1036_Y [1]
      New connections: { $ternary$rtl.v:1211$1036_Y [5:2] $ternary$rtl.v:1211$1036_Y [0] } = { $ternary$rtl.v:1211$1036_Y [1] 2'00 $ternary$rtl.v:1211$1036_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1224$1058:
      Old ports: A={ 10'0000000000 $auto$wreduce.cc:455:run$1618 [7:0] }, B={ 15'000000000000000 $and$rtl.v:1223$1054_Y [2:0] }, Y=$ternary$rtl.v:1224$1058_Y [17:0]
      New ports: A=$auto$wreduce.cc:455:run$1618 [7:0], B={ 5'00000 $and$rtl.v:1223$1054_Y [2:0] }, Y=$ternary$rtl.v:1224$1058_Y [7:0]
      New connections: $ternary$rtl.v:1224$1058_Y [17:8] = 10'0000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1240$1085:
      Old ports: A=8'10111100, B=8'00000001, Y=$auto$wreduce.cc:455:run$1621 [7:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:455:run$1621 [2] $auto$wreduce.cc:455:run$1621 [0] }
      New connections: { $auto$wreduce.cc:455:run$1621 [7:3] $auto$wreduce.cc:455:run$1621 [1] } = { $auto$wreduce.cc:455:run$1621 [2] 1'0 $auto$wreduce.cc:455:run$1621 [2] $auto$wreduce.cc:455:run$1621 [2] $auto$wreduce.cc:455:run$1621 [2] 1'0 }
  Optimizing cells in module \module128.
    Consolidated identical input bits for $mux cell $procmux$1182:
      Old ports: A=$auto$wreduce.cc:455:run$1621 [7:0], B={ 5'00000 \reg151 [2:0] }, Y=$0\reg157[21:0]
      New ports: A={ $auto$wreduce.cc:455:run$1621 [2] $auto$wreduce.cc:455:run$1621 [2] 1'0 $auto$wreduce.cc:455:run$1621 [0] }, B={ 1'0 \reg151 [2:0] }, Y=$0\reg157[21:0] [3:0]
      New connections: $0\reg157[21:0] [7:4] = { $0\reg157[21:0] [3] 1'0 $0\reg157[21:0] [3] $0\reg157[21:0] [3] }
    Consolidated identical input bits for $mux cell $procmux$1224:
      Old ports: A=$procmux$1221_Y, B={ 15'000000000000000 \wire135 }, Y=$0\reg142[17:0]
      New ports: A=$procmux$1221_Y [12:0], B={ 10'0000000000 \wire135 }, Y=$0\reg142[17:0] [12:0]
      New connections: $0\reg142[17:0] [17:13] = { $0\reg142[17:0] [12] $0\reg142[17:0] [12] $0\reg142[17:0] [12] $0\reg142[17:0] [12] $0\reg142[17:0] [12] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1183$1010:
      Old ports: A=$ternary$rtl.v:1183$1008_Y, B={ 15'000000000000000 $auto$wreduce.cc:455:run$1614 [4:0] }, Y=$ternary$rtl.v:1183$1010_Y
      New ports: A={ $ternary$rtl.v:1183$1008_Y [19] 5'00000 }, B={ 1'0 $auto$wreduce.cc:455:run$1614 [4:0] }, Y={ $ternary$rtl.v:1183$1010_Y [19] $ternary$rtl.v:1183$1010_Y [4:0] }
      New connections: $ternary$rtl.v:1183$1010_Y [18:5] = 14'00000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1224$1061:
      Old ports: A={ 17'00000000000000000 \wire130 [1] }, B=$ternary$rtl.v:1224$1058_Y [17:0], Y=$ternary$rtl.v:1224$1061_Y [17:0]
      New ports: A={ 7'0000000 \wire130 [1] }, B=$ternary$rtl.v:1224$1058_Y [7:0], Y=$ternary$rtl.v:1224$1061_Y [7:0]
      New connections: $ternary$rtl.v:1224$1061_Y [17:8] = 10'0000000000
  Optimizing cells in module \module128.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1225$1066:
      Old ports: A={ 15'000000000000000 $ternary$rtl.v:1225$1065_Y [2:0] }, B=$ternary$rtl.v:1224$1061_Y [17:0], Y=$ternary$rtl.v:1225$1066_Y [17:0]
      New ports: A={ 5'00000 $ternary$rtl.v:1225$1065_Y [2:0] }, B=$ternary$rtl.v:1224$1061_Y [7:0], Y=$ternary$rtl.v:1225$1066_Y [7:0]
      New connections: $ternary$rtl.v:1225$1066_Y [17:8] = 10'0000000000
  Optimizing cells in module \module128.
  Optimizing cells in module \module13.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:761$709:
      Old ports: A={ \wire17 [10] \wire17 [10] \wire17 [10] \wire17 [10] \wire17 [10] \wire17 }, B={ \wire19 [15] \wire19 [15] \wire19 [15] \wire19 [12:0] }, Y=$ternary$rtl.v:761$709_Y
      New ports: A={ \wire17 [10] \wire17 [10] \wire17 [10] \wire17 }, B={ \wire19 [15] \wire19 [12:0] }, Y=$ternary$rtl.v:761$709_Y [13:0]
      New connections: $ternary$rtl.v:761$709_Y [15:14] = { $ternary$rtl.v:761$709_Y [13] $ternary$rtl.v:761$709_Y [13] }
  Optimizing cells in module \module13.
  Optimizing cells in module \module175.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1023$893:
      Old ports: A=7'0000000, B={ 6'000000 \reg183 [0] }, Y=$auto$wreduce.cc:455:run$1647 [6:0]
      New ports: A=1'0, B=\reg183 [0], Y=$auto$wreduce.cc:455:run$1647 [0]
      New connections: $auto$wreduce.cc:455:run$1647 [6:1] = 6'000000
  Optimizing cells in module \module175.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1023$895:
      Old ports: A=$auto$wreduce.cc:455:run$1647 [6:0], B={ 6'000000 \reg186 [0] }, Y=\wire188
      New ports: A=$auto$wreduce.cc:455:run$1647 [0], B=\reg186 [0], Y=\wire188 [0]
      New connections: \wire188 [6:1] = 6'000000
  Optimizing cells in module \module175.
  Optimizing cells in module \module200.
    Consolidated identical input bits for $mux cell $procmux$1246:
      Old ports: A={ 17'00000000000000000 $auto$wreduce.cc:455:run$1668 [0] }, B={ \wire201 [12] \wire201 [12] \wire201 [12] \wire201 [12] \wire201 [12] \wire201 }, Y=$0\reg217[17:0]
      New ports: A={ 12'000000000000 $auto$wreduce.cc:455:run$1668 [0] }, B=\wire201, Y=$0\reg217[17:0] [12:0]
      New connections: $0\reg217[17:0] [17:13] = { $0\reg217[17:0] [12] $0\reg217[17:0] [12] $0\reg217[17:0] [12] $0\reg217[17:0] [12] $0\reg217[17:0] [12] }
    Consolidated identical input bits for $mux cell $procmux$1249:
      Old ports: A={ 13'0000000000000 $reduce_xnor$rtl.v:935$799_Y }, B=14'11111111111111, Y=$0\reg218[13:0]
      New ports: A={ 1'0 $reduce_xnor$rtl.v:935$799_Y }, B=2'11, Y=$0\reg218[13:0] [1:0]
      New connections: $0\reg218[13:0] [13:2] = { $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] $0\reg218[13:0] [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:847$738:
      Old ports: A={ 10'0010100010 \wire204 }, B=16'1111111111111111, Y=$ternary$rtl.v:847$738_Y
      New ports: A={ 1'0 \wire204 }, B=7'1111111, Y=$ternary$rtl.v:847$738_Y [6:0]
      New connections: $ternary$rtl.v:847$738_Y [15:7] = { $ternary$rtl.v:847$738_Y [6] $ternary$rtl.v:847$738_Y [6] 1'1 $ternary$rtl.v:847$738_Y [6] 1'1 $ternary$rtl.v:847$738_Y [6] $ternary$rtl.v:847$738_Y [6] $ternary$rtl.v:847$738_Y [6] 1'1 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:860$752:
      Old ports: A={ 17'00000000000000000 \wire206 }, B={ \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 [2] \wire203 }, Y=$ternary$rtl.v:860$752_Y
      New ports: A={ 2'00 \wire206 }, B=\wire203, Y=$ternary$rtl.v:860$752_Y [2:0]
      New connections: $ternary$rtl.v:860$752_Y [17:3] = { $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] $ternary$rtl.v:860$752_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:932$787:
      Old ports: A={ \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] }, B={ \reg211 [9] \reg211 [9] \reg211 [9] \reg211 [9] \reg211 [9] \reg211 [9] \reg211 }, Y=$ternary$rtl.v:932$787_Y
      New ports: A={ \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] \wire205 [15] }, B=\reg211, Y=$ternary$rtl.v:932$787_Y [9:0]
      New connections: $ternary$rtl.v:932$787_Y [15:10] = { $ternary$rtl.v:932$787_Y [9] $ternary$rtl.v:932$787_Y [9] $ternary$rtl.v:932$787_Y [9] $ternary$rtl.v:932$787_Y [9] $ternary$rtl.v:932$787_Y [9] $ternary$rtl.v:932$787_Y [9] }
  Optimizing cells in module \module200.
    New input vector for $reduce_or cell $reduce_or$rtl.v:860$753: { $ternary$rtl.v:860$752_Y [0] $ternary$rtl.v:860$752_Y [1] $ternary$rtl.v:860$752_Y [2] }
  Optimizing cells in module \module200.
  Optimizing cells in module \module37.
    Consolidated identical input bits for $mux cell $procmux$1315:
      Old ports: A=22'0000000000000000000001, B={ 7'0000000 $auto$wreduce.cc:455:run$1707 [14:0] }, Y=$0\reg87[21:0]
      New ports: A=15'000000000000001, B=$auto$wreduce.cc:455:run$1707 [14:0], Y=$0\reg87[21:0] [14:0]
      New connections: $0\reg87[21:0] [21:15] = 7'0000000
    Consolidated identical input bits for $mux cell $procmux$1333:
      Old ports: A={ 10'0000000000 $auto$wreduce.cc:455:run$1726 [7:0] }, B={ 10'0000000000 $ternary$rtl.v:677$603_Y }, Y=$0\reg90[17:0]
      New ports: A=$auto$wreduce.cc:455:run$1726 [7:0], B=$ternary$rtl.v:677$603_Y, Y=$0\reg90[17:0] [7:0]
      New connections: $0\reg90[17:0] [17:8] = 10'0000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:589$466:
      Old ports: A={ 5'00000 \reg50 }, B={ 9'000000000 $logic_not$rtl.v:489$288_Y }, Y=$ternary$rtl.v:589$466_Y [9:0]
      New ports: A=\reg50, B={ 4'0000 $logic_not$rtl.v:489$288_Y }, Y=$ternary$rtl.v:589$466_Y [4:0]
      New connections: $ternary$rtl.v:589$466_Y [9:5] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:594$472:
      Old ports: A=20'00000000000010011111, B={ \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] \reg56 [0] }, Y=$ternary$rtl.v:594$472_Y
      New ports: A=2'01, B={ \reg56 [0] \reg56 [0] }, Y={ $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [0] }
      New connections: { $ternary$rtl.v:594$472_Y [19:6] $ternary$rtl.v:594$472_Y [4:1] } = { $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [0] $ternary$rtl.v:594$472_Y [5] $ternary$rtl.v:594$472_Y [0] $ternary$rtl.v:594$472_Y [0] $ternary$rtl.v:594$472_Y [0] $ternary$rtl.v:594$472_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:628$516:
      Old ports: A=7'1000100, B={ 6'000000 \reg62 [0] }, Y=$ternary$rtl.v:628$516_Y
      New ports: A=2'10, B={ 1'0 \reg62 [0] }, Y={ $ternary$rtl.v:628$516_Y [2] $ternary$rtl.v:628$516_Y [0] }
      New connections: { $ternary$rtl.v:628$516_Y [6:3] $ternary$rtl.v:628$516_Y [1] } = { $ternary$rtl.v:628$516_Y [2] 4'0000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:636$536:
      Old ports: A=8'10101100, B={ 7'0000000 $auto$rtlil.cc:1832:Not$2043 }, Y=$ternary$rtl.v:636$536_Y
      New ports: A=2'10, B={ 1'0 $auto$rtlil.cc:1832:Not$2043 }, Y={ $ternary$rtl.v:636$536_Y [2] $ternary$rtl.v:636$536_Y [0] }
      New connections: { $ternary$rtl.v:636$536_Y [7:3] $ternary$rtl.v:636$536_Y [1] } = { $ternary$rtl.v:636$536_Y [2] 1'0 $ternary$rtl.v:636$536_Y [2] 1'0 $ternary$rtl.v:636$536_Y [2] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:642$550:
      Old ports: A={ 16'1111111111111111 \wire64 [2:0] }, B=19'0000000000010011110, Y=$ternary$rtl.v:642$550_Y
      New ports: A={ 1'1 \wire64 [2:0] }, B=4'0110, Y={ $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [2:0] }
      New connections: { $ternary$rtl.v:642$550_Y [18:6] $ternary$rtl.v:642$550_Y [4:3] } = { $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] $ternary$rtl.v:642$550_Y [5] 1'1 $ternary$rtl.v:642$550_Y [5] 2'11 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:647$560:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$1701 [0] }, B={ $reduce_xnor$rtl.v:645$556_Y 5'00000 $auto$wreduce.cc:455:run$1719 [5:0] }, Y=$ternary$rtl.v:647$560_Y
      New ports: A={ 6'000000 $auto$wreduce.cc:455:run$1701 [0] }, B={ $reduce_xnor$rtl.v:645$556_Y $auto$wreduce.cc:455:run$1719 [5:0] }, Y={ $ternary$rtl.v:647$560_Y [11] $ternary$rtl.v:647$560_Y [5:0] }
      New connections: $ternary$rtl.v:647$560_Y [10:6] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:647$563:
      Old ports: A={ 2'00 $auto$wreduce.cc:455:run$1695 [0] }, B=3'000, Y=$auto$wreduce.cc:455:run$1720 [2:0]
      New ports: A=$auto$wreduce.cc:455:run$1695 [0], B=1'0, Y=$auto$wreduce.cc:455:run$1720 [0]
      New connections: $auto$wreduce.cc:455:run$1720 [2:1] = 2'00
    Consolidated identical input bits for $mux cell $ternary$rtl.v:677$603:
      Old ports: A={ 6'000000 \wire41 [3:2] }, B=8'10101000, Y=$ternary$rtl.v:677$603_Y
      New ports: A={ 1'0 \wire41 [3:2] }, B=3'100, Y={ $ternary$rtl.v:677$603_Y [3] $ternary$rtl.v:677$603_Y [1:0] }
      New connections: { $ternary$rtl.v:677$603_Y [7:4] $ternary$rtl.v:677$603_Y [2] } = { $ternary$rtl.v:677$603_Y [3] 1'0 $ternary$rtl.v:677$603_Y [3] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:695$629:
      Old ports: A={ 25'0000000000000000000000000 $auto$wreduce.cc:455:run$1712 [0] }, B={ \reg84 8'10011110 }, Y=$auto$wreduce.cc:455:run$1724
      New ports: A={ 19'0000000000000000000 $auto$wreduce.cc:455:run$1712 [0] }, B={ \reg84 2'10 }, Y={ $auto$wreduce.cc:455:run$1724 [25:8] $auto$wreduce.cc:455:run$1724 [1:0] }
      New connections: $auto$wreduce.cc:455:run$1724 [7:2] = { $auto$wreduce.cc:455:run$1724 [1] 2'00 $auto$wreduce.cc:455:run$1724 [1] $auto$wreduce.cc:455:run$1724 [1] $auto$wreduce.cc:455:run$1724 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:697$636:
      Old ports: A={ 9'000000000 $ternary$rtl.v:697$634_Y [0] }, B=10'0000000000, Y=$auto$wreduce.cc:455:run$1704 [9:0]
      New ports: A=$ternary$rtl.v:697$634_Y [0], B=1'0, Y=$auto$wreduce.cc:455:run$1704 [0]
      New connections: $auto$wreduce.cc:455:run$1704 [9:1] = 9'000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:700$644:
      Old ports: A=8'10100111, B={ 7'0000000 \wire39 [4] }, Y=$auto$wreduce.cc:455:run$1725 [7:0]
      New ports: A=2'11, B={ 1'0 \wire39 [4] }, Y=$auto$wreduce.cc:455:run$1725 [1:0]
      New connections: $auto$wreduce.cc:455:run$1725 [7:2] = { $auto$wreduce.cc:455:run$1725 [1] 1'0 $auto$wreduce.cc:455:run$1725 [1] 2'00 $auto$wreduce.cc:455:run$1725 [1] }
  Optimizing cells in module \module37.
    Consolidated identical input bits for $mux cell $procmux$1327:
      Old ports: A=$auto$wreduce.cc:455:run$1704 [9:0], B={ 9'000000000 $eq$rtl.v:676$597_Y }, Y=$0\reg89[17:0]
      New ports: A=$auto$wreduce.cc:455:run$1704 [0], B=$eq$rtl.v:676$597_Y, Y=$0\reg89[17:0] [0]
      New connections: $0\reg89[17:0] [9:1] = 9'000000000
  Optimizing cells in module \module37.
  Optimizing cells in module \module5.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:319$224:
      Old ports: A={ \wire8 [17] \wire8 }, B=19'0000000000010111111, Y=$ternary$rtl.v:319$224_Y [18:0]
      New ports: A=\wire8, B=18'000000000010111111, Y=$ternary$rtl.v:319$224_Y [17:0]
      New connections: $ternary$rtl.v:319$224_Y [18] = $ternary$rtl.v:319$224_Y [17]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:331$250:
      Old ports: A={ \wire8 [17] \wire8 [17] \wire8 [17] \wire8 [17] \wire8 }, B={ 11'00000000000 $ternary$rtl.v:331$249_Y }, Y=$ternary$rtl.v:331$250_Y
      New ports: A=\wire8, B={ 7'0000000 $ternary$rtl.v:331$249_Y }, Y=$ternary$rtl.v:331$250_Y [17:0]
      New connections: $ternary$rtl.v:331$250_Y [21:18] = { $ternary$rtl.v:331$250_Y [17] $ternary$rtl.v:331$250_Y [17] $ternary$rtl.v:331$250_Y [17] $ternary$rtl.v:331$250_Y [17] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:350$265:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$1737 [0] }, B={ \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2:0] }, Y=$ternary$rtl.v:350$265_Y
      New ports: A={ 2'00 $auto$wreduce.cc:455:run$1737 [0] }, B=\reg105 [2:0], Y=$ternary$rtl.v:350$265_Y [2:0]
      New connections: $ternary$rtl.v:350$265_Y [11:3] = { $ternary$rtl.v:350$265_Y [2] $ternary$rtl.v:350$265_Y [2] $ternary$rtl.v:350$265_Y [2] $ternary$rtl.v:350$265_Y [2] $ternary$rtl.v:350$265_Y [2] $ternary$rtl.v:350$265_Y [2] $ternary$rtl.v:350$265_Y [2] $ternary$rtl.v:350$265_Y [2] $ternary$rtl.v:350$265_Y [2] }
  Optimizing cells in module \module5.
  Optimizing cells in module \top.
Performed a total of 47 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
<suppressed ~7 debug messages>
Optimizing module module128.
<suppressed ~24 debug messages>
Optimizing module module13.
Optimizing module module175.
<suppressed ~9 debug messages>
Optimizing module module200.
<suppressed ~5 debug messages>
Optimizing module module37.
<suppressed ~5 debug messages>
Optimizing module module5.
<suppressed ~3 debug messages>
Optimizing module top.

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module114..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module175..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module200..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:847$738.
    dead port 2/2 on $mux $ternary$rtl.v:847$738.
Running muxtree optimizer on module \module37..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:642$550.
    dead port 2/2 on $mux $ternary$rtl.v:642$550.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 4 multiplexer ports.
<suppressed ~151 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module114.
    New input vector for $reduce_or cell $reduce_or$rtl.v:223$118: { $ternary$rtl.v:223$117_Y [0] $ternary$rtl.v:223$117_Y [2] $ternary$rtl.v:223$117_Y [6] $ternary$rtl.v:223$117_Y [7] $ternary$rtl.v:223$117_Y [8] $ternary$rtl.v:223$117_Y [9] }
  Optimizing cells in module \module114.
  Optimizing cells in module \module128.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1145$961:
      Old ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$2276 $auto$opt_expr.cc:189:group_cell_inputs$2274 }, B={ 7'0000000 $reduce_and$rtl.v:1144$955_Y [0] }, Y={ $ternary$rtl.v:1145$961_Y [20] $ternary$rtl.v:1145$961_Y [6:0] }
      New ports: A={ $auto$opt_expr.cc:189:group_cell_inputs$2401 1'1 $auto$opt_expr.cc:189:group_cell_inputs$2407 $auto$opt_expr.cc:189:group_cell_inputs$2405 }, B={ 4'0000 $reduce_and$rtl.v:1144$955_Y [0] }, Y={ $ternary$rtl.v:1145$961_Y [6] $ternary$rtl.v:1145$961_Y [3:0] }
      New connections: { $ternary$rtl.v:1145$961_Y [20] $ternary$rtl.v:1145$961_Y [5:4] } = { $ternary$rtl.v:1145$961_Y [3] $ternary$rtl.v:1145$961_Y [3] $ternary$rtl.v:1145$961_Y [3] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1211$1039:
      Old ports: A=$auto$wreduce.cc:455:run$1606 [5:0], B={ 5'00000 $logic_not$rtl.v:1210$1033_Y }, Y=$auto$wreduce.cc:455:run$1616 [5:0]
      New ports: A={ 1'1 \wire131 [1] 1'1 }, B={ 2'00 $logic_not$rtl.v:1210$1033_Y }, Y={ $auto$wreduce.cc:455:run$1616 [3] $auto$wreduce.cc:455:run$1616 [1:0] }
      New connections: { $auto$wreduce.cc:455:run$1616 [5:4] $auto$wreduce.cc:455:run$1616 [2] } = { $auto$wreduce.cc:455:run$1616 [1] $auto$wreduce.cc:455:run$1616 [3] $auto$wreduce.cc:455:run$1616 [1] }
  Optimizing cells in module \module128.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1211$1042:
      Old ports: A=6'100001, B=$auto$wreduce.cc:455:run$1616 [5:0], Y=$auto$wreduce.cc:455:run$1617 [5:0]
      New ports: A=4'1001, B={ $auto$wreduce.cc:455:run$1616 [1] $auto$wreduce.cc:455:run$1616 [3] $auto$wreduce.cc:455:run$1616 [1:0] }, Y={ $auto$wreduce.cc:455:run$1617 [5] $auto$wreduce.cc:455:run$1617 [3] $auto$wreduce.cc:455:run$1617 [1:0] }
      New connections: { $auto$wreduce.cc:455:run$1617 [4] $auto$wreduce.cc:455:run$1617 [2] } = { $auto$wreduce.cc:455:run$1617 [3] $auto$wreduce.cc:455:run$1617 [1] }
  Optimizing cells in module \module128.
  Optimizing cells in module \module13.
  Optimizing cells in module \module175.
  Optimizing cells in module \module200.
  Optimizing cells in module \module37.
  Optimizing cells in module \module5.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:363$274:
      Old ports: A=\wire12, B={ \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2:0] }, Y=$ternary$rtl.v:363$274_Y
      New ports: A=$auto$opt_expr.cc:189:group_cell_inputs$2418, B={ \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2] \reg105 [2:0] }, Y=$ternary$rtl.v:363$274_Y [17:0]
      New connections: $ternary$rtl.v:363$274_Y [18] = $ternary$rtl.v:363$274_Y [17]
  Optimizing cells in module \module5.
  Optimizing cells in module \top.
Performed a total of 5 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 2 unused cells and 23 unused wires.
<suppressed ~8 debug messages>

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
Optimizing module top.

2.20.16. Rerunning OPT passes. (Maybe there is more to do..)

2.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module114..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module175..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module200..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module37..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~151 debug messages>

2.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module114.
  Optimizing cells in module \module128.
  Optimizing cells in module \module13.
  Optimizing cells in module \module175.
  Optimizing cells in module \module200.
  Optimizing cells in module \module37.
  Optimizing cells in module \module5.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..

2.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
Optimizing module module5.
Optimizing module top.

2.20.23. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using template $paramod$constmap:4f61ba51e5c699480f9779b946a54f2360aea8a4$paramod$075b536e03880a6e64197e5387b62c26b81fb177\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $xnor.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:4589e0285d21fa7c92f418e8d5d060cc36aa80cf$paramod$5045caf947a1a9ec9baa1f6448545161d16834bb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_xnor.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add $auto$wreduce.cc:455:run$1738 [10:0] * $auto$wreduce.cc:455:run$1736 [0] (11x1 bits, unsigned)
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_lcu\WIDTH=12 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=20 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=22 for cells of type $lcu.
  add { \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] \wire174 [18] } * \wire120 (19x5 bits, unsigned)
Using template $paramod$constmap:27eadfd3fa0dc28d885eae32c37aecece3abcbb6$paramod$e88b0637aa29649918e78ef9aac601aae12db5b6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$constmap:8447f37310514d86d7cbd34d161a2b0a5f1fa398$paramod$e70c49fe79bdf8cb61d15ee8f8e7596293f64919\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:51d6c62851eb38cc1fea07b09be4a0b1b539b07d$paramod$8c729d2db4b41a5799b94dbef780e496f87371ac\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:a129ad89dab2657357871e82bf9ecd734a7de683$paramod$a2fc4b92fd1e8bb83ca34693ad8c55124c6fc991\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:1a308a6918bd08ba9920182c15086df3d8b8cce1$paramod$781083920679e353a3a9b56469bfe918c0c8c7ab\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=8\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=19 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=18 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=15 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=19 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
  add { \wire67 [7] \wire67 [7] \wire67 [7] \wire67 [7] \wire67 [7] \wire67 [7] \wire67 [7] \wire67 [7] } * \reg57 (8x5 bits, unsigned)
  add \reg78 * 8'10111011 (11x8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod$constmap:c92a18f044c9349cb5497b0b7bf879f34ddfdf7b$paramod$0cd37241fcd5ba1cd00c992bcf8099274f0e67ae\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:6429a0de1814e7231a306afffe918fb92017227d$paramod$4dd38ac4af7c70b00767e2d9726935a4a53a508e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:59246a6985393390e5f0fe60c11e81fffb1ffe00$paramod$56d1b9731b458ea639bbebb707f13d1046f03408\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:e4dc08f59052c64e658a2cf2c64f994e00d1f61b$paramod$58a208e308be6304dd5f2e66c448e8b0004cd2d0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=5\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod$constmap:922101488acd3e99697adaab550503309519be66$paramod$487ec1774bffa47a36f53ae26164eada2db61984\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=8\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=5\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=5\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=12 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=11 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=13 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=21 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=3\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod$constmap:149243966e55990447b265bf363262ee2324aa0c$paramod$fcfd59662271d228e1745624ca66a511d5da1746\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=13\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod$constmap:f8f0bb122de4a132ef7ecf30394b4f0437cc94a6$paramod$d244ea0e65d7555135e57f6f4a13a4d809c36578\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:91291911ad45070d10227a9f587019d8903e379b$paramod$1e45ff24c1aacb4aca10231a3bca84805e0299c2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=21\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using template $paramod$constmap:7d9b818da523eefd71b9e3b78ff8771d48b51f12$paramod$15dfd6714178d6bf4677d833efe7ad65589d4873\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:6b5deabfcce72de3d51e64e07f24fab258918d5d$paramod$f45e993e53123ca41bd73a27c769fa5caea3a1d6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
  add \reg141 * \wire133 [1] (3x1 bits, unsigned)
Using template $paramod$constmap:ead7d7bd9c1a00c2da953cde6b1129360d6d041d$paramod$79dce3cd06614cede9a2871e5266021a4be9d66c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:1df791ab0ce27fba70383fcb97613702e0ed2a94$paramod$23c4472abb88f3b9ab2cdaaa949796c55ee378fd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=6 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=16 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=9 for cells of type $alu.
Using template $paramod$constmap:6f586cacd5a71e3f19503f27318ccb838fa119e7$paramod$e20dd20ae6cf78f92574728bfe31ba3c17dbc2cf\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:d602a6b6e6c48d0d0a68adfc703f8d9c0ddf1caf$paramod$431fce925a2445552295afa4bfa2e8080d248c42\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
  add \wire18 * \wire17 (16x11 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod$constmap:c86acad83bf391e7a1040be554f22def522fd003$paramod$e30fd9981fdb534ac72360e79d1d5baa535189b8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:e5c1a6a4d8ce07729bca58ba9f280b25223e926f$paramod$541e847ccb24252f1689438320c83ab0835222f9\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:32584694ccec0f38847544bb77999719d9a30c0d$paramod$8bb8e9baa48b2bfc804c16b315470b3884ef5b66\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=22 for cells of type $fa.
No more expansions possible.
<suppressed ~13416 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
<suppressed ~613 debug messages>
Optimizing module module128.
<suppressed ~616 debug messages>
Optimizing module module13.
<suppressed ~1605 debug messages>
Optimizing module module175.
<suppressed ~389 debug messages>
Optimizing module module200.
<suppressed ~234 debug messages>
Optimizing module module37.
<suppressed ~2429 debug messages>
Optimizing module module5.
<suppressed ~254 debug messages>
Optimizing module top.
<suppressed ~35 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
<suppressed ~1515 debug messages>
Finding identical cells in module `\module128'.
<suppressed ~582 debug messages>
Finding identical cells in module `\module13'.
<suppressed ~57 debug messages>
Finding identical cells in module `\module175'.
<suppressed ~480 debug messages>
Finding identical cells in module `\module200'.
<suppressed ~288 debug messages>
Finding identical cells in module `\module37'.
<suppressed ~1425 debug messages>
Finding identical cells in module `\module5'.
<suppressed ~273 debug messages>
Finding identical cells in module `\top'.
<suppressed ~69 debug messages>
Removed a total of 1563 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$6839 ($_DFF_P_) from module module114.
Removing $auto$simplemap.cc:420:simplemap_dff$21703 ($_DFF_P_) from module module128.
Removing $auto$simplemap.cc:420:simplemap_dff$17331 ($_DFF_P_) from module module175.
Removing $auto$simplemap.cc:420:simplemap_dff$23832 ($_DFF_P_) from module module200.
Removing $auto$simplemap.cc:420:simplemap_dff$12362 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12357 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12356 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12355 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12354 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12353 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12352 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12351 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12350 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12349 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12348 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12346 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12345 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12344 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12343 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12342 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12341 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12340 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12339 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12338 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12337 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12336 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12335 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12334 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12333 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12332 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12331 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12329 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12328 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12327 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12326 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12325 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12324 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12323 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12322 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12321 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12320 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12319 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12318 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12317 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12316 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12315 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12314 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12313 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12312 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12310 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12309 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12311 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12330 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12347 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$12358 ($_DFF_P_) from module module37.
Removing $auto$simplemap.cc:420:simplemap_dff$3717 ($_DFF_P_) from module module5.
Replaced 56 DFF cells.

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 1222 unused cells and 4042 unused wires.
<suppressed ~1230 debug messages>

2.22.5. Rerunning OPT passes. (Removed registers in this run.)

2.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
<suppressed ~24 debug messages>
Optimizing module module128.
<suppressed ~26 debug messages>
Optimizing module module13.
<suppressed ~1 debug messages>
Optimizing module module175.
<suppressed ~4 debug messages>
Optimizing module module200.
<suppressed ~17 debug messages>
Optimizing module module37.
<suppressed ~407 debug messages>
Optimizing module module5.
<suppressed ~2 debug messages>
Optimizing module top.
<suppressed ~2 debug messages>

2.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
<suppressed ~30 debug messages>
Finding identical cells in module `\module128'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
<suppressed ~522 debug messages>
Finding identical cells in module `\module5'.
<suppressed ~33 debug messages>
Finding identical cells in module `\top'.
Removed a total of 198 cells.

2.22.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$6766 ($_DFF_P_) from module module114.
Promoting init spec \reg248 [3:1] = 3'000 to constant driver in module module114.
Promoting init spec \reg247 [15:12] = 4'0000 to constant driver in module module114.
Removing $auto$simplemap.cc:420:simplemap_dff$12253 ($_DFF_P_) from module module37.
Promoted 2 init specs to constant drivers.
Replaced 2 DFF cells.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 129 unused cells and 176 unused wires.
<suppressed ~136 debug messages>

2.22.10. Rerunning OPT passes. (Removed registers in this run.)

2.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
<suppressed ~2 debug messages>
Optimizing module module128.
<suppressed ~1 debug messages>
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
Optimizing module module37.
<suppressed ~202 debug messages>
Optimizing module module5.
Optimizing module top.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 3 cells.

2.22.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 4 unused cells and 88 unused wires.
<suppressed ~5 debug messages>

2.22.15. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\module114' to `<abc-temp-dir>/input.blif'..
Extracted 1079 gates and 1248 wires to a netlist network with 167 inputs and 140 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       44
ABC RESULTS:            ANDNOT cells:      136
ABC RESULTS:              AOI3 cells:       26
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               MUX cells:      147
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:       41
ABC RESULTS:               NOT cells:       61
ABC RESULTS:              OAI3 cells:       12
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      178
ABC RESULTS:             ORNOT cells:       50
ABC RESULTS:              XNOR cells:       27
ABC RESULTS:               XOR cells:       90
ABC RESULTS:        internal signals:      941
ABC RESULTS:           input signals:      167
ABC RESULTS:          output signals:      140
Removing temp directory.

2.23.2. Extracting gate netlist of module `\module128' to `<abc-temp-dir>/input.blif'..
Extracted 1648 gates and 1924 wires to a netlist network with 274 inputs and 209 outputs.

2.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       66
ABC RESULTS:            ANDNOT cells:      260
ABC RESULTS:              AOI3 cells:       76
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      301
ABC RESULTS:              NAND cells:       49
ABC RESULTS:               NOR cells:       38
ABC RESULTS:               NOT cells:       94
ABC RESULTS:              OAI3 cells:       32
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:      437
ABC RESULTS:             ORNOT cells:       26
ABC RESULTS:              XNOR cells:       24
ABC RESULTS:               XOR cells:       68
ABC RESULTS:        internal signals:     1441
ABC RESULTS:           input signals:      274
ABC RESULTS:          output signals:      209
Removing temp directory.

2.23.3. Extracting gate netlist of module `\module13' to `<abc-temp-dir>/input.blif'..
Extracted 554 gates and 622 wires to a netlist network with 66 inputs and 45 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:            ANDNOT cells:       80
ABC RESULTS:              AOI3 cells:       34
ABC RESULTS:              AOI4 cells:        3
ABC RESULTS:               MUX cells:       63
ABC RESULTS:              NAND cells:       22
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:       34
ABC RESULTS:              OAI3 cells:       17
ABC RESULTS:              OAI4 cells:        7
ABC RESULTS:                OR cells:      147
ABC RESULTS:             ORNOT cells:       35
ABC RESULTS:              XNOR cells:       20
ABC RESULTS:               XOR cells:       26
ABC RESULTS:        internal signals:      511
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       45
Removing temp directory.

2.23.4. Extracting gate netlist of module `\module175' to `<abc-temp-dir>/input.blif'..
Extracted 525 gates and 582 wires to a netlist network with 55 inputs and 21 outputs.

2.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       20
ABC RESULTS:            ANDNOT cells:       66
ABC RESULTS:              AOI3 cells:       15
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               MUX cells:       61
ABC RESULTS:              NAND cells:       15
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               NOT cells:       21
ABC RESULTS:              OAI3 cells:        7
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      144
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       23
ABC RESULTS:               XOR cells:       18
ABC RESULTS:              ZERO cells:        2
ABC RESULTS:        internal signals:      506
ABC RESULTS:           input signals:       55
ABC RESULTS:          output signals:       21
Removing temp directory.

2.23.5. Extracting gate netlist of module `\module200' to `<abc-temp-dir>/input.blif'..
Extracted 399 gates and 482 wires to a netlist network with 81 inputs and 53 outputs.

2.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       17
ABC RESULTS:            ANDNOT cells:       47
ABC RESULTS:              AOI3 cells:       10
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:       35
ABC RESULTS:              NAND cells:       12
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:       14
ABC RESULTS:              OAI3 cells:       11
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:       75
ABC RESULTS:             ORNOT cells:       10
ABC RESULTS:              XNOR cells:       16
ABC RESULTS:               XOR cells:       36
ABC RESULTS:        internal signals:      348
ABC RESULTS:           input signals:       81
ABC RESULTS:          output signals:       53
Removing temp directory.

2.23.6. Extracting gate netlist of module `\module37' to `<abc-temp-dir>/input.blif'..
Extracted 1642 gates and 1904 wires to a netlist network with 260 inputs and 254 outputs.

2.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       53
ABC RESULTS:            ANDNOT cells:      298
ABC RESULTS:              AOI3 cells:       83
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      144
ABC RESULTS:              NAND cells:       30
ABC RESULTS:               NOR cells:       54
ABC RESULTS:               NOT cells:      122
ABC RESULTS:              OAI3 cells:       38
ABC RESULTS:                OR cells:      304
ABC RESULTS:             ORNOT cells:       46
ABC RESULTS:              XNOR cells:       28
ABC RESULTS:               XOR cells:      156
ABC RESULTS:        internal signals:     1390
ABC RESULTS:           input signals:      260
ABC RESULTS:          output signals:      254
Removing temp directory.

2.23.7. Extracting gate netlist of module `\module5' to `<abc-temp-dir>/input.blif'..
Extracted 737 gates and 836 wires to a netlist network with 97 inputs and 37 outputs.

2.23.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       17
ABC RESULTS:            ANDNOT cells:       90
ABC RESULTS:              AOI3 cells:       35
ABC RESULTS:               MUX cells:       72
ABC RESULTS:              NAND cells:       15
ABC RESULTS:               NOR cells:       26
ABC RESULTS:               NOT cells:       64
ABC RESULTS:              OAI3 cells:       28
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      163
ABC RESULTS:             ORNOT cells:       34
ABC RESULTS:              XNOR cells:       48
ABC RESULTS:               XOR cells:       65
ABC RESULTS:        internal signals:      702
ABC RESULTS:           input signals:       97
ABC RESULTS:          output signals:       37
Removing temp directory.

2.23.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 269 gates and 361 wires to a netlist network with 90 inputs and 20 outputs.

2.23.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:       40
ABC RESULTS:              AOI3 cells:        6
ABC RESULTS:               MUX cells:       36
ABC RESULTS:              NAND cells:       15
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        8
ABC RESULTS:              OAI3 cells:        9
ABC RESULTS:                OR cells:       82
ABC RESULTS:             ORNOT cells:       15
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:      251
ABC RESULTS:           input signals:       90
ABC RESULTS:          output signals:       20
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
<suppressed ~21 debug messages>
Optimizing module module128.
<suppressed ~107 debug messages>
Optimizing module module13.
Optimizing module module175.
<suppressed ~12 debug messages>
Optimizing module module200.
Optimizing module module37.
<suppressed ~1 debug messages>
Optimizing module module5.
<suppressed ~11 debug messages>
Optimizing module top.
<suppressed ~34 debug messages>

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
<suppressed ~42 debug messages>
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module200'.
<suppressed ~30 debug messages>
Finding identical cells in module `\module37'.
<suppressed ~69 debug messages>
Finding identical cells in module `\module5'.
<suppressed ~6 debug messages>
Finding identical cells in module `\top'.
Removed a total of 50 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$17323 ($_DFF_P_) from module module175.
Replaced 1 DFF cells.

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 4 unused cells and 3800 unused wires.
<suppressed ~12 debug messages>

2.24.5. Rerunning OPT passes. (Removed registers in this run.)

2.24.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module114.
Optimizing module module128.
Optimizing module module13.
Optimizing module module175.
Optimizing module module200.
<suppressed ~1 debug messages>
Optimizing module module37.
<suppressed ~2 debug messages>
Optimizing module module5.
Optimizing module top.

2.24.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module114'.
Finding identical cells in module `\module128'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module175'.
Finding identical cells in module `\module200'.
Finding identical cells in module `\module37'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module5'.
Finding identical cells in module `\top'.
Removed a total of 4 cells.

2.24.8. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module114..
Finding unused cells or wires in module \module128..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module175..
Finding unused cells or wires in module \module200..
Finding unused cells or wires in module \module37..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~2 debug messages>

2.24.10. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== module114 ===

   Number of wires:                729
   Number of wire bits:           2555
   Number of public wires:          39
   Number of public wire bits:     869
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                918
     $_ANDNOT_                     136
     $_AND_                         44
     $_AOI3_                        16
     $_DFF_P_                       99
     $_MUX_                        147
     $_NAND_                        18
     $_NOR_                         41
     $_NOT_                         59
     $_OAI3_                        12
     $_OAI4_                         2
     $_ORNOT_                       50
     $_OR_                         177
     $_XNOR_                        24
     $_XOR_                         90
     module128                       1
     module175                       1
     module200                       1

=== module128 ===

   Number of wires:               1325
   Number of wire bits:           2465
   Number of public wires:          41
   Number of public wire bits:     975
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1703
     $_ANDNOT_                     260
     $_AND_                         66
     $_AOI3_                        76
     $_AOI4_                         1
     $_DFF_P_                      230
     $_MUX_                        301
     $_NAND_                        49
     $_NOR_                         38
     $_NOT_                         94
     $_OAI3_                        32
     $_OAI4_                         1
     $_ORNOT_                       26
     $_OR_                         437
     $_XNOR_                        24
     $_XOR_                         68

=== module13 ===

   Number of wires:                483
   Number of wire bits:            777
   Number of public wires:          17
   Number of public wire bits:     311
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                511
     $_ANDNOT_                      80
     $_AND_                         13
     $_AOI3_                        34
     $_AOI4_                         3
     $_MUX_                         63
     $_NAND_                        22
     $_NOR_                         10
     $_NOT_                         34
     $_OAI3_                        17
     $_OAI4_                         7
     $_ORNOT_                       35
     $_OR_                         147
     $_XNOR_                        20
     $_XOR_                         26

=== module175 ===

   Number of wires:                415
   Number of wire bits:            799
   Number of public wires:          20
   Number of public wire bits:     380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                409
     $_ANDNOT_                      66
     $_AND_                         20
     $_AOI3_                        15
     $_DFF_P_                        3
     $_MUX_                         61
     $_NAND_                        15
     $_NOR_                         12
     $_NOT_                         21
     $_OAI3_                         7
     $_OAI4_                         2
     $_ORNOT_                        2
     $_OR_                         144
     $_XNOR_                        23
     $_XOR_                         18

=== module200 ===

   Number of wires:                281
   Number of wire bits:            780
   Number of public wires:          34
   Number of public wire bits:     488
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                330
     $_ANDNOT_                      43
     $_AND_                         17
     $_AOI3_                        10
     $_AOI4_                         2
     $_DFF_P_                       43
     $_MUX_                         35
     $_NAND_                        11
     $_NOR_                          9
     $_NOT_                         14
     $_OAI3_                        11
     $_OAI4_                         1
     $_ORNOT_                        9
     $_OR_                          73
     $_XNOR_                        16
     $_XOR_                         36

=== module37 ===

   Number of wires:               1166
   Number of wire bits:           2820
   Number of public wires:          61
   Number of public wire bits:    1441
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1563
     $_ANDNOT_                     293
     $_AND_                         50
     $_AOI3_                        83
     $_AOI4_                         1
     $_DFF_P_                      235
     $_MUX_                        143
     $_NAND_                        30
     $_NOR_                         50
     $_NOT_                        120
     $_OAI3_                        33
     $_ORNOT_                       44
     $_OR_                         299
     $_XNOR_                        28
     $_XOR_                        154

=== module5 ===

   Number of wires:                651
   Number of wire bits:           1994
   Number of public wires:          27
   Number of public wire bits:     597
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                680
     $_ANDNOT_                      90
     $_AND_                         17
     $_AOI3_                        35
     $_DFF_P_                       21
     $_MUX_                         72
     $_NAND_                        14
     $_NOR_                         26
     $_NOT_                         64
     $_OAI3_                        28
     $_OAI4_                         2
     $_ORNOT_                       34
     $_OR_                         162
     $_XNOR_                        48
     $_XOR_                         65
     module13                        1
     module37                        1

=== top ===

   Number of wires:                236
   Number of wire bits:           2081
   Number of public wires:          23
   Number of public wire bits:     380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                233
     $_ANDNOT_                      40
     $_AND_                          3
     $_AOI3_                         6
     $_MUX_                         36
     $_NAND_                        15
     $_NOR_                          1
     $_NOT_                          6
     $_OAI3_                         9
     $_ORNOT_                       15
     $_OR_                          82
     $_XOR_                         16
     module114                       1
     module175                       1
     module37                        1
     module5                         1

2.27. Executing CHECK pass (checking for obvious problems).
checking module module114..
checking module module128..
checking module module13..
checking module module175..
checking module module200..
checking module module37..
checking module module5..
checking module top..
found and reported 0 problems.

3. Executing Verilog backend.
Dumping module `\module114'.
Dumping module `\module128'.
Dumping module `\module13'.
Dumping module `\module175'.
Dumping module `\module200'.
Dumping module `\module37'.
Dumping module `\module5'.
Dumping module `\top'.

Warnings: 27 unique messages, 27 total
End of script. Logfile hash: b51f672e28
CPU: user 7.94s system 0.02s, MEM: 81.34 MB total, 72.24 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 17% 47x proc (1 sec), 16% 43x opt_clean (1 sec), ...
