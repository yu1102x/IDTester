
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `read_verilog rtl.v; synth; write_verilog -noattr syn_yosys.v' --

1. Executing Verilog-2005 frontend: rtl.v
Parsing Verilog input from `rtl.v' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\module87'.
Generating RTLIL representation for module `\module33'.
Generating RTLIL representation for module `\module39'.
Generating RTLIL representation for module `\module155'.
Generating RTLIL representation for module `\module94'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).
Mapping positional arguments of cell module87.modinst189 (module155).
Mapping positional arguments of cell module87.modinst149 (module94).
Warning: Resizing cell port module33.modinst63.wire40 from 22 bits to 11 bits.
Warning: Resizing cell port module33.modinst63.wire43 from 16 bits to 3 bits.
Warning: Resizing cell port module33.modinst63.y from 13 bits to 228 bits.
Warning: Resizing cell port module87.modinst189.y from 20 bits to 266 bits.
Warning: Resizing cell port module87.modinst189.wire160 from 8 bits to 5 bits.
Warning: Resizing cell port module87.modinst189.wire158 from 20 bits to 7 bits.
Warning: Resizing cell port module87.modinst189.wire156 from 20 bits to 17 bits.
Warning: Resizing cell port module87.modinst149.y from 20 bits to 606 bits.
Warning: Resizing cell port module87.modinst149.wire98 from 20 bits to 3 bits.
Warning: Resizing cell port module87.modinst149.wire96 from 19 bits to 6 bits.
Warning: Resizing cell port module87.modinst149.wire95 from 18 bits to 7 bits.
Warning: Resizing cell port top.modinst205.y from 12 bits to 228 bits.
Warning: Resizing cell port top.modinst205.wire40 from 21 bits to 11 bits.
Warning: Resizing cell port top.modinst205.wire43 from 18 bits to 3 bits.
Warning: Resizing cell port top.modinst200.wire91 from 21 bits to 20 bits.
Warning: Resizing cell port top.modinst200.y from 20 bits to 177 bits.
Warning: Resizing cell port top.modinst81.wire35 from 12 bits to 8 bits.
Warning: Resizing cell port top.modinst81.wire38 from 18 bits to 12 bits.
Warning: Resizing cell port top.modinst81.y from 22 bits to 147 bits.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\top.$proc$rtl.v:101$1'.
Cleaned up 1 empty switch.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$rtl.v:933$803 in module module94.
Marked 3 switch rules as full_case in process $proc$rtl.v:855$688 in module module94.
Marked 1 switch rules as full_case in process $proc$rtl.v:821$635 in module module94.
Marked 3 switch rules as full_case in process $proc$rtl.v:665$569 in module module155.
Marked 3 switch rules as full_case in process $proc$rtl.v:450$400 in module module33.
Marked 2 switch rules as full_case in process $proc$rtl.v:348$299 in module module87.
Marked 1 switch rules as full_case in process $proc$rtl.v:244$189 in module top.
Marked 6 switch rules as full_case in process $proc$rtl.v:101$1 in module top.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\module94.$proc$rtl.v:768$924'.
  Set init value: \reg101 = 12'000000000000
Found init rule in `\module94.$proc$rtl.v:767$923'.
  Set init value: \reg102 = 13'0000000000000
Found init rule in `\module94.$proc$rtl.v:766$922'.
  Set init value: \reg103 = 11'00000000000
Found init rule in `\module94.$proc$rtl.v:765$921'.
  Set init value: \reg104 = 7'0000000
Found init rule in `\module94.$proc$rtl.v:755$920'.
  Set init value: \reg114 = 8'00000000
Found init rule in `\module94.$proc$rtl.v:754$919'.
  Set init value: \reg115 = 5'00000
Found init rule in `\module94.$proc$rtl.v:753$918'.
  Set init value: \reg116 = 13'0000000000000
Found init rule in `\module94.$proc$rtl.v:752$917'.
  Set init value: \reg117 = 20'00000000000000000000
Found init rule in `\module94.$proc$rtl.v:751$916'.
  Set init value: \reg118 = 4'0000
Found init rule in `\module94.$proc$rtl.v:750$915'.
  Set init value: \reg119 = 10'0000000000
Found init rule in `\module94.$proc$rtl.v:749$914'.
  Set init value: \reg120 = 16'0000000000000000
Found init rule in `\module94.$proc$rtl.v:748$913'.
  Set init value: \reg121 = 20'00000000000000000000
Found init rule in `\module94.$proc$rtl.v:747$912'.
  Set init value: \reg122 = 22'0000000000000000000000
Found init rule in `\module94.$proc$rtl.v:746$911'.
  Set init value: \reg123 = 21'000000000000000000000
Found init rule in `\module94.$proc$rtl.v:740$910'.
  Set init value: \reg129 = 20'00000000000000000000
Found init rule in `\module94.$proc$rtl.v:739$909'.
  Set init value: \reg130 = 22'0000000000000000000000
Found init rule in `\module94.$proc$rtl.v:738$908'.
  Set init value: \reg131 = 11'00000000000
Found init rule in `\module94.$proc$rtl.v:737$907'.
  Set init value: \reg132 = 17'00000000000000000
Found init rule in `\module94.$proc$rtl.v:736$906'.
  Set init value: \reg133 = 9'000000000
Found init rule in `\module94.$proc$rtl.v:735$905'.
  Set init value: \reg134 = 16'0000000000000000
Found init rule in `\module94.$proc$rtl.v:734$904'.
  Set init value: \reg135 = 18'000000000000000000
Found init rule in `\module94.$proc$rtl.v:733$903'.
  Set init value: \reg136 = 7'0000000
Found init rule in `\module94.$proc$rtl.v:732$902'.
  Set init value: \reg137 = 16'0000000000000000
Found init rule in `\module94.$proc$rtl.v:731$901'.
  Set init value: \reg138 = 11'00000000000
Found init rule in `\module94.$proc$rtl.v:730$900'.
  Set init value: \reg139 = 10'0000000000
Found init rule in `\module94.$proc$rtl.v:729$899'.
  Set init value: \reg140 = 17'00000000000000000
Found init rule in `\module94.$proc$rtl.v:728$898'.
  Set init value: \reg141 = 20'00000000000000000000
Found init rule in `\module94.$proc$rtl.v:727$897'.
  Set init value: \reg142 = 8'00000000
Found init rule in `\module94.$proc$rtl.v:726$896'.
  Set init value: \reg143 = 6'000000
Found init rule in `\module155.$proc$rtl.v:585$634'.
  Set init value: \reg177 = 16'0000000000000000
Found init rule in `\module155.$proc$rtl.v:584$633'.
  Set init value: \reg178 = 18'000000000000000000
Found init rule in `\module155.$proc$rtl.v:583$632'.
  Set init value: \reg179 = 13'0000000000000
Found init rule in `\module155.$proc$rtl.v:582$631'.
  Set init value: \reg180 = 6'000000
Found init rule in `\module155.$proc$rtl.v:581$630'.
  Set init value: \reg181 = 13'0000000000000
Found init rule in `\module155.$proc$rtl.v:580$629'.
  Set init value: \reg182 = 14'00000000000000
Found init rule in `\module155.$proc$rtl.v:579$628'.
  Set init value: \reg183 = 6'000000
Found init rule in `\module155.$proc$rtl.v:578$627'.
  Set init value: \reg184 = 16'0000000000000000
Found init rule in `\module155.$proc$rtl.v:577$626'.
  Set init value: \reg185 = 10'0000000000
Found init rule in `\module39.$proc$rtl.v:519$474'.
  Set init value: \reg48 = 22'0000000000000000000000
Found init rule in `\module33.$proc$rtl.v:409$449'.
  Set init value: \reg69 = 8'00000000
Found init rule in `\module33.$proc$rtl.v:408$448'.
  Set init value: \reg70 = 9'000000000
Found init rule in `\module33.$proc$rtl.v:407$447'.
  Set init value: \reg71 = 6'000000
Found init rule in `\module33.$proc$rtl.v:406$446'.
  Set init value: \reg72 = 10'0000000000
Found init rule in `\module33.$proc$rtl.v:405$445'.
  Set init value: \reg73 = 17'00000000000000000
Found init rule in `\module33.$proc$rtl.v:404$444'.
  Set init value: \reg74 = 15'000000000000000
Found init rule in `\module33.$proc$rtl.v:403$443'.
  Set init value: \reg75 = 11'00000000000
Found init rule in `\module87.$proc$rtl.v:314$369'.
  Set init value: \reg154 = 20'00000000000000000000
Found init rule in `\module87.$proc$rtl.v:313$368'.
  Set init value: \reg153 = 9'000000000
Found init rule in `\module87.$proc$rtl.v:306$367'.
  Set init value: \reg190 = 4'0000
Found init rule in `\module87.$proc$rtl.v:305$366'.
  Set init value: \reg191 = 12'000000000000
Found init rule in `\module87.$proc$rtl.v:304$365'.
  Set init value: \reg192 = 15'000000000000000
Found init rule in `\module87.$proc$rtl.v:303$364'.
  Set init value: \reg193 = 6'000000
Found init rule in `\module87.$proc$rtl.v:302$363'.
  Set init value: \reg194 = 9'000000000
Found init rule in `\module87.$proc$rtl.v:301$362'.
  Set init value: \reg195 = 17'00000000000000000
Found init rule in `\module87.$proc$rtl.v:300$361'.
  Set init value: \reg196 = 10'0000000000
Found init rule in `\module87.$proc$rtl.v:299$360'.
  Set init value: \reg197 = 13'0000000000000
Found init rule in `\top.$proc$rtl.v:50$282'.
  Set init value: \reg28 = 8'00000000
Found init rule in `\top.$proc$rtl.v:49$281'.
  Set init value: \reg27 = 5'00000
Found init rule in `\top.$proc$rtl.v:48$280'.
  Set init value: \reg26 = 18'000000000000000000
Found init rule in `\top.$proc$rtl.v:47$279'.
  Set init value: \reg25 = 16'0000000000000000
Found init rule in `\top.$proc$rtl.v:46$278'.
  Set init value: \reg24 = 16'0000000000000000
Found init rule in `\top.$proc$rtl.v:45$277'.
  Set init value: \reg23 = 16'0000000000000000
Found init rule in `\top.$proc$rtl.v:44$276'.
  Set init value: \reg22 = 11'00000000000
Found init rule in `\top.$proc$rtl.v:43$275'.
  Set init value: \reg21 = 9'000000000
Found init rule in `\top.$proc$rtl.v:42$274'.
  Set init value: \reg20 = 22'0000000000000000000000
Found init rule in `\top.$proc$rtl.v:41$273'.
  Set init value: \reg19 = 21'000000000000000000000
Found init rule in `\top.$proc$rtl.v:40$272'.
  Set init value: \reg18 = 12'000000000000
Found init rule in `\top.$proc$rtl.v:39$271'.
  Set init value: \reg17 = 11'00000000000
Found init rule in `\top.$proc$rtl.v:38$270'.
  Set init value: \reg16 = 14'00000000000000
Found init rule in `\top.$proc$rtl.v:37$269'.
  Set init value: \reg15 = 11'00000000000
Found init rule in `\top.$proc$rtl.v:36$268'.
  Set init value: \reg14 = 3'000
Found init rule in `\top.$proc$rtl.v:35$267'.
  Set init value: \reg13 = 3'000
Found init rule in `\top.$proc$rtl.v:34$266'.
  Set init value: \reg12 = 16'0000000000000000
Found init rule in `\top.$proc$rtl.v:33$265'.
  Set init value: \reg11 = 8'00000000
Found init rule in `\top.$proc$rtl.v:32$264'.
  Set init value: \reg10 = 19'0000000000000000000
Found init rule in `\top.$proc$rtl.v:31$263'.
  Set init value: \reg9 = 18'000000000000000000
Found init rule in `\top.$proc$rtl.v:30$262'.
  Set init value: \reg8 = 13'0000000000000
Found init rule in `\top.$proc$rtl.v:29$261'.
  Set init value: \reg7 = 18'000000000000000000
Found init rule in `\top.$proc$rtl.v:28$260'.
  Set init value: \reg6 = 7'0000000
Found init rule in `\top.$proc$rtl.v:27$259'.
  Set init value: \reg5 = 12'000000000000
Found init rule in `\top.$proc$rtl.v:25$258'.
  Set init value: \reg83 = 13'0000000000000
Found init rule in `\top.$proc$rtl.v:24$257'.
  Set init value: \reg84 = 21'000000000000000000000
Found init rule in `\top.$proc$rtl.v:23$256'.
  Set init value: \reg85 = 9'000000000
Found init rule in `\top.$proc$rtl.v:15$255'.
  Set init value: \reg207 = 4'0000
Found init rule in `\top.$proc$rtl.v:14$254'.
  Set init value: \reg208 = 13'0000000000000
Found init rule in `\top.$proc$rtl.v:13$253'.
  Set init value: \reg209 = 4'0000
Found init rule in `\top.$proc$rtl.v:12$252'.
  Set init value: \reg210 = 16'0000000000000000

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module94.$proc$rtl.v:768$924'.
     1/1: $1\reg101[11:0]
Creating decoders for process `\module94.$proc$rtl.v:767$923'.
     1/1: $1\reg102[12:0]
Creating decoders for process `\module94.$proc$rtl.v:766$922'.
     1/1: $1\reg103[10:0]
Creating decoders for process `\module94.$proc$rtl.v:765$921'.
     1/1: $1\reg104[6:0]
Creating decoders for process `\module94.$proc$rtl.v:755$920'.
     1/1: $1\reg114[7:0]
Creating decoders for process `\module94.$proc$rtl.v:754$919'.
     1/1: $1\reg115[4:0]
Creating decoders for process `\module94.$proc$rtl.v:753$918'.
     1/1: $1\reg116[12:0]
Creating decoders for process `\module94.$proc$rtl.v:752$917'.
     1/1: $1\reg117[19:0]
Creating decoders for process `\module94.$proc$rtl.v:751$916'.
     1/1: $1\reg118[3:0]
Creating decoders for process `\module94.$proc$rtl.v:750$915'.
     1/1: $1\reg119[9:0]
Creating decoders for process `\module94.$proc$rtl.v:749$914'.
     1/1: $1\reg120[15:0]
Creating decoders for process `\module94.$proc$rtl.v:748$913'.
     1/1: $1\reg121[19:0]
Creating decoders for process `\module94.$proc$rtl.v:747$912'.
     1/1: $1\reg122[21:0]
Creating decoders for process `\module94.$proc$rtl.v:746$911'.
     1/1: $1\reg123[20:0]
Creating decoders for process `\module94.$proc$rtl.v:740$910'.
     1/1: $1\reg129[19:0]
Creating decoders for process `\module94.$proc$rtl.v:739$909'.
     1/1: $1\reg130[21:0]
Creating decoders for process `\module94.$proc$rtl.v:738$908'.
     1/1: $1\reg131[10:0]
Creating decoders for process `\module94.$proc$rtl.v:737$907'.
     1/1: $1\reg132[16:0]
Creating decoders for process `\module94.$proc$rtl.v:736$906'.
     1/1: $1\reg133[8:0]
Creating decoders for process `\module94.$proc$rtl.v:735$905'.
     1/1: $1\reg134[15:0]
Creating decoders for process `\module94.$proc$rtl.v:734$904'.
     1/1: $1\reg135[17:0]
Creating decoders for process `\module94.$proc$rtl.v:733$903'.
     1/1: $1\reg136[6:0]
Creating decoders for process `\module94.$proc$rtl.v:732$902'.
     1/1: $1\reg137[15:0]
Creating decoders for process `\module94.$proc$rtl.v:731$901'.
     1/1: $1\reg138[10:0]
Creating decoders for process `\module94.$proc$rtl.v:730$900'.
     1/1: $1\reg139[9:0]
Creating decoders for process `\module94.$proc$rtl.v:729$899'.
     1/1: $1\reg140[16:0]
Creating decoders for process `\module94.$proc$rtl.v:728$898'.
     1/1: $1\reg141[19:0]
Creating decoders for process `\module94.$proc$rtl.v:727$897'.
     1/1: $1\reg142[7:0]
Creating decoders for process `\module94.$proc$rtl.v:726$896'.
     1/1: $1\reg143[5:0]
Creating decoders for process `\module94.$proc$rtl.v:933$803'.
     1/12: $0\reg143[5:0]
     2/12: $0\reg134[15:0]
     3/12: $0\reg133[8:0]
     4/12: $0\reg132[16:0]
     5/12: $0\reg135[17:0]
     6/12: $0\reg136[6:0]
     7/12: $0\reg137[15:0]
     8/12: $0\reg138[10:0]
     9/12: $0\reg139[9:0]
    10/12: $0\reg140[16:0]
    11/12: $0\reg142[7:0]
    12/12: $0\reg141[19:0]
Creating decoders for process `\module94.$proc$rtl.v:924$794'.
     1/3: $0\reg131[10:0]
     2/3: $0\reg130[21:0]
     3/3: $0\reg129[19:0]
Creating decoders for process `\module94.$proc$rtl.v:855$688'.
     1/10: $0\reg123[20:0]
     2/10: $0\reg122[21:0]
     3/10: $0\reg115[4:0]
     4/10: $0\reg114[7:0]
     5/10: $0\reg116[12:0]
     6/10: $0\reg117[19:0]
     7/10: $0\reg118[3:0]
     8/10: $0\reg119[9:0]
     9/10: $0\reg120[15:0]
    10/10: $0\reg121[19:0]
Creating decoders for process `\module94.$proc$rtl.v:821$635'.
     1/4: $0\reg102[12:0]
     2/4: $0\reg101[11:0]
     3/4: $0\reg103[10:0]
     4/4: $0\reg104[6:0]
Creating decoders for process `\module155.$proc$rtl.v:585$634'.
     1/1: $1\reg177[15:0]
Creating decoders for process `\module155.$proc$rtl.v:584$633'.
     1/1: $1\reg178[17:0]
Creating decoders for process `\module155.$proc$rtl.v:583$632'.
     1/1: $1\reg179[12:0]
Creating decoders for process `\module155.$proc$rtl.v:582$631'.
     1/1: $1\reg180[5:0]
Creating decoders for process `\module155.$proc$rtl.v:581$630'.
     1/1: $1\reg181[12:0]
Creating decoders for process `\module155.$proc$rtl.v:580$629'.
     1/1: $1\reg182[13:0]
Creating decoders for process `\module155.$proc$rtl.v:579$628'.
     1/1: $1\reg183[5:0]
Creating decoders for process `\module155.$proc$rtl.v:578$627'.
     1/1: $1\reg184[15:0]
Creating decoders for process `\module155.$proc$rtl.v:577$626'.
     1/1: $1\reg185[9:0]
Creating decoders for process `\module155.$proc$rtl.v:665$569'.
     1/9: $0\reg185[9:0]
     2/9: $0\reg184[15:0]
     3/9: $0\reg183[5:0]
     4/9: $0\reg182[13:0]
     5/9: $0\reg177[15:0]
     6/9: $0\reg178[17:0]
     7/9: $0\reg179[12:0]
     8/9: $0\reg180[5:0]
     9/9: $0\reg181[12:0]
Creating decoders for process `\module39.$proc$rtl.v:519$474'.
     1/1: $1\reg48[21:0]
Creating decoders for process `\module39.$proc$rtl.v:546$457'.
     1/1: $0\reg48[21:0]
Creating decoders for process `\module33.$proc$rtl.v:409$449'.
     1/1: $1\reg69[7:0]
Creating decoders for process `\module33.$proc$rtl.v:408$448'.
     1/1: $1\reg70[8:0]
Creating decoders for process `\module33.$proc$rtl.v:407$447'.
     1/1: $1\reg71[5:0]
Creating decoders for process `\module33.$proc$rtl.v:406$446'.
     1/1: $1\reg72[9:0]
Creating decoders for process `\module33.$proc$rtl.v:405$445'.
     1/1: $1\reg73[16:0]
Creating decoders for process `\module33.$proc$rtl.v:404$444'.
     1/1: $1\reg74[14:0]
Creating decoders for process `\module33.$proc$rtl.v:403$443'.
     1/1: $1\reg75[10:0]
Creating decoders for process `\module33.$proc$rtl.v:450$400'.
     1/6: $0\reg75[10:0]
     2/6: $0\reg70[8:0]
     3/6: $0\reg71[5:0]
     4/6: $0\reg72[9:0]
     5/6: $0\reg73[16:0]
     6/6: $0\reg74[14:0]
Creating decoders for process `\module33.$proc$rtl.v:443$386'.
     1/1: $0\reg69[7:0]
Creating decoders for process `\module87.$proc$rtl.v:314$369'.
     1/1: $1\reg154[19:0]
Creating decoders for process `\module87.$proc$rtl.v:313$368'.
     1/1: $1\reg153[8:0]
Creating decoders for process `\module87.$proc$rtl.v:306$367'.
     1/1: $1\reg190[3:0]
Creating decoders for process `\module87.$proc$rtl.v:305$366'.
     1/1: $1\reg191[11:0]
Creating decoders for process `\module87.$proc$rtl.v:304$365'.
     1/1: $1\reg192[14:0]
Creating decoders for process `\module87.$proc$rtl.v:303$364'.
     1/1: $1\reg193[5:0]
Creating decoders for process `\module87.$proc$rtl.v:302$363'.
     1/1: $1\reg194[8:0]
Creating decoders for process `\module87.$proc$rtl.v:301$362'.
     1/1: $1\reg195[16:0]
Creating decoders for process `\module87.$proc$rtl.v:300$361'.
     1/1: $1\reg196[9:0]
Creating decoders for process `\module87.$proc$rtl.v:299$360'.
     1/1: $1\reg197[12:0]
Creating decoders for process `\module87.$proc$rtl.v:348$299'.
     1/8: $0\reg194[8:0]
     2/8: $0\reg195[16:0]
     3/8: $0\reg196[9:0]
     4/8: $0\reg197[12:0]
     5/8: $0\reg191[11:0]
     6/8: $0\reg192[14:0]
     7/8: $0\reg193[5:0]
     8/8: $0\reg190[3:0]
Creating decoders for process `\module87.$proc$rtl.v:341$291'.
     1/2: $0\reg154[19:0]
     2/2: $0\reg153[8:0]
Creating decoders for process `\top.$proc$rtl.v:50$282'.
     1/1: $1\reg28[7:0]
Creating decoders for process `\top.$proc$rtl.v:49$281'.
     1/1: $1\reg27[4:0]
Creating decoders for process `\top.$proc$rtl.v:48$280'.
     1/1: $1\reg26[17:0]
Creating decoders for process `\top.$proc$rtl.v:47$279'.
     1/1: $1\reg25[15:0]
Creating decoders for process `\top.$proc$rtl.v:46$278'.
     1/1: $1\reg24[15:0]
Creating decoders for process `\top.$proc$rtl.v:45$277'.
     1/1: $1\reg23[15:0]
Creating decoders for process `\top.$proc$rtl.v:44$276'.
     1/1: $1\reg22[10:0]
Creating decoders for process `\top.$proc$rtl.v:43$275'.
     1/1: $1\reg21[8:0]
Creating decoders for process `\top.$proc$rtl.v:42$274'.
     1/1: $1\reg20[21:0]
Creating decoders for process `\top.$proc$rtl.v:41$273'.
     1/1: $1\reg19[20:0]
Creating decoders for process `\top.$proc$rtl.v:40$272'.
     1/1: $1\reg18[11:0]
Creating decoders for process `\top.$proc$rtl.v:39$271'.
     1/1: $1\reg17[10:0]
Creating decoders for process `\top.$proc$rtl.v:38$270'.
     1/1: $1\reg16[13:0]
Creating decoders for process `\top.$proc$rtl.v:37$269'.
     1/1: $1\reg15[10:0]
Creating decoders for process `\top.$proc$rtl.v:36$268'.
     1/1: $1\reg14[2:0]
Creating decoders for process `\top.$proc$rtl.v:35$267'.
     1/1: $1\reg13[2:0]
Creating decoders for process `\top.$proc$rtl.v:34$266'.
     1/1: $1\reg12[15:0]
Creating decoders for process `\top.$proc$rtl.v:33$265'.
     1/1: $1\reg11[7:0]
Creating decoders for process `\top.$proc$rtl.v:32$264'.
     1/1: $1\reg10[18:0]
Creating decoders for process `\top.$proc$rtl.v:31$263'.
     1/1: $1\reg9[17:0]
Creating decoders for process `\top.$proc$rtl.v:30$262'.
     1/1: $1\reg8[12:0]
Creating decoders for process `\top.$proc$rtl.v:29$261'.
     1/1: $1\reg7[17:0]
Creating decoders for process `\top.$proc$rtl.v:28$260'.
     1/1: $1\reg6[6:0]
Creating decoders for process `\top.$proc$rtl.v:27$259'.
     1/1: $1\reg5[11:0]
Creating decoders for process `\top.$proc$rtl.v:25$258'.
     1/1: $1\reg83[12:0]
Creating decoders for process `\top.$proc$rtl.v:24$257'.
     1/1: $1\reg84[20:0]
Creating decoders for process `\top.$proc$rtl.v:23$256'.
     1/1: $1\reg85[8:0]
Creating decoders for process `\top.$proc$rtl.v:15$255'.
     1/1: $1\reg207[3:0]
Creating decoders for process `\top.$proc$rtl.v:14$254'.
     1/1: $1\reg208[12:0]
Creating decoders for process `\top.$proc$rtl.v:13$253'.
     1/1: $1\reg209[3:0]
Creating decoders for process `\top.$proc$rtl.v:12$252'.
     1/1: $1\reg210[15:0]
Creating decoders for process `\top.$proc$rtl.v:274$227'.
     1/4: $0\reg210[15:0]
     2/4: $0\reg209[3:0]
     3/4: $0\reg208[12:0]
     4/4: $0\reg207[3:0]
Creating decoders for process `\top.$proc$rtl.v:244$189'.
     1/3: $0\reg85[8:0]
     2/3: $0\reg83[12:0]
     3/3: $0\reg84[20:0]
Creating decoders for process `\top.$proc$rtl.v:101$1'.
     1/24: $0\reg12[15:0]
     2/24: $0\reg5[11:0]
     3/24: $0\reg28[7:0]
     4/24: $0\reg27[4:0]
     5/24: $0\reg26[17:0]
     6/24: $0\reg25[15:0]
     7/24: $0\reg24[15:0]
     8/24: $0\reg23[15:0]
     9/24: $0\reg22[10:0]
    10/24: $0\reg21[8:0]
    11/24: $0\reg20[21:0]
    12/24: $0\reg19[20:0]
    13/24: $0\reg18[11:0]
    14/24: $0\reg17[10:0]
    15/24: $0\reg16[13:0]
    16/24: $0\reg15[10:0]
    17/24: $0\reg14[2:0]
    18/24: $0\reg13[2:0]
    19/24: $0\reg11[7:0]
    20/24: $0\reg10[18:0]
    21/24: $0\reg9[17:0]
    22/24: $0\reg8[12:0]
    23/24: $0\reg7[17:0]
    24/24: $0\reg6[6:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\module94.\reg141' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1246' with positive edge clock.
Creating register for signal `\module94.\reg143' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1247' with positive edge clock.
Creating register for signal `\module94.\reg142' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1248' with positive edge clock.
Creating register for signal `\module94.\reg140' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `\module94.\reg139' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `\module94.\reg138' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `\module94.\reg137' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `\module94.\reg136' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `\module94.\reg135' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `\module94.\reg134' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `\module94.\reg133' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `\module94.\reg132' using process `\module94.$proc$rtl.v:933$803'.
  created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `\module94.\reg131' using process `\module94.$proc$rtl.v:924$794'.
  created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `\module94.\reg130' using process `\module94.$proc$rtl.v:924$794'.
  created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `\module94.\reg129' using process `\module94.$proc$rtl.v:924$794'.
  created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `\module94.\reg123' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `\module94.\reg122' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `\module94.\reg121' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `\module94.\reg120' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1264' with positive edge clock.
Creating register for signal `\module94.\reg119' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1265' with positive edge clock.
Creating register for signal `\module94.\reg118' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1266' with positive edge clock.
Creating register for signal `\module94.\reg117' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1267' with positive edge clock.
Creating register for signal `\module94.\reg116' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1268' with positive edge clock.
Creating register for signal `\module94.\reg115' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1269' with positive edge clock.
Creating register for signal `\module94.\reg114' using process `\module94.$proc$rtl.v:855$688'.
  created $dff cell `$procdff$1270' with positive edge clock.
Creating register for signal `\module94.\reg104' using process `\module94.$proc$rtl.v:821$635'.
  created $dff cell `$procdff$1271' with positive edge clock.
Creating register for signal `\module94.\reg103' using process `\module94.$proc$rtl.v:821$635'.
  created $dff cell `$procdff$1272' with positive edge clock.
Creating register for signal `\module94.\reg102' using process `\module94.$proc$rtl.v:821$635'.
  created $dff cell `$procdff$1273' with positive edge clock.
Creating register for signal `\module94.\reg101' using process `\module94.$proc$rtl.v:821$635'.
  created $dff cell `$procdff$1274' with positive edge clock.
Creating register for signal `\module155.\reg185' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1275' with positive edge clock.
Creating register for signal `\module155.\reg184' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1276' with positive edge clock.
Creating register for signal `\module155.\reg183' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1277' with positive edge clock.
Creating register for signal `\module155.\reg182' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1278' with positive edge clock.
Creating register for signal `\module155.\reg181' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1279' with positive edge clock.
Creating register for signal `\module155.\reg180' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1280' with positive edge clock.
Creating register for signal `\module155.\reg179' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1281' with positive edge clock.
Creating register for signal `\module155.\reg178' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1282' with positive edge clock.
Creating register for signal `\module155.\reg177' using process `\module155.$proc$rtl.v:665$569'.
  created $dff cell `$procdff$1283' with positive edge clock.
Creating register for signal `\module39.\reg48' using process `\module39.$proc$rtl.v:546$457'.
  created $dff cell `$procdff$1284' with positive edge clock.
Creating register for signal `\module33.\reg74' using process `\module33.$proc$rtl.v:450$400'.
  created $dff cell `$procdff$1285' with positive edge clock.
Creating register for signal `\module33.\reg73' using process `\module33.$proc$rtl.v:450$400'.
  created $dff cell `$procdff$1286' with positive edge clock.
Creating register for signal `\module33.\reg72' using process `\module33.$proc$rtl.v:450$400'.
  created $dff cell `$procdff$1287' with positive edge clock.
Creating register for signal `\module33.\reg71' using process `\module33.$proc$rtl.v:450$400'.
  created $dff cell `$procdff$1288' with positive edge clock.
Creating register for signal `\module33.\reg70' using process `\module33.$proc$rtl.v:450$400'.
  created $dff cell `$procdff$1289' with positive edge clock.
Creating register for signal `\module33.\reg75' using process `\module33.$proc$rtl.v:450$400'.
  created $dff cell `$procdff$1290' with positive edge clock.
Creating register for signal `\module33.\reg69' using process `\module33.$proc$rtl.v:443$386'.
  created $dff cell `$procdff$1291' with positive edge clock.
Creating register for signal `\module87.\reg190' using process `\module87.$proc$rtl.v:348$299'.
  created $dff cell `$procdff$1292' with positive edge clock.
Creating register for signal `\module87.\reg193' using process `\module87.$proc$rtl.v:348$299'.
  created $dff cell `$procdff$1293' with positive edge clock.
Creating register for signal `\module87.\reg192' using process `\module87.$proc$rtl.v:348$299'.
  created $dff cell `$procdff$1294' with positive edge clock.
Creating register for signal `\module87.\reg191' using process `\module87.$proc$rtl.v:348$299'.
  created $dff cell `$procdff$1295' with positive edge clock.
Creating register for signal `\module87.\reg197' using process `\module87.$proc$rtl.v:348$299'.
  created $dff cell `$procdff$1296' with positive edge clock.
Creating register for signal `\module87.\reg196' using process `\module87.$proc$rtl.v:348$299'.
  created $dff cell `$procdff$1297' with positive edge clock.
Creating register for signal `\module87.\reg195' using process `\module87.$proc$rtl.v:348$299'.
  created $dff cell `$procdff$1298' with positive edge clock.
Creating register for signal `\module87.\reg194' using process `\module87.$proc$rtl.v:348$299'.
  created $dff cell `$procdff$1299' with positive edge clock.
Creating register for signal `\module87.\reg153' using process `\module87.$proc$rtl.v:341$291'.
  created $dff cell `$procdff$1300' with positive edge clock.
Creating register for signal `\module87.\reg154' using process `\module87.$proc$rtl.v:341$291'.
  created $dff cell `$procdff$1301' with positive edge clock.
Creating register for signal `\top.\reg210' using process `\top.$proc$rtl.v:274$227'.
  created $dff cell `$procdff$1302' with positive edge clock.
Creating register for signal `\top.\reg209' using process `\top.$proc$rtl.v:274$227'.
  created $dff cell `$procdff$1303' with positive edge clock.
Creating register for signal `\top.\reg208' using process `\top.$proc$rtl.v:274$227'.
  created $dff cell `$procdff$1304' with positive edge clock.
Creating register for signal `\top.\reg207' using process `\top.$proc$rtl.v:274$227'.
  created $dff cell `$procdff$1305' with positive edge clock.
Creating register for signal `\top.\reg85' using process `\top.$proc$rtl.v:244$189'.
  created $dff cell `$procdff$1306' with positive edge clock.
Creating register for signal `\top.\reg84' using process `\top.$proc$rtl.v:244$189'.
  created $dff cell `$procdff$1307' with positive edge clock.
Creating register for signal `\top.\reg83' using process `\top.$proc$rtl.v:244$189'.
  created $dff cell `$procdff$1308' with positive edge clock.
Creating register for signal `\top.\reg5' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1309' with positive edge clock.
Creating register for signal `\top.\reg6' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1310' with positive edge clock.
Creating register for signal `\top.\reg7' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1311' with positive edge clock.
Creating register for signal `\top.\reg8' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1312' with positive edge clock.
Creating register for signal `\top.\reg9' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1313' with positive edge clock.
Creating register for signal `\top.\reg10' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1314' with positive edge clock.
Creating register for signal `\top.\reg11' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1315' with positive edge clock.
Creating register for signal `\top.\reg12' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1316' with positive edge clock.
Creating register for signal `\top.\reg13' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1317' with positive edge clock.
Creating register for signal `\top.\reg14' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1318' with positive edge clock.
Creating register for signal `\top.\reg15' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1319' with positive edge clock.
Creating register for signal `\top.\reg16' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1320' with positive edge clock.
Creating register for signal `\top.\reg17' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1321' with positive edge clock.
Creating register for signal `\top.\reg18' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1322' with positive edge clock.
Creating register for signal `\top.\reg19' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1323' with positive edge clock.
Creating register for signal `\top.\reg20' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1324' with positive edge clock.
Creating register for signal `\top.\reg21' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1325' with positive edge clock.
Creating register for signal `\top.\reg22' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1326' with positive edge clock.
Creating register for signal `\top.\reg23' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1327' with positive edge clock.
Creating register for signal `\top.\reg24' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1328' with positive edge clock.
Creating register for signal `\top.\reg25' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1329' with positive edge clock.
Creating register for signal `\top.\reg26' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1330' with positive edge clock.
Creating register for signal `\top.\reg27' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1331' with positive edge clock.
Creating register for signal `\top.\reg28' using process `\top.$proc$rtl.v:101$1'.
  created $dff cell `$procdff$1332' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `module94.$proc$rtl.v:768$924'.
Removing empty process `module94.$proc$rtl.v:767$923'.
Removing empty process `module94.$proc$rtl.v:766$922'.
Removing empty process `module94.$proc$rtl.v:765$921'.
Removing empty process `module94.$proc$rtl.v:755$920'.
Removing empty process `module94.$proc$rtl.v:754$919'.
Removing empty process `module94.$proc$rtl.v:753$918'.
Removing empty process `module94.$proc$rtl.v:752$917'.
Removing empty process `module94.$proc$rtl.v:751$916'.
Removing empty process `module94.$proc$rtl.v:750$915'.
Removing empty process `module94.$proc$rtl.v:749$914'.
Removing empty process `module94.$proc$rtl.v:748$913'.
Removing empty process `module94.$proc$rtl.v:747$912'.
Removing empty process `module94.$proc$rtl.v:746$911'.
Removing empty process `module94.$proc$rtl.v:740$910'.
Removing empty process `module94.$proc$rtl.v:739$909'.
Removing empty process `module94.$proc$rtl.v:738$908'.
Removing empty process `module94.$proc$rtl.v:737$907'.
Removing empty process `module94.$proc$rtl.v:736$906'.
Removing empty process `module94.$proc$rtl.v:735$905'.
Removing empty process `module94.$proc$rtl.v:734$904'.
Removing empty process `module94.$proc$rtl.v:733$903'.
Removing empty process `module94.$proc$rtl.v:732$902'.
Removing empty process `module94.$proc$rtl.v:731$901'.
Removing empty process `module94.$proc$rtl.v:730$900'.
Removing empty process `module94.$proc$rtl.v:729$899'.
Removing empty process `module94.$proc$rtl.v:728$898'.
Removing empty process `module94.$proc$rtl.v:727$897'.
Removing empty process `module94.$proc$rtl.v:726$896'.
Found and cleaned up 2 empty switches in `\module94.$proc$rtl.v:933$803'.
Removing empty process `module94.$proc$rtl.v:933$803'.
Removing empty process `module94.$proc$rtl.v:924$794'.
Found and cleaned up 3 empty switches in `\module94.$proc$rtl.v:855$688'.
Removing empty process `module94.$proc$rtl.v:855$688'.
Found and cleaned up 1 empty switch in `\module94.$proc$rtl.v:821$635'.
Removing empty process `module94.$proc$rtl.v:821$635'.
Removing empty process `module155.$proc$rtl.v:585$634'.
Removing empty process `module155.$proc$rtl.v:584$633'.
Removing empty process `module155.$proc$rtl.v:583$632'.
Removing empty process `module155.$proc$rtl.v:582$631'.
Removing empty process `module155.$proc$rtl.v:581$630'.
Removing empty process `module155.$proc$rtl.v:580$629'.
Removing empty process `module155.$proc$rtl.v:579$628'.
Removing empty process `module155.$proc$rtl.v:578$627'.
Removing empty process `module155.$proc$rtl.v:577$626'.
Found and cleaned up 3 empty switches in `\module155.$proc$rtl.v:665$569'.
Removing empty process `module155.$proc$rtl.v:665$569'.
Removing empty process `module39.$proc$rtl.v:519$474'.
Removing empty process `module39.$proc$rtl.v:546$457'.
Removing empty process `module33.$proc$rtl.v:409$449'.
Removing empty process `module33.$proc$rtl.v:408$448'.
Removing empty process `module33.$proc$rtl.v:407$447'.
Removing empty process `module33.$proc$rtl.v:406$446'.
Removing empty process `module33.$proc$rtl.v:405$445'.
Removing empty process `module33.$proc$rtl.v:404$444'.
Removing empty process `module33.$proc$rtl.v:403$443'.
Found and cleaned up 3 empty switches in `\module33.$proc$rtl.v:450$400'.
Removing empty process `module33.$proc$rtl.v:450$400'.
Removing empty process `module33.$proc$rtl.v:443$386'.
Removing empty process `module87.$proc$rtl.v:314$369'.
Removing empty process `module87.$proc$rtl.v:313$368'.
Removing empty process `module87.$proc$rtl.v:306$367'.
Removing empty process `module87.$proc$rtl.v:305$366'.
Removing empty process `module87.$proc$rtl.v:304$365'.
Removing empty process `module87.$proc$rtl.v:303$364'.
Removing empty process `module87.$proc$rtl.v:302$363'.
Removing empty process `module87.$proc$rtl.v:301$362'.
Removing empty process `module87.$proc$rtl.v:300$361'.
Removing empty process `module87.$proc$rtl.v:299$360'.
Found and cleaned up 2 empty switches in `\module87.$proc$rtl.v:348$299'.
Removing empty process `module87.$proc$rtl.v:348$299'.
Removing empty process `module87.$proc$rtl.v:341$291'.
Removing empty process `top.$proc$rtl.v:50$282'.
Removing empty process `top.$proc$rtl.v:49$281'.
Removing empty process `top.$proc$rtl.v:48$280'.
Removing empty process `top.$proc$rtl.v:47$279'.
Removing empty process `top.$proc$rtl.v:46$278'.
Removing empty process `top.$proc$rtl.v:45$277'.
Removing empty process `top.$proc$rtl.v:44$276'.
Removing empty process `top.$proc$rtl.v:43$275'.
Removing empty process `top.$proc$rtl.v:42$274'.
Removing empty process `top.$proc$rtl.v:41$273'.
Removing empty process `top.$proc$rtl.v:40$272'.
Removing empty process `top.$proc$rtl.v:39$271'.
Removing empty process `top.$proc$rtl.v:38$270'.
Removing empty process `top.$proc$rtl.v:37$269'.
Removing empty process `top.$proc$rtl.v:36$268'.
Removing empty process `top.$proc$rtl.v:35$267'.
Removing empty process `top.$proc$rtl.v:34$266'.
Removing empty process `top.$proc$rtl.v:33$265'.
Removing empty process `top.$proc$rtl.v:32$264'.
Removing empty process `top.$proc$rtl.v:31$263'.
Removing empty process `top.$proc$rtl.v:30$262'.
Removing empty process `top.$proc$rtl.v:29$261'.
Removing empty process `top.$proc$rtl.v:28$260'.
Removing empty process `top.$proc$rtl.v:27$259'.
Removing empty process `top.$proc$rtl.v:25$258'.
Removing empty process `top.$proc$rtl.v:24$257'.
Removing empty process `top.$proc$rtl.v:23$256'.
Removing empty process `top.$proc$rtl.v:15$255'.
Removing empty process `top.$proc$rtl.v:14$254'.
Removing empty process `top.$proc$rtl.v:13$253'.
Removing empty process `top.$proc$rtl.v:12$252'.
Removing empty process `top.$proc$rtl.v:274$227'.
Found and cleaned up 1 empty switch in `\top.$proc$rtl.v:244$189'.
Removing empty process `top.$proc$rtl.v:244$189'.
Found and cleaned up 6 empty switches in `\top.$proc$rtl.v:101$1'.
Removing empty process `top.$proc$rtl.v:101$1'.
Cleaned up 21 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module module94.
<suppressed ~28 debug messages>
Optimizing module module155.
<suppressed ~22 debug messages>
Optimizing module module39.
<suppressed ~3 debug messages>
Optimizing module module33.
<suppressed ~9 debug messages>
Optimizing module module87.
<suppressed ~18 debug messages>
Optimizing module top.
<suppressed ~27 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \top..
Removed 94 unused cells and 576 unused wires.
<suppressed ~182 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module module155..
checking module module33..
checking module module39..
checking module module87..
checking module module94..
checking module top..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module94'.
<suppressed ~15 debug messages>
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 14 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module155..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module33..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $ternary$rtl.v:466$412: \wire35 [5:0] -> { \wire35 [5:1] 1'1 }
  Analyzing evaluation results.
Running muxtree optimizer on module \module39..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module87..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module94..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~141 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module155.
    New input vector for $reduce_or cell $reduce_or$rtl.v:704$611: { \wire175 [3] \wire175 [4] \wire175 [5] \wire175 [6] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:657$544: { \wire166 [0] \wire166 [1] \wire166 [2] \wire166 [3] \wire166 [4] \wire166 [5] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:651$528: { \wire167 [0] \wire167 [1] \wire167 [2] \wire167 [3] \wire167 [4] \wire167 [5] \wire167 [6] \wire167 [7] \wire167 [8] \wire167 [9] \wire167 [10] \wire167 [11] \wire167 [12] \wire167 [13] \wire167 [14] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:705$619: { \wire156 [0] \wire156 [1] \wire156 [2] \wire156 [3] \wire156 [4] \wire156 [5] \wire156 [6] \wire156 [7] \wire156 [8] \wire156 [9] \wire156 [10] \wire156 [11] \wire156 [12] \wire156 [13] \wire156 [14] \wire156 [15] \wire156 [16] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:704$614: { $sub$rtl.v:704$613_Y [0] $sub$rtl.v:704$613_Y [1] $sub$rtl.v:704$613_Y [2] $sub$rtl.v:704$613_Y [3] $sub$rtl.v:704$613_Y [4] $sub$rtl.v:704$613_Y [5] $sub$rtl.v:704$613_Y [6] $sub$rtl.v:704$613_Y [7] $sub$rtl.v:704$613_Y [8] $sub$rtl.v:704$613_Y [9] $sub$rtl.v:704$613_Y [10] $sub$rtl.v:704$613_Y [11] $sub$rtl.v:704$613_Y [12] $sub$rtl.v:704$613_Y [13] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:694$602: { $eq$rtl.v:694$600_Y [0] $eq$rtl.v:694$600_Y [1] $eq$rtl.v:694$600_Y [2] $eq$rtl.v:694$600_Y [3] $eq$rtl.v:694$600_Y [4] $eq$rtl.v:694$600_Y [5] $eq$rtl.v:694$600_Y [6] $eq$rtl.v:694$600_Y [7] $eq$rtl.v:694$600_Y [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:677$583: { \wire159 [4] \wire159 [5] \wire159 [6] \wire159 [7] \wire159 [8] \wire159 [9] \wire159 [10] \wire159 [11] \wire159 [12] \wire159 [13] \wire159 [14] \wire159 [15] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:671$572: { \wire162 [0] \wire162 [1] \wire162 [2] \wire162 [3] \wire162 [4] \wire162 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:667$570: { \wire158 [0] \wire158 [1] \wire158 [2] \wire158 [3] \wire158 [4] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:655$539: { $ternary$rtl.v:655$538_Y [0] $ternary$rtl.v:655$538_Y [1] $ternary$rtl.v:655$538_Y [2] $ternary$rtl.v:655$538_Y [3] $ternary$rtl.v:655$538_Y [4] $ternary$rtl.v:655$538_Y [5] $ternary$rtl.v:655$538_Y [6] $ternary$rtl.v:655$538_Y [7] $ternary$rtl.v:655$538_Y [8] $ternary$rtl.v:655$538_Y [9] $ternary$rtl.v:655$538_Y [10] $ternary$rtl.v:655$538_Y [11] $ternary$rtl.v:655$538_Y [12] $ternary$rtl.v:655$538_Y [13] $ternary$rtl.v:655$538_Y [14] $ternary$rtl.v:655$538_Y [15] $ternary$rtl.v:655$538_Y [16] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:653$533: { \wire158 [0] \wire158 [1] \wire158 [2] \wire158 [3] \wire158 [4] \wire158 [5] \wire158 [6] }
  Optimizing cells in module \module155.
  Optimizing cells in module \module33.
    New input vector for $reduce_or cell $reduce_or$rtl.v:461$406: { \wire37 [0] \wire37 [1] \wire37 [2] \wire37 [3] \wire37 [4] \wire37 [5] \wire37 [6] \wire37 [7] \wire37 [8] \wire37 [9] \wire37 [10] \wire37 [11] \wire37 [12] \wire37 [13] \wire37 [14] \wire37 [15] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:491$440: { \reg69 [0] \reg69 [1] \reg69 [2] \reg69 [3] }
  Optimizing cells in module \module33.
  Optimizing cells in module \module39.
    New input vector for $reduce_or cell $reduce_or$rtl.v:563$470: { \wire47 [0] \wire47 [1] \wire47 [2] \wire47 [3] \wire47 [4] \wire47 [5] \wire47 [6] \wire47 [7] \wire47 [8] \wire47 [9] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:556$463: { $ternary$rtl.v:556$462_Y [0] $ternary$rtl.v:556$462_Y [1] $ternary$rtl.v:556$462_Y [2] $ternary$rtl.v:556$462_Y [3] $ternary$rtl.v:556$462_Y [4] $ternary$rtl.v:556$462_Y [5] $ternary$rtl.v:556$462_Y [6] $ternary$rtl.v:556$462_Y [7] $ternary$rtl.v:556$462_Y [8] $ternary$rtl.v:556$462_Y [9] $ternary$rtl.v:556$462_Y [10] $ternary$rtl.v:556$462_Y [11] }
  Optimizing cells in module \module39.
  Optimizing cells in module \module87.
    New input vector for $reduce_or cell $reduce_or$rtl.v:380$352: { \wire92 [0] \wire92 [1] \wire92 [2] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:378$344: { $ternary$rtl.v:378$343_Y [0] $ternary$rtl.v:378$343_Y [1] $ternary$rtl.v:378$343_Y [2] $ternary$rtl.v:378$343_Y [3] $ternary$rtl.v:378$343_Y [4] $ternary$rtl.v:378$343_Y [5] $ternary$rtl.v:378$343_Y [6] $ternary$rtl.v:378$343_Y [7] $ternary$rtl.v:378$343_Y [8] $ternary$rtl.v:378$343_Y [9] $ternary$rtl.v:378$343_Y [10] $ternary$rtl.v:378$343_Y [11] $ternary$rtl.v:378$343_Y [12] $ternary$rtl.v:378$343_Y [13] $ternary$rtl.v:378$343_Y [14] $ternary$rtl.v:378$343_Y [15] $ternary$rtl.v:378$343_Y [16] $ternary$rtl.v:378$343_Y [17] $ternary$rtl.v:378$343_Y [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:379$348: { \wire188 [0] \wire188 [1] \wire188 [2] \wire188 [3] \wire188 [4] \wire188 [5] \wire188 [6] \wire188 [7] \wire188 [8] \wire188 [9] \wire188 [10] \wire188 [11] \wire188 [12] \wire188 [13] \wire188 [14] \wire188 [15] \wire188 [16] \wire188 [17] \wire188 [18] \wire188 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:369$327: { \wire91 [16] \wire91 [17] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:360$307: { $shr$rtl.v:360$306_Y [0] $shr$rtl.v:360$306_Y [1] $shr$rtl.v:360$306_Y [2] $shr$rtl.v:360$306_Y [3] $shr$rtl.v:360$306_Y [4] $shr$rtl.v:360$306_Y [5] $shr$rtl.v:360$306_Y [6] $shr$rtl.v:360$306_Y [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:344$297: { $ternary$rtl.v:344$296_Y [0] $ternary$rtl.v:344$296_Y [1] $ternary$rtl.v:344$296_Y [2] $ternary$rtl.v:344$296_Y [3] $ternary$rtl.v:344$296_Y [4] }
  Optimizing cells in module \module87.
  Optimizing cells in module \module94.
    New input vector for $reduce_or cell $reduce_or$rtl.v:964$841: { \reg141 [0] \reg141 [1] \reg141 [2] \reg141 [3] \reg141 [4] \reg141 [5] \reg141 [6] \reg141 [7] \reg141 [8] \reg141 [9] \reg141 [10] \reg141 [11] \reg141 [12] \reg141 [13] \reg141 [14] \reg141 [15] \reg141 [16] \reg141 [17] \reg141 [18] \reg141 [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:946$814: { $xnor$rtl.v:946$813_Y [0] $xnor$rtl.v:946$813_Y [1] $xnor$rtl.v:946$813_Y [2] $xnor$rtl.v:946$813_Y [3] $xnor$rtl.v:946$813_Y [4] $xnor$rtl.v:946$813_Y [5] $xnor$rtl.v:946$813_Y [6] $xnor$rtl.v:946$813_Y [7] $xnor$rtl.v:946$813_Y [8] $xnor$rtl.v:946$813_Y [9] $xnor$rtl.v:946$813_Y [10] $xnor$rtl.v:946$813_Y [11] $xnor$rtl.v:946$813_Y [12] $xnor$rtl.v:946$813_Y [13] $xnor$rtl.v:946$813_Y [14] $xnor$rtl.v:946$813_Y [15] $xnor$rtl.v:946$813_Y [16] $xnor$rtl.v:946$813_Y [17] $xnor$rtl.v:946$813_Y [18] $xnor$rtl.v:946$813_Y [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:896$747: { \wire95 [0] \wire95 [1] \wire95 [2] \wire95 [3] \wire95 [4] \wire95 [5] \wire95 [6] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:838$659: { $ternary$rtl.v:838$658_Y [0] $ternary$rtl.v:838$658_Y [1] $ternary$rtl.v:838$658_Y [2] $ternary$rtl.v:838$658_Y [3] $ternary$rtl.v:838$658_Y [4] $ternary$rtl.v:838$658_Y [5] $ternary$rtl.v:838$658_Y [6] $ternary$rtl.v:838$658_Y [7] $ternary$rtl.v:838$658_Y [8] $ternary$rtl.v:838$658_Y [9] $ternary$rtl.v:838$658_Y [10] $ternary$rtl.v:838$658_Y [11] $ternary$rtl.v:838$658_Y [12] $ternary$rtl.v:838$658_Y [13] $ternary$rtl.v:838$658_Y [14] $ternary$rtl.v:838$658_Y [15] $ternary$rtl.v:838$658_Y [16] $ternary$rtl.v:838$658_Y [17] $ternary$rtl.v:838$658_Y [18] $ternary$rtl.v:838$658_Y [19] $ternary$rtl.v:838$658_Y [20] $ternary$rtl.v:838$658_Y [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:963$840: { $ternary$rtl.v:963$839_Y [0] $ternary$rtl.v:963$839_Y [1] $ternary$rtl.v:963$839_Y [2] $ternary$rtl.v:963$839_Y [3] $ternary$rtl.v:963$839_Y [4] $ternary$rtl.v:963$839_Y [5] $ternary$rtl.v:963$839_Y [6] $ternary$rtl.v:963$839_Y [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:867$721: { $or$rtl.v:867$720_Y [0] $or$rtl.v:867$720_Y [1] $or$rtl.v:867$720_Y [2] $or$rtl.v:867$720_Y [3] $or$rtl.v:867$720_Y [4] $or$rtl.v:867$720_Y [5] $or$rtl.v:867$720_Y [6] $or$rtl.v:867$720_Y [7] $or$rtl.v:867$720_Y [8] $or$rtl.v:867$720_Y [9] $or$rtl.v:867$720_Y [10] $or$rtl.v:867$720_Y [11] $or$rtl.v:867$720_Y [12] $or$rtl.v:867$720_Y [13] $or$rtl.v:867$720_Y [14] $or$rtl.v:867$720_Y [15] $or$rtl.v:867$720_Y [16] $or$rtl.v:867$720_Y [17] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:859$692: { $xnor$rtl.v:859$691_Y [0] $xnor$rtl.v:859$691_Y [1] $xnor$rtl.v:859$691_Y [2] $xnor$rtl.v:859$691_Y [3] $xnor$rtl.v:859$691_Y [4] $xnor$rtl.v:859$691_Y [5] $xnor$rtl.v:859$691_Y [6] $xnor$rtl.v:859$691_Y [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:847$673: { \wire106 [0] \wire106 [1] \wire106 [2] \wire106 [3] \wire106 [4] \wire106 [5] \wire106 [6] \wire106 [7] \wire106 [8] \wire106 [9] \wire106 [10] \wire106 [11] \wire106 [12] \wire106 [13] \wire106 [14] \wire106 [15] \wire106 [16] \wire106 [17] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:824$636: { \wire95 [0] \wire95 [1] \wire95 [2] \wire95 [3] \wire95 [4] \wire95 [5] \wire95 [6] }
  Optimizing cells in module \module94.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:208$142: { $ternary$rtl.v:208$141_Y [0] $ternary$rtl.v:208$141_Y [1] $ternary$rtl.v:208$141_Y [2] $ternary$rtl.v:208$141_Y [3] $ternary$rtl.v:208$141_Y [4] $ternary$rtl.v:208$141_Y [5] $ternary$rtl.v:208$141_Y [6] $ternary$rtl.v:208$141_Y [7] $ternary$rtl.v:208$141_Y [8] $ternary$rtl.v:208$141_Y [9] $ternary$rtl.v:208$141_Y [10] $ternary$rtl.v:208$141_Y [11] $ternary$rtl.v:208$141_Y [12] $ternary$rtl.v:208$141_Y [13] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:202$132: { $neg$rtl.v:202$131_Y [0] $neg$rtl.v:202$131_Y [1] $neg$rtl.v:202$131_Y [2] $neg$rtl.v:202$131_Y [3] $neg$rtl.v:202$131_Y [4] $neg$rtl.v:202$131_Y [5] $neg$rtl.v:202$131_Y [6] $neg$rtl.v:202$131_Y [7] $neg$rtl.v:202$131_Y [8] $neg$rtl.v:202$131_Y [9] $neg$rtl.v:202$131_Y [10] $neg$rtl.v:202$131_Y [11] $neg$rtl.v:202$131_Y [12] $neg$rtl.v:202$131_Y [13] $neg$rtl.v:202$131_Y [14] $neg$rtl.v:202$131_Y [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:185$115: { \reg12 [0] \reg12 [1] \reg12 [2] \reg12 [3] \reg12 [4] \reg12 [5] \reg12 [6] \reg12 [7] \reg12 [8] \reg12 [9] \reg12 [10] \reg12 [11] \reg12 [12] \reg12 [13] \reg12 [14] \reg12 [15] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:177$100: { \wire2 [0] \wire2 [1] \wire2 [2] \wire2 [3] \wire2 [4] \wire2 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:271$222: { \reg18 [3] \reg18 [4] \reg18 [5] \reg18 [6] \reg18 [7] \reg18 [8] \reg18 [9] \reg18 [10] \reg18 [11] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:266$211: { \reg23 [0] \reg23 [1] \reg23 [2] \reg23 [3] \reg23 [4] \reg23 [5] \reg23 [6] \reg23 [7] \reg23 [8] \reg23 [9] \reg23 [10] \reg23 [11] \reg23 [12] \reg23 [13] \reg23 [14] \reg23 [15] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:121$49: { \reg6 [0] \reg6 [1] \reg6 [2] \reg6 [3] \reg6 [4] \reg6 [5] \reg6 [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:120$44: { \wire0 [1] \wire0 [2] \wire0 [3] \wire0 [4] \wire0 [5] \wire0 [6] \wire0 [7] \wire0 [8] \wire0 [9] }
  Optimizing cells in module \top.
Performed a total of 38 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \reg185 = 10'0000000000 to constant driver in module module155.
Promoting init spec \reg197 = 13'0000000000000 to constant driver in module module87.
Removing $procdff$1256 ($dff) from module module94.
Promoting init spec \reg143 = 6'000000 to constant driver in module module94.
Promoting init spec \reg210 = 16'0000000000000000 to constant driver in module top.
Promoting init spec \reg209 = 4'0000 to constant driver in module top.
Promoting init spec \reg208 = 13'0000000000000 to constant driver in module top.
Promoting init spec \reg207 = 4'0000 to constant driver in module top.
Promoted 7 init specs to constant drivers.
Replaced 1 DFF cells.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 14 unused wires.
<suppressed ~4 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module155..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module33..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module39..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module87..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module94..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~141 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module155.
  Optimizing cells in module \module33.
  Optimizing cells in module \module39.
  Optimizing cells in module \module87.
  Optimizing cells in module \module94.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.6.16. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 29) from port A of cell module155.$xor$rtl.v:636$480 ($xor).
Removed top 21 bits (of 29) from port B of cell module155.$xor$rtl.v:636$480 ($xor).
Removed top 23 bits (of 29) from port Y of cell module155.$xor$rtl.v:636$480 ($xor).
Removed top 18 bits (of 24) from port A of cell module155.$xor$rtl.v:636$480 ($xor).
Removed top 2 bits (of 8) from port B of cell module155.$xor$rtl.v:636$480 ($xor).
Removed top 6 bits (of 7) from port A of cell module155.$shr$rtl.v:640$508 ($shr).
Removed top 6 bits (of 7) from port A of cell module155.$sub$rtl.v:640$509 ($sub).
Removed top 3 bits (of 6) from port A of cell module155.$not$rtl.v:643$515 ($not).
Removed top 8 bits (of 15) from port A of cell module155.$sshl$rtl.v:644$516 ($sshl).
Removed top 7 bits (of 15) from mux cell module155.$ternary$rtl.v:653$532 ($mux).
Removed top 2 bits (of 5) from mux cell module155.$ternary$rtl.v:655$543 ($mux).
Removed top 10 bits (of 11) from port A of cell module155.$xnor$rtl.v:658$548 ($xnor).
Removed top 2 bits (of 11) from port B of cell module155.$xnor$rtl.v:658$548 ($xnor).
Removed top 10 bits (of 11) from port A of cell module155.$sshr$rtl.v:659$552 ($sshr).
Removed top 11 bits (of 12) from port B of cell module155.$sshr$rtl.v:659$552 ($sshr).
Removed top 1 bits (of 10) from port A of cell module155.$ne$rtl.v:671$574 ($ne).
Removed top 9 bits (of 10) from port B of cell module155.$ne$rtl.v:671$574 ($ne).
Removed top 8 bits (of 16) from port A of cell module155.$xor$rtl.v:669$571 ($xor).
Removed top 2 bits (of 3) from port B of cell module155.$xor$rtl.v:669$571 ($xor).
Removed top 8 bits (of 16) from port Y of cell module155.$xor$rtl.v:669$571 ($xor).
Removed top 1 bits (of 2) from mux cell module155.$ternary$rtl.v:671$575 ($mux).
Removed top 7 bits (of 14) from port A of cell module155.$add$rtl.v:674$577 ($add).
Removed top 6 bits (of 9) from port B of cell module155.$add$rtl.v:674$577 ($add).
Removed top 6 bits (of 14) from port Y of cell module155.$add$rtl.v:674$577 ($add).
Removed top 6 bits (of 16) from mux cell module155.$ternary$rtl.v:675$580 ($mux).
Removed top 6 bits (of 16) from port A of cell module155.$gt$rtl.v:675$581 ($gt).
Removed top 6 bits (of 13) from mux cell module155.$ternary$rtl.v:680$588 ($mux).
Removed top 6 bits (of 13) from port B of cell module155.$xnor$rtl.v:680$589 ($xnor).
Removed top 6 bits (of 14) from port A of cell module155.$sshr$rtl.v:681$590 ($sshr).
Removed top 1 bits (of 14) from port Y of cell module155.$neg$rtl.v:681$594 ($neg).
Removed top 1 bits (of 14) from port A of cell module155.$neg$rtl.v:681$594 ($neg).
Removed top 11 bits (of 17) from port B of cell module155.$ne$rtl.v:693$598 ($ne).
Removed top 2 bits (of 3) from port A of cell module155.$sshl$rtl.v:694$604 ($sshl).
Removed top 3 bits (of 14) from port B of cell module155.$sub$rtl.v:704$613 ($sub).
Removed top 11 bits (of 12) from port A of cell module155.$sshl$rtl.v:705$618 ($sshl).
Removed top 11 bits (of 12) from port B of cell module155.$le$rtl.v:705$621 ($le).
Removed top 9 bits (of 16) from mux cell module155.$procmux$1016 ($mux).
Removed top 15 bits (of 16) from FF cell module155.$procdff$1276 ($dff).
Removed top 5 bits (of 6) from FF cell module155.$procdff$1277 ($dff).
Removed top 5 bits (of 14) from FF cell module155.$procdff$1278 ($dff).
Removed top 1 bits (of 14) from mux cell module155.$ternary$rtl.v:681$593 ($mux).
Removed top 1 bits (of 14) from port Y of cell module155.$xnor$rtl.v:681$591 ($xnor).
Removed top 6 bits (of 14) from wire module155.$add$rtl.v:674$577_Y.
Removed top 8 bits (of 9) from wire module155.$eq$rtl.v:694$600_Y.
Removed top 17 bits (of 18) from wire module155.$gt$rtl.v:675$581_Y.
Removed top 4 bits (of 5) from wire module155.$logic_and$rtl.v:655$541_Y.
Removed top 9 bits (of 10) from wire module155.$logic_not$rtl.v:671$573_Y.
Removed top 11 bits (of 12) from wire module155.$logic_not$rtl.v:705$620_Y.
Removed top 1 bits (of 2) from wire module155.$ne$rtl.v:671$574_Y.
Removed top 2 bits (of 3) from wire module155.$ne$rtl.v:693$598_Y.
Removed top 1 bits (of 14) from wire module155.$neg$rtl.v:681$594_Y.
Removed top 9 bits (of 16) from wire module155.$procmux$1016_Y.
Removed top 14 bits (of 15) from wire module155.$reduce_and$rtl.v:653$533_Y.
Removed top 10 bits (of 11) from wire module155.$reduce_or$rtl.v:657$544_Y.
Removed top 6 bits (of 7) from wire module155.$reduce_xnor$rtl.v:639$503_Y.
Removed top 5 bits (of 6) from wire module155.$reduce_xnor$rtl.v:677$584_Y.
Removed top 6 bits (of 7) from wire module155.$reduce_xor$rtl.v:640$507_Y.
Removed top 7 bits (of 15) from wire module155.$ternary$rtl.v:653$532_Y.
Removed top 6 bits (of 16) from wire module155.$ternary$rtl.v:675$580_Y.
Removed top 6 bits (of 13) from wire module155.$ternary$rtl.v:680$588_Y.
Removed top 1 bits (of 14) from wire module155.$ternary$rtl.v:681$593_Y.
Removed top 1 bits (of 17) from wire module155.$ternary$rtl.v:693$597_Y.
Removed top 10 bits (of 11) from wire module155.wire161.
Removed top 10 bits (of 11) from wire module155.wire164.
Removed top 11 bits (of 12) from wire module155.wire168.
Removed top 7 bits (of 15) from wire module155.wire170.
Removed top 3 bits (of 14) from wire module155.wire173.
Removed top 21 bits (of 22) from wire module155.wire174.
Removed top 7 bits (of 14) from wire module155.wire175.
Removed top 9 bits (of 25) from port A of cell module33.$neg$rtl.v:445$389 ($neg).
Removed top 14 bits (of 16) from port B of cell module33.$or$rtl.v:448$399 ($or).
Removed top 8 bits (of 16) from port Y of cell module33.$or$rtl.v:448$399 ($or).
Removed top 8 bits (of 16) from port A of cell module33.$or$rtl.v:448$399 ($or).
Removed top 13 bits (of 22) from mux cell module33.$ternary$rtl.v:456$405 ($mux).
Removed top 2 bits (of 10) from mux cell module33.$ternary$rtl.v:463$410 ($mux).
Removed top 11 bits (of 15) from port B of cell module33.$or$rtl.v:474$418 ($or).
Removed top 5 bits (of 6) from port B of cell module33.$eq$rtl.v:474$421 ($eq).
Removed top 6 bits (of 15) from port B of cell module33.$ne$rtl.v:484$429 ($ne).
Removed top 1 bits (of 2) from mux cell module33.$ternary$rtl.v:484$431 ($mux).
Removed top 15 bits (of 16) from port A of cell module33.$le$rtl.v:485$433 ($le).
Removed top 6 bits (of 8) from mux cell module33.$ternary$rtl.v:486$434 ($mux).
Removed top 6 bits (of 8) from port B of cell module33.$sshl$rtl.v:486$435 ($sshl).
Removed top 7 bits (of 16) from mux cell module33.$ternary$rtl.v:486$438 ($mux).
Removed top 11 bits (of 15) from port A of cell module33.$xor$rtl.v:488$439 ($xor).
Removed top 7 bits (of 15) from port Y of cell module33.$xor$rtl.v:488$439 ($xor).
Removed top 16 bits (of 17) from port A of cell module33.$or$rtl.v:491$442 ($or).
Removed top 2 bits (of 17) from port Y of cell module33.$or$rtl.v:491$442 ($or).
Removed top 2 bits (of 17) from port B of cell module33.$or$rtl.v:491$442 ($or).
Removed top 2 bits (of 10) from mux cell module33.$procmux$1067 ($mux).
Removed top 8 bits (of 16) from mux cell module33.$ternary$rtl.v:448$398 ($mux).
Removed top 7 bits (of 16) from port Y of cell module33.$sshl$rtl.v:486$435 ($sshl).
Removed top 2 bits (of 17) from port Y of cell module33.$sshl$rtl.v:491$441 ($sshl).
Removed top 8 bits (of 16) from mux cell module33.$ternary$rtl.v:448$396 ($mux).
Removed top 8 bits (of 16) from mux cell module33.$ternary$rtl.v:448$393 ($mux).
Removed top 10 bits (of 11) from wire module33.$eq$rtl.v:474$421_Y.
Removed top 5 bits (of 6) from wire module33.$logic_and$rtl.v:474$420_Y.
Removed top 15 bits (of 16) from wire module33.$logic_and$rtl.v:485$432_Y.
Removed top 9 bits (of 10) from wire module33.$logic_not$rtl.v:478$425_Y.
Removed top 1 bits (of 2) from wire module33.$ne$rtl.v:484$429_Y.
Removed top 1 bits (of 15) from wire module33.$or$rtl.v:474$418_Y.
Removed top 2 bits (of 17) from wire module33.$or$rtl.v:491$442_Y.
Removed top 2 bits (of 10) from wire module33.$procmux$1067_Y.
Removed top 15 bits (of 16) from wire module33.$reduce_xnor$rtl.v:448$394_Y.
Removed top 8 bits (of 16) from wire module33.$ternary$rtl.v:448$393_Y.
Removed top 13 bits (of 22) from wire module33.$ternary$rtl.v:456$405_Y.
Removed top 2 bits (of 10) from wire module33.$ternary$rtl.v:463$410_Y.
Removed top 11 bits (of 15) from wire module33.wire64.
Removed top 15 bits (of 21) from wire module33.wire66.
Removed top 2 bits (of 3) from wire module33.wire68.
Removed top 2 bits (of 16) from mux cell module39.$ternary$rtl.v:541$453 ($mux).
Removed top 5 bits (of 11) from mux cell module39.$ternary$rtl.v:544$455 ($mux).
Removed top 3 bits (of 22) from port Y of cell module39.$shl$rtl.v:552$459 ($shl).
Removed top 8 bits (of 13) from port B of cell module39.$add$rtl.v:558$464 ($add).
Removed top 7 bits (of 13) from port Y of cell module39.$add$rtl.v:558$464 ($add).
Removed top 18 bits (of 19) from port A of cell module39.$gt$rtl.v:562$469 ($gt).
Removed top 8 bits (of 13) from mux cell module39.$ternary$rtl.v:563$472 ($mux).
Removed top 8 bits (of 13) from port A of cell module39.$gt$rtl.v:563$473 ($gt).
Removed cell module39.$procdff$1284 ($dff).
Removed top 15 bits (of 16) from wire module39.$logic_not$rtl.v:541$451_Y.
Removed top 8 bits (of 13) from wire module39.$ternary$rtl.v:563$472_Y.
Removed top 5 bits (of 11) from wire module39.wire46.
Removed top 9 bits (of 10) from wire module39.wire47.
Removed top 8 bits (of 13) from wire module39.wire50.
Removed top 3 bits (of 8) from wire module39.wire52.
Removed top 8 bits (of 13) from wire module39.wire55.
Removed top 21 bits (of 22) from wire module39.wire59.
Removed top 5 bits (of 6) from port B of cell module87.$gt$rtl.v:335$289 ($gt).
Removed top 2 bits (of 3) from port B of cell module87.$le$rtl.v:336$290 ($le).
Removed top 1 bits (of 2) from port A of cell module87.$xnor$rtl.v:344$294 ($xnor).
Removed top 2 bits (of 3) from port B of cell module87.$xnor$rtl.v:344$294 ($xnor).
Removed top 12 bits (of 20) from port A of cell module87.$xnor$rtl.v:355$304 ($xnor).
Removed top 1 bits (of 2) from port B of cell module87.$ne$rtl.v:350$300 ($ne).
Removed top 3 bits (of 20) from port A of cell module87.$lt$rtl.v:355$305 ($lt).
Removed top 2 bits (of 3) from port B of cell module87.$shr$rtl.v:360$306 ($shr).
Removed top 17 bits (of 18) from port A of cell module87.$gt$rtl.v:363$317 ($gt).
Removed top 2 bits (of 8) from port A of cell module87.$sshr$rtl.v:367$324 ($sshr).
Removed top 14 bits (of 20) from mux cell module87.$ternary$rtl.v:379$351 ($mux).
Removed top 11 bits (of 12) from mux cell module87.$procmux$1109 ($mux).
Removed top 14 bits (of 15) from mux cell module87.$procmux$1112 ($mux).
Removed top 3 bits (of 4) from mux cell module87.$procmux$1124 ($mux).
Removed top 3 bits (of 4) from FF cell module87.$procdff$1292 ($dff).
Removed top 11 bits (of 12) from FF cell module87.$procdff$1295 ($dff).
Removed top 8 bits (of 9) from FF cell module87.$procdff$1300 ($dff).
Removed top 19 bits (of 20) from FF cell module87.$procdff$1301 ($dff).
Removed top 19 bits (of 20) from mux cell module87.$ternary$rtl.v:355$303 ($mux).
Removed top 8 bits (of 9) from port B of cell module87.$sshl$rtl.v:367$325 ($sshl).
Removed top 14 bits (of 20) from port Y of cell module87.$sshl$rtl.v:379$350 ($sshl).
Removed top 8 bits (of 9) from wire module87.$0\reg153[8:0].
Removed top 3 bits (of 4) from wire module87.$0\reg190[3:0].
Removed top 11 bits (of 12) from wire module87.$0\reg191[11:0].
Removed top 11 bits (of 12) from wire module87.$eq$rtl.v:364$320_Y.
Removed top 3 bits (of 4) from wire module87.$gt$rtl.v:363$317_Y.
Removed top 14 bits (of 15) from wire module87.$procmux$1112_Y.
Removed top 14 bits (of 15) from wire module87.$reduce_and$rtl.v:369$327_Y.
Removed top 14 bits (of 20) from wire module87.$sshl$rtl.v:379$350_Y.
Removed top 19 bits (of 20) from wire module87.$ternary$rtl.v:355$303_Y.
Removed top 14 bits (of 20) from wire module87.$ternary$rtl.v:379$351_Y.
Removed top 2 bits (of 3) from wire module87.wire150.
Removed top 15 bits (of 16) from wire module87.wire152.
Removed top 4 bits (of 5) from wire module87.wire92.
Removed top 4 bits (of 5) from wire module87.wire93.
Removed top 17 bits (of 20) from port A of cell module94.$shl$rtl.v:825$641 ($shl).
Removed top 1 bits (of 10) from mux cell module94.$ternary$rtl.v:828$648 ($mux).
Removed top 1 bits (of 10) from mux cell module94.$ternary$rtl.v:831$654 ($mux).
Removed top 11 bits (of 12) from port A of cell module94.$and$rtl.v:838$661 ($and).
Removed top 6 bits (of 12) from port B of cell module94.$eq$rtl.v:838$662 ($eq).
Removed top 10 bits (of 11) from port A of cell module94.$shr$rtl.v:838$664 ($shr).
Removed top 5 bits (of 6) from port A of cell module94.$ne$rtl.v:848$680 ($ne).
Removed top 5 bits (of 6) from mux cell module94.$ternary$rtl.v:848$682 ($mux).
Removed top 16 bits (of 17) from port A of cell module94.$le$rtl.v:852$686 ($le).
Removed top 4 bits (of 22) from mux cell module94.$ternary$rtl.v:852$687 ($mux).
Removed top 2 bits (of 3) from mux cell module94.$ternary$rtl.v:859$694 ($mux).
Removed top 13 bits (of 14) from port A of cell module94.$lt$rtl.v:860$696 ($lt).
Removed top 5 bits (of 14) from port B of cell module94.$lt$rtl.v:860$696 ($lt).
Removed top 17 bits (of 18) from port A of cell module94.$ne$rtl.v:860$697 ($ne).
Removed top 12 bits (of 13) from mux cell module94.$ternary$rtl.v:862$707 ($mux).
Removed top 12 bits (of 13) from port A of cell module94.$neg$rtl.v:862$709 ($neg).
Removed top 12 bits (of 13) from mux cell module94.$ternary$rtl.v:867$724 ($mux).
Removed top 12 bits (of 13) from port A of cell module94.$neg$rtl.v:869$730 ($neg).
Removed top 3 bits (of 4) from port A of cell module94.$add$rtl.v:869$727 ($add).
Removed top 6 bits (of 18) from mux cell module94.$ternary$rtl.v:873$739 ($mux).
Removed top 6 bits (of 18) from mux cell module94.$ternary$rtl.v:873$737 ($mux).
Removed top 1 bits (of 2) from port B of cell module94.$xnor$rtl.v:889$746 ($xnor).
Removed top 3 bits (of 7) from port Y of cell module94.$xnor$rtl.v:889$746 ($xnor).
Removed top 3 bits (of 13) from mux cell module94.$ternary$rtl.v:900$754 ($mux).
Removed top 10 bits (of 18) from port A of cell module94.$neg$rtl.v:902$758 ($neg).
Removed top 8 bits (of 12) from port A of cell module94.$ne$rtl.v:905$767 ($ne).
Removed top 4 bits (of 20) from port A of cell module94.$sshr$rtl.v:905$768 ($sshr).
Removed top 11 bits (of 16) from port A of cell module94.$gt$rtl.v:912$770 ($gt).
Removed top 7 bits (of 20) from mux cell module94.$ternary$rtl.v:917$781 ($mux).
Removed top 19 bits (of 20) from mux cell module94.$ternary$rtl.v:919$787 ($mux).
Removed top 15 bits (of 18) from port A of cell module94.$xor$rtl.v:927$798 ($xor).
Removed top 6 bits (of 14) from port B of cell module94.$ne$rtl.v:929$799 ($ne).
Removed top 15 bits (of 22) from mux cell module94.$ternary$rtl.v:930$802 ($mux).
Removed top 5 bits (of 12) from port Y of cell module94.$shl$rtl.v:942$807 ($shl).
Removed top 20 bits (of 21) from port A of cell module94.$sub$rtl.v:947$818 ($sub).
Removed top 12 bits (of 20) from port A of cell module94.$lt$rtl.v:957$824 ($lt).
Removed top 5 bits (of 13) from mux cell module94.$ternary$rtl.v:960$830 ($mux).
Removed top 10 bits (of 11) from mux cell module94.$ternary$rtl.v:957$827 ($mux).
Removed top 11 bits (of 21) from mux cell module94.$ternary$rtl.v:961$837 ($mux).
Removed top 1 bits (of 8) from mux cell module94.$ternary$rtl.v:963$839 ($mux).
Removed top 12 bits (of 13) from port A of cell module94.$xnor$rtl.v:965$845 ($xnor).
Removed top 6 bits (of 19) from mux cell module94.$ternary$rtl.v:965$847 ($mux).
Removed top 18 bits (of 19) from port A of cell module94.$sub$rtl.v:965$849 ($sub).
Removed top 2 bits (of 19) from mux cell module94.$ternary$rtl.v:965$850 ($mux).
Removed top 13 bits (of 20) from mux cell module94.$ternary$rtl.v:977$852 ($mux).
Removed top 18 bits (of 20) from mux cell module94.$ternary$rtl.v:980$864 ($mux).
Removed top 4 bits (of 20) from mux cell module94.$ternary$rtl.v:981$873 ($mux).
Removed top 9 bits (of 10) from port A of cell module94.$ne$rtl.v:980$865 ($ne).
Removed top 9 bits (of 20) from mux cell module94.$ternary$rtl.v:981$869 ($mux).
Removed top 9 bits (of 20) from mux cell module94.$ternary$rtl.v:981$871 ($mux).
Removed top 6 bits (of 19) from mux cell module94.$ternary$rtl.v:988$884 ($mux).
Removed top 8 bits (of 19) from mux cell module94.$ternary$rtl.v:988$886 ($mux).
Removed top 19 bits (of 20) from mux cell module94.$procmux$963 ($mux).
Removed top 8 bits (of 20) from mux cell module94.$procmux$974 ($mux).
Removed top 15 bits (of 16) from mux cell module94.$procmux$998 ($mux).
Removed top 15 bits (of 22) from FF cell module94.$procdff$1259 ($dff).
Removed top 2 bits (of 20) from FF cell module94.$procdff$1260 ($dff).
Removed top 20 bits (of 21) from FF cell module94.$procdff$1261 ($dff).
Removed top 5 bits (of 22) from FF cell module94.$procdff$1262 ($dff).
Removed top 4 bits (of 5) from FF cell module94.$procdff$1269 ($dff).
Removed top 6 bits (of 8) from FF cell module94.$procdff$1270 ($dff).
Removed top 12 bits (of 13) from FF cell module94.$procdff$1273 ($dff).
Removed top 5 bits (of 12) from FF cell module94.$procdff$1274 ($dff).
Removed top 9 bits (of 20) from mux cell module94.$ternary$rtl.v:861$700 ($mux).
Removed top 6 bits (of 18) from port Y of cell module94.$sub$rtl.v:873$734 ($sub).
Removed top 6 bits (of 18) from port A of cell module94.$sub$rtl.v:873$734 ($sub).
Removed top 1 bits (of 8) from mux cell module94.$ternary$rtl.v:899$750 ($mux).
Removed top 3 bits (of 13) from port Y of cell module94.$not$rtl.v:900$751 ($not).
Removed top 3 bits (of 13) from port A of cell module94.$not$rtl.v:900$751 ($not).
Removed top 14 bits (of 20) from mux cell module94.$ternary$rtl.v:915$776 ($mux).
Removed top 1 bits (of 13) from mux cell module94.$ternary$rtl.v:917$781 ($mux).
Removed top 19 bits (of 20) from port A of cell module94.$xnor$rtl.v:946$813 ($xnor).
Removed top 2 bits (of 20) from port A of cell module94.$sub$rtl.v:961$831 ($sub).
Removed top 10 bits (of 20) from mux cell module94.$ternary$rtl.v:961$834 ($mux).
Removed top 6 bits (of 7) from port B of cell module94.$sub$rtl.v:965$849 ($sub).
Removed top 2 bits (of 19) from port Y of cell module94.$sub$rtl.v:965$849 ($sub).
Removed top 2 bits (of 20) from mux cell module94.$ternary$rtl.v:980$860 ($mux).
Removed top 2 bits (of 13) from mux cell module94.$ternary$rtl.v:988$884 ($mux).
Removed top 2 bits (of 13) from mux cell module94.$ternary$rtl.v:988$882 ($mux).
Removed top 1 bits (of 2) from FF cell module94.$procdff$1270 ($dff).
Removed top 10 bits (of 20) from port Y of cell module94.$sub$rtl.v:961$831 ($sub).
Removed top 8 bits (of 18) from port A of cell module94.$sub$rtl.v:961$831 ($sub).
Removed top 12 bits (of 13) from wire module94.$0\reg102[12:0].
Removed top 4 bits (of 5) from wire module94.$0\reg115[4:0].
Removed top 2 bits (of 20) from wire module94.$0\reg129[19:0].
Removed top 15 bits (of 22) from wire module94.$0\reg130[21:0].
Removed top 10 bits (of 11) from wire module94.$eq$rtl.v:838$662_Y.
Removed top 19 bits (of 20) from wire module94.$gt$rtl.v:912$770_Y.
Removed top 15 bits (of 16) from wire module94.$gt$rtl.v:943$808_Y.
Removed top 13 bits (of 14) from wire module94.$logic_and$rtl.v:860$695_Y.
Removed top 11 bits (of 12) from wire module94.$logic_not$rtl.v:838$660_Y.
Removed top 5 bits (of 6) from wire module94.$logic_not$rtl.v:848$681_Y.
Removed top 17 bits (of 18) from wire module94.$logic_not$rtl.v:866$714_Y.
Removed top 12 bits (of 13) from wire module94.$logic_not$rtl.v:867$722_Y.
Removed top 19 bits (of 20) from wire module94.$logic_not$rtl.v:980$861_Y.
Removed top 5 bits (of 6) from wire module94.$logic_or$rtl.v:848$678_Y.
Removed top 7 bits (of 8) from wire module94.$logic_or$rtl.v:945$810_Y.
Removed top 10 bits (of 11) from wire module94.$logic_or$rtl.v:957$825_Y.
Removed top 3 bits (of 13) from wire module94.$not$rtl.v:900$751_Y.
Removed top 11 bits (of 21) from wire module94.$pos$rtl.v:961$835_Y.
Removed top 6 bits (of 19) from wire module94.$pos$rtl.v:965$848_Y.
Removed top 19 bits (of 20) from wire module94.$procmux$963_Y.
Removed top 8 bits (of 20) from wire module94.$procmux$974_Y.
Removed top 15 bits (of 16) from wire module94.$procmux$998_Y.
Removed top 2 bits (of 3) from wire module94.$reduce_and$rtl.v:859$692_Y.
Removed top 12 bits (of 13) from wire module94.$reduce_xnor$rtl.v:862$704_Y.
Removed top 12 bits (of 13) from wire module94.$reduce_xnor$rtl.v:869$729_Y.
Removed top 19 bits (of 20) from wire module94.$reduce_xnor$rtl.v:961$832_Y.
Removed top 5 bits (of 12) from wire module94.$shl$rtl.v:942$807_Y.
Removed top 6 bits (of 18) from wire module94.$sub$rtl.v:873$734_Y.
Removed top 10 bits (of 20) from wire module94.$sub$rtl.v:961$831_Y.
Removed top 2 bits (of 19) from wire module94.$sub$rtl.v:965$849_Y.
Removed top 1 bits (of 10) from wire module94.$ternary$rtl.v:828$648_Y.
Removed top 1 bits (of 10) from wire module94.$ternary$rtl.v:831$654_Y.
Removed top 9 bits (of 20) from wire module94.$ternary$rtl.v:861$700_Y.
Removed top 6 bits (of 18) from wire module94.$ternary$rtl.v:873$737_Y.
Removed top 6 bits (of 18) from wire module94.$ternary$rtl.v:873$739_Y.
Removed top 1 bits (of 8) from wire module94.$ternary$rtl.v:899$750_Y.
Removed top 3 bits (of 13) from wire module94.$ternary$rtl.v:900$754_Y.
Removed top 14 bits (of 20) from wire module94.$ternary$rtl.v:915$776_Y.
Removed top 8 bits (of 20) from wire module94.$ternary$rtl.v:917$781_Y.
Removed top 19 bits (of 20) from wire module94.$ternary$rtl.v:919$787_Y.
Removed top 10 bits (of 11) from wire module94.$ternary$rtl.v:957$827_Y.
Removed top 12 bits (of 13) from wire module94.$ternary$rtl.v:960$830_Y.
Removed top 2 bits (of 19) from wire module94.$ternary$rtl.v:965$850_Y.
Removed top 2 bits (of 20) from wire module94.$ternary$rtl.v:980$860_Y.
Removed top 5 bits (of 6) from wire module94.wire105.
Removed top 12 bits (of 13) from wire module94.wire109.
Removed top 19 bits (of 20) from wire module94.wire110.
Removed top 12 bits (of 13) from wire module94.wire125.
Removed top 19 bits (of 20) from wire module94.wire126.
Removed top 8 bits (of 9) from wire module94.wire127.
Removed top 18 bits (of 19) from wire module94.wire128.
Removed top 15 bits (of 16) from port A of cell top.$mul$rtl.v:118$30 ($mul).
Removed top 4 bits (of 18) from mux cell top.$ternary$rtl.v:120$48 ($mux).
Removed top 4 bits (of 16) from port B of cell top.$le$rtl.v:120$43 ($le).
Removed top 29 bits (of 30) from port B of cell top.$add$rtl.v:125$55 ($add).
Removed top 17 bits (of 30) from mux cell top.$ternary$rtl.v:125$56 ($mux).
Removed top 7 bits (of 8) from port A of cell top.$add$rtl.v:132$59 ($add).
Removed top 1 bits (of 8) from port A of cell top.$le$rtl.v:132$60 ($le).
Removed top 13 bits (of 18) from mux cell top.$ternary$rtl.v:138$78 ($mux).
Removed top 2 bits (of 16) from port A of cell top.$not$rtl.v:164$88 ($not).
Removed top 10 bits (of 16) from port B of cell top.$xnor$rtl.v:177$99 ($xnor).
Removed top 16 bits (of 19) from mux cell top.$ternary$rtl.v:184$114 ($mux).
Removed top 5 bits (of 16) from mux cell top.$ternary$rtl.v:189$126 ($mux).
Removed top 15 bits (of 22) from mux cell top.$ternary$rtl.v:202$134 ($mux).
Removed top 15 bits (of 22) from port A of cell top.$mul$rtl.v:202$135 ($mul).
Removed top 21 bits (of 22) from port B of cell top.$mul$rtl.v:202$135 ($mul).
Removed top 14 bits (of 22) from port Y of cell top.$mul$rtl.v:202$135 ($mul).
Removed top 8 bits (of 11) from port A of cell top.$ge$rtl.v:206$138 ($ge).
Removed top 2 bits (of 11) from mux cell top.$ternary$rtl.v:208$145 ($mux).
Removed top 2 bits (of 11) from mux cell top.$ternary$rtl.v:209$147 ($mux).
Removed top 10 bits (of 18) from mux cell top.$ternary$rtl.v:219$158 ($mux).
Removed top 5 bits (of 8) from mux cell top.$ternary$rtl.v:219$155 ($mux).
Removed top 8 bits (of 16) from port B of cell top.$ne$rtl.v:225$163 ($ne).
Removed top 2 bits (of 3) from port A of cell top.$lt$rtl.v:227$167 ($lt).
Removed top 5 bits (of 16) from mux cell top.$ternary$rtl.v:227$169 ($mux).
Removed top 8 bits (of 16) from port A of cell top.$sub$rtl.v:227$170 ($sub).
Removed top 5 bits (of 16) from port B of cell top.$sub$rtl.v:227$170 ($sub).
Removed top 5 bits (of 16) from mux cell top.$ternary$rtl.v:228$174 ($mux).
Removed top 7 bits (of 19) from port Y of cell top.$and$rtl.v:243$188 ($and).
Removed top 3 bits (of 16) from mux cell top.$ternary$rtl.v:251$200 ($mux).
Removed top 2 bits (of 12) from port A of cell top.$or$rtl.v:254$204 ($or).
Removed top 7 bits (of 19) from port A of cell top.$or$rtl.v:264$205 ($or).
Removed top 9 bits (of 21) from port Y of cell top.$or$rtl.v:264$205 ($or).
Removed top 9 bits (of 21) from port A of cell top.$eq$rtl.v:264$206 ($eq).
Removed top 14 bits (of 19) from port Y of cell top.$xnor$rtl.v:268$221 ($xnor).
Removed top 5 bits (of 16) from mux cell top.$procmux$1151 ($mux).
Removed top 10 bits (of 21) from mux cell top.$procmux$1181 ($mux).
Removed top 4 bits (of 12) from mux cell top.$procmux$1187 ($mux).
Removed top 8 bits (of 11) from mux cell top.$procmux$1205 ($mux).
Removed top 11 bits (of 12) from FF cell top.$procdff$1309 ($dff).
Removed top 13 bits (of 16) from FF cell top.$procdff$1316 ($dff).
Removed top 11 bits (of 12) from port B of cell top.$le$rtl.v:120$43 ($le).
Removed top 1 bits (of 14) from mux cell top.$ternary$rtl.v:124$53 ($mux).
Removed top 17 bits (of 30) from port Y of cell top.$add$rtl.v:125$55 ($add).
Removed top 17 bits (of 30) from port A of cell top.$add$rtl.v:125$55 ($add).
Removed top 5 bits (of 12) from mux cell top.$ternary$rtl.v:138$73 ($mux).
Removed top 13 bits (of 16) from port A of cell top.$xnor$rtl.v:177$99 ($xnor).
Removed top 11 bits (of 12) from port A of cell top.$lt$rtl.v:228$171 ($lt).
Removed top 3 bits (of 16) from mux cell top.$ternary$rtl.v:251$196 ($mux).
Removed top 13 bits (of 16) from port B of cell top.$or$rtl.v:252$201 ($or).
Removed top 11 bits (of 12) from port B of cell top.$xnor$rtl.v:266$210 ($xnor).
Removed top 2 bits (of 3) from mux cell top.$procmux$1205 ($mux).
Removed top 11 bits (of 12) from wire top.$0\reg5[11:0].
Removed top 17 bits (of 30) from wire top.$add$rtl.v:125$55_Y.
Removed top 8 bits (of 9) from wire top.$eq$rtl.v:264$206_Y.
Removed top 2 bits (of 3) from wire top.$ge$rtl.v:227$166_Y.
Removed top 2 bits (of 3) from wire top.$logic_and$rtl.v:177$105_Y.
Removed top 2 bits (of 3) from wire top.$logic_not$rtl.v:185$116_Y.
Removed top 15 bits (of 16) from wire top.$logic_not$rtl.v:189$124_Y.
Removed top 10 bits (of 11) from wire top.$logic_not$rtl.v:208$143_Y.
Removed top 11 bits (of 12) from wire top.$logic_not$rtl.v:266$212_Y.
Removed top 17 bits (of 18) from wire top.$logic_or$rtl.v:134$61_Y.
Removed top 17 bits (of 18) from wire top.$lt$rtl.v:138$76_Y.
Removed top 15 bits (of 16) from wire top.$lt$rtl.v:228$171_Y.
Removed top 14 bits (of 22) from wire top.$mul$rtl.v:202$135_Y.
Removed top 9 bits (of 21) from wire top.$or$rtl.v:264$205_Y.
Removed top 5 bits (of 16) from wire top.$procmux$1151_Y.
Removed top 10 bits (of 21) from wire top.$procmux$1181_Y.
Removed top 4 bits (of 12) from wire top.$procmux$1187_Y.
Removed top 10 bits (of 11) from wire top.$procmux$1205_Y.
Removed top 21 bits (of 22) from wire top.$reduce_or$rtl.v:202$132_Y.
Removed top 13 bits (of 14) from wire top.$reduce_xnor$rtl.v:208$140_Y.
Removed top 10 bits (of 11) from wire top.$reduce_xnor$rtl.v:209$146_Y.
Removed top 15 bits (of 16) from wire top.$reduce_xnor$rtl.v:251$194_Y.
Removed top 15 bits (of 16) from wire top.$reduce_xnor$rtl.v:251$198_Y.
Removed top 4 bits (of 18) from wire top.$ternary$rtl.v:120$48_Y.
Removed top 1 bits (of 14) from wire top.$ternary$rtl.v:124$53_Y.
Removed top 5 bits (of 12) from wire top.$ternary$rtl.v:138$73_Y.
Removed top 13 bits (of 18) from wire top.$ternary$rtl.v:138$78_Y.
Removed top 16 bits (of 19) from wire top.$ternary$rtl.v:184$114_Y.
Removed top 5 bits (of 16) from wire top.$ternary$rtl.v:189$126_Y.
Removed top 15 bits (of 22) from wire top.$ternary$rtl.v:202$134_Y.
Removed top 2 bits (of 11) from wire top.$ternary$rtl.v:208$145_Y.
Removed top 2 bits (of 11) from wire top.$ternary$rtl.v:209$147_Y.
Removed top 10 bits (of 18) from wire top.$ternary$rtl.v:219$158_Y.
Removed top 5 bits (of 16) from wire top.$ternary$rtl.v:227$169_Y.
Removed top 5 bits (of 16) from wire top.$ternary$rtl.v:228$174_Y.
Removed top 3 bits (of 16) from wire top.$ternary$rtl.v:251$196_Y.
Removed top 3 bits (of 16) from wire top.$ternary$rtl.v:251$200_Y.
Removed top 14 bits (of 19) from wire top.$xnor$rtl.v:268$221_Y.
Removed top 11 bits (of 12) from wire top.wire203.
Removed top 16 bits (of 17) from wire top.wire32.
Removed top 7 bits (of 19) from wire top.wire82.
Removed top 18 bits (of 19) from wire top.wire86.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 165 unused wires.
<suppressed ~7 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~760 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module module155:
  creating $macc model for $add$rtl.v:659$556 ($add).
  creating $macc model for $add$rtl.v:674$577 ($add).
  creating $macc model for $neg$rtl.v:681$594 ($neg).
  creating $macc model for $neg$rtl.v:697$610 ($neg).
  creating $macc model for $sub$rtl.v:640$509 ($sub).
  creating $macc model for $sub$rtl.v:704$613 ($sub).
  creating $alu model for $macc $sub$rtl.v:704$613.
  creating $alu model for $macc $sub$rtl.v:640$509.
  creating $alu model for $macc $neg$rtl.v:697$610.
  creating $alu model for $macc $neg$rtl.v:681$594.
  creating $alu model for $macc $add$rtl.v:674$577.
  creating $alu model for $macc $add$rtl.v:659$556.
  creating $alu model for $ge$rtl.v:641$513 ($ge): new $alu
  creating $alu model for $gt$rtl.v:675$581 ($gt): new $alu
  creating $alu model for $le$rtl.v:705$621 ($le): new $alu
  creating $alu cell for $le$rtl.v:705$621: $auto$alumacc.cc:474:replace_alu$1493
  creating $alu cell for $gt$rtl.v:675$581: $auto$alumacc.cc:474:replace_alu$1506
  creating $alu cell for $ge$rtl.v:641$513: $auto$alumacc.cc:474:replace_alu$1511
  creating $alu cell for $add$rtl.v:659$556: $auto$alumacc.cc:474:replace_alu$1520
  creating $alu cell for $add$rtl.v:674$577: $auto$alumacc.cc:474:replace_alu$1523
  creating $alu cell for $neg$rtl.v:681$594: $auto$alumacc.cc:474:replace_alu$1526
  creating $alu cell for $neg$rtl.v:697$610: $auto$alumacc.cc:474:replace_alu$1529
  creating $alu cell for $sub$rtl.v:640$509: $auto$alumacc.cc:474:replace_alu$1532
  creating $alu cell for $sub$rtl.v:704$613: $auto$alumacc.cc:474:replace_alu$1535
  created 9 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module33:
  creating $macc model for $neg$rtl.v:445$389 ($neg).
  creating $macc model for $neg$rtl.v:463$408 ($neg).
  creating $alu model for $macc $neg$rtl.v:463$408.
  creating $alu model for $macc $neg$rtl.v:445$389.
  creating $alu model for $ge$rtl.v:456$403 ($ge): new $alu
  creating $alu model for $le$rtl.v:485$433 ($le): new $alu
  creating $alu cell for $le$rtl.v:485$433: $auto$alumacc.cc:474:replace_alu$1540
  creating $alu cell for $ge$rtl.v:456$403: $auto$alumacc.cc:474:replace_alu$1549
  creating $alu cell for $neg$rtl.v:445$389: $auto$alumacc.cc:474:replace_alu$1558
  creating $alu cell for $neg$rtl.v:463$408: $auto$alumacc.cc:474:replace_alu$1561
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module39:
  creating $macc model for $add$rtl.v:558$464 ($add).
  creating $alu model for $macc $add$rtl.v:558$464.
  creating $alu model for $gt$rtl.v:562$469 ($gt): new $alu
  creating $alu model for $gt$rtl.v:563$473 ($gt): new $alu
  creating $alu cell for $gt$rtl.v:563$473: $auto$alumacc.cc:474:replace_alu$1566
  creating $alu cell for $gt$rtl.v:562$469: $auto$alumacc.cc:474:replace_alu$1577
  creating $alu cell for $add$rtl.v:558$464: $auto$alumacc.cc:474:replace_alu$1588
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module87:
  creating $alu model for $gt$rtl.v:335$289 ($gt): new $alu
  creating $alu model for $gt$rtl.v:363$317 ($gt): new $alu
  creating $alu model for $le$rtl.v:336$290 ($le): new $alu
  creating $alu model for $lt$rtl.v:355$305 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:355$305: $auto$alumacc.cc:474:replace_alu$1595
  creating $alu cell for $le$rtl.v:336$290: $auto$alumacc.cc:474:replace_alu$1600
  creating $alu cell for $gt$rtl.v:363$317: $auto$alumacc.cc:474:replace_alu$1613
  creating $alu cell for $gt$rtl.v:335$289: $auto$alumacc.cc:474:replace_alu$1624
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module94:
  creating $macc model for $add$rtl.v:869$727 ($add).
  creating $macc model for $mul$rtl.v:866$713 ($mul).
  creating $macc model for $neg$rtl.v:825$638 ($neg).
  creating $macc model for $neg$rtl.v:858$690 ($neg).
  creating $macc model for $neg$rtl.v:862$709 ($neg).
  creating $macc model for $neg$rtl.v:867$716 ($neg).
  creating $macc model for $neg$rtl.v:869$730 ($neg).
  creating $macc model for $neg$rtl.v:888$745 ($neg).
  creating $macc model for $neg$rtl.v:902$758 ($neg).
  creating $macc model for $neg$rtl.v:923$792 ($neg).
  creating $macc model for $sub$rtl.v:873$734 ($sub).
  creating $macc model for $sub$rtl.v:904$764 ($sub).
  creating $macc model for $sub$rtl.v:947$818 ($sub).
  creating $macc model for $sub$rtl.v:961$831 ($sub).
  creating $macc model for $sub$rtl.v:965$849 ($sub).
  creating $alu model for $macc $sub$rtl.v:965$849.
  creating $alu model for $macc $sub$rtl.v:961$831.
  creating $alu model for $macc $sub$rtl.v:947$818.
  creating $alu model for $macc $sub$rtl.v:904$764.
  creating $alu model for $macc $sub$rtl.v:873$734.
  creating $alu model for $macc $neg$rtl.v:923$792.
  creating $alu model for $macc $neg$rtl.v:902$758.
  creating $alu model for $macc $neg$rtl.v:888$745.
  creating $alu model for $macc $neg$rtl.v:869$730.
  creating $alu model for $macc $neg$rtl.v:867$716.
  creating $alu model for $macc $neg$rtl.v:862$709.
  creating $alu model for $macc $neg$rtl.v:858$690.
  creating $alu model for $macc $neg$rtl.v:825$638.
  creating $alu model for $macc $add$rtl.v:869$727.
  creating $macc cell for $mul$rtl.v:866$713: $auto$alumacc.cc:354:replace_macc$1629
  creating $alu model for $ge$rtl.v:920$791 ($ge): new $alu
  creating $alu model for $gt$rtl.v:848$683 ($gt): new $alu
  creating $alu model for $gt$rtl.v:912$770 ($gt): new $alu
  creating $alu model for $gt$rtl.v:943$808 ($gt): new $alu
  creating $alu model for $le$rtl.v:852$686 ($le): new $alu
  creating $alu model for $lt$rtl.v:860$696 ($lt): new $alu
  creating $alu model for $lt$rtl.v:957$824 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:957$824: $auto$alumacc.cc:474:replace_alu$1637
  creating $alu cell for $lt$rtl.v:860$696: $auto$alumacc.cc:474:replace_alu$1642
  creating $alu cell for $le$rtl.v:852$686: $auto$alumacc.cc:474:replace_alu$1647
  creating $alu cell for $gt$rtl.v:943$808: $auto$alumacc.cc:474:replace_alu$1656
  creating $alu cell for $gt$rtl.v:912$770: $auto$alumacc.cc:474:replace_alu$1667
  creating $alu cell for $gt$rtl.v:848$683: $auto$alumacc.cc:474:replace_alu$1678
  creating $alu cell for $ge$rtl.v:920$791: $auto$alumacc.cc:474:replace_alu$1689
  creating $alu cell for $add$rtl.v:869$727: $auto$alumacc.cc:474:replace_alu$1702
  creating $alu cell for $neg$rtl.v:825$638: $auto$alumacc.cc:474:replace_alu$1705
  creating $alu cell for $neg$rtl.v:858$690: $auto$alumacc.cc:474:replace_alu$1708
  creating $alu cell for $neg$rtl.v:862$709: $auto$alumacc.cc:474:replace_alu$1711
  creating $alu cell for $neg$rtl.v:867$716: $auto$alumacc.cc:474:replace_alu$1714
  creating $alu cell for $neg$rtl.v:869$730: $auto$alumacc.cc:474:replace_alu$1717
  creating $alu cell for $neg$rtl.v:888$745: $auto$alumacc.cc:474:replace_alu$1720
  creating $alu cell for $neg$rtl.v:902$758: $auto$alumacc.cc:474:replace_alu$1723
  creating $alu cell for $neg$rtl.v:923$792: $auto$alumacc.cc:474:replace_alu$1726
  creating $alu cell for $sub$rtl.v:873$734: $auto$alumacc.cc:474:replace_alu$1729
  creating $alu cell for $sub$rtl.v:904$764: $auto$alumacc.cc:474:replace_alu$1732
  creating $alu cell for $sub$rtl.v:947$818: $auto$alumacc.cc:474:replace_alu$1735
  creating $alu cell for $sub$rtl.v:961$831: $auto$alumacc.cc:474:replace_alu$1738
  creating $alu cell for $sub$rtl.v:965$849: $auto$alumacc.cc:474:replace_alu$1741
  created 21 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$rtl.v:125$55 ($add).
  creating $macc model for $add$rtl.v:132$59 ($add).
  creating $macc model for $mul$rtl.v:118$30 ($mul).
  creating $macc model for $mul$rtl.v:188$120 ($mul).
  creating $macc model for $mul$rtl.v:202$135 ($mul).
  creating $macc model for $mul$rtl.v:206$137 ($mul).
  creating $macc model for $mul$rtl.v:225$162 ($mul).
  creating $macc model for $neg$rtl.v:202$131 ($neg).
  creating $macc model for $sub$rtl.v:164$89 ($sub).
  creating $macc model for $sub$rtl.v:227$170 ($sub).
  creating $alu model for $macc $sub$rtl.v:227$170.
  creating $alu model for $macc $sub$rtl.v:164$89.
  creating $alu model for $macc $neg$rtl.v:202$131.
  creating $alu model for $macc $add$rtl.v:132$59.
  creating $alu model for $macc $add$rtl.v:125$55.
  creating $macc cell for $mul$rtl.v:202$135: $auto$alumacc.cc:354:replace_macc$1744
  creating $macc cell for $mul$rtl.v:188$120: $auto$alumacc.cc:354:replace_macc$1745
  creating $macc cell for $mul$rtl.v:118$30: $auto$alumacc.cc:354:replace_macc$1746
  creating $macc cell for $mul$rtl.v:225$162: $auto$alumacc.cc:354:replace_macc$1747
  creating $macc cell for $mul$rtl.v:206$137: $auto$alumacc.cc:354:replace_macc$1748
  creating $alu model for $ge$rtl.v:118$29 ($ge): new $alu
  creating $alu model for $ge$rtl.v:206$138 ($ge): new $alu
  creating $alu model for $ge$rtl.v:227$166 ($ge): new $alu
  creating $alu model for $le$rtl.v:120$43 ($le): new $alu
  creating $alu model for $le$rtl.v:132$60 ($le): new $alu
  creating $alu model for $lt$rtl.v:138$76 ($lt): new $alu
  creating $alu model for $lt$rtl.v:207$139 ($lt): new $alu
  creating $alu model for $lt$rtl.v:227$167 ($lt): new $alu
  creating $alu model for $lt$rtl.v:228$171 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:228$171: $auto$alumacc.cc:474:replace_alu$1758
  creating $alu cell for $lt$rtl.v:227$167: $auto$alumacc.cc:474:replace_alu$1763
  creating $alu cell for $lt$rtl.v:207$139: $auto$alumacc.cc:474:replace_alu$1768
  creating $alu cell for $lt$rtl.v:138$76: $auto$alumacc.cc:474:replace_alu$1773
  creating $alu cell for $le$rtl.v:132$60: $auto$alumacc.cc:474:replace_alu$1778
  creating $alu cell for $le$rtl.v:120$43: $auto$alumacc.cc:474:replace_alu$1787
  creating $alu cell for $ge$rtl.v:227$166: $auto$alumacc.cc:474:replace_alu$1800
  creating $alu cell for $ge$rtl.v:206$138: $auto$alumacc.cc:474:replace_alu$1809
  creating $alu cell for $ge$rtl.v:118$29: $auto$alumacc.cc:474:replace_alu$1822
  creating $alu cell for $add$rtl.v:125$55: $auto$alumacc.cc:474:replace_alu$1835
  creating $alu cell for $add$rtl.v:132$59: $auto$alumacc.cc:474:replace_alu$1838
  creating $alu cell for $neg$rtl.v:202$131: $auto$alumacc.cc:474:replace_alu$1841
  creating $alu cell for $sub$rtl.v:164$89: $auto$alumacc.cc:474:replace_alu$1844
  creating $alu cell for $sub$rtl.v:227$170: $auto$alumacc.cc:474:replace_alu$1847
  created 14 $alu and 5 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module module155 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:681$590 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1024_CMP $procmux$1020_CMP $reduce_bool$rtl.v:681$592_Y }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:659$552 ($sshr):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:659$553_Y.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:705$618 ($sshl):
    Found 1 activation_patterns using ctrl signal $procmux$1020_CMP.
    No candidates found.
Found 3 cells in module module33 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshl$rtl.v:491$441 ($sshl):
    Found 1 activation_patterns using ctrl signal $procmux$1047_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:486$435 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1050_CMP $procmux$1047_CMP $reduce_bool$rtl.v:486$436_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:467$416 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1054_CMP $procmux$1047_CMP }.
    No candidates found.
Found 3 cells in module module87 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:367$324 ($sshr):
    Found 1 activation_patterns using ctrl signal $ne$rtl.v:350$300_Y.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:367$325 ($sshl):
    Found 1 activation_patterns using ctrl signal $ne$rtl.v:350$300_Y.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:360$306 ($shr):
    Found 1 activation_patterns using ctrl signal $ne$rtl.v:350$300_Y.
    No candidates found.
Found 5 cells in module module94 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:905$768 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1005_CMP $procmux$1002_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:867$717 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1002_CMP $reduce_bool$rtl.v:867$723_Y $reduce_bool$rtl.v:861$698_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:904$765 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$1005_CMP $procmux$1002_CMP }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:838$664 ($shr):
    Found 1 activation_patterns using ctrl signal $procmux$1011_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:825$641 ($shl):
    Found 1 activation_patterns using ctrl signal $reduce_and$rtl.v:824$636_Y.
    No candidates found.
Found 3 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:251$197 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1128_CMP $reduce_bool$rtl.v:251$199_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:225$161 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$1137_CMP $procmux$1134_CMP }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:115$27 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$1224_CMP.
    No candidates found.

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
<suppressed ~9 debug messages>
Optimizing module module33.
<suppressed ~1 debug messages>
Optimizing module module39.
<suppressed ~2 debug messages>
Optimizing module module87.
<suppressed ~7 debug messages>
Optimizing module module94.
<suppressed ~15 debug messages>
Optimizing module top.
<suppressed ~3 debug messages>

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module155..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module33..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module39..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module87..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$rtl.v:355$303: \reg153 [0] -> 1'0
  Analyzing evaluation results.
Running muxtree optimizer on module \module94..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $ternary$rtl.v:980$864: { \reg114 [0] \reg114 [0] } -> 2'00
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:963$839.
    dead port 2/2 on $mux $ternary$rtl.v:963$839.
    dead port 1/2 on $mux $ternary$rtl.v:965$847.
    dead port 2/2 on $mux $ternary$rtl.v:965$847.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:208$145.
    dead port 2/2 on $mux $ternary$rtl.v:208$145.
Removed 6 multiplexer ports.
<suppressed ~138 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module155.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1504: { $auto$rtlil.cc:1832:Not$1503 $auto$rtlil.cc:1835:ReduceAnd$1497 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1516: { $auto$alumacc.cc:490:replace_alu$1512 [0] $auto$alumacc.cc:490:replace_alu$1512 [1] $auto$alumacc.cc:490:replace_alu$1512 [2] $auto$alumacc.cc:490:replace_alu$1512 [3] $auto$alumacc.cc:490:replace_alu$1512 [4] $auto$alumacc.cc:490:replace_alu$1512 [5] $auto$alumacc.cc:490:replace_alu$1512 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1496: { $auto$alumacc.cc:490:replace_alu$1494 [0] $auto$alumacc.cc:490:replace_alu$1494 [1] $auto$alumacc.cc:490:replace_alu$1494 [2] $auto$alumacc.cc:490:replace_alu$1494 [3] $auto$alumacc.cc:490:replace_alu$1494 [4] $auto$alumacc.cc:490:replace_alu$1494 [5] $auto$alumacc.cc:490:replace_alu$1494 [6] $auto$alumacc.cc:490:replace_alu$1494 [7] $auto$alumacc.cc:490:replace_alu$1494 [8] $auto$alumacc.cc:490:replace_alu$1494 [9] $auto$alumacc.cc:490:replace_alu$1494 [10] $auto$alumacc.cc:490:replace_alu$1494 [11] }
  Optimizing cells in module \module155.
  Optimizing cells in module \module33.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1547: { $auto$rtlil.cc:1832:Not$1544 $auto$rtlil.cc:1835:ReduceAnd$1546 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1554: { $auto$alumacc.cc:490:replace_alu$1550 [0] $auto$alumacc.cc:490:replace_alu$1550 [1] $auto$alumacc.cc:490:replace_alu$1550 [2] $auto$alumacc.cc:490:replace_alu$1550 [3] $auto$alumacc.cc:490:replace_alu$1550 [4] $auto$alumacc.cc:490:replace_alu$1550 [5] $auto$alumacc.cc:490:replace_alu$1550 [6] $auto$alumacc.cc:490:replace_alu$1550 [7] $auto$alumacc.cc:490:replace_alu$1550 [8] $auto$alumacc.cc:490:replace_alu$1550 [9] $auto$alumacc.cc:490:replace_alu$1550 [10] $auto$alumacc.cc:490:replace_alu$1550 [11] $auto$alumacc.cc:490:replace_alu$1550 [12] $auto$alumacc.cc:490:replace_alu$1550 [13] $auto$alumacc.cc:490:replace_alu$1550 [14] $auto$alumacc.cc:490:replace_alu$1550 [15] $auto$alumacc.cc:490:replace_alu$1550 [16] $auto$alumacc.cc:490:replace_alu$1550 [17] $auto$alumacc.cc:490:replace_alu$1550 [18] $auto$alumacc.cc:490:replace_alu$1550 [19] $auto$alumacc.cc:490:replace_alu$1550 [20] $auto$alumacc.cc:490:replace_alu$1550 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1545: { $auto$alumacc.cc:490:replace_alu$1541 [0] $auto$alumacc.cc:490:replace_alu$1541 [1] $auto$alumacc.cc:490:replace_alu$1541 [2] $auto$alumacc.cc:490:replace_alu$1541 [3] $auto$alumacc.cc:490:replace_alu$1541 [4] $auto$alumacc.cc:490:replace_alu$1541 [5] $auto$alumacc.cc:490:replace_alu$1541 [6] $auto$alumacc.cc:490:replace_alu$1541 [7] $auto$alumacc.cc:490:replace_alu$1541 [8] $auto$alumacc.cc:490:replace_alu$1541 [9] $auto$alumacc.cc:490:replace_alu$1541 [10] $auto$alumacc.cc:490:replace_alu$1541 [11] $auto$alumacc.cc:490:replace_alu$1541 [12] $auto$alumacc.cc:490:replace_alu$1541 [13] $auto$alumacc.cc:490:replace_alu$1541 [14] $auto$alumacc.cc:490:replace_alu$1541 [15] }
  Optimizing cells in module \module33.
  Optimizing cells in module \module39.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1569: { $auto$alumacc.cc:490:replace_alu$1567 [0] $auto$alumacc.cc:490:replace_alu$1567 [1] $auto$alumacc.cc:490:replace_alu$1567 [2] $auto$alumacc.cc:490:replace_alu$1567 [3] $auto$alumacc.cc:490:replace_alu$1567 [4] $auto$alumacc.cc:490:replace_alu$1567 [5] $auto$alumacc.cc:490:replace_alu$1567 [6] $auto$alumacc.cc:490:replace_alu$1567 [7] $auto$alumacc.cc:490:replace_alu$1567 [8] $auto$alumacc.cc:490:replace_alu$1567 [9] $auto$alumacc.cc:490:replace_alu$1567 [10] $auto$alumacc.cc:490:replace_alu$1567 [11] $auto$alumacc.cc:490:replace_alu$1567 [12] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1580: { $auto$alumacc.cc:490:replace_alu$1578 [0] $auto$alumacc.cc:490:replace_alu$1578 [1] $auto$alumacc.cc:490:replace_alu$1578 [2] $auto$alumacc.cc:490:replace_alu$1578 [3] $auto$alumacc.cc:490:replace_alu$1578 [4] $auto$alumacc.cc:490:replace_alu$1578 [5] $auto$alumacc.cc:490:replace_alu$1578 [6] $auto$alumacc.cc:490:replace_alu$1578 [7] $auto$alumacc.cc:490:replace_alu$1578 [8] $auto$alumacc.cc:490:replace_alu$1578 [9] $auto$alumacc.cc:490:replace_alu$1578 [10] $auto$alumacc.cc:490:replace_alu$1578 [11] $auto$alumacc.cc:490:replace_alu$1578 [12] $auto$alumacc.cc:490:replace_alu$1578 [13] $auto$alumacc.cc:490:replace_alu$1578 [14] $auto$alumacc.cc:490:replace_alu$1578 [15] $auto$alumacc.cc:490:replace_alu$1578 [16] $auto$alumacc.cc:490:replace_alu$1578 [17] $auto$alumacc.cc:490:replace_alu$1578 [18] }
  Optimizing cells in module \module39.
  Optimizing cells in module \module87.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1611: { $auto$rtlil.cc:1832:Not$1610 $auto$rtlil.cc:1835:ReduceAnd$1604 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1616: { $auto$alumacc.cc:490:replace_alu$1614 [0] $auto$alumacc.cc:490:replace_alu$1614 [1] $auto$alumacc.cc:490:replace_alu$1614 [2] $auto$alumacc.cc:490:replace_alu$1614 [3] $auto$alumacc.cc:490:replace_alu$1614 [4] $auto$alumacc.cc:490:replace_alu$1614 [5] $auto$alumacc.cc:490:replace_alu$1614 [6] $auto$alumacc.cc:490:replace_alu$1614 [7] $auto$alumacc.cc:490:replace_alu$1614 [8] $auto$alumacc.cc:490:replace_alu$1614 [9] $auto$alumacc.cc:490:replace_alu$1614 [10] $auto$alumacc.cc:490:replace_alu$1614 [11] $auto$alumacc.cc:490:replace_alu$1614 [12] $auto$alumacc.cc:490:replace_alu$1614 [13] $auto$alumacc.cc:490:replace_alu$1614 [14] $auto$alumacc.cc:490:replace_alu$1614 [15] $auto$alumacc.cc:490:replace_alu$1614 [16] $auto$alumacc.cc:490:replace_alu$1614 [17] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1603: { $auto$alumacc.cc:490:replace_alu$1601 [0] $auto$alumacc.cc:490:replace_alu$1601 [1] $auto$alumacc.cc:490:replace_alu$1601 [2] }
  Optimizing cells in module \module87.
  Optimizing cells in module \module94.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1654: { $auto$rtlil.cc:1832:Not$1651 $auto$rtlil.cc:1835:ReduceAnd$1653 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1700: { $auto$rtlil.cc:1832:Not$1699 $auto$rtlil.cc:1835:ReduceAnd$1693 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1659: { $auto$alumacc.cc:490:replace_alu$1657 [0] $auto$alumacc.cc:490:replace_alu$1657 [1] $auto$alumacc.cc:490:replace_alu$1657 [2] $auto$alumacc.cc:490:replace_alu$1657 [3] $auto$alumacc.cc:490:replace_alu$1657 [4] $auto$alumacc.cc:490:replace_alu$1657 [5] $auto$alumacc.cc:490:replace_alu$1657 [6] $auto$alumacc.cc:490:replace_alu$1657 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1670: { $auto$alumacc.cc:490:replace_alu$1668 [0] $auto$alumacc.cc:490:replace_alu$1668 [1] $auto$alumacc.cc:490:replace_alu$1668 [2] $auto$alumacc.cc:490:replace_alu$1668 [3] $auto$alumacc.cc:490:replace_alu$1668 [4] $auto$alumacc.cc:490:replace_alu$1668 [5] $auto$alumacc.cc:490:replace_alu$1668 [6] $auto$alumacc.cc:490:replace_alu$1668 [7] $auto$alumacc.cc:490:replace_alu$1668 [8] $auto$alumacc.cc:490:replace_alu$1668 [9] $auto$alumacc.cc:490:replace_alu$1668 [10] $auto$alumacc.cc:490:replace_alu$1668 [11] $auto$alumacc.cc:490:replace_alu$1668 [12] $auto$alumacc.cc:490:replace_alu$1668 [13] $auto$alumacc.cc:490:replace_alu$1668 [14] $auto$alumacc.cc:490:replace_alu$1668 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1681: { $auto$alumacc.cc:490:replace_alu$1679 [0] $auto$alumacc.cc:490:replace_alu$1679 [1] $auto$alumacc.cc:490:replace_alu$1679 [2] $auto$alumacc.cc:490:replace_alu$1679 [3] $auto$alumacc.cc:490:replace_alu$1679 [4] $auto$alumacc.cc:490:replace_alu$1679 [5] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1692: { $auto$alumacc.cc:490:replace_alu$1690 [0] $auto$alumacc.cc:490:replace_alu$1690 [1] $auto$alumacc.cc:490:replace_alu$1690 [2] $auto$alumacc.cc:490:replace_alu$1690 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1652: { $auto$alumacc.cc:490:replace_alu$1648 [0] $auto$alumacc.cc:490:replace_alu$1648 [1] $auto$alumacc.cc:490:replace_alu$1648 [2] $auto$alumacc.cc:490:replace_alu$1648 [3] $auto$alumacc.cc:490:replace_alu$1648 [4] $auto$alumacc.cc:490:replace_alu$1648 [5] $auto$alumacc.cc:490:replace_alu$1648 [6] $auto$alumacc.cc:490:replace_alu$1648 [7] $auto$alumacc.cc:490:replace_alu$1648 [8] $auto$alumacc.cc:490:replace_alu$1648 [9] $auto$alumacc.cc:490:replace_alu$1648 [10] $auto$alumacc.cc:490:replace_alu$1648 [11] $auto$alumacc.cc:490:replace_alu$1648 [12] $auto$alumacc.cc:490:replace_alu$1648 [13] $auto$alumacc.cc:490:replace_alu$1648 [14] $auto$alumacc.cc:490:replace_alu$1648 [15] $auto$alumacc.cc:490:replace_alu$1648 [16] }
  Optimizing cells in module \module94.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:185$115: { \reg12 [0] \reg12 [1] \reg12 [2] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1785: { $auto$rtlil.cc:1832:Not$1782 $auto$rtlil.cc:1835:ReduceAnd$1784 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1820: { $auto$rtlil.cc:1832:Not$1819 $auto$rtlil.cc:1835:ReduceAnd$1813 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1833: { $auto$rtlil.cc:1832:Not$1832 $auto$rtlil.cc:1835:ReduceAnd$1826 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1783: { $auto$alumacc.cc:490:replace_alu$1779 [0] $auto$alumacc.cc:490:replace_alu$1779 [1] $auto$alumacc.cc:490:replace_alu$1779 [2] $auto$alumacc.cc:490:replace_alu$1779 [3] $auto$alumacc.cc:490:replace_alu$1779 [4] $auto$alumacc.cc:490:replace_alu$1779 [5] $auto$alumacc.cc:490:replace_alu$1779 [6] $auto$alumacc.cc:490:replace_alu$1779 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1790: { $auto$alumacc.cc:490:replace_alu$1788 [0] $auto$alumacc.cc:490:replace_alu$1788 [1] $auto$alumacc.cc:490:replace_alu$1788 [2] $auto$alumacc.cc:490:replace_alu$1788 [3] $auto$alumacc.cc:490:replace_alu$1788 [4] $auto$alumacc.cc:490:replace_alu$1788 [5] $auto$alumacc.cc:490:replace_alu$1788 [6] $auto$alumacc.cc:490:replace_alu$1788 [7] $auto$alumacc.cc:490:replace_alu$1788 [8] $auto$alumacc.cc:490:replace_alu$1788 [9] $auto$alumacc.cc:490:replace_alu$1788 [10] $auto$alumacc.cc:490:replace_alu$1788 [11] $auto$alumacc.cc:490:replace_alu$1788 [12] $auto$alumacc.cc:490:replace_alu$1788 [13] $auto$alumacc.cc:490:replace_alu$1788 [14] $auto$alumacc.cc:490:replace_alu$1788 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1805: { $auto$alumacc.cc:490:replace_alu$1801 [0] $auto$alumacc.cc:490:replace_alu$1801 [1] $auto$alumacc.cc:490:replace_alu$1801 [2] $auto$alumacc.cc:490:replace_alu$1801 [3] $auto$alumacc.cc:490:replace_alu$1801 [4] $auto$alumacc.cc:490:replace_alu$1801 [5] $auto$alumacc.cc:490:replace_alu$1801 [6] $auto$alumacc.cc:490:replace_alu$1801 [7] $auto$alumacc.cc:490:replace_alu$1801 [8] $auto$alumacc.cc:490:replace_alu$1801 [9] $auto$alumacc.cc:490:replace_alu$1801 [10] $auto$alumacc.cc:490:replace_alu$1801 [11] $auto$alumacc.cc:490:replace_alu$1801 [12] $auto$alumacc.cc:490:replace_alu$1801 [13] $auto$alumacc.cc:490:replace_alu$1801 [14] $auto$alumacc.cc:490:replace_alu$1801 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1812: { $auto$alumacc.cc:490:replace_alu$1810 [0] $auto$alumacc.cc:490:replace_alu$1810 [1] $auto$alumacc.cc:490:replace_alu$1810 [2] $auto$alumacc.cc:490:replace_alu$1810 [3] $auto$alumacc.cc:490:replace_alu$1810 [4] $auto$alumacc.cc:490:replace_alu$1810 [5] $auto$alumacc.cc:490:replace_alu$1810 [6] $auto$alumacc.cc:490:replace_alu$1810 [7] $auto$alumacc.cc:490:replace_alu$1810 [8] $auto$alumacc.cc:490:replace_alu$1810 [9] $auto$alumacc.cc:490:replace_alu$1810 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1825: { $auto$alumacc.cc:490:replace_alu$1823 [0] $auto$alumacc.cc:490:replace_alu$1823 [1] $auto$alumacc.cc:490:replace_alu$1823 [2] $auto$alumacc.cc:490:replace_alu$1823 [3] $auto$alumacc.cc:490:replace_alu$1823 [4] $auto$alumacc.cc:490:replace_alu$1823 [5] $auto$alumacc.cc:490:replace_alu$1823 [6] $auto$alumacc.cc:490:replace_alu$1823 [7] $auto$alumacc.cc:490:replace_alu$1823 [8] $auto$alumacc.cc:490:replace_alu$1823 [9] $auto$alumacc.cc:490:replace_alu$1823 [10] $auto$alumacc.cc:490:replace_alu$1823 [11] $auto$alumacc.cc:490:replace_alu$1823 [12] $auto$alumacc.cc:490:replace_alu$1823 [13] }
  Optimizing cells in module \top.
Performed a total of 27 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 18 unused cells and 82 unused wires.
<suppressed ~24 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module155..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module33..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module39..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module87..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module94..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module155.
  Optimizing cells in module \module33.
  Optimizing cells in module \module39.
  Optimizing cells in module \module87.
  Optimizing cells in module \module94.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.13.16. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking module87.reg195 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking module94.reg141 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.reg11 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
<suppressed ~37 debug messages>
Optimizing module module33.
<suppressed ~26 debug messages>
Optimizing module module39.
Optimizing module module87.
<suppressed ~18 debug messages>
Optimizing module module94.
<suppressed ~77 debug messages>
Optimizing module top.
<suppressed ~68 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
<suppressed ~3 debug messages>
Finding identical cells in module `\top'.
Removed a total of 2 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1269 ($dff) from module module94.
Replaced 1 DFF cells.

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 6 unused cells and 66 unused wires.
<suppressed ~14 debug messages>

2.18.5. Rerunning OPT passes. (Removed registers in this run.)

2.18.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
<suppressed ~2 debug messages>
Optimizing module top.

2.18.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.18.8. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.18.10. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module155..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module33..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module39..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module87..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module94..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~131 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module155.
    Consolidated identical input bits for $mux cell $procmux$1019:
      Old ports: A={ 9'000000000 $auto$wreduce.cc:455:run$1342 [6:0] }, B={ 15'000000001011011 $auto$opt_expr.cc:189:group_cell_inputs$1860 }, Y=$0\reg177[15:0]
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$1342 [6:0] }, B={ 7'1011011 $auto$opt_expr.cc:189:group_cell_inputs$1860 }, Y=$0\reg177[15:0] [7:0]
      New connections: $0\reg177[15:0] [15:8] = 8'00000000
    Consolidated identical input bits for $mux cell $procmux$1023:
      Old ports: A={ \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 [5] \wire162 }, B={ 17'00000000000000000 $auto$rtlil.cc:1832:Not$1510 }, Y=$procmux$1023_Y
      New ports: A=\wire162, B={ 5'00000 $auto$rtlil.cc:1832:Not$1510 }, Y=$procmux$1023_Y [5:0]
      New connections: $procmux$1023_Y [17:6] = { $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] $procmux$1023_Y [5] }
    Consolidated identical input bits for $mux cell $procmux$1029:
      Old ports: A={ \wire157 [0] 11'00000000000 \wire160 [1] }, B={ $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y }, Y=$procmux$1029_Y
      New ports: A={ \wire157 [0] 1'0 \wire160 [1] }, B={ $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y $logic_and$rtl.v:676$582_Y }, Y={ $procmux$1029_Y [12] $procmux$1029_Y [1:0] }
      New connections: $procmux$1029_Y [11:2] = { $procmux$1029_Y [1] $procmux$1029_Y [1] $procmux$1029_Y [1] $procmux$1029_Y [1] $procmux$1029_Y [1] $procmux$1029_Y [1] $procmux$1029_Y [1] $procmux$1029_Y [1] $procmux$1029_Y [1] $procmux$1029_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:653$535:
      Old ports: A={ 14'00000000000000 $auto$wreduce.cc:455:run$1343 [0] }, B={ 7'0000000 $auto$wreduce.cc:455:run$1348 [7:0] }, Y=$ternary$rtl.v:653$535_Y
      New ports: A={ 7'0000000 $auto$wreduce.cc:455:run$1343 [0] }, B=$auto$wreduce.cc:455:run$1348 [7:0], Y=$ternary$rtl.v:653$535_Y [7:0]
      New connections: $ternary$rtl.v:653$535_Y [14:8] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:662$561:
      Old ports: A=8'01000000, B=8'10101111, Y=$ternary$rtl.v:662$561_Y
      New ports: A=2'10, B=2'01, Y={ $ternary$rtl.v:662$561_Y [6] $ternary$rtl.v:662$561_Y [0] }
      New connections: { $ternary$rtl.v:662$561_Y [7] $ternary$rtl.v:662$561_Y [5:1] } = { $ternary$rtl.v:662$561_Y [0] $ternary$rtl.v:662$561_Y [0] 1'0 $ternary$rtl.v:662$561_Y [0] $ternary$rtl.v:662$561_Y [0] $ternary$rtl.v:662$561_Y [0] }
  Optimizing cells in module \module155.
    Consolidated identical input bits for $mux cell $procmux$1025:
      Old ports: A={ $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y }, B=$procmux$1023_Y, Y=$0\reg178[17:0]
      New ports: A={ $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y $ternary$rtl.v:704$617_Y }, B=$procmux$1023_Y [5:0], Y=$0\reg178[17:0] [5:0]
      New connections: $0\reg178[17:0] [17:6] = { $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] $0\reg178[17:0] [5] }
    Consolidated identical input bits for $mux cell $procmux$1031:
      Old ports: A={ $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 }, B=$procmux$1029_Y, Y=$0\reg179[12:0]
      New ports: A={ $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 $auto$rtlil.cc:1836:ReduceOr$1505 }, B={ $procmux$1029_Y [12] $procmux$1029_Y [1:0] }, Y={ $0\reg179[12:0] [12] $0\reg179[12:0] [1:0] }
      New connections: $0\reg179[12:0] [11:2] = { $0\reg179[12:0] [1] $0\reg179[12:0] [1] $0\reg179[12:0] [1] $0\reg179[12:0] [1] $0\reg179[12:0] [1] $0\reg179[12:0] [1] $0\reg179[12:0] [1] $0\reg179[12:0] [1] $0\reg179[12:0] [1] $0\reg179[12:0] [1] }
  Optimizing cells in module \module155.
  Optimizing cells in module \module33.
  Optimizing cells in module \module39.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:562$468:
      Old ports: A=19'0000000000010101000, B={ \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] \wire42 [6] }, Y=$ternary$rtl.v:562$468_Y
      New ports: A=2'10, B={ \wire42 [6] \wire42 [6] }, Y={ $ternary$rtl.v:562$468_Y [3] $ternary$rtl.v:562$468_Y [0] }
      New connections: { $ternary$rtl.v:562$468_Y [18:4] $ternary$rtl.v:562$468_Y [2:1] } = { $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [3] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [3] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] $ternary$rtl.v:562$468_Y [0] }
  Optimizing cells in module \module39.
  Optimizing cells in module \module87.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:344$296:
      Old ports: A={ 4'1111 $auto$opt_expr.cc:189:group_cell_inputs$1881 }, B={ 4'0000 \wire93 }, Y=$ternary$rtl.v:344$296_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$1881 }, B={ 1'0 \wire93 }, Y=$ternary$rtl.v:344$296_Y [1:0]
      New connections: $ternary$rtl.v:344$296_Y [4:2] = { $ternary$rtl.v:344$296_Y [1] $ternary$rtl.v:344$296_Y [1] $ternary$rtl.v:344$296_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:367$323:
      Old ports: A=8'10110011, B={ 7'0000000 $reduce_xor$rtl.v:367$322_Y [0] }, Y=$ternary$rtl.v:367$323_Y
      New ports: A=2'11, B={ 1'0 $reduce_xor$rtl.v:367$322_Y [0] }, Y=$ternary$rtl.v:367$323_Y [1:0]
      New connections: $ternary$rtl.v:367$323_Y [7:2] = { $ternary$rtl.v:367$323_Y [1] 1'0 $ternary$rtl.v:367$323_Y [1] $ternary$rtl.v:367$323_Y [1] 2'00 }
  Optimizing cells in module \module87.
    New input vector for $reduce_and cell $reduce_and$rtl.v:344$297: { $ternary$rtl.v:344$296_Y [0] $ternary$rtl.v:344$296_Y [1] }
  Optimizing cells in module \module87.
  Optimizing cells in module \module94.
    New input vector for $reduce_or cell $reduce_or$rtl.v:946$814: { $auto$opt_expr.cc:189:group_cell_inputs$1895 [0] $auto$opt_expr.cc:189:group_cell_inputs$1895 [1] $auto$opt_expr.cc:189:group_cell_inputs$1895 [2] $auto$opt_expr.cc:189:group_cell_inputs$1895 [3] $auto$opt_expr.cc:189:group_cell_inputs$1895 [4] $auto$opt_expr.cc:189:group_cell_inputs$1895 [5] $auto$opt_expr.cc:189:group_cell_inputs$1895 [6] $auto$opt_expr.cc:189:group_cell_inputs$1895 [7] $auto$opt_expr.cc:189:group_cell_inputs$1895 [8] $auto$opt_expr.cc:189:group_cell_inputs$1895 [9] $auto$opt_expr.cc:189:group_cell_inputs$1895 [10] $auto$opt_expr.cc:189:group_cell_inputs$1895 [11] $auto$opt_expr.cc:189:group_cell_inputs$1895 [12] $auto$opt_expr.cc:189:group_cell_inputs$1895 [13] $auto$opt_expr.cc:189:group_cell_inputs$1895 [14] $auto$opt_expr.cc:189:group_cell_inputs$1895 [15] $auto$opt_expr.cc:189:group_cell_inputs$1895 [16] $auto$opt_expr.cc:189:group_cell_inputs$1895 [17] $auto$opt_expr.cc:189:group_cell_inputs$1895 [18] $auto$opt_expr.cc:189:group_cell_inputs$1893 }
    Consolidated identical input bits for $mux cell $procmux$932:
      Old ports: A={ \reg142 [7] \reg142 [7] \reg142 [7] \reg142 [7] \reg142 [7] \reg142 [7] \reg142 [7] \reg142 [7] \reg142 [7] \reg142 [7] \reg142 }, B={ 10'0000000000 \reg116 [7:0] }, Y=$0\reg135[17:0]
      New ports: A={ \reg142 [7] \reg142 }, B={ 1'0 \reg116 [7:0] }, Y=$0\reg135[17:0] [8:0]
      New connections: $0\reg135[17:0] [17:9] = { $0\reg135[17:0] [8] $0\reg135[17:0] [8] $0\reg135[17:0] [8] $0\reg135[17:0] [8] $0\reg135[17:0] [8] $0\reg135[17:0] [8] $0\reg135[17:0] [8] $0\reg135[17:0] [8] $0\reg135[17:0] [8] }
    Consolidated identical input bits for $mux cell $procmux$938:
      Old ports: A={ 5'00000 $ternary$rtl.v:981$871_Y [10:0] }, B={ 15'000000000000000 $auto$rtlil.cc:1832:Not$1666 }, Y=$0\reg137[15:0]
      New ports: A=$ternary$rtl.v:981$871_Y [10:0], B={ 10'0000000000 $auto$rtlil.cc:1832:Not$1666 }, Y=$0\reg137[15:0] [10:0]
      New connections: $0\reg137[15:0] [15:11] = 5'00000
    Consolidated identical input bits for $mux cell $procmux$974:
      Old ports: A={ 9'000000000 \wire95 [6] \wire95 [6] $reduce_or$rtl.v:896$747_Y }, B={ \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6:0] }, Y=$auto$wreduce.cc:455:run$1417 [11:0]
      New ports: A={ 4'0000 \wire95 [6] \wire95 [6] $reduce_or$rtl.v:896$747_Y }, B=\reg101 [6:0], Y=$auto$wreduce.cc:455:run$1417 [6:0]
      New connections: $auto$wreduce.cc:455:run$1417 [11:7] = { $auto$wreduce.cc:455:run$1417 [6] $auto$wreduce.cc:455:run$1417 [6] $auto$wreduce.cc:455:run$1417 [6] $auto$wreduce.cc:455:run$1417 [6] $auto$wreduce.cc:455:run$1417 [6] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:871$732:
      Old ports: A={ 6'000000 \reg114 [0] \reg114 [0] }, B=8'10100100, Y=$ternary$rtl.v:871$732_Y
      New ports: A={ 1'0 \reg114 [0] }, B=2'10, Y={ $ternary$rtl.v:871$732_Y [2] $ternary$rtl.v:871$732_Y [0] }
      New connections: { $ternary$rtl.v:871$732_Y [7:3] $ternary$rtl.v:871$732_Y [1] } = { $ternary$rtl.v:871$732_Y [2] 1'0 $ternary$rtl.v:871$732_Y [2] 2'00 $ternary$rtl.v:871$732_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:889$743:
      Old ports: A={ \wire98 [2] \wire98 [2] \wire98 [2] \wire98 }, B={ 5'00000 \wire105 }, Y=$ternary$rtl.v:889$743_Y
      New ports: A=\wire98, B={ 2'00 \wire105 }, Y=$ternary$rtl.v:889$743_Y [2:0]
      New connections: $ternary$rtl.v:889$743_Y [5:3] = { $ternary$rtl.v:889$743_Y [2] $ternary$rtl.v:889$743_Y [2] $ternary$rtl.v:889$743_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:899$750:
      Old ports: A={ 5'00000 \reg114 [0] \reg114 [0] }, B=7'1000011, Y=$auto$wreduce.cc:455:run$1432 [6:0]
      New ports: A={ 1'0 \reg114 [0] }, B=2'11, Y={ $auto$wreduce.cc:455:run$1432 [6] $auto$wreduce.cc:455:run$1432 [0] }
      New connections: $auto$wreduce.cc:455:run$1432 [5:1] = { 4'0000 $auto$wreduce.cc:455:run$1432 [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:902$757:
      Old ports: A={ 7'0000000 \wire105 }, B=8'10101011, Y=$ternary$rtl.v:902$757_Y
      New ports: A={ 1'0 \wire105 }, B=2'11, Y=$ternary$rtl.v:902$757_Y [1:0]
      New connections: $ternary$rtl.v:902$757_Y [7:2] = { $ternary$rtl.v:902$757_Y [1] 1'0 $ternary$rtl.v:902$757_Y [1] 1'0 $ternary$rtl.v:902$757_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:903$761:
      Old ports: A={ 14'00000000000000 \wire106 [3:0] }, B={ 17'00000000000000000 \wire109 }, Y=$ternary$rtl.v:903$761_Y
      New ports: A=\wire106 [3:0], B={ 3'000 \wire109 }, Y=$ternary$rtl.v:903$761_Y [3:0]
      New connections: $ternary$rtl.v:903$761_Y [17:4] = 14'00000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:915$778:
      Old ports: A={ 14'00000000000000 \wire96 }, B={ 14'00000000000000 $auto$wreduce.cc:455:run$1434 [5:0] }, Y=$ternary$rtl.v:915$778_Y
      New ports: A=\wire96, B=$auto$wreduce.cc:455:run$1434 [5:0], Y=$ternary$rtl.v:915$778_Y [5:0]
      New connections: $ternary$rtl.v:915$778_Y [19:6] = 14'00000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:917$781:
      Old ports: A={ 11'00000000000 \reg102 [0] }, B=12'000000000000, Y=$auto$wreduce.cc:455:run$1435 [11:0]
      New ports: A=\reg102 [0], B=1'0, Y=$auto$wreduce.cc:455:run$1435 [0]
      New connections: $auto$wreduce.cc:455:run$1435 [11:1] = 11'00000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:919$788:
      Old ports: A={ 19'0000000000000000000 $auto$wreduce.cc:455:run$1436 [0] }, B={ 8'00000000 $auto$wreduce.cc:455:run$1435 [11:0] }, Y=$ternary$rtl.v:919$788_Y
      New ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$1436 [0] }, B=$auto$wreduce.cc:455:run$1435 [11:0], Y=$ternary$rtl.v:919$788_Y [11:0]
      New connections: $ternary$rtl.v:919$788_Y [19:12] = 8'00000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:927$797:
      Old ports: A={ 17'00000000000000000 \wire125 }, B={ \wire95 [6] \wire95 [6] \wire95 [6] \wire95 [6] \wire95 [6] \wire95 [6] \wire95 [6] \wire95 [6] \wire95 [6] \wire95 [6] \wire95 [6] \wire95 }, Y={ $0\reg129[19:0] [17:3] $ternary$rtl.v:927$797_Y [2:0] }
      New ports: A={ 6'000000 \wire125 }, B=\wire95, Y={ $0\reg129[19:0] [6:3] $ternary$rtl.v:927$797_Y [2:0] }
      New connections: $0\reg129[19:0] [17:7] = { $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] $0\reg129[19:0] [6] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:930$802:
      Old ports: A={ \wire98 [2] \wire98 [2] \wire98 [2] \wire98 [2] \wire98 }, B={ 3'000 $ne$rtl.v:929$799_Y \wire96 [3:1] }, Y=$0\reg130[21:0]
      New ports: A={ \wire98 [2] \wire98 [2] \wire98 }, B={ 1'0 $ne$rtl.v:929$799_Y \wire96 [3:1] }, Y=$0\reg130[21:0] [4:0]
      New connections: $0\reg130[21:0] [6:5] = { $0\reg130[21:0] [4] $0\reg130[21:0] [4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:945$812:
      Old ports: A=8'10110001, B={ 7'0000000 $auto$wreduce.cc:455:run$1411 [0] }, Y=$ternary$rtl.v:945$812_Y
      New ports: A=2'11, B={ 1'0 $auto$wreduce.cc:455:run$1411 [0] }, Y={ $ternary$rtl.v:945$812_Y [4] $ternary$rtl.v:945$812_Y [0] }
      New connections: { $ternary$rtl.v:945$812_Y [7:5] $ternary$rtl.v:945$812_Y [3:1] } = { $ternary$rtl.v:945$812_Y [4] 1'0 $ternary$rtl.v:945$812_Y [4] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:977$852:
      Old ports: A={ 6'000000 \wire105 }, B={ \wire98 [2] \wire98 [2] \wire98 [2] \wire98 [2] \wire98 }, Y=$ternary$rtl.v:977$852_Y [6:0]
      New ports: A={ 2'00 \wire105 }, B=\wire98, Y=$ternary$rtl.v:977$852_Y [2:0]
      New connections: $ternary$rtl.v:977$852_Y [6:3] = { $ternary$rtl.v:977$852_Y [2] $ternary$rtl.v:977$852_Y [2] $ternary$rtl.v:977$852_Y [2] $ternary$rtl.v:977$852_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:980$860:
      Old ports: A={ 17'00000000000000000 \reg102 [0] }, B={ 14'00000000000000 \wire106 [3:0] }, Y=$auto$wreduce.cc:455:run$1440 [17:0]
      New ports: A={ 3'000 \reg102 [0] }, B=\wire106 [3:0], Y=$auto$wreduce.cc:455:run$1440 [3:0]
      New connections: $auto$wreduce.cc:455:run$1440 [17:4] = 14'00000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:980$864:
      Old ports: A={ 1'0 $auto$wreduce.cc:455:run$1409 [0] }, B=2'00, Y=$ternary$rtl.v:980$864_Y [1:0]
      New ports: A=$auto$wreduce.cc:455:run$1409 [0], B=1'0, Y=$ternary$rtl.v:980$864_Y [0]
      New connections: $ternary$rtl.v:980$864_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:986$879:
      Old ports: A=12'000000000001, B={ \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6:0] }, Y=$ternary$rtl.v:986$879_Y
      New ports: A=7'0000001, B=\reg101 [6:0], Y=$ternary$rtl.v:986$879_Y [6:0]
      New connections: $ternary$rtl.v:986$879_Y [11:7] = { $ternary$rtl.v:986$879_Y [6] $ternary$rtl.v:986$879_Y [6] $ternary$rtl.v:986$879_Y [6] $ternary$rtl.v:986$879_Y [6] $ternary$rtl.v:986$879_Y [6] }
  Optimizing cells in module \module94.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:919$788:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$1436 [0] }, B=$auto$wreduce.cc:455:run$1435 [11:0], Y=$ternary$rtl.v:919$788_Y [11:0]
      New ports: A=$auto$wreduce.cc:455:run$1436 [0], B=$auto$wreduce.cc:455:run$1435 [0], Y=$ternary$rtl.v:919$788_Y [0]
      New connections: $ternary$rtl.v:919$788_Y [11:1] = 11'00000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:919$790:
      Old ports: A=$ternary$rtl.v:919$788_Y, B={ 19'0000000000000000000 $auto$rtlil.cc:1832:Not$1677 }, Y=\wire124
      New ports: A=$ternary$rtl.v:919$788_Y [11:0], B={ 11'00000000000 $auto$rtlil.cc:1832:Not$1677 }, Y=\wire124 [11:0]
      New connections: \wire124 [19:12] = 8'00000000
  Optimizing cells in module \module94.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:919$790:
      Old ports: A=$ternary$rtl.v:919$788_Y [11:0], B={ 11'00000000000 $auto$rtlil.cc:1832:Not$1677 }, Y=\wire124 [11:0]
      New ports: A=$ternary$rtl.v:919$788_Y [0], B=$auto$rtlil.cc:1832:Not$1677, Y=\wire124 [0]
      New connections: \wire124 [11:1] = 11'00000000000
  Optimizing cells in module \module94.
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$1130:
      Old ports: A={ 20'00000000000000000000 \wire30 [8] }, B={ $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 [1] $auto$opt_expr.cc:189:group_cell_inputs$1939 $auto$opt_expr.cc:189:group_cell_inputs$1937 }, Y=$0\reg84[20:0]
      New ports: A={ 11'00000000000 \wire30 [8] }, B={ $auto$opt_expr.cc:189:group_cell_inputs$1939 $auto$opt_expr.cc:189:group_cell_inputs$1937 }, Y=$0\reg84[20:0] [11:0]
      New connections: $0\reg84[20:0] [20:12] = { $0\reg84[20:0] [11] $0\reg84[20:0] [11] $0\reg84[20:0] [11] $0\reg84[20:0] [11] $0\reg84[20:0] [11] $0\reg84[20:0] [11] $0\reg84[20:0] [11] $0\reg84[20:0] [11] $0\reg84[20:0] [11] }
    Consolidated identical input bits for $mux cell $procmux$1208:
      Old ports: A={ 10'0000000000 $auto$wreduce.cc:455:run$1465 [0] }, B={ \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 }, Y=$0\reg15[10:0]
      New ports: A={ 5'00000 $auto$wreduce.cc:455:run$1465 [0] }, B=\wire2, Y=$0\reg15[10:0] [5:0]
      New connections: $0\reg15[10:0] [10:6] = { $0\reg15[10:0] [5] $0\reg15[10:0] [5] $0\reg15[10:0] [5] $0\reg15[10:0] [5] $0\reg15[10:0] [5] }
    Consolidated identical input bits for $mux cell $procmux$1239:
      Old ports: A={ \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 }, B={ 4'0000 $auto$wreduce.cc:455:run$1471 [13:0] }, Y=$procmux$1239_Y
      New ports: A={ \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 [5] \wire2 }, B={ 1'0 $auto$wreduce.cc:455:run$1471 [13:0] }, Y=$procmux$1239_Y [14:0]
      New connections: $procmux$1239_Y [17:15] = { $procmux$1239_Y [14] $procmux$1239_Y [14] $procmux$1239_Y [14] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:124$53:
      Old ports: A={ \wire2 [4:0] 8'10101110 }, B={ 12'000000000000 \reg5 [0] }, Y=$auto$wreduce.cc:455:run$1472 [12:0]
      New ports: A={ \wire2 [4:0] 2'10 }, B={ 6'000000 \reg5 [0] }, Y={ $auto$wreduce.cc:455:run$1472 [12:8] $auto$wreduce.cc:455:run$1472 [1:0] }
      New connections: $auto$wreduce.cc:455:run$1472 [7:2] = { $auto$wreduce.cc:455:run$1472 [1] 1'0 $auto$wreduce.cc:455:run$1472 [1] 1'0 $auto$wreduce.cc:455:run$1472 [1] $auto$wreduce.cc:455:run$1472 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:138$73:
      Old ports: A=7'1000010, B={ 6'000000 \reg5 [0] }, Y=$auto$wreduce.cc:455:run$1473 [6:0]
      New ports: A=2'10, B={ 1'0 \reg5 [0] }, Y=$auto$wreduce.cc:455:run$1473 [1:0]
      New connections: $auto$wreduce.cc:455:run$1473 [6:2] = { $auto$wreduce.cc:455:run$1473 [1] 4'0000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:138$75:
      Old ports: A={ 5'00000 $auto$wreduce.cc:455:run$1473 [6:0] }, B={ 1'0 \wire3 }, Y=$ternary$rtl.v:138$75_Y
      New ports: A={ 4'0000 $auto$wreduce.cc:455:run$1473 [6:0] }, B=\wire3, Y=$ternary$rtl.v:138$75_Y [10:0]
      New connections: $ternary$rtl.v:138$75_Y [11] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:177$101:
      Old ports: A={ 15'000000000000000 $reduce_or$rtl.v:177$100_Y }, B={ 10'1111111111 $auto$opt_expr.cc:189:group_cell_inputs$1926 $auto$opt_expr.cc:189:group_cell_inputs$1924 }, Y=$ternary$rtl.v:177$101_Y
      New ports: A={ 6'000000 $reduce_or$rtl.v:177$100_Y }, B={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$1926 $auto$opt_expr.cc:189:group_cell_inputs$1924 }, Y=$ternary$rtl.v:177$101_Y [6:0]
      New connections: $ternary$rtl.v:177$101_Y [15:7] = { $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:219$155:
      Old ports: A=3'111, B=3'010, Y=$ternary$rtl.v:219$155_Y [2:0]
      New ports: A=1'1, B=1'0, Y=$ternary$rtl.v:219$155_Y [0]
      New connections: $ternary$rtl.v:219$155_Y [2:1] = { $ternary$rtl.v:219$155_Y [0] 1'1 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:219$158:
      Old ports: A={ 5'10110 $ternary$rtl.v:219$155_Y [2:0] }, B={ 4'0000 \wire4 [5:2] }, Y=$auto$wreduce.cc:455:run$1480 [7:0]
      New ports: A={ 2'10 $ternary$rtl.v:219$155_Y [2:0] }, B={ 1'0 \wire4 [5:2] }, Y=$auto$wreduce.cc:455:run$1480 [4:0]
      New connections: $auto$wreduce.cc:455:run$1480 [7:5] = { $auto$wreduce.cc:455:run$1480 [4] 1'0 $auto$wreduce.cc:455:run$1480 [4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:226$165:
      Old ports: A=8'10110111, B={ 6'000000 \reg28 [5:4] }, Y=$ternary$rtl.v:226$165_Y
      New ports: A=3'111, B={ 1'0 \reg28 [5:4] }, Y=$ternary$rtl.v:226$165_Y [2:0]
      New connections: $ternary$rtl.v:226$165_Y [7:3] = { $ternary$rtl.v:226$165_Y [2] 1'0 $ternary$rtl.v:226$165_Y [2] $ternary$rtl.v:226$165_Y [2] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:266$214:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$1456 [0] }, B={ 5'11111 $auto$opt_expr.cc:189:group_cell_inputs$1945 $auto$opt_expr.cc:189:group_cell_inputs$1943 }, Y=$ternary$rtl.v:266$214_Y
      New ports: A={ 7'0000000 $auto$wreduce.cc:455:run$1456 [0] }, B={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$1945 $auto$opt_expr.cc:189:group_cell_inputs$1943 }, Y=$ternary$rtl.v:266$214_Y [7:0]
      New connections: $ternary$rtl.v:266$214_Y [11:8] = { $ternary$rtl.v:266$214_Y [7] $ternary$rtl.v:266$214_Y [7] $ternary$rtl.v:266$214_Y [7] $ternary$rtl.v:266$214_Y [7] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$1241:
      Old ports: A=18'000000000000000001, B=$procmux$1239_Y, Y=$0\reg7[17:0]
      New ports: A=15'000000000000001, B=$procmux$1239_Y [14:0], Y=$0\reg7[17:0] [14:0]
      New connections: $0\reg7[17:0] [17:15] = { $0\reg7[17:0] [14] $0\reg7[17:0] [14] $0\reg7[17:0] [14] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:177$104:
      Old ports: A={ 9'000000000 \reg8 [7:1] }, B=$ternary$rtl.v:177$101_Y, Y=$ternary$rtl.v:177$104_Y
      New ports: A={ 1'0 \reg8 [7:1] }, B={ $ternary$rtl.v:177$101_Y [6] $ternary$rtl.v:177$101_Y [6:0] }, Y=$ternary$rtl.v:177$104_Y [7:0]
      New connections: $ternary$rtl.v:177$104_Y [15:8] = { $ternary$rtl.v:177$104_Y [7] $ternary$rtl.v:177$104_Y [7] $ternary$rtl.v:177$104_Y [7] $ternary$rtl.v:177$104_Y [7] $ternary$rtl.v:177$104_Y [7] $ternary$rtl.v:177$104_Y [7] $ternary$rtl.v:177$104_Y [7] $ternary$rtl.v:177$104_Y [7] }
  Optimizing cells in module \top.
Performed a total of 46 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
<suppressed ~2 debug messages>
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
<suppressed ~12 debug messages>
Optimizing module top.
<suppressed ~1 debug messages>

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module155..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module33..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module39..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module87..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module94..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~131 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module155.
  Optimizing cells in module \module33.
  Optimizing cells in module \module39.
  Optimizing cells in module \module87.
  Optimizing cells in module \module94.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.20.16. Rerunning OPT passes. (Maybe there is more to do..)

2.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module155..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module33..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module39..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module87..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module94..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~131 debug messages>

2.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module155.
  Optimizing cells in module \module33.
  Optimizing cells in module \module39.
  Optimizing cells in module \module87.
  Optimizing cells in module \module94.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.20.23. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using template $paramod$constmap:9e4fdcb0a66bbfb989de4b540b6b7d1348ed8ef7$paramod$2351728dabc6073470e152596c92316d3d63fa9e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_xnor.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod$constmap:4441cc9eef66923dbf5fd583045879c077940f79$paramod$4819e9315e0af8727b4d520ceedcc384d05ea624\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:04d8cf8b9d6e44a1087ef5cd427aeba895cf4866$paramod$72d753c11c6f566a65e0277ea00a6eabfc1246e4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:a8674d50aa8b734944f8c7381e6afe0429581467$paramod$af8e8d600cc483e4e18ebff8ea80dc907e3a95fd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$constmap:d9415f6fb5ef342589b95e1a3448aeff8ac5d4c1$paramod$84a89f5c80d44c1ffc1c52dfc0cce82c4d814e5f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:683abecd81e2f9439651042f375b730df8a76792$paramod$391420d9d90157ff89649ab21ea2b9c3ab571c30\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $xnor.
Using extmapper maccmap for cells of type $macc.
  add $shr$rtl.v:225$161_Y * \reg28 [0] (16x1 bits, unsigned)
  add \wire0 * $auto$rtlil.cc:1836:ReduceOr$1834 (16x1 bits, unsigned)
  add $ternary$rtl.v:188$119_Y * \wire2 (16x6 bits, unsigned)
  add $auto$wreduce.cc:455:run$1477 [6:0] * \reg7 [0] (7x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=11\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_lcu\WIDTH=12 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=16 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=16 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=13 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod$constmap:7e8299883b5742dfd6c26de62e05651c4b363299$paramod$64cc367e085f4c371694f1e698d2be116b7e9b5b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:c093b057f50ac72c07e479bf16ed5bf97acdf55f$paramod$af9fba3b270785b8b15b65be2aa844edfc5c9ac7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:2f157ab21badb007d334582faef8b0725535af84$paramod$ca131e0f642619a81db2df72b98585dd69985ed9\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=16\Y_WIDTH=25 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=22 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=25 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod$constmap:b8a14ddf8c991502740dc767a11a27df3c034237$paramod$67dab69b6515c560d3062d0569875937d0110f5a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:db0e5b67924565958b6320880780baa70061fb2d$paramod$997bf48f5c6edfd3e34ac20a0181082b2e65219f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:f664159da6789e006391338f63e6b745ac494d9a$paramod$3c8f4e19a594a6db5a194390ce5f283860e72277\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$constmap:cfa2f749753f783d814bce194b36887009bbe663$paramod$e9e2563b77422f35324967a271dc66367aacd644\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:44d039971527db181746db421a7d3f21830153db$paramod$c037d5aa4dd162f8ce8681510fd58bb187b04bc9\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=18 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=20 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=6 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod$constmap:77d9af5c31e2a782431ef540fc0d0e346f21f280$paramod$fde3158f00400f2307921179320ab70081d64621\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=19 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=8\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=8\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=3\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod$constmap:25762c701242b080843fbeec1f352b7ea504ab15$paramod$bf4ad82baf3879af2d3125c5857ec32ee7355d92\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:2411e78b46cfdeb1adf6a6e7ed22ddf5fa5ac77a$paramod$435badb2f1ad472887699cd6b6dde7a7f65a484e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:855354ae2469d2a6608cefc002710f76f4d16663$paramod$0e16f77cdd3b6752c757420c9ccfc43707a1bde7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
  add { 14'00000000000000 \wire106 [3:0] } * { \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6] \reg101 [6:0] } (18x12 bits, unsigned)
Using template $paramod$constmap:c1ca3797bc50ce94e1e4918450be9cb70a423de2$paramod$17a6a5f622fec241b3918700c7753adf00d86dcd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:3e2ca5bb8f44f2a8da1588636c40ee4400501a61$paramod$f58175da7d0d04ed4ac2c688c32d1342cbb9f5ae\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:f9a312ab6d5d0e6eaf97edc75311d48f102a5170$paramod$ab0a4deb25b7fd8a049ad45ac1261270e22e7bf7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:79586d5c0dba66bb18e4987cd581ce145933154d$paramod$549389ef4b95d6092f8dedd97b1e7ae2192f719b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=4\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=21 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=18 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod$constmap:9bb1720cfc663ce598e218de149cd314c63cb072$paramod$c90a5cf98a3e3ed1162aa385e6ab590c3d459547\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=11\Y_WIDTH=14 for cells of type $alu.
Using template $paramod$constmap:eb9e2d5f9a27c436d85045968c72c87b027b421f$paramod$99cbb8d76415f549202459f8d4cd91536b403a1a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:39fa63e4d68781e54ed43452cef636290f37c314$paramod$8e126d834aa4a31650ab310be19ccb2a1f6c56de\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:855354ae2469d2a6608cefc002710f76f4d16663$paramod$1bc2c0cadf7adf084a1ebee301bca76ecfb22365\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:ff62a237bd5d4cbd16af81f396546f161fd30161$paramod$c6633ba1af67adda167f0297641777ee589840bf\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:18d041a84f24f151a31bbd1279bd435d4ed7e862$paramod$8575c7dda9713c4801726c729d88646bfb34a820\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=7\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
No more expansions possible.
<suppressed ~12442 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
<suppressed ~551 debug messages>
Optimizing module module33.
<suppressed ~434 debug messages>
Optimizing module module39.
<suppressed ~197 debug messages>
Optimizing module module87.
<suppressed ~302 debug messages>
Optimizing module module94.
<suppressed ~2649 debug messages>
Optimizing module top.
<suppressed ~948 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
<suppressed ~321 debug messages>
Finding identical cells in module `\module33'.
<suppressed ~192 debug messages>
Finding identical cells in module `\module39'.
<suppressed ~159 debug messages>
Finding identical cells in module `\module87'.
<suppressed ~33 debug messages>
Finding identical cells in module `\module94'.
<suppressed ~1506 debug messages>
Finding identical cells in module `\top'.
<suppressed ~564 debug messages>
Removed a total of 925 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$22350 ($_DFF_P_) from module module155.
Removing $auto$simplemap.cc:420:simplemap_dff$16605 ($_DFF_P_) from module module94.
Replaced 2 DFF cells.

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 888 unused cells and 3578 unused wires.
<suppressed ~894 debug messages>

2.22.5. Rerunning OPT passes. (Removed registers in this run.)

2.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
<suppressed ~5 debug messages>
Optimizing module module33.
<suppressed ~4 debug messages>
Optimizing module module39.
<suppressed ~4 debug messages>
Optimizing module module87.
Optimizing module module94.
<suppressed ~46 debug messages>
Optimizing module top.
<suppressed ~5 debug messages>

2.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
<suppressed ~75 debug messages>
Finding identical cells in module `\top'.
Removed a total of 29 cells.

2.22.8. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \reg196 [9:7] = 3'000 to constant driver in module module87.
Removing $auto$simplemap.cc:420:simplemap_dff$16387 ($_DFF_P_) from module module94.
Promoting init spec \reg141 [19:14] = 6'000000 to constant driver in module module94.
Promoted 2 init specs to constant drivers.
Replaced 1 DFF cells.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 43 unused cells and 37 unused wires.
<suppressed ~46 debug messages>

2.22.10. Rerunning OPT passes. (Removed registers in this run.)

2.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
Optimizing module module33.
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
Optimizing module top.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..

2.22.15. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\module155' to `<abc-temp-dir>/input.blif'..
Extracted 925 gates and 1009 wires to a netlist network with 82 inputs and 88 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:            ANDNOT cells:      114
ABC RESULTS:              AOI3 cells:       27
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               MUX cells:      109
ABC RESULTS:              NAND cells:       42
ABC RESULTS:               NOR cells:       26
ABC RESULTS:               NOT cells:       54
ABC RESULTS:              OAI3 cells:       23
ABC RESULTS:              OAI4 cells:        3
ABC RESULTS:                OR cells:      227
ABC RESULTS:             ORNOT cells:       30
ABC RESULTS:              XNOR cells:       21
ABC RESULTS:               XOR cells:       73
ABC RESULTS:        internal signals:      839
ABC RESULTS:           input signals:       82
ABC RESULTS:          output signals:       88
Removing temp directory.

2.23.2. Extracting gate netlist of module `\module33' to `<abc-temp-dir>/input.blif'..
Extracted 823 gates and 988 wires to a netlist network with 163 inputs and 82 outputs.

2.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       14
ABC RESULTS:            ANDNOT cells:       80
ABC RESULTS:              AOI3 cells:       11
ABC RESULTS:               MUX cells:      253
ABC RESULTS:              NAND cells:       13
ABC RESULTS:               NOR cells:       39
ABC RESULTS:               NOT cells:       37
ABC RESULTS:              OAI3 cells:       15
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:      159
ABC RESULTS:             ORNOT cells:       29
ABC RESULTS:              XNOR cells:       12
ABC RESULTS:               XOR cells:       54
ABC RESULTS:        internal signals:      743
ABC RESULTS:           input signals:      163
ABC RESULTS:          output signals:       82
Removing temp directory.

2.23.3. Extracting gate netlist of module `\module39' to `<abc-temp-dir>/input.blif'..
Extracted 146 gates and 180 wires to a netlist network with 32 inputs and 29 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:       41
ABC RESULTS:              AOI3 cells:        5
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:                OR cells:       23
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:      119
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       29
Removing temp directory.

2.23.4. Extracting gate netlist of module `\module87' to `<abc-temp-dir>/input.blif'..
Extracted 578 gates and 756 wires to a netlist network with 176 inputs and 59 outputs.

2.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:       48
ABC RESULTS:              AOI3 cells:       61
ABC RESULTS:               MUX cells:       56
ABC RESULTS:              NAND cells:       29
ABC RESULTS:               NOR cells:       16
ABC RESULTS:               NOT cells:       58
ABC RESULTS:              OAI3 cells:       11
ABC RESULTS:                OR cells:      151
ABC RESULTS:             ORNOT cells:       20
ABC RESULTS:              XNOR cells:       23
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:      521
ABC RESULTS:           input signals:      176
ABC RESULTS:          output signals:       59
Removing temp directory.

2.23.5. Extracting gate netlist of module `\module94' to `<abc-temp-dir>/input.blif'..
Extracted 1885 gates and 2079 wires to a netlist network with 192 inputs and 175 outputs.

2.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       38
ABC RESULTS:            ANDNOT cells:      304
ABC RESULTS:              AOI3 cells:       52
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      317
ABC RESULTS:              NAND cells:       53
ABC RESULTS:               NOR cells:       51
ABC RESULTS:               NOT cells:       89
ABC RESULTS:              OAI3 cells:       64
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:      338
ABC RESULTS:             ORNOT cells:       43
ABC RESULTS:              XNOR cells:       56
ABC RESULTS:               XOR cells:      158
ABC RESULTS:        internal signals:     1712
ABC RESULTS:           input signals:      192
ABC RESULTS:          output signals:      175
Removing temp directory.

2.23.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 2455 gates and 2816 wires to a netlist network with 359 inputs and 317 outputs.

2.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       60
ABC RESULTS:            ANDNOT cells:      439
ABC RESULTS:              AOI3 cells:      137
ABC RESULTS:               MUX cells:      439
ABC RESULTS:              NAND cells:       85
ABC RESULTS:               NOR cells:       81
ABC RESULTS:               NOT cells:      190
ABC RESULTS:              OAI3 cells:       44
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:      398
ABC RESULTS:             ORNOT cells:       40
ABC RESULTS:              XNOR cells:       75
ABC RESULTS:               XOR cells:      237
ABC RESULTS:        internal signals:     2140
ABC RESULTS:           input signals:      359
ABC RESULTS:          output signals:      317
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module155.
<suppressed ~54 debug messages>
Optimizing module module33.
<suppressed ~20 debug messages>
Optimizing module module39.
Optimizing module module87.
Optimizing module module94.
<suppressed ~139 debug messages>
Optimizing module top.
<suppressed ~178 debug messages>

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module155'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module33'.
Finding identical cells in module `\module39'.
Finding identical cells in module `\module87'.
Finding identical cells in module `\module94'.
<suppressed ~30 debug messages>
Finding identical cells in module `\top'.
Removed a total of 13 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module155..
Finding unused cells or wires in module \module33..
Finding unused cells or wires in module \module39..
Finding unused cells or wires in module \module87..
Finding unused cells or wires in module \module94..
Finding unused cells or wires in module \top..
Removed 5 unused cells and 3332 unused wires.
<suppressed ~11 debug messages>

2.24.5. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== module155 ===

   Number of wires:                710
   Number of wire bits:           1286
   Number of public wires:          32
   Number of public wire bits:     547
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                807
     $_ANDNOT_                     111
     $_AND_                         13
     $_AOI3_                        27
     $_AOI4_                         2
     $_DFF_P_                       47
     $_MUX_                        109
     $_NAND_                        42
     $_NOR_                         26
     $_NOT_                         53
     $_OAI3_                        23
     $_OAI4_                         3
     $_ORNOT_                       30
     $_OR_                         227
     $_XNOR_                        21
     $_XOR_                         73

=== module33 ===

   Number of wires:                665
   Number of wire bits:           1280
   Number of public wires:          22
   Number of public wire bits:     354
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                794
     $_ANDNOT_                      80
     $_AND_                         14
     $_AOI3_                        11
     $_DFF_P_                       76
     $_MUX_                        253
     $_NAND_                        13
     $_NOR_                         39
     $_NOT_                         37
     $_OAI3_                        15
     $_OAI4_                         1
     $_ORNOT_                       29
     $_OR_                         159
     $_XNOR_                        12
     $_XOR_                         54
     module39                        1

=== module39 ===

   Number of wires:                 99
   Number of wire bits:            536
   Number of public wires:          22
   Number of public wire bits:     459
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $_ANDNOT_                      41
     $_AND_                          5
     $_AOI3_                         5
     $_AOI4_                         1
     $_MUX_                          2
     $_NAND_                         7
     $_NOR_                          6
     $_NOT_                          2
     $_OAI3_                         1
     $_ORNOT_                        3
     $_OR_                          23
     $_XNOR_                         2
     $_XOR_                          8

=== module87 ===

   Number of wires:                484
   Number of wire bits:           1767
   Number of public wires:          23
   Number of public wire bits:     424
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                570
     $_ANDNOT_                      48
     $_AND_                          5
     $_AOI3_                        61
     $_DFF_P_                       58
     $_MUX_                         56
     $_NAND_                        29
     $_NOR_                         16
     $_NOT_                         58
     $_OAI3_                        11
     $_ORNOT_                       20
     $_OR_                         151
     $_XNOR_                        23
     $_XOR_                         32
     module155                       1
     module94                        1

=== module94 ===

   Number of wires:               1452
   Number of wire bits:           2804
   Number of public wires:          52
   Number of public wire bits:    1189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1762
     $_ANDNOT_                     302
     $_AND_                         38
     $_AOI3_                        52
     $_AOI4_                         2
     $_DFF_P_                      206
     $_MUX_                        316
     $_NAND_                        52
     $_NOR_                         49
     $_NOT_                         89
     $_OAI3_                        63
     $_OAI4_                         1
     $_ORNOT_                       42
     $_OR_                         336
     $_XNOR_                        56
     $_XOR_                        158

=== top ===

   Number of wires:               1984
   Number of wire bits:           3871
   Number of public wires:          51
   Number of public wire bits:    1154
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2533
     $_ANDNOT_                     439
     $_AND_                         60
     $_AOI3_                       137
     $_DFF_P_                      308
     $_MUX_                        439
     $_NAND_                        85
     $_NOR_                         81
     $_NOT_                        186
     $_OAI3_                        44
     $_OAI4_                         1
     $_ORNOT_                       40
     $_OR_                         398
     $_XNOR_                        75
     $_XOR_                        237
     module33                        1
     module39                        1
     module87                        1

2.27. Executing CHECK pass (checking for obvious problems).
checking module module155..
checking module module33..
checking module module39..
checking module module87..
checking module module94..
checking module top..
found and reported 0 problems.

3. Executing Verilog backend.
Dumping module `\module155'.
Dumping module `\module33'.
Dumping module `\module39'.
Dumping module `\module87'.
Dumping module `\module94'.
Dumping module `\top'.

Warnings: 19 unique messages, 19 total
End of script. Logfile hash: 3c17a99754
CPU: user 6.95s system 0.03s, MEM: 71.98 MB total, 64.91 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 21% 48x proc (1 sec), 15% 2x techmap (1 sec), ...
