
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `read_verilog rtl.v; synth; write_verilog -noattr syn_yosys.v' --

1. Executing Verilog-2005 frontend: rtl.v
Parsing Verilog input from `rtl.v' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\module80'.
Generating RTLIL representation for module `\module4'.
Generating RTLIL representation for module `\module26'.
Generating RTLIL representation for module `\module13'.
Generating RTLIL representation for module `\module177'.
Generating RTLIL representation for module `\module95'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).
Mapping positional arguments of cell module4.modinst41 (module26).
Mapping positional arguments of cell top.modinst219 (module13).
Mapping positional arguments of cell top.modinst216 (module80).
Warning: Resizing cell port module4.modinst41.y from 13 bits to 76 bits.
Warning: Resizing cell port module4.modinst41.wire31 from 20 bits to 11 bits.
Warning: Resizing cell port module4.modinst41.wire30 from 18 bits to 5 bits.
Warning: Resizing cell port module4.modinst41.wire29 from 12 bits to 8 bits.
Warning: Resizing cell port module4.modinst25.wire17 from 19 bits to 10 bits.
Warning: Resizing cell port module4.modinst25.y from 18 bits to 68 bits.
Warning: Resizing cell port module4.modinst25.wire16 from 21 bits to 16 bits.
Warning: Resizing cell port module80.modinst211.wire178 from 13 bits to 11 bits.
Warning: Resizing cell port module80.modinst211.wire179 from 8 bits to 4 bits.
Warning: Resizing cell port module80.modinst211.wire180 from 7 bits to 6 bits.
Warning: Resizing cell port module80.modinst211.y from 22 bits to 304 bits.
Warning: Resizing cell port module80.modinst175.wire96 from 18 bits to 16 bits.
Warning: Resizing cell port module80.modinst175.wire98 from 12 bits to 3 bits.
Warning: Resizing cell port module80.modinst175.wire97 from 21 bits to 3 bits.
Warning: Resizing cell port module80.modinst175.y from 22 bits to 829 bits.
Warning: Resizing cell port top.modinst219.y from 3 bits to 68 bits.
Warning: Resizing cell port top.modinst219.wire18 from 22 bits to 20 bits.
Warning: Resizing cell port top.modinst219.wire16 from 20 bits to 16 bits.
Warning: Resizing cell port top.modinst216.y from 8 bits to 163 bits.
Warning: Resizing cell port top.modinst216.wire81 from 18 bits to 13 bits.
Warning: Resizing cell port top.modinst216.wire82 from 22 bits to 8 bits.
Warning: Resizing cell port top.modinst216.wire83 from 21 bits to 11 bits.
Warning: Resizing cell port top.modinst216.wire84 from 17 bits to 7 bits.
Warning: Resizing cell port top.modinst46.y from 21 bits to 140 bits.
Warning: Resizing cell port top.modinst46.wire8 from 20 bits to 8 bits.
Warning: Resizing cell port top.modinst46.wire5 from 21 bits to 12 bits.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$rtl.v:1096$1031 in module module95.
Marked 8 switch rules as full_case in process $proc$rtl.v:949$822 in module module95.
Marked 3 switch rules as full_case in process $proc$rtl.v:887$748 in module module95.
Marked 6 switch rules as full_case in process $proc$rtl.v:774$590 in module module95.
Marked 2 switch rules as full_case in process $proc$rtl.v:566$503 in module module177.
Marked 2 switch rules as full_case in process $proc$rtl.v:259$219 in module top.
Marked 5 switch rules as full_case in process $proc$rtl.v:157$86 in module top.
Marked 2 switch rules as full_case in process $proc$rtl.v:106$4 in module top.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\module95.$proc$rtl.v:698$1117'.
  Set init value: \reg102 = 9'000000000
Found init rule in `\module95.$proc$rtl.v:697$1116'.
  Set init value: \reg103 = 17'00000000000000000
Found init rule in `\module95.$proc$rtl.v:696$1115'.
  Set init value: \reg104 = 10'0000000000
Found init rule in `\module95.$proc$rtl.v:695$1114'.
  Set init value: \reg105 = 10'0000000000
Found init rule in `\module95.$proc$rtl.v:694$1113'.
  Set init value: \reg106 = 12'000000000000
Found init rule in `\module95.$proc$rtl.v:693$1112'.
  Set init value: \reg107 = 22'0000000000000000000000
Found init rule in `\module95.$proc$rtl.v:692$1111'.
  Set init value: \reg108 = 13'0000000000000
Found init rule in `\module95.$proc$rtl.v:691$1110'.
  Set init value: \reg109 = 16'0000000000000000
Found init rule in `\module95.$proc$rtl.v:690$1109'.
  Set init value: \reg110 = 15'000000000000000
Found init rule in `\module95.$proc$rtl.v:689$1108'.
  Set init value: \reg111 = 13'0000000000000
Found init rule in `\module95.$proc$rtl.v:688$1107'.
  Set init value: \reg112 = 10'0000000000
Found init rule in `\module95.$proc$rtl.v:687$1106'.
  Set init value: \reg113 = 16'0000000000000000
Found init rule in `\module95.$proc$rtl.v:686$1105'.
  Set init value: \reg114 = 4'0000
Found init rule in `\module95.$proc$rtl.v:685$1104'.
  Set init value: \reg115 = 10'0000000000
Found init rule in `\module95.$proc$rtl.v:684$1103'.
  Set init value: \reg116 = 12'000000000000
Found init rule in `\module95.$proc$rtl.v:683$1102'.
  Set init value: \reg117 = 10'0000000000
Found init rule in `\module95.$proc$rtl.v:682$1101'.
  Set init value: \reg118 = 4'0000
Found init rule in `\module95.$proc$rtl.v:681$1100'.
  Set init value: \reg119 = 9'000000000
Found init rule in `\module95.$proc$rtl.v:680$1099'.
  Set init value: \reg120 = 14'00000000000000
Found init rule in `\module95.$proc$rtl.v:679$1098'.
  Set init value: \reg121 = 9'000000000
Found init rule in `\module95.$proc$rtl.v:678$1097'.
  Set init value: \reg122 = 11'00000000000
Found init rule in `\module95.$proc$rtl.v:677$1096'.
  Set init value: \reg123 = 14'00000000000000
Found init rule in `\module95.$proc$rtl.v:676$1095'.
  Set init value: \reg124 = 22'0000000000000000000000
Found init rule in `\module95.$proc$rtl.v:673$1094'.
  Set init value: \reg127 = 7'0000000
Found init rule in `\module95.$proc$rtl.v:672$1093'.
  Set init value: \reg128 = 7'0000000
Found init rule in `\module95.$proc$rtl.v:671$1092'.
  Set init value: \reg129 = 7'0000000
Found init rule in `\module95.$proc$rtl.v:670$1091'.
  Set init value: \reg130 = 18'000000000000000000
Found init rule in `\module95.$proc$rtl.v:669$1090'.
  Set init value: \reg131 = 12'000000000000
Found init rule in `\module95.$proc$rtl.v:668$1089'.
  Set init value: \reg132 = 17'00000000000000000
Found init rule in `\module95.$proc$rtl.v:667$1088'.
  Set init value: \reg133 = 4'0000
Found init rule in `\module95.$proc$rtl.v:666$1087'.
  Set init value: \reg134 = 7'0000000
Found init rule in `\module95.$proc$rtl.v:665$1086'.
  Set init value: \reg135 = 14'00000000000000
Found init rule in `\module95.$proc$rtl.v:662$1085'.
  Set init value: \reg138 = 22'0000000000000000000000
Found init rule in `\module95.$proc$rtl.v:661$1084'.
  Set init value: \reg139 = 13'0000000000000
Found init rule in `\module95.$proc$rtl.v:660$1083'.
  Set init value: \reg140 = 22'0000000000000000000000
Found init rule in `\module95.$proc$rtl.v:659$1082'.
  Set init value: \reg141 = 9'000000000
Found init rule in `\module95.$proc$rtl.v:658$1081'.
  Set init value: \reg142 = 9'000000000
Found init rule in `\module95.$proc$rtl.v:656$1080'.
  Set init value: \reg144 = 16'0000000000000000
Found init rule in `\module95.$proc$rtl.v:655$1079'.
  Set init value: \reg145 = 10'0000000000
Found init rule in `\module95.$proc$rtl.v:654$1078'.
  Set init value: \reg146 = 20'00000000000000000000
Found init rule in `\module95.$proc$rtl.v:653$1077'.
  Set init value: \reg147 = 19'0000000000000000000
Found init rule in `\module95.$proc$rtl.v:652$1076'.
  Set init value: \reg148 = 11'00000000000
Found init rule in `\module95.$proc$rtl.v:651$1075'.
  Set init value: \reg149 = 10'0000000000
Found init rule in `\module95.$proc$rtl.v:650$1074'.
  Set init value: \reg150 = 9'000000000
Found init rule in `\module95.$proc$rtl.v:649$1073'.
  Set init value: \reg151 = 17'00000000000000000
Found init rule in `\module95.$proc$rtl.v:648$1072'.
  Set init value: \reg152 = 21'000000000000000000000
Found init rule in `\module95.$proc$rtl.v:647$1071'.
  Set init value: \reg153 = 21'000000000000000000000
Found init rule in `\module95.$proc$rtl.v:646$1070'.
  Set init value: \reg154 = 16'0000000000000000
Found init rule in `\module95.$proc$rtl.v:645$1069'.
  Set init value: \reg155 = 5'00000
Found init rule in `\module95.$proc$rtl.v:644$1068'.
  Set init value: \reg156 = 14'00000000000000
Found init rule in `\module95.$proc$rtl.v:643$1067'.
  Set init value: \reg157 = 7'0000000
Found init rule in `\module95.$proc$rtl.v:642$1066'.
  Set init value: \reg158 = 10'0000000000
Found init rule in `\module95.$proc$rtl.v:641$1065'.
  Set init value: \reg159 = 17'00000000000000000
Found init rule in `\module95.$proc$rtl.v:640$1064'.
  Set init value: \reg160 = 15'000000000000000
Found init rule in `\module95.$proc$rtl.v:639$1063'.
  Set init value: \reg161 = 20'00000000000000000000
Found init rule in `\module95.$proc$rtl.v:638$1062'.
  Set init value: \reg162 = 13'0000000000000
Found init rule in `\module95.$proc$rtl.v:637$1061'.
  Set init value: \reg163 = 22'0000000000000000000000
Found init rule in `\module95.$proc$rtl.v:636$1060'.
  Set init value: \reg164 = 8'00000000
Found init rule in `\module95.$proc$rtl.v:635$1059'.
  Set init value: \reg165 = 4'0000
Found init rule in `\module95.$proc$rtl.v:634$1058'.
  Set init value: \reg166 = 22'0000000000000000000000
Found init rule in `\module95.$proc$rtl.v:633$1057'.
  Set init value: \reg167 = 4'0000
Found init rule in `\module95.$proc$rtl.v:632$1056'.
  Set init value: \reg168 = 17'00000000000000000
Found init rule in `\module95.$proc$rtl.v:631$1055'.
  Set init value: \reg169 = 14'00000000000000
Found init rule in `\module95.$proc$rtl.v:630$1054'.
  Set init value: \reg170 = 19'0000000000000000000
Found init rule in `\module95.$proc$rtl.v:629$1053'.
  Set init value: \reg171 = 14'00000000000000
Found init rule in `\module95.$proc$rtl.v:628$1052'.
  Set init value: \reg172 = 9'000000000
Found init rule in `\module177.$proc$rtl.v:501$587'.
  Set init value: \reg182 = 10'0000000000
Found init rule in `\module177.$proc$rtl.v:487$586'.
  Set init value: \reg196 = 22'0000000000000000000000
Found init rule in `\module177.$proc$rtl.v:486$585'.
  Set init value: \reg197 = 16'0000000000000000
Found init rule in `\module177.$proc$rtl.v:485$584'.
  Set init value: \reg198 = 12'000000000000
Found init rule in `\module177.$proc$rtl.v:484$583'.
  Set init value: \reg199 = 18'000000000000000000
Found init rule in `\module177.$proc$rtl.v:483$582'.
  Set init value: \reg200 = 5'00000
Found init rule in `\module177.$proc$rtl.v:482$581'.
  Set init value: \reg201 = 6'000000
Found init rule in `\module177.$proc$rtl.v:481$580'.
  Set init value: \reg202 = 8'00000000
Found init rule in `\module13.$proc$rtl.v:452$444'.
  Set init value: \reg19 = 15'000000000000000
Found init rule in `\module80.$proc$rtl.v:313$338'.
  Set init value: \reg89 = 18'000000000000000000
Found init rule in `\top.$proc$rtl.v:50$290'.
  Set init value: \reg47 = 15'000000000000000
Found init rule in `\top.$proc$rtl.v:48$289'.
  Set init value: \reg49 = 12'000000000000
Found init rule in `\top.$proc$rtl.v:47$288'.
  Set init value: \reg50 = 17'00000000000000000
Found init rule in `\top.$proc$rtl.v:46$287'.
  Set init value: \reg51 = 10'0000000000
Found init rule in `\top.$proc$rtl.v:45$286'.
  Set init value: \reg52 = 10'0000000000
Found init rule in `\top.$proc$rtl.v:44$285'.
  Set init value: \reg53 = 14'00000000000000
Found init rule in `\top.$proc$rtl.v:43$284'.
  Set init value: \reg54 = 6'000000
Found init rule in `\top.$proc$rtl.v:42$283'.
  Set init value: \reg55 = 7'0000000
Found init rule in `\top.$proc$rtl.v:41$282'.
  Set init value: \reg56 = 22'0000000000000000000000
Found init rule in `\top.$proc$rtl.v:37$281'.
  Set init value: \reg60 = 11'00000000000
Found init rule in `\top.$proc$rtl.v:36$280'.
  Set init value: \reg61 = 7'0000000
Found init rule in `\top.$proc$rtl.v:35$279'.
  Set init value: \reg62 = 16'0000000000000000
Found init rule in `\top.$proc$rtl.v:34$278'.
  Set init value: \reg63 = 22'0000000000000000000000
Found init rule in `\top.$proc$rtl.v:33$277'.
  Set init value: \reg64 = 17'00000000000000000
Found init rule in `\top.$proc$rtl.v:32$276'.
  Set init value: \reg65 = 8'00000000
Found init rule in `\top.$proc$rtl.v:31$275'.
  Set init value: \reg66 = 21'000000000000000000000
Found init rule in `\top.$proc$rtl.v:30$274'.
  Set init value: \reg67 = 20'00000000000000000000
Found init rule in `\top.$proc$rtl.v:29$273'.
  Set init value: \reg68 = 8'00000000
Found init rule in `\top.$proc$rtl.v:28$272'.
  Set init value: \reg69 = 18'000000000000000000
Found init rule in `\top.$proc$rtl.v:27$271'.
  Set init value: \reg70 = 7'0000000
Found init rule in `\top.$proc$rtl.v:26$270'.
  Set init value: \reg71 = 10'0000000000
Found init rule in `\top.$proc$rtl.v:25$269'.
  Set init value: \reg72 = 22'0000000000000000000000
Found init rule in `\top.$proc$rtl.v:24$268'.
  Set init value: \reg73 = 15'000000000000000
Found init rule in `\top.$proc$rtl.v:23$267'.
  Set init value: \reg74 = 17'00000000000000000
Found init rule in `\top.$proc$rtl.v:22$266'.
  Set init value: \reg75 = 15'000000000000000
Found init rule in `\top.$proc$rtl.v:16$265'.
  Set init value: \reg220 = 8'00000000
Found init rule in `\top.$proc$rtl.v:15$264'.
  Set init value: \reg221 = 3'000
Found init rule in `\top.$proc$rtl.v:14$263'.
  Set init value: \reg222 = 10'0000000000
Found init rule in `\top.$proc$rtl.v:13$262'.
  Set init value: \reg223 = 4'0000
Found init rule in `\top.$proc$rtl.v:12$261'.
  Set init value: \reg224 = 19'0000000000000000000
Found init rule in `\top.$proc$rtl.v:11$260'.
  Set init value: \reg225 = 14'00000000000000
Found init rule in `\top.$proc$rtl.v:10$259'.
  Set init value: \reg226 = 11'00000000000

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module95.$proc$rtl.v:698$1117'.
     1/1: $1\reg102[8:0]
Creating decoders for process `\module95.$proc$rtl.v:697$1116'.
     1/1: $1\reg103[16:0]
Creating decoders for process `\module95.$proc$rtl.v:696$1115'.
     1/1: $1\reg104[9:0]
Creating decoders for process `\module95.$proc$rtl.v:695$1114'.
     1/1: $1\reg105[9:0]
Creating decoders for process `\module95.$proc$rtl.v:694$1113'.
     1/1: $1\reg106[11:0]
Creating decoders for process `\module95.$proc$rtl.v:693$1112'.
     1/1: $1\reg107[21:0]
Creating decoders for process `\module95.$proc$rtl.v:692$1111'.
     1/1: $1\reg108[12:0]
Creating decoders for process `\module95.$proc$rtl.v:691$1110'.
     1/1: $1\reg109[15:0]
Creating decoders for process `\module95.$proc$rtl.v:690$1109'.
     1/1: $1\reg110[14:0]
Creating decoders for process `\module95.$proc$rtl.v:689$1108'.
     1/1: $1\reg111[12:0]
Creating decoders for process `\module95.$proc$rtl.v:688$1107'.
     1/1: $1\reg112[9:0]
Creating decoders for process `\module95.$proc$rtl.v:687$1106'.
     1/1: $1\reg113[15:0]
Creating decoders for process `\module95.$proc$rtl.v:686$1105'.
     1/1: $1\reg114[3:0]
Creating decoders for process `\module95.$proc$rtl.v:685$1104'.
     1/1: $1\reg115[9:0]
Creating decoders for process `\module95.$proc$rtl.v:684$1103'.
     1/1: $1\reg116[11:0]
Creating decoders for process `\module95.$proc$rtl.v:683$1102'.
     1/1: $1\reg117[9:0]
Creating decoders for process `\module95.$proc$rtl.v:682$1101'.
     1/1: $1\reg118[3:0]
Creating decoders for process `\module95.$proc$rtl.v:681$1100'.
     1/1: $1\reg119[8:0]
Creating decoders for process `\module95.$proc$rtl.v:680$1099'.
     1/1: $1\reg120[13:0]
Creating decoders for process `\module95.$proc$rtl.v:679$1098'.
     1/1: $1\reg121[8:0]
Creating decoders for process `\module95.$proc$rtl.v:678$1097'.
     1/1: $1\reg122[10:0]
Creating decoders for process `\module95.$proc$rtl.v:677$1096'.
     1/1: $1\reg123[13:0]
Creating decoders for process `\module95.$proc$rtl.v:676$1095'.
     1/1: $1\reg124[21:0]
Creating decoders for process `\module95.$proc$rtl.v:673$1094'.
     1/1: $1\reg127[6:0]
Creating decoders for process `\module95.$proc$rtl.v:672$1093'.
     1/1: $1\reg128[6:0]
Creating decoders for process `\module95.$proc$rtl.v:671$1092'.
     1/1: $1\reg129[6:0]
Creating decoders for process `\module95.$proc$rtl.v:670$1091'.
     1/1: $1\reg130[17:0]
Creating decoders for process `\module95.$proc$rtl.v:669$1090'.
     1/1: $1\reg131[11:0]
Creating decoders for process `\module95.$proc$rtl.v:668$1089'.
     1/1: $1\reg132[16:0]
Creating decoders for process `\module95.$proc$rtl.v:667$1088'.
     1/1: $1\reg133[3:0]
Creating decoders for process `\module95.$proc$rtl.v:666$1087'.
     1/1: $1\reg134[6:0]
Creating decoders for process `\module95.$proc$rtl.v:665$1086'.
     1/1: $1\reg135[13:0]
Creating decoders for process `\module95.$proc$rtl.v:662$1085'.
     1/1: $1\reg138[21:0]
Creating decoders for process `\module95.$proc$rtl.v:661$1084'.
     1/1: $1\reg139[12:0]
Creating decoders for process `\module95.$proc$rtl.v:660$1083'.
     1/1: $1\reg140[21:0]
Creating decoders for process `\module95.$proc$rtl.v:659$1082'.
     1/1: $1\reg141[8:0]
Creating decoders for process `\module95.$proc$rtl.v:658$1081'.
     1/1: $1\reg142[8:0]
Creating decoders for process `\module95.$proc$rtl.v:656$1080'.
     1/1: $1\reg144[15:0]
Creating decoders for process `\module95.$proc$rtl.v:655$1079'.
     1/1: $1\reg145[9:0]
Creating decoders for process `\module95.$proc$rtl.v:654$1078'.
     1/1: $1\reg146[19:0]
Creating decoders for process `\module95.$proc$rtl.v:653$1077'.
     1/1: $1\reg147[18:0]
Creating decoders for process `\module95.$proc$rtl.v:652$1076'.
     1/1: $1\reg148[10:0]
Creating decoders for process `\module95.$proc$rtl.v:651$1075'.
     1/1: $1\reg149[9:0]
Creating decoders for process `\module95.$proc$rtl.v:650$1074'.
     1/1: $1\reg150[8:0]
Creating decoders for process `\module95.$proc$rtl.v:649$1073'.
     1/1: $1\reg151[16:0]
Creating decoders for process `\module95.$proc$rtl.v:648$1072'.
     1/1: $1\reg152[20:0]
Creating decoders for process `\module95.$proc$rtl.v:647$1071'.
     1/1: $1\reg153[20:0]
Creating decoders for process `\module95.$proc$rtl.v:646$1070'.
     1/1: $1\reg154[15:0]
Creating decoders for process `\module95.$proc$rtl.v:645$1069'.
     1/1: $1\reg155[4:0]
Creating decoders for process `\module95.$proc$rtl.v:644$1068'.
     1/1: $1\reg156[13:0]
Creating decoders for process `\module95.$proc$rtl.v:643$1067'.
     1/1: $1\reg157[6:0]
Creating decoders for process `\module95.$proc$rtl.v:642$1066'.
     1/1: $1\reg158[9:0]
Creating decoders for process `\module95.$proc$rtl.v:641$1065'.
     1/1: $1\reg159[16:0]
Creating decoders for process `\module95.$proc$rtl.v:640$1064'.
     1/1: $1\reg160[14:0]
Creating decoders for process `\module95.$proc$rtl.v:639$1063'.
     1/1: $1\reg161[19:0]
Creating decoders for process `\module95.$proc$rtl.v:638$1062'.
     1/1: $1\reg162[12:0]
Creating decoders for process `\module95.$proc$rtl.v:637$1061'.
     1/1: $1\reg163[21:0]
Creating decoders for process `\module95.$proc$rtl.v:636$1060'.
     1/1: $1\reg164[7:0]
Creating decoders for process `\module95.$proc$rtl.v:635$1059'.
     1/1: $1\reg165[3:0]
Creating decoders for process `\module95.$proc$rtl.v:634$1058'.
     1/1: $1\reg166[21:0]
Creating decoders for process `\module95.$proc$rtl.v:633$1057'.
     1/1: $1\reg167[3:0]
Creating decoders for process `\module95.$proc$rtl.v:632$1056'.
     1/1: $1\reg168[16:0]
Creating decoders for process `\module95.$proc$rtl.v:631$1055'.
     1/1: $1\reg169[13:0]
Creating decoders for process `\module95.$proc$rtl.v:630$1054'.
     1/1: $1\reg170[18:0]
Creating decoders for process `\module95.$proc$rtl.v:629$1053'.
     1/1: $1\reg171[13:0]
Creating decoders for process `\module95.$proc$rtl.v:628$1052'.
     1/1: $1\reg172[8:0]
Creating decoders for process `\module95.$proc$rtl.v:1116$1048'.
     1/1: $0\reg172[8:0]
Creating decoders for process `\module95.$proc$rtl.v:1096$1031'.
     1/6: $0\reg171[13:0]
     2/6: $0\reg166[21:0]
     3/6: $0\reg169[13:0]
     4/6: $0\reg168[16:0]
     5/6: $0\reg167[3:0]
     6/6: $0\reg170[18:0]
Creating decoders for process `\module95.$proc$rtl.v:949$822'.
     1/22: $0\reg148[10:0]
     2/22: $0\reg144[15:0]
     3/22: $0\reg145[9:0]
     4/22: $0\reg146[19:0]
     5/22: $0\reg147[18:0]
     6/22: $0\reg149[9:0]
     7/22: $0\reg150[8:0]
     8/22: $0\reg151[16:0]
     9/22: $0\reg152[20:0]
    10/22: $0\reg153[20:0]
    11/22: $0\reg154[15:0]
    12/22: $0\reg155[4:0]
    13/22: $0\reg156[13:0]
    14/22: $0\reg157[6:0]
    15/22: $0\reg158[9:0]
    16/22: $0\reg159[16:0]
    17/22: $0\reg160[14:0]
    18/22: $0\reg161[19:0]
    19/22: $0\reg162[12:0]
    20/22: $0\reg163[21:0]
    21/22: $0\reg164[7:0]
    22/22: $0\reg165[3:0]
Creating decoders for process `\module95.$proc$rtl.v:939$814'.
     1/5: $0\reg142[8:0]
     2/5: $0\reg141[8:0]
     3/5: $0\reg140[21:0]
     4/5: $0\reg139[12:0]
     5/5: $0\reg138[21:0]
Creating decoders for process `\module95.$proc$rtl.v:887$748'.
     1/9: $0\reg127[6:0]
     2/9: $0\reg128[6:0]
     3/9: $0\reg129[6:0]
     4/9: $0\reg130[17:0]
     5/9: $0\reg131[11:0]
     6/9: $0\reg132[16:0]
     7/9: $0\reg133[3:0]
     8/9: $0\reg134[6:0]
     9/9: $0\reg135[13:0]
Creating decoders for process `\module95.$proc$rtl.v:774$590'.
     1/23: $0\reg107[21:0]
     2/23: $0\reg102[8:0]
     3/23: $0\reg103[16:0]
     4/23: $0\reg104[9:0]
     5/23: $0\reg105[9:0]
     6/23: $0\reg106[11:0]
     7/23: $0\reg108[12:0]
     8/23: $0\reg109[15:0]
     9/23: $0\reg110[14:0]
    10/23: $0\reg111[12:0]
    11/23: $0\reg112[9:0]
    12/23: $0\reg113[15:0]
    13/23: $0\reg114[3:0]
    14/23: $0\reg115[9:0]
    15/23: $0\reg116[11:0]
    16/23: $0\reg117[9:0]
    17/23: $0\reg118[3:0]
    18/23: $0\reg119[8:0]
    19/23: $0\reg120[13:0]
    20/23: $0\reg121[8:0]
    21/23: $0\reg122[10:0]
    22/23: $0\reg123[13:0]
    23/23: $0\reg124[21:0]
Creating decoders for process `\module177.$proc$rtl.v:501$587'.
     1/1: $1\reg182[9:0]
Creating decoders for process `\module177.$proc$rtl.v:487$586'.
     1/1: $1\reg196[21:0]
Creating decoders for process `\module177.$proc$rtl.v:486$585'.
     1/1: $1\reg197[15:0]
Creating decoders for process `\module177.$proc$rtl.v:485$584'.
     1/1: $1\reg198[11:0]
Creating decoders for process `\module177.$proc$rtl.v:484$583'.
     1/1: $1\reg199[17:0]
Creating decoders for process `\module177.$proc$rtl.v:483$582'.
     1/1: $1\reg200[4:0]
Creating decoders for process `\module177.$proc$rtl.v:482$581'.
     1/1: $1\reg201[5:0]
Creating decoders for process `\module177.$proc$rtl.v:481$580'.
     1/1: $1\reg202[7:0]
Creating decoders for process `\module177.$proc$rtl.v:566$503'.
     1/7: $0\reg202[7:0]
     2/7: $0\reg197[15:0]
     3/7: $0\reg196[21:0]
     4/7: $0\reg198[11:0]
     5/7: $0\reg199[17:0]
     6/7: $0\reg200[4:0]
     7/7: $0\reg201[5:0]
Creating decoders for process `\module177.$proc$rtl.v:531$445'.
     1/1: $0\reg182[9:0]
Creating decoders for process `\module13.$proc$rtl.v:452$444'.
     1/1: $1\reg19[14:0]
Creating decoders for process `\module13.$proc$rtl.v:454$421'.
     1/1: $0\reg19[14:0]
Creating decoders for process `\module80.$proc$rtl.v:313$338'.
     1/1: $1\reg89[17:0]
Creating decoders for process `\module80.$proc$rtl.v:339$296'.
     1/1: $0\reg89[17:0]
Creating decoders for process `\top.$proc$rtl.v:50$290'.
     1/1: $1\reg47[14:0]
Creating decoders for process `\top.$proc$rtl.v:48$289'.
     1/1: $1\reg49[11:0]
Creating decoders for process `\top.$proc$rtl.v:47$288'.
     1/1: $1\reg50[16:0]
Creating decoders for process `\top.$proc$rtl.v:46$287'.
     1/1: $1\reg51[9:0]
Creating decoders for process `\top.$proc$rtl.v:45$286'.
     1/1: $1\reg52[9:0]
Creating decoders for process `\top.$proc$rtl.v:44$285'.
     1/1: $1\reg53[13:0]
Creating decoders for process `\top.$proc$rtl.v:43$284'.
     1/1: $1\reg54[5:0]
Creating decoders for process `\top.$proc$rtl.v:42$283'.
     1/1: $1\reg55[6:0]
Creating decoders for process `\top.$proc$rtl.v:41$282'.
     1/1: $1\reg56[21:0]
Creating decoders for process `\top.$proc$rtl.v:37$281'.
     1/1: $1\reg60[10:0]
Creating decoders for process `\top.$proc$rtl.v:36$280'.
     1/1: $1\reg61[6:0]
Creating decoders for process `\top.$proc$rtl.v:35$279'.
     1/1: $1\reg62[15:0]
Creating decoders for process `\top.$proc$rtl.v:34$278'.
     1/1: $1\reg63[21:0]
Creating decoders for process `\top.$proc$rtl.v:33$277'.
     1/1: $1\reg64[16:0]
Creating decoders for process `\top.$proc$rtl.v:32$276'.
     1/1: $1\reg65[7:0]
Creating decoders for process `\top.$proc$rtl.v:31$275'.
     1/1: $1\reg66[20:0]
Creating decoders for process `\top.$proc$rtl.v:30$274'.
     1/1: $1\reg67[19:0]
Creating decoders for process `\top.$proc$rtl.v:29$273'.
     1/1: $1\reg68[7:0]
Creating decoders for process `\top.$proc$rtl.v:28$272'.
     1/1: $1\reg69[17:0]
Creating decoders for process `\top.$proc$rtl.v:27$271'.
     1/1: $1\reg70[6:0]
Creating decoders for process `\top.$proc$rtl.v:26$270'.
     1/1: $1\reg71[9:0]
Creating decoders for process `\top.$proc$rtl.v:25$269'.
     1/1: $1\reg72[21:0]
Creating decoders for process `\top.$proc$rtl.v:24$268'.
     1/1: $1\reg73[14:0]
Creating decoders for process `\top.$proc$rtl.v:23$267'.
     1/1: $1\reg74[16:0]
Creating decoders for process `\top.$proc$rtl.v:22$266'.
     1/1: $1\reg75[14:0]
Creating decoders for process `\top.$proc$rtl.v:16$265'.
     1/1: $1\reg220[7:0]
Creating decoders for process `\top.$proc$rtl.v:15$264'.
     1/1: $1\reg221[2:0]
Creating decoders for process `\top.$proc$rtl.v:14$263'.
     1/1: $1\reg222[9:0]
Creating decoders for process `\top.$proc$rtl.v:13$262'.
     1/1: $1\reg223[3:0]
Creating decoders for process `\top.$proc$rtl.v:12$261'.
     1/1: $1\reg224[18:0]
Creating decoders for process `\top.$proc$rtl.v:11$260'.
     1/1: $1\reg225[13:0]
Creating decoders for process `\top.$proc$rtl.v:10$259'.
     1/1: $1\reg226[10:0]
Creating decoders for process `\top.$proc$rtl.v:259$219'.
     1/7: $0\reg221[2:0]
     2/7: $0\reg220[7:0]
     3/7: $0\reg222[9:0]
     4/7: $0\reg223[3:0]
     5/7: $0\reg224[18:0]
     6/7: $0\reg225[13:0]
     7/7: $0\reg226[10:0]
Creating decoders for process `\top.$proc$rtl.v:157$86'.
     1/16: $0\reg60[10:0]
     2/16: $0\reg61[6:0]
     3/16: $0\reg62[15:0]
     4/16: $0\reg63[21:0]
     5/16: $0\reg64[16:0]
     6/16: $0\reg65[7:0]
     7/16: $0\reg66[20:0]
     8/16: $0\reg67[19:0]
     9/16: $0\reg68[7:0]
    10/16: $0\reg69[17:0]
    11/16: $0\reg70[6:0]
    12/16: $0\reg71[9:0]
    13/16: $0\reg72[21:0]
    14/16: $0\reg73[14:0]
    15/16: $0\reg74[16:0]
    16/16: $0\reg75[14:0]
Creating decoders for process `\top.$proc$rtl.v:106$4'.
     1/8: $0\reg49[11:0]
     2/8: $0\reg50[16:0]
     3/8: $0\reg51[9:0]
     4/8: $0\reg52[9:0]
     5/8: $0\reg53[13:0]
     6/8: $0\reg54[5:0]
     7/8: $0\reg55[6:0]
     8/8: $0\reg56[21:0]
Creating decoders for process `\top.$proc$rtl.v:100$1'.
     1/1: $0\reg47[14:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\module95.\reg172' using process `\module95.$proc$rtl.v:1116$1048'.
  created $dff cell `$procdff$1575' with positive edge clock.
Creating register for signal `\module95.\reg170' using process `\module95.$proc$rtl.v:1096$1031'.
  created $dff cell `$procdff$1576' with positive edge clock.
Creating register for signal `\module95.\reg167' using process `\module95.$proc$rtl.v:1096$1031'.
  created $dff cell `$procdff$1577' with positive edge clock.
Creating register for signal `\module95.\reg168' using process `\module95.$proc$rtl.v:1096$1031'.
  created $dff cell `$procdff$1578' with positive edge clock.
Creating register for signal `\module95.\reg166' using process `\module95.$proc$rtl.v:1096$1031'.
  created $dff cell `$procdff$1579' with positive edge clock.
Creating register for signal `\module95.\reg171' using process `\module95.$proc$rtl.v:1096$1031'.
  created $dff cell `$procdff$1580' with positive edge clock.
Creating register for signal `\module95.\reg169' using process `\module95.$proc$rtl.v:1096$1031'.
  created $dff cell `$procdff$1581' with positive edge clock.
Creating register for signal `\module95.\reg165' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1582' with positive edge clock.
Creating register for signal `\module95.\reg164' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1583' with positive edge clock.
Creating register for signal `\module95.\reg163' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1584' with positive edge clock.
Creating register for signal `\module95.\reg162' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1585' with positive edge clock.
Creating register for signal `\module95.\reg161' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1586' with positive edge clock.
Creating register for signal `\module95.\reg160' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1587' with positive edge clock.
Creating register for signal `\module95.\reg159' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1588' with positive edge clock.
Creating register for signal `\module95.\reg158' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1589' with positive edge clock.
Creating register for signal `\module95.\reg157' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1590' with positive edge clock.
Creating register for signal `\module95.\reg156' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1591' with positive edge clock.
Creating register for signal `\module95.\reg155' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1592' with positive edge clock.
Creating register for signal `\module95.\reg154' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1593' with positive edge clock.
Creating register for signal `\module95.\reg153' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1594' with positive edge clock.
Creating register for signal `\module95.\reg152' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1595' with positive edge clock.
Creating register for signal `\module95.\reg151' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1596' with positive edge clock.
Creating register for signal `\module95.\reg150' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1597' with positive edge clock.
Creating register for signal `\module95.\reg149' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1598' with positive edge clock.
Creating register for signal `\module95.\reg148' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1599' with positive edge clock.
Creating register for signal `\module95.\reg147' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1600' with positive edge clock.
Creating register for signal `\module95.\reg146' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1601' with positive edge clock.
Creating register for signal `\module95.\reg145' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1602' with positive edge clock.
Creating register for signal `\module95.\reg144' using process `\module95.$proc$rtl.v:949$822'.
  created $dff cell `$procdff$1603' with positive edge clock.
Creating register for signal `\module95.\reg142' using process `\module95.$proc$rtl.v:939$814'.
  created $dff cell `$procdff$1604' with positive edge clock.
Creating register for signal `\module95.\reg141' using process `\module95.$proc$rtl.v:939$814'.
  created $dff cell `$procdff$1605' with positive edge clock.
Creating register for signal `\module95.\reg140' using process `\module95.$proc$rtl.v:939$814'.
  created $dff cell `$procdff$1606' with positive edge clock.
Creating register for signal `\module95.\reg139' using process `\module95.$proc$rtl.v:939$814'.
  created $dff cell `$procdff$1607' with positive edge clock.
Creating register for signal `\module95.\reg138' using process `\module95.$proc$rtl.v:939$814'.
  created $dff cell `$procdff$1608' with positive edge clock.
Creating register for signal `\module95.\reg135' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1609' with positive edge clock.
Creating register for signal `\module95.\reg134' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1610' with positive edge clock.
Creating register for signal `\module95.\reg133' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1611' with positive edge clock.
Creating register for signal `\module95.\reg132' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1612' with positive edge clock.
Creating register for signal `\module95.\reg131' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1613' with positive edge clock.
Creating register for signal `\module95.\reg130' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1614' with positive edge clock.
Creating register for signal `\module95.\reg129' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1615' with positive edge clock.
Creating register for signal `\module95.\reg128' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1616' with positive edge clock.
Creating register for signal `\module95.\reg127' using process `\module95.$proc$rtl.v:887$748'.
  created $dff cell `$procdff$1617' with positive edge clock.
Creating register for signal `\module95.\reg124' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1618' with positive edge clock.
Creating register for signal `\module95.\reg123' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1619' with positive edge clock.
Creating register for signal `\module95.\reg122' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1620' with positive edge clock.
Creating register for signal `\module95.\reg121' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1621' with positive edge clock.
Creating register for signal `\module95.\reg120' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1622' with positive edge clock.
Creating register for signal `\module95.\reg119' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1623' with positive edge clock.
Creating register for signal `\module95.\reg118' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1624' with positive edge clock.
Creating register for signal `\module95.\reg117' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1625' with positive edge clock.
Creating register for signal `\module95.\reg116' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1626' with positive edge clock.
Creating register for signal `\module95.\reg115' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1627' with positive edge clock.
Creating register for signal `\module95.\reg114' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1628' with positive edge clock.
Creating register for signal `\module95.\reg113' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1629' with positive edge clock.
Creating register for signal `\module95.\reg112' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1630' with positive edge clock.
Creating register for signal `\module95.\reg111' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1631' with positive edge clock.
Creating register for signal `\module95.\reg110' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1632' with positive edge clock.
Creating register for signal `\module95.\reg109' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1633' with positive edge clock.
Creating register for signal `\module95.\reg108' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1634' with positive edge clock.
Creating register for signal `\module95.\reg107' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1635' with positive edge clock.
Creating register for signal `\module95.\reg106' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1636' with positive edge clock.
Creating register for signal `\module95.\reg105' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1637' with positive edge clock.
Creating register for signal `\module95.\reg104' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1638' with positive edge clock.
Creating register for signal `\module95.\reg103' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1639' with positive edge clock.
Creating register for signal `\module95.\reg102' using process `\module95.$proc$rtl.v:774$590'.
  created $dff cell `$procdff$1640' with positive edge clock.
Creating register for signal `\module177.\reg202' using process `\module177.$proc$rtl.v:566$503'.
  created $dff cell `$procdff$1641' with positive edge clock.
Creating register for signal `\module177.\reg201' using process `\module177.$proc$rtl.v:566$503'.
  created $dff cell `$procdff$1642' with positive edge clock.
Creating register for signal `\module177.\reg200' using process `\module177.$proc$rtl.v:566$503'.
  created $dff cell `$procdff$1643' with positive edge clock.
Creating register for signal `\module177.\reg199' using process `\module177.$proc$rtl.v:566$503'.
  created $dff cell `$procdff$1644' with positive edge clock.
Creating register for signal `\module177.\reg198' using process `\module177.$proc$rtl.v:566$503'.
  created $dff cell `$procdff$1645' with positive edge clock.
Creating register for signal `\module177.\reg197' using process `\module177.$proc$rtl.v:566$503'.
  created $dff cell `$procdff$1646' with positive edge clock.
Creating register for signal `\module177.\reg196' using process `\module177.$proc$rtl.v:566$503'.
  created $dff cell `$procdff$1647' with positive edge clock.
Creating register for signal `\module177.\reg182' using process `\module177.$proc$rtl.v:531$445'.
  created $dff cell `$procdff$1648' with positive edge clock.
Creating register for signal `\module13.\reg19' using process `\module13.$proc$rtl.v:454$421'.
  created $dff cell `$procdff$1649' with positive edge clock.
Creating register for signal `\module80.\reg89' using process `\module80.$proc$rtl.v:339$296'.
  created $dff cell `$procdff$1650' with positive edge clock.
Creating register for signal `\top.\reg226' using process `\top.$proc$rtl.v:259$219'.
  created $dff cell `$procdff$1651' with positive edge clock.
Creating register for signal `\top.\reg225' using process `\top.$proc$rtl.v:259$219'.
  created $dff cell `$procdff$1652' with positive edge clock.
Creating register for signal `\top.\reg224' using process `\top.$proc$rtl.v:259$219'.
  created $dff cell `$procdff$1653' with positive edge clock.
Creating register for signal `\top.\reg223' using process `\top.$proc$rtl.v:259$219'.
  created $dff cell `$procdff$1654' with positive edge clock.
Creating register for signal `\top.\reg222' using process `\top.$proc$rtl.v:259$219'.
  created $dff cell `$procdff$1655' with positive edge clock.
Creating register for signal `\top.\reg221' using process `\top.$proc$rtl.v:259$219'.
  created $dff cell `$procdff$1656' with positive edge clock.
Creating register for signal `\top.\reg220' using process `\top.$proc$rtl.v:259$219'.
  created $dff cell `$procdff$1657' with positive edge clock.
Creating register for signal `\top.\reg75' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1658' with positive edge clock.
Creating register for signal `\top.\reg74' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1659' with positive edge clock.
Creating register for signal `\top.\reg73' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1660' with positive edge clock.
Creating register for signal `\top.\reg72' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1661' with positive edge clock.
Creating register for signal `\top.\reg71' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1662' with positive edge clock.
Creating register for signal `\top.\reg70' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1663' with positive edge clock.
Creating register for signal `\top.\reg69' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1664' with positive edge clock.
Creating register for signal `\top.\reg68' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1665' with positive edge clock.
Creating register for signal `\top.\reg67' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1666' with positive edge clock.
Creating register for signal `\top.\reg66' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1667' with positive edge clock.
Creating register for signal `\top.\reg65' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1668' with positive edge clock.
Creating register for signal `\top.\reg64' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1669' with positive edge clock.
Creating register for signal `\top.\reg63' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1670' with positive edge clock.
Creating register for signal `\top.\reg62' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1671' with positive edge clock.
Creating register for signal `\top.\reg61' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1672' with positive edge clock.
Creating register for signal `\top.\reg60' using process `\top.$proc$rtl.v:157$86'.
  created $dff cell `$procdff$1673' with positive edge clock.
Creating register for signal `\top.\reg56' using process `\top.$proc$rtl.v:106$4'.
  created $dff cell `$procdff$1674' with positive edge clock.
Creating register for signal `\top.\reg55' using process `\top.$proc$rtl.v:106$4'.
  created $dff cell `$procdff$1675' with positive edge clock.
Creating register for signal `\top.\reg54' using process `\top.$proc$rtl.v:106$4'.
  created $dff cell `$procdff$1676' with positive edge clock.
Creating register for signal `\top.\reg53' using process `\top.$proc$rtl.v:106$4'.
  created $dff cell `$procdff$1677' with positive edge clock.
Creating register for signal `\top.\reg52' using process `\top.$proc$rtl.v:106$4'.
  created $dff cell `$procdff$1678' with positive edge clock.
Creating register for signal `\top.\reg51' using process `\top.$proc$rtl.v:106$4'.
  created $dff cell `$procdff$1679' with positive edge clock.
Creating register for signal `\top.\reg50' using process `\top.$proc$rtl.v:106$4'.
  created $dff cell `$procdff$1680' with positive edge clock.
Creating register for signal `\top.\reg49' using process `\top.$proc$rtl.v:106$4'.
  created $dff cell `$procdff$1681' with positive edge clock.
Creating register for signal `\top.\reg47' using process `\top.$proc$rtl.v:100$1'.
  created $dff cell `$procdff$1682' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `module95.$proc$rtl.v:698$1117'.
Removing empty process `module95.$proc$rtl.v:697$1116'.
Removing empty process `module95.$proc$rtl.v:696$1115'.
Removing empty process `module95.$proc$rtl.v:695$1114'.
Removing empty process `module95.$proc$rtl.v:694$1113'.
Removing empty process `module95.$proc$rtl.v:693$1112'.
Removing empty process `module95.$proc$rtl.v:692$1111'.
Removing empty process `module95.$proc$rtl.v:691$1110'.
Removing empty process `module95.$proc$rtl.v:690$1109'.
Removing empty process `module95.$proc$rtl.v:689$1108'.
Removing empty process `module95.$proc$rtl.v:688$1107'.
Removing empty process `module95.$proc$rtl.v:687$1106'.
Removing empty process `module95.$proc$rtl.v:686$1105'.
Removing empty process `module95.$proc$rtl.v:685$1104'.
Removing empty process `module95.$proc$rtl.v:684$1103'.
Removing empty process `module95.$proc$rtl.v:683$1102'.
Removing empty process `module95.$proc$rtl.v:682$1101'.
Removing empty process `module95.$proc$rtl.v:681$1100'.
Removing empty process `module95.$proc$rtl.v:680$1099'.
Removing empty process `module95.$proc$rtl.v:679$1098'.
Removing empty process `module95.$proc$rtl.v:678$1097'.
Removing empty process `module95.$proc$rtl.v:677$1096'.
Removing empty process `module95.$proc$rtl.v:676$1095'.
Removing empty process `module95.$proc$rtl.v:673$1094'.
Removing empty process `module95.$proc$rtl.v:672$1093'.
Removing empty process `module95.$proc$rtl.v:671$1092'.
Removing empty process `module95.$proc$rtl.v:670$1091'.
Removing empty process `module95.$proc$rtl.v:669$1090'.
Removing empty process `module95.$proc$rtl.v:668$1089'.
Removing empty process `module95.$proc$rtl.v:667$1088'.
Removing empty process `module95.$proc$rtl.v:666$1087'.
Removing empty process `module95.$proc$rtl.v:665$1086'.
Removing empty process `module95.$proc$rtl.v:662$1085'.
Removing empty process `module95.$proc$rtl.v:661$1084'.
Removing empty process `module95.$proc$rtl.v:660$1083'.
Removing empty process `module95.$proc$rtl.v:659$1082'.
Removing empty process `module95.$proc$rtl.v:658$1081'.
Removing empty process `module95.$proc$rtl.v:656$1080'.
Removing empty process `module95.$proc$rtl.v:655$1079'.
Removing empty process `module95.$proc$rtl.v:654$1078'.
Removing empty process `module95.$proc$rtl.v:653$1077'.
Removing empty process `module95.$proc$rtl.v:652$1076'.
Removing empty process `module95.$proc$rtl.v:651$1075'.
Removing empty process `module95.$proc$rtl.v:650$1074'.
Removing empty process `module95.$proc$rtl.v:649$1073'.
Removing empty process `module95.$proc$rtl.v:648$1072'.
Removing empty process `module95.$proc$rtl.v:647$1071'.
Removing empty process `module95.$proc$rtl.v:646$1070'.
Removing empty process `module95.$proc$rtl.v:645$1069'.
Removing empty process `module95.$proc$rtl.v:644$1068'.
Removing empty process `module95.$proc$rtl.v:643$1067'.
Removing empty process `module95.$proc$rtl.v:642$1066'.
Removing empty process `module95.$proc$rtl.v:641$1065'.
Removing empty process `module95.$proc$rtl.v:640$1064'.
Removing empty process `module95.$proc$rtl.v:639$1063'.
Removing empty process `module95.$proc$rtl.v:638$1062'.
Removing empty process `module95.$proc$rtl.v:637$1061'.
Removing empty process `module95.$proc$rtl.v:636$1060'.
Removing empty process `module95.$proc$rtl.v:635$1059'.
Removing empty process `module95.$proc$rtl.v:634$1058'.
Removing empty process `module95.$proc$rtl.v:633$1057'.
Removing empty process `module95.$proc$rtl.v:632$1056'.
Removing empty process `module95.$proc$rtl.v:631$1055'.
Removing empty process `module95.$proc$rtl.v:630$1054'.
Removing empty process `module95.$proc$rtl.v:629$1053'.
Removing empty process `module95.$proc$rtl.v:628$1052'.
Removing empty process `module95.$proc$rtl.v:1116$1048'.
Found and cleaned up 1 empty switch in `\module95.$proc$rtl.v:1096$1031'.
Removing empty process `module95.$proc$rtl.v:1096$1031'.
Found and cleaned up 8 empty switches in `\module95.$proc$rtl.v:949$822'.
Removing empty process `module95.$proc$rtl.v:949$822'.
Removing empty process `module95.$proc$rtl.v:939$814'.
Found and cleaned up 3 empty switches in `\module95.$proc$rtl.v:887$748'.
Removing empty process `module95.$proc$rtl.v:887$748'.
Found and cleaned up 6 empty switches in `\module95.$proc$rtl.v:774$590'.
Removing empty process `module95.$proc$rtl.v:774$590'.
Removing empty process `module177.$proc$rtl.v:501$587'.
Removing empty process `module177.$proc$rtl.v:487$586'.
Removing empty process `module177.$proc$rtl.v:486$585'.
Removing empty process `module177.$proc$rtl.v:485$584'.
Removing empty process `module177.$proc$rtl.v:484$583'.
Removing empty process `module177.$proc$rtl.v:483$582'.
Removing empty process `module177.$proc$rtl.v:482$581'.
Removing empty process `module177.$proc$rtl.v:481$580'.
Found and cleaned up 2 empty switches in `\module177.$proc$rtl.v:566$503'.
Removing empty process `module177.$proc$rtl.v:566$503'.
Removing empty process `module177.$proc$rtl.v:531$445'.
Removing empty process `module13.$proc$rtl.v:452$444'.
Removing empty process `module13.$proc$rtl.v:454$421'.
Removing empty process `module80.$proc$rtl.v:313$338'.
Removing empty process `module80.$proc$rtl.v:339$296'.
Removing empty process `top.$proc$rtl.v:50$290'.
Removing empty process `top.$proc$rtl.v:48$289'.
Removing empty process `top.$proc$rtl.v:47$288'.
Removing empty process `top.$proc$rtl.v:46$287'.
Removing empty process `top.$proc$rtl.v:45$286'.
Removing empty process `top.$proc$rtl.v:44$285'.
Removing empty process `top.$proc$rtl.v:43$284'.
Removing empty process `top.$proc$rtl.v:42$283'.
Removing empty process `top.$proc$rtl.v:41$282'.
Removing empty process `top.$proc$rtl.v:37$281'.
Removing empty process `top.$proc$rtl.v:36$280'.
Removing empty process `top.$proc$rtl.v:35$279'.
Removing empty process `top.$proc$rtl.v:34$278'.
Removing empty process `top.$proc$rtl.v:33$277'.
Removing empty process `top.$proc$rtl.v:32$276'.
Removing empty process `top.$proc$rtl.v:31$275'.
Removing empty process `top.$proc$rtl.v:30$274'.
Removing empty process `top.$proc$rtl.v:29$273'.
Removing empty process `top.$proc$rtl.v:28$272'.
Removing empty process `top.$proc$rtl.v:27$271'.
Removing empty process `top.$proc$rtl.v:26$270'.
Removing empty process `top.$proc$rtl.v:25$269'.
Removing empty process `top.$proc$rtl.v:24$268'.
Removing empty process `top.$proc$rtl.v:23$267'.
Removing empty process `top.$proc$rtl.v:22$266'.
Removing empty process `top.$proc$rtl.v:16$265'.
Removing empty process `top.$proc$rtl.v:15$264'.
Removing empty process `top.$proc$rtl.v:14$263'.
Removing empty process `top.$proc$rtl.v:13$262'.
Removing empty process `top.$proc$rtl.v:12$261'.
Removing empty process `top.$proc$rtl.v:11$260'.
Removing empty process `top.$proc$rtl.v:10$259'.
Found and cleaned up 2 empty switches in `\top.$proc$rtl.v:259$219'.
Removing empty process `top.$proc$rtl.v:259$219'.
Found and cleaned up 5 empty switches in `\top.$proc$rtl.v:157$86'.
Removing empty process `top.$proc$rtl.v:157$86'.
Found and cleaned up 2 empty switches in `\top.$proc$rtl.v:106$4'.
Removing empty process `top.$proc$rtl.v:106$4'.
Removing empty process `top.$proc$rtl.v:100$1'.
Cleaned up 29 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module module95.
<suppressed ~56 debug messages>
Optimizing module module177.
<suppressed ~31 debug messages>
Optimizing module module13.
<suppressed ~3 debug messages>
Optimizing module module26.
<suppressed ~2 debug messages>
Optimizing module module4.
<suppressed ~8 debug messages>
Optimizing module module80.
<suppressed ~4 debug messages>
Optimizing module top.
<suppressed ~24 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \top..
Removed 81 unused cells and 696 unused wires.
<suppressed ~207 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module module13..
checking module module177..
checking module module26..
checking module module4..
checking module module80..
checking module module95..
checking module top..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
<suppressed ~2 debug messages>
Optimizing module top.
<suppressed ~2 debug messages>

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module26'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module95'.
<suppressed ~54 debug messages>
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 27 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module177..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module80..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module95..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$rtl.v:1054$970: { 15'000000000000000 \reg127 } -> { 15'000000000000000 \reg127 [6:4] 1'0 \reg127 [2:0] }
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:118$20.
    dead port 2/2 on $mux $ternary$rtl.v:118$20.
    dead port 2/2 on $mux $ternary$rtl.v:118$22.
Removed 3 multiplexer ports.
<suppressed ~176 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module13.
    New input vector for $reduce_and cell $reduce_and$rtl.v:458$425: { \wire18 [0] \wire18 [1] \wire18 [2] \wire18 [3] \wire18 [4] \wire18 [5] \wire18 [6] \wire18 [7] \wire18 [8] \wire18 [9] \wire18 [10] \wire18 [11] \wire18 [12] \wire18 [13] \wire18 [14] \wire18 [15] \wire18 [16] \wire18 [17] \wire18 [18] \wire18 [19] }
  Optimizing cells in module \module13.
  Optimizing cells in module \module177.
    New input vector for $reduce_or cell $reduce_or$rtl.v:598$540: { \reg196 [6] \reg196 [7] \reg196 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:560$486: { \wire178 [5] \wire178 [6] \wire178 [7] \wire178 [8] \wire178 [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:553$470: { \wire189 [1] \wire189 [2] \wire189 [3] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:547$464: { $ternary$rtl.v:547$463_Y [0] $ternary$rtl.v:547$463_Y [1] $ternary$rtl.v:547$463_Y [2] $ternary$rtl.v:547$463_Y [3] $ternary$rtl.v:547$463_Y [4] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:556$479: { \wire178 [6] \wire178 [7] \wire178 [8] \wire178 [9] \wire178 [10] }
  Optimizing cells in module \module177.
  Optimizing cells in module \module26.
    New input vector for $reduce_or cell $reduce_or$rtl.v:428$389: { $shl$rtl.v:428$388_Y [0] $shl$rtl.v:428$388_Y [1] $shl$rtl.v:428$388_Y [2] $shl$rtl.v:428$388_Y [3] $shl$rtl.v:428$388_Y [4] $shl$rtl.v:428$388_Y [5] $shl$rtl.v:428$388_Y [6] $shl$rtl.v:428$388_Y [7] $shl$rtl.v:428$388_Y [8] $shl$rtl.v:428$388_Y [9] $shl$rtl.v:428$388_Y [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:434$407: { \wire31 [0] \wire31 [1] \wire31 [2] \wire31 [3] \wire31 [4] \wire31 [5] \wire31 [6] \wire31 [7] \wire31 [8] \wire31 [9] \wire31 [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:424$379: { $or$rtl.v:424$378_Y [0] $or$rtl.v:424$378_Y [1] $or$rtl.v:424$378_Y [2] $or$rtl.v:424$378_Y [3] $or$rtl.v:424$378_Y [4] $or$rtl.v:424$378_Y [5] $or$rtl.v:424$378_Y [6] $or$rtl.v:424$378_Y [7] $or$rtl.v:424$378_Y [8] $or$rtl.v:424$378_Y [9] $or$rtl.v:424$378_Y [10] }
  Optimizing cells in module \module26.
  Optimizing cells in module \module4.
    New input vector for $reduce_or cell $reduce_or$rtl.v:397$360: { \wire11 [0] \wire11 [1] \wire11 [2] \wire11 [3] \wire11 [4] \wire11 [5] \wire11 [6] \wire11 [7] \wire11 [8] \wire11 [9] \wire11 [10] \wire11 [11] \wire11 [12] \wire11 [13] \wire11 [14] \wire11 [15] \wire11 [16] \wire11 [17] \wire11 [18] \wire11 [19] \wire11 [20] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:390$346: { $ternary$rtl.v:390$345_Y [0] $ternary$rtl.v:390$345_Y [1] $ternary$rtl.v:390$345_Y [2] $ternary$rtl.v:390$345_Y [3] $ternary$rtl.v:390$345_Y [4] $ternary$rtl.v:390$345_Y [5] $ternary$rtl.v:390$345_Y [6] $ternary$rtl.v:390$345_Y [7] $ternary$rtl.v:390$345_Y [8] $ternary$rtl.v:390$345_Y [9] $ternary$rtl.v:390$345_Y [10] $ternary$rtl.v:390$345_Y [11] $ternary$rtl.v:390$345_Y [12] $ternary$rtl.v:390$345_Y [13] $ternary$rtl.v:390$345_Y [14] $ternary$rtl.v:390$345_Y [15] $ternary$rtl.v:390$345_Y [16] $ternary$rtl.v:390$345_Y [17] }
  Optimizing cells in module \module4.
  Optimizing cells in module \module80.
    New input vector for $reduce_or cell $reduce_or$rtl.v:343$305: { \wire83 [0] \wire83 [1] \wire83 [2] \wire83 [3] \wire83 [4] \wire83 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:345$314: { $sshr$rtl.v:345$313_Y [0] $sshr$rtl.v:345$313_Y [1] $sshr$rtl.v:345$313_Y [2] $sshr$rtl.v:345$313_Y [3] $sshr$rtl.v:345$313_Y [4] $sshr$rtl.v:345$313_Y [5] $sshr$rtl.v:345$313_Y [6] $sshr$rtl.v:345$313_Y [7] $sshr$rtl.v:345$313_Y [8] $sshr$rtl.v:345$313_Y [9] $sshr$rtl.v:345$313_Y [10] $sshr$rtl.v:345$313_Y [11] $sshr$rtl.v:345$313_Y [12] $sshr$rtl.v:345$313_Y [13] $sshr$rtl.v:345$313_Y [14] $sshr$rtl.v:345$313_Y [15] $sshr$rtl.v:345$313_Y [16] $sshr$rtl.v:345$313_Y [17] }
  Optimizing cells in module \module80.
  Optimizing cells in module \module95.
    New input vector for $reduce_or cell $reduce_or$rtl.v:992$881: { \wire100 [0] \wire100 [1] \wire100 [2] \wire100 [3] \wire100 [4] \wire100 [5] \wire100 [6] \wire100 [7] \wire100 [8] \wire100 [9] \wire100 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:984$871: { $shr$rtl.v:984$870_Y [0] $shr$rtl.v:984$870_Y [1] $shr$rtl.v:984$870_Y [2] $shr$rtl.v:984$870_Y [3] $shr$rtl.v:984$870_Y [4] $shr$rtl.v:984$870_Y [5] $shr$rtl.v:984$870_Y [6] $shr$rtl.v:984$870_Y [7] $shr$rtl.v:984$870_Y [8] $shr$rtl.v:984$870_Y [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:951$823: { \wire98 [0] \wire98 [1] \wire98 [2] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:948$820: { $ternary$rtl.v:948$819_Y [0] $ternary$rtl.v:948$819_Y [1] $ternary$rtl.v:948$819_Y [2] $ternary$rtl.v:948$819_Y [3] $ternary$rtl.v:948$819_Y [4] $ternary$rtl.v:948$819_Y [5] $ternary$rtl.v:948$819_Y [6] $ternary$rtl.v:948$819_Y [7] $ternary$rtl.v:948$819_Y [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:936$804: { \reg118 [0] \reg118 [1] \reg118 [2] \reg118 [3] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:900$770: { \reg124 [0] \reg124 [1] \reg124 [2] \reg124 [3] \reg124 [4] \reg124 [5] \reg124 [6] \reg124 [7] \reg124 [8] \reg124 [9] \reg124 [10] \reg124 [11] \reg124 [12] \reg124 [13] \reg124 [14] \reg124 [15] \reg124 [16] \reg124 [17] \reg124 [18] \reg124 [19] \reg124 [20] \reg124 [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:898$767: { \reg119 [0] \reg119 [1] \reg119 [2] \reg119 [3] \reg119 [4] \reg119 [5] \reg119 [6] \reg119 [7] \reg119 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:866$714: { \reg116 [0] \reg116 [1] \reg116 [2] \reg116 [3] \reg116 [4] \reg116 [5] \reg116 [6] \reg116 [7] \reg116 [8] \reg116 [9] \reg116 [10] \reg116 [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:851$684: { $ternary$rtl.v:851$683_Y [0] $ternary$rtl.v:851$683_Y [1] $ternary$rtl.v:851$683_Y [2] $ternary$rtl.v:851$683_Y [3] $ternary$rtl.v:851$683_Y [4] $ternary$rtl.v:851$683_Y [5] $ternary$rtl.v:851$683_Y [6] $ternary$rtl.v:851$683_Y [7] $ternary$rtl.v:851$683_Y [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:834$650: { $sshr$rtl.v:834$649_Y [0] $sshr$rtl.v:834$649_Y [1] $sshr$rtl.v:834$649_Y [2] $sshr$rtl.v:834$649_Y [3] $sshr$rtl.v:834$649_Y [4] $sshr$rtl.v:834$649_Y [5] $sshr$rtl.v:834$649_Y [6] $sshr$rtl.v:834$649_Y [7] $sshr$rtl.v:834$649_Y [8] $sshr$rtl.v:834$649_Y [9] $sshr$rtl.v:834$649_Y [10] $sshr$rtl.v:834$649_Y [11] $sshr$rtl.v:834$649_Y [12] $sshr$rtl.v:834$649_Y [13] $sshr$rtl.v:834$649_Y [14] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:790$604: { $shl$rtl.v:790$603_Y [0] $shl$rtl.v:790$603_Y [1] $shl$rtl.v:790$603_Y [2] $shl$rtl.v:790$603_Y [3] $shl$rtl.v:790$603_Y [4] $shl$rtl.v:790$603_Y [5] $shl$rtl.v:790$603_Y [6] $shl$rtl.v:790$603_Y [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:782$593: { \wire97 [0] \wire97 [1] \wire97 [2] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1044$960: { \reg153 [0] \reg153 [1] \reg153 [2] \reg153 [3] \reg153 [4] \reg153 [5] \reg153 [6] \reg153 [7] \reg153 [8] \reg153 [9] \reg153 [10] \reg153 [11] \reg153 [12] \reg153 [13] \reg153 [14] \reg153 [15] \reg153 [16] \reg153 [17] \reg153 [18] \reg153 [19] \reg153 [20] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1021$919: { \reg131 [0] \reg131 [1] \reg131 [2] \reg131 [3] \reg131 [4] \reg131 [5] \reg131 [6] \reg131 [7] \reg131 [8] \reg131 [9] \reg131 [10] \reg131 [11] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:994$886: { \reg108 [0] \reg108 [1] \reg108 [2] \reg108 [3] \reg108 [4] \reg108 [5] \reg108 [6] \reg108 [7] \reg108 [8] \reg108 [9] \reg108 [10] \reg108 [11] \reg108 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:987$875: { $shr$rtl.v:987$874_Y [0] $shr$rtl.v:987$874_Y [1] $shr$rtl.v:987$874_Y [2] $shr$rtl.v:987$874_Y [3] $shr$rtl.v:987$874_Y [4] $shr$rtl.v:987$874_Y [5] $shr$rtl.v:987$874_Y [6] $shr$rtl.v:987$874_Y [7] $shr$rtl.v:987$874_Y [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:978$853: { \reg141 [0] \reg141 [1] \reg141 [2] \reg141 [3] \reg141 [4] \reg141 [5] \reg141 [6] \reg141 [7] \reg141 [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:966$849: { \reg128 [1] \reg128 [2] \reg128 [3] \reg128 [4] \reg128 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:961$843: { \reg142 [0] \reg142 [1] \reg142 [2] \reg142 [3] \reg142 [4] \reg142 [5] \reg142 [6] \reg142 [7] \reg142 [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:914$788: { \wire97 [0] \wire97 [1] \wire97 [2] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:822$640: { $ternary$rtl.v:822$639_Y [0] $ternary$rtl.v:822$639_Y [1] $ternary$rtl.v:822$639_Y [2] $ternary$rtl.v:822$639_Y [3] $ternary$rtl.v:822$639_Y [4] $ternary$rtl.v:822$639_Y [5] $ternary$rtl.v:822$639_Y [6] $ternary$rtl.v:822$639_Y [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:783$599: { $ternary$rtl.v:783$598_Y [0] $ternary$rtl.v:783$598_Y [1] $ternary$rtl.v:783$598_Y [2] $ternary$rtl.v:783$598_Y [3] $ternary$rtl.v:783$598_Y [4] $ternary$rtl.v:783$598_Y [5] $ternary$rtl.v:783$598_Y [6] $ternary$rtl.v:783$598_Y [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1036$948: { \reg151 [0] \reg151 [1] \reg151 [2] \reg151 [3] \reg151 [4] \reg151 [5] \reg151 [6] \reg151 [7] \reg151 [8] \reg151 [9] \reg151 [10] \reg151 [11] \reg151 [12] \reg151 [13] \reg151 [14] \reg151 [15] \reg151 [16] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1029$924: { \reg109 [0] \reg109 [1] \reg109 [2] \reg109 [3] \reg109 [4] \reg109 [5] \reg109 [6] \reg109 [7] \reg109 [8] \reg109 [9] \reg109 [10] \reg109 [11] \reg109 [12] \reg109 [13] \reg109 [14] \reg109 [15] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1012$910: { $ternary$rtl.v:1012$909_Y [0] $ternary$rtl.v:1012$909_Y [1] $ternary$rtl.v:1012$909_Y [2] $ternary$rtl.v:1012$909_Y [3] $ternary$rtl.v:1012$909_Y [4] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1012$907: { \wire99 [0] \wire99 [1] \wire99 [2] \wire99 [3] \wire99 [4] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1007$901: { \reg108 [0] \reg108 [1] \reg108 [2] \reg108 [3] \reg108 [4] \reg108 [5] \reg108 [6] \reg108 [7] \reg108 [8] \reg108 [9] \reg108 [10] \reg108 [11] \reg108 [12] }
  Optimizing cells in module \module95.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:233$199: { \reg49 [0] \reg49 [1] \reg49 [2] \reg49 [3] \reg49 [4] \reg49 [5] \reg49 [6] \reg49 [7] \reg49 [8] \reg49 [9] \reg49 [10] \reg49 [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:141$74: { $ternary$rtl.v:141$73_Y [0] $ternary$rtl.v:141$73_Y [1] $ternary$rtl.v:141$73_Y [2] $ternary$rtl.v:141$73_Y [3] $ternary$rtl.v:141$73_Y [4] $ternary$rtl.v:141$73_Y [5] $ternary$rtl.v:141$73_Y [6] $ternary$rtl.v:141$73_Y [7] $ternary$rtl.v:141$73_Y [8] $ternary$rtl.v:141$73_Y [9] $ternary$rtl.v:141$73_Y [10] $ternary$rtl.v:141$73_Y [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:123$29: { \wire1 [0] \wire1 [1] \wire1 [2] \wire1 [3] \wire1 [4] \wire1 [5] \wire1 [6] \wire1 [7] \wire1 [8] \wire1 [9] \wire1 [10] \wire1 [11] \wire1 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:273$250: { $or$rtl.v:273$249_Y [0] $or$rtl.v:273$249_Y [1] $or$rtl.v:273$249_Y [2] $or$rtl.v:273$249_Y [3] $or$rtl.v:273$249_Y [4] $or$rtl.v:273$249_Y [5] $or$rtl.v:273$249_Y [6] $or$rtl.v:273$249_Y [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:268$233: { \reg50 [0] \reg50 [1] \reg50 [2] \reg50 [3] \reg50 [4] \reg50 [5] \reg50 [6] \reg50 [7] \reg50 [8] \reg50 [9] \reg50 [10] \reg50 [11] \reg50 [12] \reg50 [13] \reg50 [14] \reg50 [15] \reg50 [16] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:232$196: { \wire0 [0] \wire0 [1] \wire0 [2] \wire0 [3] \wire0 [4] \wire0 [5] \wire0 [6] \wire0 [7] \wire0 [8] \wire0 [9] \wire0 [10] \wire0 [11] \wire0 [12] \wire0 [13] \wire0 [14] \wire0 [15] \wire0 [16] \wire0 [17] \wire0 [18] \wire0 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:180$94: { \reg64 [0] \reg64 [1] \reg64 [2] \reg64 [3] \reg64 [4] \reg64 [5] \reg64 [6] \reg64 [7] \reg64 [8] \reg64 [9] \reg64 [10] \reg64 [11] \reg64 [12] \reg64 [13] \reg64 [14] \reg64 [15] \reg64 [16] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:139$68: { $or$rtl.v:139$67_Y [0] $or$rtl.v:139$67_Y [1] $or$rtl.v:139$67_Y [2] $or$rtl.v:139$67_Y [3] $or$rtl.v:139$67_Y [4] $or$rtl.v:139$67_Y [5] $or$rtl.v:139$67_Y [6] $or$rtl.v:139$67_Y [7] $or$rtl.v:139$67_Y [8] $or$rtl.v:139$67_Y [9] $or$rtl.v:139$67_Y [10] $or$rtl.v:139$67_Y [11] $or$rtl.v:139$67_Y [12] $or$rtl.v:139$67_Y [13] $or$rtl.v:139$67_Y [14] $or$rtl.v:139$67_Y [15] $or$rtl.v:139$67_Y [16] $or$rtl.v:139$67_Y [17] $or$rtl.v:139$67_Y [18] $or$rtl.v:139$67_Y [19] $or$rtl.v:139$67_Y [20] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:128$39: { \wire2 [0] \wire2 [1] \wire2 [2] \wire2 [3] \wire2 [4] \wire2 [5] \wire2 [6] \wire2 [7] \wire2 [8] \wire2 [9] \wire2 [10] \wire2 [11] \wire2 [12] \wire2 [13] \wire2 [14] \wire2 [15] \wire2 [16] \wire2 [17] \wire2 [18] \wire2 [19] \wire2 [20] }
  Optimizing cells in module \top.
Performed a total of 49 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1642 ($dff) from module module177.
Promoting init spec \reg170 = 19'0000000000000000000 to constant driver in module module95.
Promoting init spec \reg172 = 9'000000000 to constant driver in module module95.
Promoting init spec \reg171 = 14'00000000000000 to constant driver in module module95.
Promoting init spec \reg169 = 14'00000000000000 to constant driver in module module95.
Promoting init spec \reg226 = 11'00000000000 to constant driver in module top.
Promoting init spec \reg225 = 14'00000000000000 to constant driver in module top.
Promoted 6 init specs to constant drivers.
Replaced 1 DFF cells.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 2 unused cells and 35 unused wires.
<suppressed ~7 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
<suppressed ~1 debug messages>
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
Optimizing module top.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module177..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module80..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module95..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~175 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module13.
  Optimizing cells in module \module177.
  Optimizing cells in module \module26.
  Optimizing cells in module \module4.
  Optimizing cells in module \module80.
  Optimizing cells in module \module95.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
Optimizing module top.

2.6.16. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 10 bits (of 20) from port B of cell module13.$le$rtl.v:458$423 ($le).
Removed top 15 bits (of 16) from mux cell module13.$ternary$rtl.v:460$430 ($mux).
Removed top 5 bits (of 21) from port B of cell module13.$mul$rtl.v:461$435 ($mul).
Removed top 20 bits (of 21) from port A of cell module13.$xor$rtl.v:463$440 ($xor).
Removed top 20 bits (of 21) from port B of cell module13.$xor$rtl.v:463$440 ($xor).
Removed top 20 bits (of 21) from port Y of cell module13.$xor$rtl.v:463$440 ($xor).
Removed top 15 bits (of 25) from port Y of cell module13.$neg$rtl.v:464$443 ($neg).
Removed top 15 bits (of 25) from port A of cell module13.$neg$rtl.v:464$443 ($neg).
Removed top 5 bits (of 15) from FF cell module13.$procdff$1649 ($dff).
Removed top 15 bits (of 25) from port Y of cell module13.$mul$rtl.v:464$442 ($mul).
Removed top 20 bits (of 21) from wire module13.$logic_not$rtl.v:462$437_Y.
Removed top 15 bits (of 16) from wire module13.$lt$rtl.v:460$427_Y.
Removed top 20 bits (of 21) from wire module13.$lt$rtl.v:463$438_Y.
Removed top 15 bits (of 25) from wire module13.$mul$rtl.v:464$442_Y.
Removed top 15 bits (of 25) from wire module13.$neg$rtl.v:464$443_Y.
Removed top 15 bits (of 16) from wire module13.$ternary$rtl.v:460$430_Y.
Removed top 10 bits (of 16) from wire module13.$ternary$rtl.v:461$434_Y.
Removed top 20 bits (of 21) from wire module13.wire21.
Removed top 3 bits (of 13) from wire module13.wire22.
Removed top 3 bits (of 6) from port Y of cell module177.$shl$rtl.v:535$446 ($shl).
Removed top 17 bits (of 28) from port B of cell module177.$le$rtl.v:546$460 ($le).
Removed top 7 bits (of 11) from mux cell module177.$ternary$rtl.v:549$468 ($mux).
Removed top 8 bits (of 24) from port Y of cell module177.$or$rtl.v:552$469 ($or).
Removed top 8 bits (of 24) from port B of cell module177.$or$rtl.v:552$469 ($or).
Removed top 3 bits (of 17) from port B of cell module177.$add$rtl.v:554$472 ($add).
Removed top 4 bits (of 20) from mux cell module177.$ternary$rtl.v:560$490 ($mux).
Removed top 4 bits (of 20) from mux cell module177.$ternary$rtl.v:560$492 ($mux).
Removed top 1 bits (of 11) from port A of cell module177.$and$rtl.v:565$498 ($and).
Removed top 7 bits (of 11) from port B of cell module177.$and$rtl.v:565$498 ($and).
Removed top 8 bits (of 11) from port Y of cell module177.$and$rtl.v:565$498 ($and).
Removed top 7 bits (of 10) from port A of cell module177.$and$rtl.v:565$498 ($and).
Removed top 1 bits (of 4) from port B of cell module177.$and$rtl.v:565$498 ($and).
Removed top 5 bits (of 12) from mux cell module177.$ternary$rtl.v:595$533 ($mux).
Removed top 5 bits (of 12) from port B of cell module177.$and$rtl.v:595$534 ($and).
Removed top 5 bits (of 12) from port Y of cell module177.$and$rtl.v:595$534 ($and).
Removed top 5 bits (of 12) from mux cell module177.$ternary$rtl.v:595$536 ($mux).
Removed top 17 bits (of 18) from port A of cell module177.$xnor$rtl.v:595$537 ($xnor).
Removed top 11 bits (of 18) from port B of cell module177.$xnor$rtl.v:595$537 ($xnor).
Removed top 5 bits (of 6) from port B of cell module177.$or$rtl.v:596$539 ($or).
Removed top 1 bits (of 6) from port Y of cell module177.$or$rtl.v:596$539 ($or).
Removed top 1 bits (of 6) from port A of cell module177.$or$rtl.v:596$539 ($or).
Removed top 5 bits (of 12) from mux cell module177.$ternary$rtl.v:599$545 ($mux).
Removed top 4 bits (of 21) from mux cell module177.$ternary$rtl.v:600$549 ($mux).
Removed top 7 bits (of 8) from port A of cell module177.$xnor$rtl.v:600$551 ($xnor).
Removed top 7 bits (of 8) from port B of cell module177.$xnor$rtl.v:600$551 ($xnor).
Removed top 4 bits (of 12) from FF cell module177.$procdff$1645 ($dff).
Removed top 8 bits (of 16) from FF cell module177.$procdff$1646 ($dff).
Removed top 20 bits (of 22) from FF cell module177.$procdff$1647 ($dff).
Removed top 9 bits (of 10) from FF cell module177.$procdff$1648 ($dff).
Removed top 1 bits (of 4) from mux cell module177.$ternary$rtl.v:565$497 ($mux).
Removed top 2 bits (of 3) from port A of cell module177.$and$rtl.v:565$498 ($and).
Removed top 7 bits (of 8) from FF cell module177.$procdff$1646 ($dff).
Removed top 5 bits (of 12) from wire module177.$and$rtl.v:595$534_Y.
Removed top 17 bits (of 18) from wire module177.$logic_and$rtl.v:592$526_Y.
Removed top 19 bits (of 20) from wire module177.$logic_not$rtl.v:560$487_Y.
Removed top 7 bits (of 8) from wire module177.$logic_not$rtl.v:598$541_Y.
Removed top 7 bits (of 8) from wire module177.$ne$rtl.v:600$550_Y.
Removed top 5 bits (of 6) from wire module177.$reduce_xor$rtl.v:596$538_Y.
Removed top 3 bits (of 6) from wire module177.$shl$rtl.v:535$446_Y.
Removed top 4 bits (of 20) from wire module177.$ternary$rtl.v:560$490_Y.
Removed top 1 bits (of 4) from wire module177.$ternary$rtl.v:565$497_Y.
Removed top 5 bits (of 12) from wire module177.$ternary$rtl.v:595$533_Y.
Removed top 5 bits (of 12) from wire module177.$ternary$rtl.v:595$536_Y.
Removed top 5 bits (of 12) from wire module177.$ternary$rtl.v:599$545_Y.
Removed top 5 bits (of 21) from wire module177.$ternary$rtl.v:600$549_Y.
Removed top 13 bits (of 20) from wire module177.wire203.
Removed top 20 bits (of 21) from port B of cell module26.$mul$rtl.v:424$381 ($mul).
Removed top 9 bits (of 30) from port A of cell module26.$le$rtl.v:425$382 ($le).
Removed top 18 bits (of 19) from port B of cell module26.$xor$rtl.v:425$383 ($xor).
Removed top 5 bits (of 21) from mux cell module26.$ternary$rtl.v:430$401 ($mux).
Removed top 7 bits (of 8) from port A of cell module26.$xnor$rtl.v:431$403 ($xnor).
Removed top 7 bits (of 8) from port B of cell module26.$xnor$rtl.v:431$403 ($xnor).
Removed top 2 bits (of 15) from mux cell module26.$ternary$rtl.v:435$417 ($mux).
Removed top 9 bits (of 10) from port A of cell module26.$and$rtl.v:434$411 ($and).
Removed top 2 bits (of 10) from port B of cell module26.$and$rtl.v:434$411 ($and).
Removed top 2 bits (of 10) from port Y of cell module26.$and$rtl.v:434$411 ($and).
Removed top 3 bits (of 4) from port B of cell module26.$xor$rtl.v:434$412 ($xor).
Removed top 2 bits (of 10) from port A of cell module26.$shl$rtl.v:435$419 ($shl).
Removed top 9 bits (of 10) from port A of cell module26.$mul$rtl.v:435$420 ($mul).
Removed top 5 bits (of 21) from mux cell module26.$ternary$rtl.v:430$399 ($mux).
Removed top 5 bits (of 21) from mux cell module26.$ternary$rtl.v:428$391 ($mux).
Removed top 5 bits (of 21) from mux cell module26.$ternary$rtl.v:430$397 ($mux).
Removed top 5 bits (of 21) from port Y of cell module26.$shl$rtl.v:428$387 ($shl).
Removed top 5 bits (of 21) from mux cell module26.$ternary$rtl.v:430$394 ($mux).
Removed top 5 bits (of 21) from port Y of cell module26.$xnor$rtl.v:430$392 ($xnor).
Removed top 2 bits (of 10) from wire module26.$and$rtl.v:434$411_Y.
Removed top 18 bits (of 19) from wire module26.$le$rtl.v:425$382_Y.
Removed top 20 bits (of 21) from wire module26.$logic_and$rtl.v:424$380_Y.
Removed top 9 bits (of 10) from wire module26.$logic_and$rtl.v:434$410_Y.
Removed top 20 bits (of 21) from wire module26.$logic_not$rtl.v:428$390_Y.
Removed top 9 bits (of 10) from wire module26.$logic_not$rtl.v:434$408_Y.
Removed top 5 bits (of 21) from wire module26.$shl$rtl.v:428$387_Y.
Removed top 5 bits (of 21) from wire module26.$ternary$rtl.v:428$391_Y.
Removed top 5 bits (of 21) from wire module26.$ternary$rtl.v:430$394_Y.
Removed top 5 bits (of 21) from wire module26.$ternary$rtl.v:430$397_Y.
Removed top 5 bits (of 21) from wire module26.$ternary$rtl.v:430$399_Y.
Removed top 2 bits (of 15) from wire module26.$ternary$rtl.v:435$417_Y.
Removed top 5 bits (of 21) from wire module26.$xnor$rtl.v:430$392_Y.
Removed top 3 bits (of 4) from wire module26.wire33.
Removed top 2 bits (of 15) from wire module26.wire34.
Removed top 11 bits (of 13) from wire module26.wire37.
Removed top 11 bits (of 19) from mux cell module4.$ternary$rtl.v:393$357 ($mux).
Removed top 20 bits (of 21) from port A of cell module4.$xor$rtl.v:391$350 ($xor).
Removed top 3 bits (of 21) from port B of cell module4.$xor$rtl.v:391$350 ($xor).
Removed top 3 bits (of 21) from port Y of cell module4.$xor$rtl.v:391$350 ($xor).
Removed top 12 bits (of 13) from port B of cell module4.$ne$rtl.v:391$352 ($ne).
Removed top 3 bits (of 42) from port A of cell module4.$or$rtl.v:400$361 ($or).
Removed top 24 bits (of 42) from port B of cell module4.$or$rtl.v:400$361 ($or).
Removed top 3 bits (of 42) from port Y of cell module4.$or$rtl.v:400$361 ($or).
Removed top 3 bits (of 42) from mux cell module4.$ternary$rtl.v:400$364 ($mux).
Removed top 39 bits (of 42) from mux cell module4.$ternary$rtl.v:402$373 ($mux).
Removed top 13 bits (of 21) from mux cell module4.$ternary$rtl.v:401$368 ($mux).
Removed top 3 bits (of 21) from port A of cell module4.$neg$rtl.v:401$370 ($neg).
Removed top 13 bits (of 21) from port A of cell module4.$and$rtl.v:401$371 ($and).
Removed top 30 bits (of 42) from port A of cell module4.$shr$rtl.v:402$372 ($shr).
Removed top 39 bits (of 42) from port Y of cell module4.$shr$rtl.v:402$372 ($shr).
Removed top 36 bits (of 39) from mux cell module4.$ternary$rtl.v:400$364 ($mux).
Removed top 36 bits (of 39) from port Y of cell module4.$or$rtl.v:400$361 ($or).
Removed top 38 bits (of 39) from port A of cell module4.$or$rtl.v:400$361 ($or).
Removed top 15 bits (of 18) from port B of cell module4.$or$rtl.v:400$361 ($or).
Removed top 12 bits (of 13) from wire module4.$logic_not$rtl.v:391$351_Y.
Removed top 39 bits (of 42) from wire module4.$or$rtl.v:400$361_Y.
Removed top 39 bits (of 42) from wire module4.$shr$rtl.v:402$372_Y.
Removed top 3 bits (of 21) from wire module4.$xor$rtl.v:391$350_Y.
Removed top 19 bits (of 20) from wire module4.wire10.
Removed top 20 bits (of 21) from wire module4.wire11.
Removed top 11 bits (of 19) from wire module4.wire12.
Removed top 3 bits (of 21) from wire module4.wire9.
Removed top 6 bits (of 7) from port B of cell module80.$or$rtl.v:336$292 ($or).
Removed top 1 bits (of 13) from mux cell module80.$ternary$rtl.v:343$304 ($mux).
Removed top 9 bits (of 12) from mux cell module80.$ternary$rtl.v:342$299 ($mux).
Removed top 1 bits (of 13) from port A of cell module80.$shl$rtl.v:343$308 ($shl).
Removed top 7 bits (of 8) from port A of cell module80.$lt$rtl.v:345$312 ($lt).
Removed top 4 bits (of 5) from port A of cell module80.$or$rtl.v:350$324 ($or).
Removed top 30 bits (of 31) from port A of cell module80.$lt$rtl.v:350$325 ($lt).
Removed top 20 bits (of 21) from port A of cell module80.$neg$rtl.v:352$328 ($neg).
Removed top 1 bits (of 2) from port B of cell module80.$shl$rtl.v:352$329 ($shl).
Removed top 15 bits (of 16) from port A of cell module80.$neg$rtl.v:354$331 ($neg).
Removed top 17 bits (of 18) from FF cell module80.$procdff$1650 ($dff).
Removed top 16 bits (of 18) from port A of cell module80.$sshr$rtl.v:345$313 ($sshr).
Removed top 17 bits (of 18) from wire module80.$0\reg89[17:0].
Removed top 30 bits (of 31) from wire module80.$logic_and$rtl.v:348$318_Y.
Removed top 6 bits (of 7) from wire module80.$ne$rtl.v:336$291_Y.
Removed top 7 bits (of 8) from wire module80.$reduce_xnor$rtl.v:345$311_Y.
Removed top 15 bits (of 16) from wire module80.$reduce_xnor$rtl.v:354$330_Y.
Removed top 6 bits (of 7) from wire module80.$reduce_xor$rtl.v:336$293_Y.
Removed top 20 bits (of 21) from wire module80.$reduce_xor$rtl.v:352$327_Y.
Removed top 9 bits (of 12) from wire module80.$ternary$rtl.v:342$299_Y.
Removed top 1 bits (of 13) from wire module80.$ternary$rtl.v:343$304_Y.
Removed top 4 bits (of 5) from wire module80.wire86.
Removed top 18 bits (of 19) from wire module80.wire90.
Removed top 9 bits (of 12) from wire module80.wire91.
Removed top 8 bits (of 9) from wire module80.wire92.
Removed top 2 bits (of 11) from mux cell module95.$ternary$rtl.v:783$602 ($mux).
Removed top 7 bits (of 17) from mux cell module95.$ternary$rtl.v:792$613 ($mux).
Removed top 11 bits (of 12) from port B of cell module95.$sub$rtl.v:799$616 ($sub).
Removed top 13 bits (of 16) from port A of cell module95.$not$rtl.v:800$620 ($not).
Removed top 3 bits (of 16) from mux cell module95.$ternary$rtl.v:816$636 ($mux).
Removed top 22 bits (of 23) from port A of cell module95.$and$rtl.v:822$643 ($and).
Removed top 12 bits (of 13) from port B of cell module95.$le$rtl.v:834$652 ($le).
Removed top 2 bits (of 3) from port A of cell module95.$eq$rtl.v:834$653 ($eq).
Removed top 13 bits (of 16) from port A of cell module95.$not$rtl.v:846$669 ($not).
Removed top 13 bits (of 26) from mux cell module95.$ternary$rtl.v:851$687 ($mux).
Removed top 25 bits (of 26) from port A of cell module95.$xnor$rtl.v:851$690 ($xnor).
Removed top 16 bits (of 26) from port Y of cell module95.$xnor$rtl.v:851$690 ($xnor).
Removed top 8 bits (of 16) from port A of cell module95.$xnor$rtl.v:854$693 ($xnor).
Removed top 9 bits (of 10) from port B of cell module95.$ne$rtl.v:855$697 ($ne).
Removed top 6 bits (of 10) from port B of cell module95.$lt$rtl.v:856$699 ($lt).
Removed top 14 bits (of 15) from port B of cell module95.$eq$rtl.v:856$700 ($eq).
Removed top 9 bits (of 10) from port A of cell module95.$add$rtl.v:856$701 ($add).
Removed top 11 bits (of 25) from mux cell module95.$ternary$rtl.v:862$713 ($mux).
Removed top 15 bits (of 16) from port A of cell module95.$xnor$rtl.v:870$722 ($xnor).
Removed top 2 bits (of 3) from port A of cell module95.$ge$rtl.v:866$716 ($ge).
Removed top 30 bits (of 34) from port B of cell module95.$le$rtl.v:869$718 ($le).
Removed top 4 bits (of 16) from port A of cell module95.$shl$rtl.v:873$732 ($shl).
Removed top 2 bits (of 16) from mux cell module95.$ternary$rtl.v:873$737 ($mux).
Removed top 15 bits (of 16) from port B of cell module95.$xor$rtl.v:876$742 ($xor).
Removed top 13 bits (of 16) from port Y of cell module95.$xor$rtl.v:876$742 ($xor).
Removed top 13 bits (of 16) from port A of cell module95.$xnor$rtl.v:876$743 ($xnor).
Removed top 5 bits (of 16) from port B of cell module95.$eq$rtl.v:877$745 ($eq).
Removed top 10 bits (of 11) from port A of cell module95.$or$rtl.v:877$746 ($or).
Removed top 10 bits (of 11) from port Y of cell module95.$or$rtl.v:877$746 ($or).
Removed top 4 bits (of 5) from port A of cell module95.$le$rtl.v:896$764 ($le).
Removed top 2 bits (of 9) from mux cell module95.$ternary$rtl.v:895$755 ($mux).
Removed top 4 bits (of 5) from port B of cell module95.$xnor$rtl.v:896$763 ($xnor).
Removed top 15 bits (of 16) from port B of cell module95.$sub$rtl.v:896$765 ($sub).
Removed top 14 bits (of 15) from mux cell module95.$ternary$rtl.v:900$772 ($mux).
Removed top 6 bits (of 15) from mux cell module95.$ternary$rtl.v:901$778 ($mux).
Removed top 6 bits (of 15) from mux cell module95.$ternary$rtl.v:901$780 ($mux).
Removed top 14 bits (of 15) from port A of cell module95.$ne$rtl.v:901$781 ($ne).
Removed top 6 bits (of 15) from port B of cell module95.$ne$rtl.v:901$781 ($ne).
Removed top 9 bits (of 22) from port A of cell module95.$ge$rtl.v:914$787 ($ge).
Removed top 16 bits (of 17) from port A of cell module95.$not$rtl.v:914$789 ($not).
Removed top 9 bits (of 10) from port A of cell module95.$le$rtl.v:916$796 ($le).
Removed top 14 bits (of 15) from port B of cell module95.$xnor$rtl.v:916$798 ($xnor).
Removed top 2 bits (of 6) from mux cell module95.$ternary$rtl.v:923$801 ($mux).
Removed top 9 bits (of 13) from port Y of cell module95.$not$rtl.v:935$808 ($not).
Removed top 9 bits (of 13) from port A of cell module95.$not$rtl.v:935$808 ($not).
Removed top 9 bits (of 13) from mux cell module95.$ternary$rtl.v:935$807 ($mux).
Removed top 3 bits (of 4) from port B of cell module95.$ge$rtl.v:948$817 ($ge).
Removed top 14 bits (of 15) from port B of cell module95.$sshl$rtl.v:955$826 ($sshl).
Removed top 3 bits (of 4) from port B of cell module95.$lt$rtl.v:957$831 ($lt).
Removed top 11 bits (of 16) from mux cell module95.$ternary$rtl.v:959$835 ($mux).
Removed top 11 bits (of 16) from port A of cell module95.$add$rtl.v:961$842 ($add).
Removed top 6 bits (of 16) from port B of cell module95.$add$rtl.v:961$842 ($add).
Removed top 5 bits (of 16) from port Y of cell module95.$add$rtl.v:961$842 ($add).
Removed top 15 bits (of 16) from port A of cell module95.$shl$rtl.v:961$845 ($shl).
Removed top 5 bits (of 24) from mux cell module95.$ternary$rtl.v:981$866 ($mux).
Removed top 2 bits (of 24) from mux cell module95.$ternary$rtl.v:980$861 ($mux).
Removed top 5 bits (of 24) from mux cell module95.$ternary$rtl.v:981$863 ($mux).
Removed top 9 bits (of 10) from port A of cell module95.$shr$rtl.v:984$870 ($shr).
Removed top 4 bits (of 17) from mux cell module95.$ternary$rtl.v:992$885 ($mux).
Removed top 1 bits (of 2) from port B of cell module95.$ne$rtl.v:1007$903 ($ne).
Removed top 17 bits (of 21) from port A of cell module95.$and$rtl.v:996$891 ($and).
Removed top 2 bits (of 3) from port A of cell module95.$ne$rtl.v:1020$918 ($ne).
Removed top 6 bits (of 16) from mux cell module95.$ternary$rtl.v:1023$923 ($mux).
Removed top 15 bits (of 16) from port A of cell module95.$xor$rtl.v:1030$930 ($xor).
Removed top 15 bits (of 16) from port B of cell module95.$le$rtl.v:1030$935 ($le).
Removed top 9 bits (of 10) from port A of cell module95.$eq$rtl.v:1030$932 ($eq).
Removed top 9 bits (of 10) from port A of cell module95.$or$rtl.v:1032$936 ($or).
Removed top 9 bits (of 10) from port B of cell module95.$or$rtl.v:1032$936 ($or).
Removed top 9 bits (of 10) from port Y of cell module95.$or$rtl.v:1032$936 ($or).
Removed top 5 bits (of 22) from mux cell module95.$ternary$rtl.v:1034$945 ($mux).
Removed top 4 bits (of 7) from port A of cell module95.$not$rtl.v:1044$963 ($not).
Removed top 1 bits (of 10) from port A of cell module95.$not$rtl.v:1039$955 ($not).
Removed top 1 bits (of 21) from port A of cell module95.$sshr$rtl.v:1040$958 ($sshr).
Removed top 3 bits (of 7) from port A of cell module95.$xnor$rtl.v:1043$959 ($xnor).
Removed top 2 bits (of 7) from port Y of cell module95.$sub$rtl.v:1044$964 ($sub).
Removed top 2 bits (of 7) from port A of cell module95.$sub$rtl.v:1044$964 ($sub).
Removed top 2 bits (of 7) from port B of cell module95.$sub$rtl.v:1044$964 ($sub).
Removed top 20 bits (of 21) from port A of cell module95.$neg$rtl.v:1049$965 ($neg).
Removed top 8 bits (of 22) from mux cell module95.$ternary$rtl.v:1054$970 ($mux).
Removed top 18 bits (of 19) from mux cell module95.$ternary$rtl.v:1059$991 ($mux).
Removed top 12 bits (of 18) from port A of cell module95.$neg$rtl.v:1056$980 ($neg).
Removed top 3 bits (of 16) from port A of cell module95.$xnor$rtl.v:1057$983 ($xnor).
Removed top 20 bits (of 21) from mux cell module95.$ternary$rtl.v:1057$986 ($mux).
Removed top 33 bits (of 41) from port A of cell module95.$xnor$rtl.v:1066$996 ($xnor).
Removed top 32 bits (of 41) from port B of cell module95.$xnor$rtl.v:1066$996 ($xnor).
Removed top 15 bits (of 28) from mux cell module95.$ternary$rtl.v:1081$1016 ($mux).
Removed top 3 bits (of 20) from port Y of cell module95.$and$rtl.v:1086$1017 ($and).
Removed top 3 bits (of 20) from port B of cell module95.$and$rtl.v:1086$1017 ($and).
Removed top 16 bits (of 23) from port A of cell module95.$le$rtl.v:1089$1027 ($le).
Removed top 3 bits (of 15) from port A of cell module95.$or$rtl.v:1089$1028 ($or).
Removed top 14 bits (of 15) from port B of cell module95.$or$rtl.v:1089$1028 ($or).
Removed top 3 bits (of 15) from port Y of cell module95.$or$rtl.v:1089$1028 ($or).
Removed top 2 bits (of 10) from port Y of cell module95.$neg$rtl.v:1092$1030 ($neg).
Removed top 2 bits (of 10) from port A of cell module95.$neg$rtl.v:1092$1030 ($neg).
Removed top 3 bits (of 8) from port A of cell module95.$ge$rtl.v:1098$1035 ($ge).
Removed top 2 bits (of 13) from port A of cell module95.$le$rtl.v:1108$1045 ($le).
Removed top 10 bits (of 11) from port B of cell module95.$lt$rtl.v:1108$1046 ($lt).
Removed top 1 bits (of 17) from mux cell module95.$procmux$1129 ($mux).
Removed top 7 bits (of 21) from mux cell module95.$procmux$1183 ($mux).
Removed top 15 bits (of 16) from mux cell module95.$procmux$1192 ($mux).
Removed top 3 bits (of 15) from mux cell module95.$procmux$1234 ($mux).
Removed top 3 bits (of 15) from mux cell module95.$procmux$1237 ($mux).
Removed top 1 bits (of 7) from mux cell module95.$procmux$1268 ($mux).
Removed top 7 bits (of 18) from mux cell module95.$procmux$1274 ($mux).
Removed top 15 bits (of 17) from FF cell module95.$procdff$1578 ($dff).
Removed top 21 bits (of 22) from FF cell module95.$procdff$1579 ($dff).
Removed top 3 bits (of 15) from FF cell module95.$procdff$1587 ($dff).
Removed top 10 bits (of 11) from FF cell module95.$procdff$1599 ($dff).
Removed top 7 bits (of 9) from FF cell module95.$procdff$1604 ($dff).
Removed top 7 bits (of 9) from FF cell module95.$procdff$1605 ($dff).
Removed top 21 bits (of 22) from FF cell module95.$procdff$1606 ($dff).
Removed top 6 bits (of 13) from FF cell module95.$procdff$1607 ($dff).
Removed top 7 bits (of 22) from FF cell module95.$procdff$1608 ($dff).
Removed top 4 bits (of 7) from FF cell module95.$procdff$1617 ($dff).
Removed top 14 bits (of 22) from FF cell module95.$procdff$1635 ($dff).
Removed top 2 bits (of 11) from mux cell module95.$ternary$rtl.v:782$595 ($mux).
Removed top 7 bits (of 17) from mux cell module95.$ternary$rtl.v:792$611 ($mux).
Removed top 14 bits (of 22) from port A of cell module95.$xnor$rtl.v:801$621 ($xnor).
Removed top 3 bits (of 16) from port Y of cell module95.$not$rtl.v:816$633 ($not).
Removed top 3 bits (of 16) from port A of cell module95.$not$rtl.v:816$633 ($not).
Removed top 11 bits (of 22) from port Y of cell module95.$mul$rtl.v:861$710 ($mul).
Removed top 11 bits (of 22) from mux cell module95.$ternary$rtl.v:861$708 ($mux).
Removed top 2 bits (of 16) from port Y of cell module95.$xnor$rtl.v:870$722 ($xnor).
Removed top 2 bits (of 16) from mux cell module95.$ternary$rtl.v:873$735 ($mux).
Removed top 14 bits (of 22) from port A of cell module95.$le$rtl.v:896$762 ($le).
Removed top 14 bits (of 22) from mux cell module95.$ternary$rtl.v:914$786 ($mux).
Removed top 3 bits (of 22) from mux cell module95.$ternary$rtl.v:980$861 ($mux).
Removed top 7 bits (of 9) from port B of cell module95.$shr$rtl.v:987$874 ($shr).
Removed top 7 bits (of 22) from mux cell module95.$ternary$rtl.v:1034$942 ($mux).
Removed top 2 bits (of 7) from port Y of cell module95.$not$rtl.v:1044$963 ($not).
Removed top 7 bits (of 9) from port A of cell module95.$not$rtl.v:1039$955 ($not).
Removed top 2 bits (of 7) from port Y of cell module95.$xnor$rtl.v:1043$959 ($xnor).
Removed top 7 bits (of 22) from mux cell module95.$ternary$rtl.v:1056$976 ($mux).
Removed top 14 bits (of 41) from port B of cell module95.$lt$rtl.v:1067$999 ($lt).
Removed top 4 bits (of 7) from port B of cell module95.$shl$rtl.v:1078$1006 ($shl).
Removed top 11 bits (of 22) from mux cell module95.$ternary$rtl.v:1089$1023 ($mux).
Removed top 7 bits (of 22) from port B of cell module95.$shr$rtl.v:1092$1029 ($shr).
Removed top 2 bits (of 10) from port Y of cell module95.$shr$rtl.v:1092$1029 ($shr).
Removed top 10 bits (of 11) from port A of cell module95.$le$rtl.v:1108$1045 ($le).
Removed top 14 bits (of 16) from mux cell module95.$procmux$1129 ($mux).
Removed top 2 bits (of 11) from mux cell module95.$ternary$rtl.v:782$594 ($mux).
Removed top 7 bits (of 17) from mux cell module95.$ternary$rtl.v:791$607 ($mux).
Removed top 1 bits (of 11) from mux cell module95.$ternary$rtl.v:792$610 ($mux).
Removed top 3 bits (of 16) from mux cell module95.$ternary$rtl.v:816$632 ($mux).
Removed top 2 bits (of 16) from port Y of cell module95.$shl$rtl.v:873$732 ($shl).
Removed top 14 bits (of 16) from port Y of cell module95.$sshl$rtl.v:1103$1042 ($sshl).
Removed top 3 bits (of 16) from mux cell module95.$ternary$rtl.v:816$630 ($mux).
Removed top 10 bits (of 11) from wire module95.$0\reg148[10:0].
Removed top 1 bits (of 10) from wire module95.$0\reg149[9:0].
Removed top 1 bits (of 9) from wire module95.$0\reg150[8:0].
Removed top 3 bits (of 15) from wire module95.$0\reg160[14:0].
Removed top 21 bits (of 22) from wire module95.$0\reg166[21:0].
Removed top 1 bits (of 4) from wire module95.$0\reg167[3:0].
Removed top 15 bits (of 17) from wire module95.$0\reg168[16:0].
Removed top 5 bits (of 16) from wire module95.$add$rtl.v:961$842_Y.
Removed top 3 bits (of 20) from wire module95.$and$rtl.v:1086$1017_Y.
Removed top 15 bits (of 16) from wire module95.$eq$rtl.v:1030$932_Y.
Removed top 9 bits (of 10) from wire module95.$eq$rtl.v:856$700_Y.
Removed top 10 bits (of 11) from wire module95.$eq$rtl.v:877$745_Y.
Removed top 16 bits (of 17) from wire module95.$ge$rtl.v:914$787_Y.
Removed top 8 bits (of 9) from wire module95.$ge$rtl.v:948$817_Y.
Removed top 14 bits (of 15) from wire module95.$gt$rtl.v:900$769_Y.
Removed top 9 bits (of 10) from wire module95.$gt$rtl.v:984$867_Y.
Removed top 2 bits (of 3) from wire module95.$le$rtl.v:1020$916_Y.
Removed top 8 bits (of 9) from wire module95.$le$rtl.v:1030$935_Y.
Removed top 14 bits (of 15) from wire module95.$le$rtl.v:1089$1027_Y.
Removed top 2 bits (of 3) from wire module95.$le$rtl.v:834$652_Y.
Removed top 15 bits (of 16) from wire module95.$le$rtl.v:869$718_Y.
Removed top 4 bits (of 5) from wire module95.$le$rtl.v:896$762_Y.
Removed top 9 bits (of 10) from wire module95.$le$rtl.v:916$795_Y.
Removed top 15 bits (of 16) from wire module95.$logic_and$rtl.v:1023$922_Y.
Removed top 12 bits (of 13) from wire module95.$logic_and$rtl.v:799$618_Y.
Removed top 1 bits (of 2) from wire module95.$logic_not$rtl.v:1007$898_Y.
Removed top 6 bits (of 7) from wire module95.$logic_not$rtl.v:1021$920_Y.
Removed top 20 bits (of 21) from wire module95.$logic_not$rtl.v:1036$949_Y.
Removed top 20 bits (of 21) from wire module95.$logic_not$rtl.v:1057$984_Y.
Removed top 12 bits (of 13) from wire module95.$logic_not$rtl.v:834$651_Y.
Removed top 25 bits (of 26) from wire module95.$logic_not$rtl.v:851$685_Y.
Removed top 4 bits (of 5) from wire module95.$logic_not$rtl.v:896$761_Y.
Removed top 14 bits (of 15) from wire module95.$logic_not$rtl.v:898$768_Y.
Removed top 11 bits (of 12) from wire module95.$logic_not$rtl.v:903$782_Y.
Removed top 3 bits (of 4) from wire module95.$logic_not$rtl.v:948$816_Y.
Removed top 15 bits (of 16) from wire module95.$logic_not$rtl.v:961$844_Y.
Removed top 20 bits (of 21) from wire module95.$logic_or$rtl.v:1056$982_Y.
Removed top 18 bits (of 19) from wire module95.$logic_or$rtl.v:1059$989_Y.
Removed top 22 bits (of 23) from wire module95.$logic_or$rtl.v:822$642_Y.
Removed top 14 bits (of 15) from wire module95.$lt$rtl.v:856$699_Y.
Removed top 12 bits (of 13) from wire module95.$lt$rtl.v:957$831_Y.
Removed top 11 bits (of 22) from wire module95.$mul$rtl.v:861$710_Y.
Removed top 3 bits (of 4) from wire module95.$ne$rtl.v:855$697_Y.
Removed top 6 bits (of 7) from wire module95.$ne$rtl.v:901$781_Y.
Removed top 28 bits (of 41) from wire module95.$neg$rtl.v:1066$998_Y.
Removed top 2 bits (of 10) from wire module95.$neg$rtl.v:1092$1030_Y.
Removed top 2 bits (of 7) from wire module95.$not$rtl.v:1044$963_Y.
Removed top 3 bits (of 16) from wire module95.$not$rtl.v:816$633_Y.
Removed top 9 bits (of 13) from wire module95.$not$rtl.v:935$808_Y.
Removed top 4 bits (of 15) from wire module95.$or$rtl.v:1089$1028_Y.
Removed top 10 bits (of 11) from wire module95.$or$rtl.v:877$746_Y.
Removed top 7 bits (of 21) from wire module95.$procmux$1183_Y.
Removed top 15 bits (of 16) from wire module95.$procmux$1192_Y.
Removed top 3 bits (of 15) from wire module95.$procmux$1234_Y.
Removed top 1 bits (of 7) from wire module95.$procmux$1268_Y.
Removed top 7 bits (of 18) from wire module95.$procmux$1274_Y.
Removed top 4 bits (of 5) from wire module95.$reduce_and$rtl.v:1012$910_Y.
Removed top 10 bits (of 11) from wire module95.$reduce_and$rtl.v:783$601_Y.
Removed top 16 bits (of 17) from wire module95.$reduce_and$rtl.v:914$788_Y.
Removed top 8 bits (of 9) from wire module95.$reduce_and$rtl.v:994$886_Y.
Removed top 2 bits (of 3) from wire module95.$reduce_or$rtl.v:1044$960_Y.
Removed top 10 bits (of 11) from wire module95.$reduce_or$rtl.v:782$593_Y.
Removed top 15 bits (of 16) from wire module95.$reduce_xnor$rtl.v:1059$992_Y.
Removed top 14 bits (of 15) from wire module95.$reduce_xnor$rtl.v:801$623_Y.
Removed top 25 bits (of 26) from wire module95.$reduce_xnor$rtl.v:845$667_Y.
Removed top 9 bits (of 10) from wire module95.$reduce_xor$rtl.v:1030$931_Y.
Removed top 9 bits (of 10) from wire module95.$reduce_xor$rtl.v:987$876_Y.
Removed top 2 bits (of 10) from wire module95.$shr$rtl.v:1092$1029_Y.
Removed top 14 bits (of 16) from wire module95.$sshl$rtl.v:1103$1042_Y.
Removed top 6 bits (of 16) from wire module95.$ternary$rtl.v:1023$923_Y.
Removed top 7 bits (of 22) from wire module95.$ternary$rtl.v:1034$942_Y.
Removed top 5 bits (of 22) from wire module95.$ternary$rtl.v:1034$945_Y.
Removed top 8 bits (of 22) from wire module95.$ternary$rtl.v:1054$970_Y.
Removed top 7 bits (of 22) from wire module95.$ternary$rtl.v:1056$976_Y.
Removed top 20 bits (of 21) from wire module95.$ternary$rtl.v:1057$986_Y.
Removed top 18 bits (of 19) from wire module95.$ternary$rtl.v:1059$991_Y.
Removed top 11 bits (of 22) from wire module95.$ternary$rtl.v:1089$1023_Y.
Removed top 2 bits (of 11) from wire module95.$ternary$rtl.v:782$594_Y.
Removed top 2 bits (of 11) from wire module95.$ternary$rtl.v:782$595_Y.
Removed top 2 bits (of 11) from wire module95.$ternary$rtl.v:783$602_Y.
Removed top 7 bits (of 17) from wire module95.$ternary$rtl.v:791$607_Y.
Removed top 3 bits (of 16) from wire module95.$ternary$rtl.v:816$630_Y.
Removed top 3 bits (of 16) from wire module95.$ternary$rtl.v:816$632_Y.
Removed top 3 bits (of 16) from wire module95.$ternary$rtl.v:816$636_Y.
Removed top 13 bits (of 26) from wire module95.$ternary$rtl.v:851$687_Y.
Removed top 11 bits (of 22) from wire module95.$ternary$rtl.v:861$708_Y.
Removed top 2 bits (of 9) from wire module95.$ternary$rtl.v:895$755_Y.
Removed top 6 bits (of 15) from wire module95.$ternary$rtl.v:901$778_Y.
Removed top 6 bits (of 15) from wire module95.$ternary$rtl.v:901$780_Y.
Removed top 14 bits (of 22) from wire module95.$ternary$rtl.v:914$786_Y.
Removed top 2 bits (of 6) from wire module95.$ternary$rtl.v:923$801_Y.
Removed top 9 bits (of 13) from wire module95.$ternary$rtl.v:935$807_Y.
Removed top 11 bits (of 16) from wire module95.$ternary$rtl.v:959$835_Y.
Removed top 1 bits (of 10) from wire module95.$ternary$rtl.v:961$841_Y.
Removed top 5 bits (of 24) from wire module95.$ternary$rtl.v:980$861_Y.
Removed top 5 bits (of 24) from wire module95.$ternary$rtl.v:981$863_Y.
Removed top 5 bits (of 24) from wire module95.$ternary$rtl.v:981$866_Y.
Removed top 4 bits (of 17) from wire module95.$ternary$rtl.v:992$885_Y.
Removed top 2 bits (of 7) from wire module95.$xnor$rtl.v:1043$959_Y.
Removed top 16 bits (of 26) from wire module95.$xnor$rtl.v:851$690_Y.
Removed top 14 bits (of 15) from wire module95.wire125.
Removed top 9 bits (of 10) from wire module95.wire126.
Removed top 3 bits (of 4) from wire module95.wire143.
Removed top 13 bits (of 21) from port B of cell top.$lt$rtl.v:105$3 ($lt).
Removed top 11 bits (of 28) from port Y of cell top.$add$rtl.v:116$15 ($add).
Removed top 11 bits (of 28) from port A of cell top.$add$rtl.v:116$15 ($add).
Removed top 11 bits (of 21) from port Y of cell top.$shr$rtl.v:123$32 ($shr).
Removed top 3 bits (of 12) from port A of cell top.$xor$rtl.v:127$38 ($xor).
Removed top 11 bits (of 12) from port B of cell top.$xor$rtl.v:127$38 ($xor).
Removed top 3 bits (of 12) from port Y of cell top.$xor$rtl.v:127$38 ($xor).
Removed top 9 bits (of 21) from port B of cell top.$eq$rtl.v:132$54 ($eq).
Removed top 12 bits (of 18) from port Y of cell top.$sshr$rtl.v:139$70 ($sshr).
Removed top 8 bits (of 21) from port Y of cell top.$xor$rtl.v:139$66 ($xor).
Removed top 8 bits (of 21) from port B of cell top.$or$rtl.v:139$67 ($or).
Removed top 2 bits (of 3) from port A of cell top.$and$rtl.v:139$69 ($and).
Removed top 2 bits (of 12) from mux cell top.$ternary$rtl.v:141$73 ($mux).
Removed top 7 bits (of 8) from port A of cell top.$ge$rtl.v:141$76 ($ge).
Removed top 10 bits (of 20) from port Y of cell top.$xnor$rtl.v:146$82 ($xnor).
Removed top 20 bits (of 21) from port A of cell top.$le$rtl.v:149$84 ($le).
Removed top 3 bits (of 12) from port B of cell top.$shr$rtl.v:162$88 ($shr).
Removed top 19 bits (of 39) from port A of cell top.$xor$rtl.v:181$99 ($xor).
Removed top 23 bits (of 39) from mux cell top.$ternary$rtl.v:182$104 ($mux).
Removed top 3 bits (of 12) from port A of cell top.$sub$rtl.v:182$101 ($sub).
Removed top 15 bits (of 16) from port A of cell top.$xor$rtl.v:182$102 ($xor).
Removed top 32 bits (of 39) from mux cell top.$ternary$rtl.v:182$106 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$gt$rtl.v:191$115 ($gt).
Removed top 20 bits (of 21) from port B of cell top.$and$rtl.v:191$112 ($and).
Removed top 1 bits (of 2) from port A of cell top.$shl$rtl.v:191$113 ($shl).
Removed top 4 bits (of 21) from mux cell top.$ternary$rtl.v:197$129 ($mux).
Removed top 10 bits (of 28) from mux cell top.$ternary$rtl.v:200$132 ($mux).
Removed top 10 bits (of 28) from port A of cell top.$neg$rtl.v:200$133 ($neg).
Removed top 10 bits (of 21) from mux cell top.$ternary$rtl.v:201$137 ($mux).
Removed top 3 bits (of 12) from port A of cell top.$not$rtl.v:201$138 ($not).
Removed top 10 bits (of 21) from port A of cell top.$mul$rtl.v:202$145 ($mul).
Removed top 20 bits (of 28) from mux cell top.$ternary$rtl.v:203$147 ($mux).
Removed top 1 bits (of 7) from mux cell top.$ternary$rtl.v:207$154 ($mux).
Removed top 1 bits (of 8) from port A of cell top.$le$rtl.v:208$155 ($le).
Removed top 20 bits (of 21) from port A of cell top.$shr$rtl.v:208$156 ($shr).
Removed top 9 bits (of 18) from port A of cell top.$lt$rtl.v:211$167 ($lt).
Removed top 12 bits (of 20) from mux cell top.$ternary$rtl.v:212$172 ($mux).
Removed top 12 bits (of 20) from mux cell top.$ternary$rtl.v:212$175 ($mux).
Removed top 17 bits (of 18) from port A of cell top.$le$rtl.v:215$178 ($le).
Removed top 4 bits (of 12) from mux cell top.$ternary$rtl.v:216$182 ($mux).
Removed cell top.$ternary$rtl.v:224$189 ($mux).
Removed top 3 bits (of 12) from mux cell top.$ternary$rtl.v:231$195 ($mux).
Removed top 18 bits (of 19) from port B of cell top.$xnor$rtl.v:235$205 ($xnor).
Removed top 17 bits (of 18) from port A of cell top.$shr$rtl.v:235$206 ($shr).
Removed top 6 bits (of 7) from port A of cell top.$lt$rtl.v:236$211 ($lt).
Removed top 3 bits (of 12) from mux cell top.$ternary$rtl.v:253$215 ($mux).
Removed top 6 bits (of 17) from port A of cell top.$add$rtl.v:266$229 ($add).
Removed top 10 bits (of 17) from mux cell top.$ternary$rtl.v:268$236 ($mux).
Removed top 14 bits (of 17) from mux cell top.$ternary$rtl.v:268$238 ($mux).
Removed top 10 bits (of 13) from port A of cell top.$neg$rtl.v:271$243 ($neg).
Removed top 1 bits (of 8) from port A of cell top.$sub$rtl.v:269$240 ($sub).
Removed top 1 bits (of 8) from port B of cell top.$sub$rtl.v:269$240 ($sub).
Removed top 2 bits (of 4) from mux cell top.$ternary$rtl.v:291$258 ($mux).
Removed top 3 bits (of 12) from mux cell top.$procmux$1537 ($mux).
Removed top 1 bits (of 8) from FF cell top.$procdff$1657 ($dff).
Removed top 7 bits (of 11) from FF cell top.$procdff$1673 ($dff).
Removed top 3 bits (of 12) from FF cell top.$procdff$1681 ($dff).
Removed top 12 bits (of 15) from FF cell top.$procdff$1682 ($dff).
Removed top 11 bits (of 20) from port Y of cell top.$neg$rtl.v:115$14 ($neg).
Removed top 11 bits (of 20) from port A of cell top.$neg$rtl.v:115$14 ($neg).
Removed top 8 bits (of 11) from port B of cell top.$add$rtl.v:116$15 ($add).
Removed top 12 bits (of 15) from port A of cell top.$sub$rtl.v:121$26 ($sub).
Removed top 7 bits (of 15) from mux cell top.$ternary$rtl.v:132$53 ($mux).
Removed top 3 bits (of 12) from port B of cell top.$eq$rtl.v:132$54 ($eq).
Removed top 3 bits (of 4) from port A of cell top.$shr$rtl.v:136$61 ($shr).
Removed top 32 bits (of 39) from port Y of cell top.$xor$rtl.v:181$99 ($xor).
Removed top 13 bits (of 20) from port A of cell top.$xor$rtl.v:181$99 ($xor).
Removed top 32 bits (of 39) from port B of cell top.$xor$rtl.v:181$99 ($xor).
Removed top 9 bits (of 16) from mux cell top.$ternary$rtl.v:182$104 ($mux).
Removed top 12 bits (of 15) from port B of cell top.$ge$rtl.v:182$100 ($ge).
Removed top 3 bits (of 12) from port B of cell top.$sshr$rtl.v:192$116 ($sshr).
Removed top 9 bits (of 15) from mux cell top.$ternary$rtl.v:194$122 ($mux).
Removed top 20 bits (of 28) from port Y of cell top.$neg$rtl.v:200$133 ($neg).
Removed top 10 bits (of 18) from port A of cell top.$neg$rtl.v:200$133 ($neg).
Removed top 3 bits (of 11) from mux cell top.$ternary$rtl.v:201$137 ($mux).
Removed top 3 bits (of 11) from port A of cell top.$mul$rtl.v:202$145 ($mul).
Removed top 20 bits (of 21) from port Y of cell top.$mul$rtl.v:202$145 ($mul).
Removed top 5 bits (of 14) from mux cell top.$ternary$rtl.v:209$162 ($mux).
Removed top 11 bits (of 14) from port A of cell top.$ne$rtl.v:216$180 ($ne).
Removed top 12 bits (of 15) from port A of cell top.$gt$rtl.v:219$183 ($gt).
Removed top 3 bits (of 12) from mux cell top.$ternary$rtl.v:264$223 ($mux).
Removed top 14 bits (of 17) from port Y of cell top.$add$rtl.v:266$229 ($add).
Removed top 8 bits (of 11) from port A of cell top.$add$rtl.v:266$229 ($add).
Removed top 14 bits (of 17) from port B of cell top.$add$rtl.v:266$229 ($add).
Removed top 4 bits (of 7) from mux cell top.$ternary$rtl.v:268$236 ($mux).
Removed top 12 bits (of 15) from port B of cell top.$sshl$rtl.v:269$239 ($sshl).
Removed top 7 bits (of 16) from mux cell top.$procmux$1472 ($mux).
Removed top 32 bits (of 39) from port Y of cell top.$neg$rtl.v:181$98 ($neg).
Removed top 32 bits (of 39) from port A of cell top.$neg$rtl.v:181$98 ($neg).
Removed top 13 bits (of 20) from port Y of cell top.$xnor$rtl.v:180$93 ($xnor).
Removed top 32 bits (of 39) from mux cell top.$ternary$rtl.v:181$97 ($mux).
Removed top 9 bits (of 16) from port Y of cell top.$xor$rtl.v:182$102 ($xor).
Removed top 9 bits (of 16) from port B of cell top.$xor$rtl.v:182$102 ($xor).
Removed top 10 bits (of 18) from mux cell top.$ternary$rtl.v:200$132 ($mux).
Removed top 14 bits (of 17) from mux cell top.$ternary$rtl.v:266$228 ($mux).
Removed top 9 bits (of 16) from port Y of cell top.$sub$rtl.v:182$101 ($sub).
Removed top 2 bits (of 9) from port A of cell top.$sub$rtl.v:182$101 ($sub).
Removed top 9 bits (of 16) from port B of cell top.$sub$rtl.v:182$101 ($sub).
Removed top 3 bits (of 12) from mux cell top.$ternary$rtl.v:232$198 ($mux).
Removed top 14 bits (of 17) from mux cell top.$ternary$rtl.v:266$226 ($mux).
Removed top 3 bits (of 12) from wire top.$0\reg49[11:0].
Removed top 11 bits (of 28) from wire top.$add$rtl.v:116$15_Y.
Removed top 14 bits (of 17) from wire top.$add$rtl.v:266$229_Y.
Removed top 20 bits (of 21) from wire top.$eq$rtl.v:191$111_Y.
Removed top 6 bits (of 7) from wire top.$eq$rtl.v:236$210_Y.
Removed top 11 bits (of 12) from wire top.$ge$rtl.v:112$13_Y.
Removed top 6 bits (of 7) from wire top.$ge$rtl.v:141$76_Y.
Removed top 15 bits (of 16) from wire top.$ge$rtl.v:182$100_Y.
Removed top 21 bits (of 22) from wire top.$gt$rtl.v:191$115_Y.
Removed top 19 bits (of 20) from wire top.$gt$rtl.v:219$183_Y.
Removed top 20 bits (of 21) from wire top.$le$rtl.v:208$155_Y.
Removed top 7 bits (of 8) from wire top.$le$rtl.v:215$178_Y.
Removed top 7 bits (of 8) from wire top.$logic_not$rtl.v:141$75_Y.
Removed top 3 bits (of 4) from wire top.$logic_not$rtl.v:191$114_Y.
Removed top 20 bits (of 21) from wire top.$mul$rtl.v:202$145_Y.
Removed top 38 bits (of 39) from wire top.$ne$rtl.v:181$96_Y.
Removed top 11 bits (of 12) from wire top.$ne$rtl.v:216$180_Y.
Removed top 11 bits (of 20) from wire top.$neg$rtl.v:115$14_Y.
Removed top 32 bits (of 39) from wire top.$neg$rtl.v:181$98_Y.
Removed top 20 bits (of 28) from wire top.$neg$rtl.v:200$133_Y.
Removed top 7 bits (of 16) from wire top.$procmux$1472_Y.
Removed top 17 bits (of 18) from wire top.$reduce_xnor$rtl.v:233$201_Y.
Removed top 6 bits (of 7) from wire top.$reduce_xor$rtl.v:207$152_Y.
Removed top 2 bits (of 12) from wire top.$ternary$rtl.v:141$73_Y.
Removed top 32 bits (of 39) from wire top.$ternary$rtl.v:181$97_Y.
Removed top 9 bits (of 15) from wire top.$ternary$rtl.v:194$122_Y.
Removed top 4 bits (of 21) from wire top.$ternary$rtl.v:197$129_Y.
Removed top 20 bits (of 28) from wire top.$ternary$rtl.v:200$132_Y.
Removed top 1 bits (of 7) from wire top.$ternary$rtl.v:207$154_Y.
Removed top 5 bits (of 14) from wire top.$ternary$rtl.v:209$162_Y.
Removed top 12 bits (of 20) from wire top.$ternary$rtl.v:212$172_Y.
Removed top 12 bits (of 20) from wire top.$ternary$rtl.v:212$175_Y.
Removed top 4 bits (of 12) from wire top.$ternary$rtl.v:216$182_Y.
Removed top 3 bits (of 12) from wire top.$ternary$rtl.v:231$195_Y.
Removed top 3 bits (of 12) from wire top.$ternary$rtl.v:232$198_Y.
Removed top 3 bits (of 12) from wire top.$ternary$rtl.v:253$215_Y.
Removed top 3 bits (of 12) from wire top.$ternary$rtl.v:264$223_Y.
Removed top 14 bits (of 17) from wire top.$ternary$rtl.v:266$226_Y.
Removed top 14 bits (of 17) from wire top.$ternary$rtl.v:266$228_Y.
Removed top 15 bits (of 17) from wire top.$ternary$rtl.v:268$238_Y.
Removed top 10 bits (of 20) from wire top.$xnor$rtl.v:146$82_Y.
Removed top 13 bits (of 20) from wire top.$xnor$rtl.v:180$93_Y.
Removed top 11 bits (of 12) from wire top.wire48.
Removed top 14 bits (of 15) from wire top.wire58.
Removed top 11 bits (of 14) from wire top.wire59.
Removed top 4 bits (of 5) from wire top.wire76.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 218 unused wires.
<suppressed ~8 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~1132 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module module13:
  creating $macc model for $mul$rtl.v:461$435 ($mul).
  creating $macc model for $mul$rtl.v:464$442 ($mul).
  creating $macc model for $neg$rtl.v:464$443 ($neg).
  merging $macc model for $mul$rtl.v:464$442 into $neg$rtl.v:464$443.
  creating $macc cell for $neg$rtl.v:464$443: $auto$alumacc.cc:354:replace_macc$1892
  creating $macc cell for $mul$rtl.v:461$435: $auto$alumacc.cc:354:replace_macc$1893
  creating $alu model for $le$rtl.v:458$423 ($le): new $alu
  creating $alu model for $lt$rtl.v:460$427 ($lt): new $alu
  creating $alu model for $lt$rtl.v:463$438 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:463$438: $auto$alumacc.cc:474:replace_alu$1897
  creating $alu cell for $lt$rtl.v:460$427: $auto$alumacc.cc:474:replace_alu$1908
  creating $alu cell for $le$rtl.v:458$423: $auto$alumacc.cc:474:replace_alu$1913
  created 3 $alu and 2 $macc cells.
Extracting $alu and $macc cells in module module177:
  creating $macc model for $add$rtl.v:554$472 ($add).
  creating $alu model for $macc $add$rtl.v:554$472.
  creating $alu model for $le$rtl.v:546$460 ($le): new $alu
  creating $alu cell for $le$rtl.v:546$460: $auto$alumacc.cc:474:replace_alu$1927
  creating $alu cell for $add$rtl.v:554$472: $auto$alumacc.cc:474:replace_alu$1940
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module26:
  creating $macc model for $mul$rtl.v:424$381 ($mul).
  creating $macc model for $mul$rtl.v:435$420 ($mul).
  creating $macc cell for $mul$rtl.v:435$420: $auto$alumacc.cc:354:replace_macc$1943
  creating $macc cell for $mul$rtl.v:424$381: $auto$alumacc.cc:354:replace_macc$1944
  creating $alu model for $gt$rtl.v:431$402 ($gt): new $alu
  creating $alu model for $gt$rtl.v:431$404 ($gt): new $alu
  creating $alu model for $le$rtl.v:425$382 ($le): new $alu
  creating $alu cell for $le$rtl.v:425$382: $auto$alumacc.cc:474:replace_alu$1948
  creating $alu cell for $gt$rtl.v:431$404: $auto$alumacc.cc:474:replace_alu$1957
  creating $alu cell for $gt$rtl.v:431$402: $auto$alumacc.cc:474:replace_alu$1968
  created 3 $alu and 2 $macc cells.
Extracting $alu and $macc cells in module module4:
  creating $macc model for $add$rtl.v:387$339 ($add).
  creating $macc model for $neg$rtl.v:401$370 ($neg).
  creating $alu model for $macc $neg$rtl.v:401$370.
  creating $alu model for $macc $add$rtl.v:387$339.
  creating $alu model for $ge$rtl.v:391$349 ($ge): new $alu
  creating $alu cell for $ge$rtl.v:391$349: $auto$alumacc.cc:474:replace_alu$1980
  creating $alu cell for $add$rtl.v:387$339: $auto$alumacc.cc:474:replace_alu$1993
  creating $alu cell for $neg$rtl.v:401$370: $auto$alumacc.cc:474:replace_alu$1996
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module80:
  creating $macc model for $neg$rtl.v:352$328 ($neg).
  creating $macc model for $neg$rtl.v:354$331 ($neg).
  creating $alu model for $macc $neg$rtl.v:354$331.
  creating $alu model for $macc $neg$rtl.v:352$328.
  creating $alu model for $lt$rtl.v:345$312 ($lt): new $alu
  creating $alu model for $lt$rtl.v:350$325 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:350$325: $auto$alumacc.cc:474:replace_alu$2001
  creating $alu cell for $lt$rtl.v:345$312: $auto$alumacc.cc:474:replace_alu$2006
  creating $alu cell for $neg$rtl.v:352$328: $auto$alumacc.cc:474:replace_alu$2011
  creating $alu cell for $neg$rtl.v:354$331: $auto$alumacc.cc:474:replace_alu$2014
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module95:
  creating $macc model for $add$rtl.v:1077$1005 ($add).
  creating $macc model for $add$rtl.v:1103$1040 ($add).
  creating $macc model for $add$rtl.v:848$677 ($add).
  creating $macc model for $add$rtl.v:856$701 ($add).
  creating $macc model for $add$rtl.v:961$842 ($add).
  creating $macc model for $mul$rtl.v:1030$928 ($mul).
  creating $macc model for $mul$rtl.v:839$655 ($mul).
  creating $macc model for $mul$rtl.v:861$710 ($mul).
  creating $macc model for $mul$rtl.v:896$760 ($mul).
  creating $macc model for $neg$rtl.v:1049$965 ($neg).
  creating $macc model for $neg$rtl.v:1056$980 ($neg).
  creating $macc model for $neg$rtl.v:1066$998 ($neg).
  creating $macc model for $neg$rtl.v:1092$1030 ($neg).
  creating $macc model for $neg$rtl.v:873$730 ($neg).
  creating $macc model for $sub$rtl.v:1044$964 ($sub).
  creating $macc model for $sub$rtl.v:799$616 ($sub).
  creating $macc model for $sub$rtl.v:845$665 ($sub).
  creating $macc model for $sub$rtl.v:845$666 ($sub).
  creating $macc model for $sub$rtl.v:872$729 ($sub).
  creating $macc model for $sub$rtl.v:896$765 ($sub).
  creating $macc model for $sub$rtl.v:977$851 ($sub).
  merging $macc model for $mul$rtl.v:896$760 into $sub$rtl.v:896$765.
  merging $macc model for $sub$rtl.v:845$665 into $sub$rtl.v:845$666.
  creating $alu model for $macc $sub$rtl.v:872$729.
  creating $alu model for $macc $sub$rtl.v:977$851.
  creating $alu model for $macc $sub$rtl.v:799$616.
  creating $alu model for $macc $sub$rtl.v:1044$964.
  creating $alu model for $macc $neg$rtl.v:873$730.
  creating $alu model for $macc $neg$rtl.v:1092$1030.
  creating $alu model for $macc $neg$rtl.v:1066$998.
  creating $alu model for $macc $neg$rtl.v:1056$980.
  creating $alu model for $macc $neg$rtl.v:1049$965.
  creating $alu model for $macc $add$rtl.v:961$842.
  creating $alu model for $macc $add$rtl.v:856$701.
  creating $alu model for $macc $add$rtl.v:848$677.
  creating $alu model for $macc $add$rtl.v:1103$1040.
  creating $alu model for $macc $add$rtl.v:1077$1005.
  creating $macc cell for $sub$rtl.v:896$765: $auto$alumacc.cc:354:replace_macc$2017
  creating $macc cell for $mul$rtl.v:861$710: $auto$alumacc.cc:354:replace_macc$2018
  creating $macc cell for $mul$rtl.v:839$655: $auto$alumacc.cc:354:replace_macc$2019
  creating $macc cell for $sub$rtl.v:845$666: $auto$alumacc.cc:354:replace_macc$2020
  creating $macc cell for $mul$rtl.v:1030$928: $auto$alumacc.cc:354:replace_macc$2021
  creating $alu model for $ge$rtl.v:1098$1035 ($ge): new $alu
  creating $alu model for $ge$rtl.v:866$716 ($ge): new $alu
  creating $alu model for $ge$rtl.v:914$787 ($ge): new $alu
  creating $alu model for $ge$rtl.v:948$817 ($ge): new $alu
  creating $alu model for $gt$rtl.v:1023$921 ($gt): new $alu
  creating $alu model for $gt$rtl.v:900$769 ($gt): new $alu
  creating $alu model for $gt$rtl.v:984$867 ($gt): new $alu
  creating $alu model for $le$rtl.v:1020$916 ($le): new $alu
  creating $alu model for $le$rtl.v:1030$935 ($le): new $alu
  creating $alu model for $le$rtl.v:1088$1026 ($le): new $alu
  creating $alu model for $le$rtl.v:1089$1027 ($le): new $alu
  creating $alu model for $le$rtl.v:1108$1045 ($le): new $alu
  creating $alu model for $le$rtl.v:834$652 ($le): new $alu
  creating $alu model for $le$rtl.v:869$718 ($le): new $alu
  creating $alu model for $le$rtl.v:896$762 ($le): new $alu
  creating $alu model for $le$rtl.v:896$764 ($le): new $alu
  creating $alu model for $le$rtl.v:916$795 ($le): new $alu
  creating $alu model for $le$rtl.v:916$796 ($le): new $alu
  creating $alu model for $lt$rtl.v:1067$999 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1108$1046 ($lt): new $alu
  creating $alu model for $lt$rtl.v:856$699 ($lt): new $alu
  creating $alu model for $lt$rtl.v:885$747 ($lt): new $alu
  creating $alu model for $lt$rtl.v:957$831 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:957$831: $auto$alumacc.cc:474:replace_alu$2045
  creating $alu cell for $lt$rtl.v:885$747: $auto$alumacc.cc:474:replace_alu$2056
  creating $alu cell for $lt$rtl.v:856$699: $auto$alumacc.cc:474:replace_alu$2061
  creating $alu cell for $lt$rtl.v:1108$1046: $auto$alumacc.cc:474:replace_alu$2072
  creating $alu cell for $lt$rtl.v:1067$999: $auto$alumacc.cc:474:replace_alu$2083
  creating $alu cell for $le$rtl.v:916$796: $auto$alumacc.cc:474:replace_alu$2094
  creating $alu cell for $le$rtl.v:916$795: $auto$alumacc.cc:474:replace_alu$2103
  creating $alu cell for $le$rtl.v:896$764: $auto$alumacc.cc:474:replace_alu$2114
  creating $alu cell for $le$rtl.v:896$762: $auto$alumacc.cc:474:replace_alu$2123
  creating $alu cell for $le$rtl.v:869$718: $auto$alumacc.cc:474:replace_alu$2136
  creating $alu cell for $le$rtl.v:834$652: $auto$alumacc.cc:474:replace_alu$2151
  creating $alu cell for $le$rtl.v:1108$1045: $auto$alumacc.cc:474:replace_alu$2164
  creating $alu cell for $le$rtl.v:1089$1027: $auto$alumacc.cc:474:replace_alu$2173
  creating $alu cell for $le$rtl.v:1088$1026: $auto$alumacc.cc:474:replace_alu$2182
  creating $alu cell for $le$rtl.v:1030$935: $auto$alumacc.cc:474:replace_alu$2195
  creating $alu cell for $le$rtl.v:1020$916: $auto$alumacc.cc:474:replace_alu$2208
  creating $alu cell for $gt$rtl.v:984$867: $auto$alumacc.cc:474:replace_alu$2221
  creating $alu cell for $gt$rtl.v:900$769: $auto$alumacc.cc:474:replace_alu$2226
  creating $alu cell for $gt$rtl.v:1023$921: $auto$alumacc.cc:474:replace_alu$2231
  creating $alu cell for $ge$rtl.v:948$817: $auto$alumacc.cc:474:replace_alu$2242
  creating $alu cell for $ge$rtl.v:914$787: $auto$alumacc.cc:474:replace_alu$2251
  creating $alu cell for $ge$rtl.v:866$716: $auto$alumacc.cc:474:replace_alu$2264
  creating $alu cell for $ge$rtl.v:1098$1035: $auto$alumacc.cc:474:replace_alu$2277
  creating $alu cell for $add$rtl.v:1077$1005: $auto$alumacc.cc:474:replace_alu$2290
  creating $alu cell for $add$rtl.v:1103$1040: $auto$alumacc.cc:474:replace_alu$2293
  creating $alu cell for $add$rtl.v:848$677: $auto$alumacc.cc:474:replace_alu$2296
  creating $alu cell for $add$rtl.v:856$701: $auto$alumacc.cc:474:replace_alu$2299
  creating $alu cell for $add$rtl.v:961$842: $auto$alumacc.cc:474:replace_alu$2302
  creating $alu cell for $neg$rtl.v:1049$965: $auto$alumacc.cc:474:replace_alu$2305
  creating $alu cell for $neg$rtl.v:1056$980: $auto$alumacc.cc:474:replace_alu$2308
  creating $alu cell for $neg$rtl.v:1066$998: $auto$alumacc.cc:474:replace_alu$2311
  creating $alu cell for $neg$rtl.v:1092$1030: $auto$alumacc.cc:474:replace_alu$2314
  creating $alu cell for $neg$rtl.v:873$730: $auto$alumacc.cc:474:replace_alu$2317
  creating $alu cell for $sub$rtl.v:1044$964: $auto$alumacc.cc:474:replace_alu$2320
  creating $alu cell for $sub$rtl.v:799$616: $auto$alumacc.cc:474:replace_alu$2323
  creating $alu cell for $sub$rtl.v:977$851: $auto$alumacc.cc:474:replace_alu$2326
  creating $alu cell for $sub$rtl.v:872$729: $auto$alumacc.cc:474:replace_alu$2329
  created 37 $alu and 5 $macc cells.
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$rtl.v:116$15 ($add).
  creating $macc model for $add$rtl.v:266$229 ($add).
  creating $macc model for $mul$rtl.v:202$145 ($mul).
  creating $macc model for $neg$rtl.v:115$14 ($neg).
  creating $macc model for $neg$rtl.v:181$98 ($neg).
  creating $macc model for $neg$rtl.v:200$133 ($neg).
  creating $macc model for $neg$rtl.v:271$243 ($neg).
  creating $macc model for $sub$rtl.v:121$26 ($sub).
  creating $macc model for $sub$rtl.v:182$101 ($sub).
  creating $macc model for $sub$rtl.v:192$117 ($sub).
  creating $macc model for $sub$rtl.v:212$168 ($sub).
  creating $macc model for $sub$rtl.v:269$240 ($sub).
  creating $alu model for $macc $sub$rtl.v:269$240.
  creating $alu model for $macc $sub$rtl.v:212$168.
  creating $alu model for $macc $sub$rtl.v:192$117.
  creating $alu model for $macc $sub$rtl.v:182$101.
  creating $alu model for $macc $sub$rtl.v:121$26.
  creating $alu model for $macc $neg$rtl.v:271$243.
  creating $alu model for $macc $neg$rtl.v:200$133.
  creating $alu model for $macc $neg$rtl.v:181$98.
  creating $alu model for $macc $neg$rtl.v:115$14.
  creating $alu model for $macc $add$rtl.v:266$229.
  creating $alu model for $macc $add$rtl.v:116$15.
  creating $macc cell for $mul$rtl.v:202$145: $auto$alumacc.cc:354:replace_macc$2332
  creating $alu model for $ge$rtl.v:112$13 ($ge): new $alu
  creating $alu model for $ge$rtl.v:141$76 ($ge): new $alu
  creating $alu model for $ge$rtl.v:182$100 ($ge): new $alu
  creating $alu model for $gt$rtl.v:191$115 ($gt): new $alu
  creating $alu model for $gt$rtl.v:219$183 ($gt): new $alu
  creating $alu model for $gt$rtl.v:269$241 ($gt): new $alu
  creating $alu model for $le$rtl.v:149$84 ($le): new $alu
  creating $alu model for $le$rtl.v:208$155 ($le): new $alu
  creating $alu model for $le$rtl.v:215$178 ($le): new $alu
  creating $alu model for $le$rtl.v:235$204 ($le): new $alu
  creating $alu model for $lt$rtl.v:105$3 ($lt): new $alu
  creating $alu model for $lt$rtl.v:211$167 ($lt): new $alu
  creating $alu model for $lt$rtl.v:236$211 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:236$211: $auto$alumacc.cc:474:replace_alu$2346
  creating $alu cell for $lt$rtl.v:211$167: $auto$alumacc.cc:474:replace_alu$2351
  creating $alu cell for $lt$rtl.v:105$3: $auto$alumacc.cc:474:replace_alu$2356
  creating $alu cell for $le$rtl.v:235$204: $auto$alumacc.cc:474:replace_alu$2367
  creating $alu cell for $le$rtl.v:215$178: $auto$alumacc.cc:474:replace_alu$2378
  creating $alu cell for $le$rtl.v:208$155: $auto$alumacc.cc:474:replace_alu$2387
  creating $alu cell for $le$rtl.v:149$84: $auto$alumacc.cc:474:replace_alu$2398
  creating $alu cell for $gt$rtl.v:269$241: $auto$alumacc.cc:474:replace_alu$2407
  creating $alu cell for $gt$rtl.v:219$183: $auto$alumacc.cc:474:replace_alu$2418
  creating $alu cell for $gt$rtl.v:191$115: $auto$alumacc.cc:474:replace_alu$2429
  creating $alu cell for $ge$rtl.v:182$100: $auto$alumacc.cc:474:replace_alu$2434
  creating $alu cell for $ge$rtl.v:141$76: $auto$alumacc.cc:474:replace_alu$2443
  creating $alu cell for $ge$rtl.v:112$13: $auto$alumacc.cc:474:replace_alu$2456
  creating $alu cell for $add$rtl.v:116$15: $auto$alumacc.cc:474:replace_alu$2465
  creating $alu cell for $add$rtl.v:266$229: $auto$alumacc.cc:474:replace_alu$2468
  creating $alu cell for $neg$rtl.v:115$14: $auto$alumacc.cc:474:replace_alu$2471
  creating $alu cell for $neg$rtl.v:181$98: $auto$alumacc.cc:474:replace_alu$2474
  creating $alu cell for $neg$rtl.v:200$133: $auto$alumacc.cc:474:replace_alu$2477
  creating $alu cell for $neg$rtl.v:271$243: $auto$alumacc.cc:474:replace_alu$2480
  creating $alu cell for $sub$rtl.v:121$26: $auto$alumacc.cc:474:replace_alu$2483
  creating $alu cell for $sub$rtl.v:182$101: $auto$alumacc.cc:474:replace_alu$2486
  creating $alu cell for $sub$rtl.v:192$117: $auto$alumacc.cc:474:replace_alu$2489
  creating $alu cell for $sub$rtl.v:212$168: $auto$alumacc.cc:474:replace_alu$2492
  creating $alu cell for $sub$rtl.v:269$240: $auto$alumacc.cc:474:replace_alu$2495
  created 24 $alu and 1 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module module26 that may be considered for resource sharing.
  Analyzing resource sharing options for $shl$rtl.v:428$388 ($shl):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:430$400_Y $reduce_bool$rtl.v:430$398_Y \wire31 [6] }.
    Found 1 candidates: $shl$rtl.v:428$387
    Analyzing resource sharing with $shl$rtl.v:428$387 ($shl):
      Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:430$400_Y $reduce_bool$rtl.v:430$398_Y \wire31 [6] }.
      Forbidden control signals for this pair of cells: $reduce_bool$rtl.v:435$416_Y
      Activation pattern for cell $shl$rtl.v:428$388: { $reduce_bool$rtl.v:430$400_Y $reduce_bool$rtl.v:430$398_Y \wire31 [6] } = 3'110
      Activation pattern for cell $shl$rtl.v:428$387: { $reduce_bool$rtl.v:430$400_Y $reduce_bool$rtl.v:430$398_Y \wire31 [6] } = 3'111
      According to the SAT solver the cell $shl$rtl.v:428$388 is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $shl$rtl.v:428$387 ($shl):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:430$400_Y $reduce_bool$rtl.v:430$398_Y \wire31 [6] }.
    No candidates found.
Removing 1 cells in module module26:
  Removing cell $shl$rtl.v:428$388 ($shl).
Found 15 cells in module module95 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:916$797 ($sshr):
    Found 1 activation_patterns using ctrl signal $procmux$1265_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:861$709 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1388_CMP $reduce_bool$rtl.v:851$681_Y $logic_and$rtl.v:797$614_Y }.
    Found 1 candidates: $sshr$rtl.v:834$649
    Analyzing resource sharing with $sshr$rtl.v:834$649 ($sshr):
      Found 1 activation_patterns using ctrl signal $logic_and$rtl.v:797$614_Y.
      Forbidden control signals for this pair of cells: $procmux$1376_CMP
      Activation pattern for cell $sshr$rtl.v:861$709: { $procmux$1388_CMP $reduce_bool$rtl.v:851$681_Y $logic_and$rtl.v:797$614_Y } = 3'100
      Activation pattern for cell $sshr$rtl.v:834$649: $logic_and$rtl.v:797$614_Y = 1'0
      Size of SAT problem: 17 cells, 766 variables, 2000 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $procmux$1388_CMP $reduce_bool$rtl.v:851$681_Y $logic_and$rtl.v:797$614_Y } = 3'100
  Analyzing resource sharing options for $sshr$rtl.v:834$649 ($sshr):
    Found 1 activation_patterns using ctrl signal $logic_and$rtl.v:797$614_Y.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:1040$958 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1160_CMP $reduce_xor$rtl.v:1036$953_Y }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:1051$966 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1160_CMP $reduce_bool$rtl.v:1057$985_Y $reduce_xor$rtl.v:1036$953_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:987$874 ($shr):
    Found 1 activation_patterns using ctrl signal $procmux$1160_CMP.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:973$850 ($shr):
    Found 1 activation_patterns using ctrl signal $reduce_or$rtl.v:951$823_Y.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1092$1029 ($shr):
    Found 1 activation_patterns using ctrl signal \reg114 [0].
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1066$997 ($shr):
    Found 1 activation_patterns using ctrl signal \reg114 [0].
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:961$845 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1140_CMP $reduce_bool$rtl.v:961$846_Y $reduce_or$rtl.v:951$823_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:873$732 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1388_CMP $reduce_bool$rtl.v:873$736_Y $reduce_bool$rtl.v:873$733_Y $logic_and$rtl.v:797$614_Y }.
    Found 2 candidates: $shl$rtl.v:790$603 $shl$rtl.v:1103$1041
    Analyzing resource sharing with $shl$rtl.v:790$603 ($shl):
      Found 1 activation_patterns using ctrl signal { $procmux$1307_CMP \reg102 [0] }.
      Forbidden control signals for this pair of cells: $reduce_or$rtl.v:790$604_Y
      Activation pattern for cell $shl$rtl.v:873$732: { $procmux$1388_CMP $reduce_bool$rtl.v:873$736_Y $reduce_bool$rtl.v:873$733_Y $logic_and$rtl.v:797$614_Y } = 4'0000
      Activation pattern for cell $shl$rtl.v:790$603: { $procmux$1307_CMP \reg102 [0] } = 2'01
      Size of SAT problem: 25 cells, 1175 variables, 3065 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $procmux$1388_CMP $procmux$1307_CMP $reduce_bool$rtl.v:873$736_Y $reduce_bool$rtl.v:873$733_Y $logic_and$rtl.v:797$614_Y \reg102 [0] } = 6'000001
    Analyzing resource sharing with $shl$rtl.v:1103$1041 ($shl):
      Found 1 activation_patterns using ctrl signal $procmux$1127_CMP.
      Activation pattern for cell $shl$rtl.v:873$732: { $procmux$1388_CMP $reduce_bool$rtl.v:873$736_Y $reduce_bool$rtl.v:873$733_Y $logic_and$rtl.v:797$614_Y } = 4'0000
      Activation pattern for cell $shl$rtl.v:1103$1041: $procmux$1127_CMP = 1'1
      Size of SAT problem: 25 cells, 1173 variables, 3058 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $procmux$1388_CMP $reduce_bool$rtl.v:873$736_Y $reduce_bool$rtl.v:873$733_Y $logic_and$rtl.v:797$614_Y $procmux$1127_CMP } = 5'00001
  Analyzing resource sharing options for $shl$rtl.v:790$603 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1307_CMP \reg102 [0] }.
    Found 1 candidates: $shl$rtl.v:1103$1041
    Analyzing resource sharing with $shl$rtl.v:1103$1041 ($shl):
      Found 1 activation_patterns using ctrl signal $procmux$1127_CMP.
      Forbidden control signals for this pair of cells: $reduce_or$rtl.v:790$604_Y
      Activation pattern for cell $shl$rtl.v:790$603: { $procmux$1307_CMP \reg102 [0] } = 2'01
      Activation pattern for cell $shl$rtl.v:1103$1041: $procmux$1127_CMP = 1'1
      Size of SAT problem: 2 cells, 35 variables, 68 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $procmux$1307_CMP \reg102 [0] $procmux$1127_CMP } = 3'011
  Analyzing resource sharing options for $shl$rtl.v:1103$1041 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$1127_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1078$1006 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1229_CMP $reduce_bool$rtl.v:1078$1007_Y \reg114 [0] }.
    No candidates found.
  Analyzing resource sharing options for $mul$rtl.v:896$760 ($mul):
    Found cell that is never activated: $mul$rtl.v:896$760
    Cell is never active. Sharing is pointless, we simply remove it.
Removing 1 cells in module module95:
  Removing cell $mul$rtl.v:896$760 ($mul).
Found 6 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:192$116 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1469_CMP $procmux$1466_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:130$45 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1538_CMP $reduce_bool$rtl.v:132$55_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:235$206 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$1508_CMP $reduce_bool$rtl.v:235$207_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:208$156 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$1466_CMP $reduce_bool$rtl.v:208$157_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:162$88 ($shr):
    Found 1 activation_patterns using ctrl signal $procmux$1466_CMP.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:123$32 ($shr):
    Found 1 activation_patterns using ctrl signal $procmux$1538_CMP.
    No candidates found.

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
<suppressed ~2 debug messages>
Optimizing module module26.
Optimizing module module4.
<suppressed ~1 debug messages>
Optimizing module module80.
<suppressed ~4 debug messages>
Optimizing module module95.
<suppressed ~15 debug messages>
Optimizing module top.
<suppressed ~21 debug messages>

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
<suppressed ~3 debug messages>
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module177..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module80..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module95..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1054$969.
    dead port 2/2 on $mux $ternary$rtl.v:1054$969.
    dead port 1/2 on $mux $ternary$rtl.v:980$860.
    dead port 2/2 on $mux $ternary$rtl.v:980$860.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1463.
    dead port 2/2 on $mux $procmux$1463.
    dead port 1/2 on $mux $procmux$1472.
    dead port 2/2 on $mux $procmux$1472.
    dead port 1/2 on $mux $procmux$1481.
    dead port 2/2 on $mux $procmux$1481.
    dead port 1/2 on $mux $ternary$rtl.v:268$236.
    dead port 2/2 on $mux $ternary$rtl.v:268$236.
Removed 12 multiplexer ports.
<suppressed ~174 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module13.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1924: { $auto$rtlil.cc:1832:Not$1923 $auto$rtlil.cc:1835:ReduceAnd$1917 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1900: { $auto$alumacc.cc:490:replace_alu$1898 [0] $auto$alumacc.cc:490:replace_alu$1898 [1] $auto$alumacc.cc:490:replace_alu$1898 [2] $auto$alumacc.cc:490:replace_alu$1898 [3] $auto$alumacc.cc:490:replace_alu$1898 [4] $auto$alumacc.cc:490:replace_alu$1898 [5] $auto$alumacc.cc:490:replace_alu$1898 [6] $auto$alumacc.cc:490:replace_alu$1898 [7] $auto$alumacc.cc:490:replace_alu$1898 [8] $auto$alumacc.cc:490:replace_alu$1898 [9] $auto$alumacc.cc:490:replace_alu$1898 [10] $auto$alumacc.cc:490:replace_alu$1898 [11] $auto$alumacc.cc:490:replace_alu$1898 [12] $auto$alumacc.cc:490:replace_alu$1898 [13] $auto$alumacc.cc:490:replace_alu$1898 [14] $auto$alumacc.cc:490:replace_alu$1898 [15] $auto$alumacc.cc:490:replace_alu$1898 [16] $auto$alumacc.cc:490:replace_alu$1898 [17] $auto$alumacc.cc:490:replace_alu$1898 [18] $auto$alumacc.cc:490:replace_alu$1898 [19] $auto$alumacc.cc:490:replace_alu$1898 [20] $auto$alumacc.cc:490:replace_alu$1898 [21] $auto$alumacc.cc:490:replace_alu$1898 [22] $auto$alumacc.cc:490:replace_alu$1898 [23] $auto$alumacc.cc:490:replace_alu$1898 [24] $auto$alumacc.cc:490:replace_alu$1898 [25] $auto$alumacc.cc:490:replace_alu$1898 [26] $auto$alumacc.cc:490:replace_alu$1898 [27] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1916: { $auto$alumacc.cc:490:replace_alu$1914 [0] $auto$alumacc.cc:490:replace_alu$1914 [1] $auto$alumacc.cc:490:replace_alu$1914 [2] $auto$alumacc.cc:490:replace_alu$1914 [3] $auto$alumacc.cc:490:replace_alu$1914 [4] $auto$alumacc.cc:490:replace_alu$1914 [5] $auto$alumacc.cc:490:replace_alu$1914 [6] $auto$alumacc.cc:490:replace_alu$1914 [7] $auto$alumacc.cc:490:replace_alu$1914 [8] $auto$alumacc.cc:490:replace_alu$1914 [9] $auto$alumacc.cc:490:replace_alu$1914 [10] $auto$alumacc.cc:490:replace_alu$1914 [11] $auto$alumacc.cc:490:replace_alu$1914 [12] $auto$alumacc.cc:490:replace_alu$1914 [13] $auto$alumacc.cc:490:replace_alu$1914 [14] $auto$alumacc.cc:490:replace_alu$1914 [15] $auto$alumacc.cc:490:replace_alu$1914 [16] $auto$alumacc.cc:490:replace_alu$1914 [17] $auto$alumacc.cc:490:replace_alu$1914 [18] $auto$alumacc.cc:490:replace_alu$1914 [19] }
  Optimizing cells in module \module13.
  Optimizing cells in module \module177.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1930: { $auto$alumacc.cc:490:replace_alu$1928 [0] $auto$alumacc.cc:490:replace_alu$1928 [1] $auto$alumacc.cc:490:replace_alu$1928 [2] $auto$alumacc.cc:490:replace_alu$1928 [3] $auto$alumacc.cc:490:replace_alu$1928 [4] $auto$alumacc.cc:490:replace_alu$1928 [5] $auto$alumacc.cc:490:replace_alu$1928 [6] $auto$alumacc.cc:490:replace_alu$1928 [7] $auto$alumacc.cc:490:replace_alu$1928 [8] $auto$alumacc.cc:490:replace_alu$1928 [9] $auto$alumacc.cc:490:replace_alu$1928 [10] $auto$alumacc.cc:490:replace_alu$1928 [11] $auto$alumacc.cc:490:replace_alu$1928 [12] $auto$alumacc.cc:490:replace_alu$1928 [13] $auto$alumacc.cc:490:replace_alu$1928 [14] $auto$alumacc.cc:490:replace_alu$1928 [15] $auto$alumacc.cc:490:replace_alu$1928 [16] $auto$alumacc.cc:490:replace_alu$1928 [17] $auto$alumacc.cc:490:replace_alu$1928 [18] $auto$alumacc.cc:490:replace_alu$1928 [19] $auto$alumacc.cc:490:replace_alu$1928 [20] $auto$alumacc.cc:490:replace_alu$1928 [21] $auto$alumacc.cc:490:replace_alu$1928 [22] $auto$alumacc.cc:490:replace_alu$1928 [23] $auto$alumacc.cc:490:replace_alu$1928 [24] $auto$alumacc.cc:490:replace_alu$1928 [25] $auto$alumacc.cc:490:replace_alu$1928 [26] $auto$alumacc.cc:490:replace_alu$1928 [27] }
  Optimizing cells in module \module177.
  Optimizing cells in module \module26.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1953: { $auto$alumacc.cc:490:replace_alu$1949 [0] $auto$alumacc.cc:490:replace_alu$1949 [1] $auto$alumacc.cc:490:replace_alu$1949 [2] $auto$alumacc.cc:490:replace_alu$1949 [3] $auto$alumacc.cc:490:replace_alu$1949 [4] $auto$alumacc.cc:490:replace_alu$1949 [5] $auto$alumacc.cc:490:replace_alu$1949 [6] $auto$alumacc.cc:490:replace_alu$1949 [7] $auto$alumacc.cc:490:replace_alu$1949 [8] $auto$alumacc.cc:490:replace_alu$1949 [9] $auto$alumacc.cc:490:replace_alu$1949 [10] $auto$alumacc.cc:490:replace_alu$1949 [11] $auto$alumacc.cc:490:replace_alu$1949 [12] $auto$alumacc.cc:490:replace_alu$1949 [13] $auto$alumacc.cc:490:replace_alu$1949 [14] $auto$alumacc.cc:490:replace_alu$1949 [15] $auto$alumacc.cc:490:replace_alu$1949 [16] $auto$alumacc.cc:490:replace_alu$1949 [17] $auto$alumacc.cc:490:replace_alu$1949 [18] $auto$alumacc.cc:490:replace_alu$1949 [19] $auto$alumacc.cc:490:replace_alu$1949 [20] $auto$alumacc.cc:490:replace_alu$1949 [21] $auto$alumacc.cc:490:replace_alu$1949 [22] $auto$alumacc.cc:490:replace_alu$1949 [23] $auto$alumacc.cc:490:replace_alu$1949 [24] $auto$alumacc.cc:490:replace_alu$1949 [25] $auto$alumacc.cc:490:replace_alu$1949 [26] $auto$alumacc.cc:490:replace_alu$1949 [27] $auto$alumacc.cc:490:replace_alu$1949 [28] $auto$alumacc.cc:490:replace_alu$1949 [29] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1960: { $auto$alumacc.cc:490:replace_alu$1958 [0] $auto$alumacc.cc:490:replace_alu$1958 [1] $auto$alumacc.cc:490:replace_alu$1958 [2] $auto$alumacc.cc:490:replace_alu$1958 [3] $auto$alumacc.cc:490:replace_alu$1958 [4] $auto$alumacc.cc:490:replace_alu$1958 [5] $auto$alumacc.cc:490:replace_alu$1958 [6] $auto$alumacc.cc:490:replace_alu$1958 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1971: { $auto$alumacc.cc:490:replace_alu$1969 [0] $auto$alumacc.cc:490:replace_alu$1969 [1] $auto$alumacc.cc:490:replace_alu$1969 [2] $auto$alumacc.cc:490:replace_alu$1969 [3] $auto$alumacc.cc:490:replace_alu$1969 [4] $auto$alumacc.cc:490:replace_alu$1969 [5] $auto$alumacc.cc:490:replace_alu$1969 [6] $auto$alumacc.cc:490:replace_alu$1969 [7] $auto$alumacc.cc:490:replace_alu$1969 [8] $auto$alumacc.cc:490:replace_alu$1969 [9] $auto$alumacc.cc:490:replace_alu$1969 [10] $auto$alumacc.cc:490:replace_alu$1969 [11] $auto$alumacc.cc:490:replace_alu$1969 [12] $auto$alumacc.cc:490:replace_alu$1969 [13] $auto$alumacc.cc:490:replace_alu$1969 [14] $auto$alumacc.cc:490:replace_alu$1969 [15] }
  Optimizing cells in module \module26.
  Optimizing cells in module \module4.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1991: { $auto$rtlil.cc:1832:Not$1990 $auto$rtlil.cc:1835:ReduceAnd$1984 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1983: { $auto$alumacc.cc:490:replace_alu$1981 [0] $auto$alumacc.cc:490:replace_alu$1981 [1] $auto$alumacc.cc:490:replace_alu$1981 [2] $auto$alumacc.cc:490:replace_alu$1981 [3] $auto$alumacc.cc:490:replace_alu$1981 [4] $auto$alumacc.cc:490:replace_alu$1981 [5] $auto$alumacc.cc:490:replace_alu$1981 [6] $auto$alumacc.cc:490:replace_alu$1981 [7] }
  Optimizing cells in module \module4.
  Optimizing cells in module \module80.
  Optimizing cells in module \module95.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2134: { $auto$rtlil.cc:1832:Not$2133 $auto$rtlil.cc:1835:ReduceAnd$2127 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2149: { $auto$rtlil.cc:1832:Not$2148 $auto$rtlil.cc:1835:ReduceAnd$2140 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2180: { $auto$rtlil.cc:1832:Not$2177 $auto$rtlil.cc:1835:ReduceAnd$2179 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2219: { $auto$rtlil.cc:1832:Not$2218 $auto$rtlil.cc:1835:ReduceAnd$2212 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2254: { $auto$alumacc.cc:490:replace_alu$2252 [0] $auto$alumacc.cc:490:replace_alu$2252 [1] $auto$alumacc.cc:490:replace_alu$2252 [2] $auto$alumacc.cc:490:replace_alu$2252 [3] $auto$alumacc.cc:490:replace_alu$2252 [4] $auto$alumacc.cc:490:replace_alu$2252 [5] $auto$alumacc.cc:490:replace_alu$2252 [6] $auto$alumacc.cc:490:replace_alu$2252 [7] $auto$alumacc.cc:490:replace_alu$2252 [8] $auto$alumacc.cc:490:replace_alu$2252 [9] $auto$alumacc.cc:490:replace_alu$2252 [10] $auto$alumacc.cc:490:replace_alu$2252 [11] $auto$alumacc.cc:490:replace_alu$2252 [12] $auto$alumacc.cc:490:replace_alu$2252 [13] $auto$alumacc.cc:490:replace_alu$2252 [14] $auto$alumacc.cc:490:replace_alu$2252 [15] $auto$alumacc.cc:490:replace_alu$2252 [16] $auto$alumacc.cc:490:replace_alu$2252 [17] $auto$alumacc.cc:490:replace_alu$2252 [18] $auto$alumacc.cc:490:replace_alu$2252 [19] $auto$alumacc.cc:490:replace_alu$2252 [20] $auto$alumacc.cc:490:replace_alu$2252 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2267: { $auto$alumacc.cc:490:replace_alu$2265 [0] $auto$alumacc.cc:490:replace_alu$2265 [1] $auto$alumacc.cc:490:replace_alu$2265 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2280: { $auto$alumacc.cc:490:replace_alu$2278 [0] $auto$alumacc.cc:490:replace_alu$2278 [1] $auto$alumacc.cc:490:replace_alu$2278 [2] $auto$alumacc.cc:490:replace_alu$2278 [3] $auto$alumacc.cc:490:replace_alu$2278 [4] $auto$alumacc.cc:490:replace_alu$2278 [5] $auto$alumacc.cc:490:replace_alu$2278 [6] $auto$alumacc.cc:490:replace_alu$2278 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2048: { $auto$alumacc.cc:490:replace_alu$2046 [0] $auto$alumacc.cc:490:replace_alu$2046 [1] $auto$alumacc.cc:490:replace_alu$2046 [2] $auto$alumacc.cc:490:replace_alu$2046 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2064: { $auto$alumacc.cc:490:replace_alu$2062 [0] $auto$alumacc.cc:490:replace_alu$2062 [1] $auto$alumacc.cc:490:replace_alu$2062 [2] $auto$alumacc.cc:490:replace_alu$2062 [3] $auto$alumacc.cc:490:replace_alu$2062 [4] $auto$alumacc.cc:490:replace_alu$2062 [5] $auto$alumacc.cc:490:replace_alu$2062 [6] $auto$alumacc.cc:490:replace_alu$2062 [7] $auto$alumacc.cc:490:replace_alu$2062 [8] $auto$alumacc.cc:490:replace_alu$2062 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2075: { $auto$alumacc.cc:490:replace_alu$2073 [0] $auto$alumacc.cc:490:replace_alu$2073 [1] $auto$alumacc.cc:490:replace_alu$2073 [2] $auto$alumacc.cc:490:replace_alu$2073 [3] $auto$alumacc.cc:490:replace_alu$2073 [4] $auto$alumacc.cc:490:replace_alu$2073 [5] $auto$alumacc.cc:490:replace_alu$2073 [6] $auto$alumacc.cc:490:replace_alu$2073 [7] $auto$alumacc.cc:490:replace_alu$2073 [8] $auto$alumacc.cc:490:replace_alu$2073 [9] $auto$alumacc.cc:490:replace_alu$2073 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2086: { $auto$alumacc.cc:490:replace_alu$2084 [0] $auto$alumacc.cc:490:replace_alu$2084 [1] $auto$alumacc.cc:490:replace_alu$2084 [2] $auto$alumacc.cc:490:replace_alu$2084 [3] $auto$alumacc.cc:490:replace_alu$2084 [4] $auto$alumacc.cc:490:replace_alu$2084 [5] $auto$alumacc.cc:490:replace_alu$2084 [6] $auto$alumacc.cc:490:replace_alu$2084 [7] $auto$alumacc.cc:490:replace_alu$2084 [8] $auto$alumacc.cc:490:replace_alu$2084 [9] $auto$alumacc.cc:490:replace_alu$2084 [10] $auto$alumacc.cc:490:replace_alu$2084 [11] $auto$alumacc.cc:490:replace_alu$2084 [12] $auto$alumacc.cc:490:replace_alu$2084 [13] $auto$alumacc.cc:490:replace_alu$2084 [14] $auto$alumacc.cc:490:replace_alu$2084 [15] $auto$alumacc.cc:490:replace_alu$2084 [16] $auto$alumacc.cc:490:replace_alu$2084 [17] $auto$alumacc.cc:490:replace_alu$2084 [18] $auto$alumacc.cc:490:replace_alu$2084 [19] $auto$alumacc.cc:490:replace_alu$2084 [20] $auto$alumacc.cc:490:replace_alu$2084 [21] $auto$alumacc.cc:490:replace_alu$2084 [22] $auto$alumacc.cc:490:replace_alu$2084 [23] $auto$alumacc.cc:490:replace_alu$2084 [24] $auto$alumacc.cc:490:replace_alu$2084 [25] $auto$alumacc.cc:490:replace_alu$2084 [26] $auto$alumacc.cc:490:replace_alu$2084 [27] $auto$alumacc.cc:490:replace_alu$2084 [28] $auto$alumacc.cc:490:replace_alu$2084 [29] $auto$alumacc.cc:490:replace_alu$2084 [30] $auto$alumacc.cc:490:replace_alu$2084 [31] $auto$alumacc.cc:490:replace_alu$2084 [32] $auto$alumacc.cc:490:replace_alu$2084 [33] $auto$alumacc.cc:490:replace_alu$2084 [34] $auto$alumacc.cc:490:replace_alu$2084 [35] $auto$alumacc.cc:490:replace_alu$2084 [36] $auto$alumacc.cc:490:replace_alu$2084 [37] $auto$alumacc.cc:490:replace_alu$2084 [38] $auto$alumacc.cc:490:replace_alu$2084 [39] $auto$alumacc.cc:490:replace_alu$2084 [40] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2099: { $auto$alumacc.cc:490:replace_alu$2095 [0] $auto$alumacc.cc:490:replace_alu$2095 [1] $auto$alumacc.cc:490:replace_alu$2095 [2] $auto$alumacc.cc:490:replace_alu$2095 [3] $auto$alumacc.cc:490:replace_alu$2095 [4] $auto$alumacc.cc:490:replace_alu$2095 [5] $auto$alumacc.cc:490:replace_alu$2095 [6] $auto$alumacc.cc:490:replace_alu$2095 [7] $auto$alumacc.cc:490:replace_alu$2095 [8] $auto$alumacc.cc:490:replace_alu$2095 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2110: { $auto$alumacc.cc:490:replace_alu$2104 [0] $auto$alumacc.cc:490:replace_alu$2104 [1] $auto$alumacc.cc:490:replace_alu$2104 [2] $auto$alumacc.cc:490:replace_alu$2104 [3] $auto$alumacc.cc:490:replace_alu$2104 [4] $auto$alumacc.cc:490:replace_alu$2104 [5] $auto$alumacc.cc:490:replace_alu$2104 [6] $auto$alumacc.cc:490:replace_alu$2104 [7] $auto$alumacc.cc:490:replace_alu$2104 [8] $auto$alumacc.cc:490:replace_alu$2104 [9] $auto$alumacc.cc:490:replace_alu$2104 [10] $auto$alumacc.cc:490:replace_alu$2104 [11] $auto$alumacc.cc:490:replace_alu$2104 [12] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2119: { $auto$alumacc.cc:490:replace_alu$2115 [0] $auto$alumacc.cc:490:replace_alu$2115 [1] $auto$alumacc.cc:490:replace_alu$2115 [2] $auto$alumacc.cc:490:replace_alu$2115 [3] $auto$alumacc.cc:490:replace_alu$2115 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2126: { $auto$alumacc.cc:490:replace_alu$2124 [0] $auto$alumacc.cc:490:replace_alu$2124 [1] $auto$alumacc.cc:490:replace_alu$2124 [2] $auto$alumacc.cc:490:replace_alu$2124 [3] $auto$alumacc.cc:490:replace_alu$2124 [4] $auto$alumacc.cc:490:replace_alu$2124 [5] $auto$alumacc.cc:490:replace_alu$2124 [6] $auto$alumacc.cc:490:replace_alu$2124 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2139: { $auto$alumacc.cc:490:replace_alu$2137 [0] $auto$alumacc.cc:490:replace_alu$2137 [1] $auto$alumacc.cc:490:replace_alu$2137 [2] $auto$alumacc.cc:490:replace_alu$2137 [3] $auto$alumacc.cc:490:replace_alu$2137 [4] $auto$alumacc.cc:490:replace_alu$2137 [5] $auto$alumacc.cc:490:replace_alu$2137 [6] $auto$alumacc.cc:490:replace_alu$2137 [7] $auto$alumacc.cc:490:replace_alu$2137 [8] $auto$alumacc.cc:490:replace_alu$2137 [9] $auto$alumacc.cc:490:replace_alu$2137 [10] $auto$alumacc.cc:490:replace_alu$2137 [11] $auto$alumacc.cc:490:replace_alu$2137 [12] $auto$alumacc.cc:490:replace_alu$2137 [13] $auto$alumacc.cc:490:replace_alu$2137 [14] $auto$alumacc.cc:490:replace_alu$2137 [15] $auto$alumacc.cc:490:replace_alu$2137 [16] $auto$alumacc.cc:490:replace_alu$2137 [17] $auto$alumacc.cc:490:replace_alu$2137 [18] $auto$alumacc.cc:490:replace_alu$2137 [19] $auto$alumacc.cc:490:replace_alu$2137 [20] $auto$alumacc.cc:490:replace_alu$2137 [21] $auto$alumacc.cc:490:replace_alu$2137 [22] $auto$alumacc.cc:490:replace_alu$2137 [23] $auto$alumacc.cc:490:replace_alu$2137 [24] $auto$alumacc.cc:490:replace_alu$2137 [25] $auto$alumacc.cc:490:replace_alu$2137 [26] $auto$alumacc.cc:490:replace_alu$2137 [27] $auto$alumacc.cc:490:replace_alu$2137 [28] $auto$alumacc.cc:490:replace_alu$2137 [29] $auto$alumacc.cc:490:replace_alu$2137 [30] $auto$alumacc.cc:490:replace_alu$2137 [31] $auto$alumacc.cc:490:replace_alu$2137 [32] $auto$alumacc.cc:490:replace_alu$2137 [33] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2154: { $auto$alumacc.cc:490:replace_alu$2152 [0] $auto$alumacc.cc:490:replace_alu$2152 [1] $auto$alumacc.cc:490:replace_alu$2152 [2] $auto$alumacc.cc:490:replace_alu$2152 [3] $auto$alumacc.cc:490:replace_alu$2152 [4] $auto$alumacc.cc:490:replace_alu$2152 [5] $auto$alumacc.cc:490:replace_alu$2152 [6] $auto$alumacc.cc:490:replace_alu$2152 [7] $auto$alumacc.cc:490:replace_alu$2152 [8] $auto$alumacc.cc:490:replace_alu$2152 [9] $auto$alumacc.cc:490:replace_alu$2152 [10] $auto$alumacc.cc:490:replace_alu$2152 [11] $auto$alumacc.cc:490:replace_alu$2152 [12] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2169: { $auto$alumacc.cc:490:replace_alu$2165 [0] $auto$alumacc.cc:490:replace_alu$2165 [1] $auto$alumacc.cc:490:replace_alu$2165 [2] $auto$alumacc.cc:490:replace_alu$2165 [3] $auto$alumacc.cc:490:replace_alu$2165 [4] $auto$alumacc.cc:490:replace_alu$2165 [5] $auto$alumacc.cc:490:replace_alu$2165 [6] $auto$alumacc.cc:490:replace_alu$2165 [7] $auto$alumacc.cc:490:replace_alu$2165 [8] $auto$alumacc.cc:490:replace_alu$2165 [9] $auto$alumacc.cc:490:replace_alu$2165 [10] $auto$alumacc.cc:490:replace_alu$2165 [11] $auto$alumacc.cc:490:replace_alu$2165 [12] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2178: { $auto$alumacc.cc:490:replace_alu$2174 [0] $auto$alumacc.cc:490:replace_alu$2174 [1] $auto$alumacc.cc:490:replace_alu$2174 [2] $auto$alumacc.cc:490:replace_alu$2174 [3] $auto$alumacc.cc:490:replace_alu$2174 [4] $auto$alumacc.cc:490:replace_alu$2174 [5] $auto$alumacc.cc:490:replace_alu$2174 [6] $auto$alumacc.cc:490:replace_alu$2174 [7] $auto$alumacc.cc:490:replace_alu$2174 [8] $auto$alumacc.cc:490:replace_alu$2174 [9] $auto$alumacc.cc:490:replace_alu$2174 [10] $auto$alumacc.cc:490:replace_alu$2174 [11] $auto$alumacc.cc:490:replace_alu$2174 [12] $auto$alumacc.cc:490:replace_alu$2174 [13] $auto$alumacc.cc:490:replace_alu$2174 [14] $auto$alumacc.cc:490:replace_alu$2174 [15] $auto$alumacc.cc:490:replace_alu$2174 [16] $auto$alumacc.cc:490:replace_alu$2174 [17] $auto$alumacc.cc:490:replace_alu$2174 [18] $auto$alumacc.cc:490:replace_alu$2174 [19] $auto$alumacc.cc:490:replace_alu$2174 [20] $auto$alumacc.cc:490:replace_alu$2174 [21] $auto$alumacc.cc:490:replace_alu$2174 [22] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2185: { $auto$alumacc.cc:490:replace_alu$2183 [0] $auto$alumacc.cc:490:replace_alu$2183 [1] $auto$alumacc.cc:490:replace_alu$2183 [2] $auto$alumacc.cc:490:replace_alu$2183 [3] $auto$alumacc.cc:490:replace_alu$2183 [4] $auto$alumacc.cc:490:replace_alu$2183 [5] $auto$alumacc.cc:490:replace_alu$2183 [6] $auto$alumacc.cc:490:replace_alu$2183 [7] $auto$alumacc.cc:490:replace_alu$2183 [8] $auto$alumacc.cc:490:replace_alu$2183 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2198: { $auto$alumacc.cc:490:replace_alu$2196 [0] $auto$alumacc.cc:490:replace_alu$2196 [1] $auto$alumacc.cc:490:replace_alu$2196 [2] $auto$alumacc.cc:490:replace_alu$2196 [3] $auto$alumacc.cc:490:replace_alu$2196 [4] $auto$alumacc.cc:490:replace_alu$2196 [5] $auto$alumacc.cc:490:replace_alu$2196 [6] $auto$alumacc.cc:490:replace_alu$2196 [7] $auto$alumacc.cc:490:replace_alu$2196 [8] $auto$alumacc.cc:490:replace_alu$2196 [9] $auto$alumacc.cc:490:replace_alu$2196 [10] $auto$alumacc.cc:490:replace_alu$2196 [11] $auto$alumacc.cc:490:replace_alu$2196 [12] $auto$alumacc.cc:490:replace_alu$2196 [13] $auto$alumacc.cc:490:replace_alu$2196 [14] $auto$alumacc.cc:490:replace_alu$2196 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2211: { $auto$alumacc.cc:490:replace_alu$2209 [0] $auto$alumacc.cc:490:replace_alu$2209 [1] $auto$alumacc.cc:490:replace_alu$2209 [2] $auto$alumacc.cc:490:replace_alu$2209 [3] $auto$alumacc.cc:490:replace_alu$2209 [4] $auto$alumacc.cc:490:replace_alu$2209 [5] $auto$alumacc.cc:490:replace_alu$2209 [6] $auto$alumacc.cc:490:replace_alu$2209 [7] $auto$alumacc.cc:490:replace_alu$2209 [8] $auto$alumacc.cc:490:replace_alu$2209 [9] $auto$alumacc.cc:490:replace_alu$2209 [10] $auto$alumacc.cc:490:replace_alu$2209 [11] $auto$alumacc.cc:490:replace_alu$2209 [12] $auto$alumacc.cc:490:replace_alu$2209 [13] $auto$alumacc.cc:490:replace_alu$2209 [14] $auto$alumacc.cc:490:replace_alu$2209 [15] $auto$alumacc.cc:490:replace_alu$2209 [16] $auto$alumacc.cc:490:replace_alu$2209 [17] $auto$alumacc.cc:490:replace_alu$2209 [18] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2234: { $auto$alumacc.cc:490:replace_alu$2232 [0] $auto$alumacc.cc:490:replace_alu$2232 [1] $auto$alumacc.cc:490:replace_alu$2232 [2] $auto$alumacc.cc:490:replace_alu$2232 [3] $auto$alumacc.cc:490:replace_alu$2232 [4] $auto$alumacc.cc:490:replace_alu$2232 [5] $auto$alumacc.cc:490:replace_alu$2232 [6] $auto$alumacc.cc:490:replace_alu$2232 [7] $auto$alumacc.cc:490:replace_alu$2232 [8] $auto$alumacc.cc:490:replace_alu$2232 [9] $auto$alumacc.cc:490:replace_alu$2232 [10] $auto$alumacc.cc:490:replace_alu$2232 [11] $auto$alumacc.cc:490:replace_alu$2232 [12] $auto$alumacc.cc:490:replace_alu$2232 [13] $auto$alumacc.cc:490:replace_alu$2232 [14] $auto$alumacc.cc:490:replace_alu$2232 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2247: { $auto$alumacc.cc:490:replace_alu$2243 [0] $auto$alumacc.cc:490:replace_alu$2243 [1] $auto$alumacc.cc:490:replace_alu$2243 [2] $auto$alumacc.cc:490:replace_alu$2243 [3] }
  Optimizing cells in module \module95.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:233$199: { \reg49 [0] \reg49 [1] \reg49 [2] \reg49 [3] \reg49 [4] \reg49 [5] \reg49 [6] \reg49 [7] \reg49 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:141$74: { $auto$wreduce.cc:455:run$1869 [0] $auto$wreduce.cc:455:run$1869 [1] $auto$wreduce.cc:455:run$1869 [2] $auto$wreduce.cc:455:run$1869 [3] $auto$wreduce.cc:455:run$1869 [4] $auto$wreduce.cc:455:run$1869 [5] $auto$wreduce.cc:455:run$1869 [6] $auto$wreduce.cc:455:run$1869 [7] $auto$wreduce.cc:455:run$1869 [8] $auto$wreduce.cc:455:run$1869 [9] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2441: { $auto$rtlil.cc:1832:Not$2438 $auto$rtlil.cc:1835:ReduceAnd$2440 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2454: { $auto$rtlil.cc:1832:Not$2453 $auto$rtlil.cc:1835:ReduceAnd$2447 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2421: { $auto$alumacc.cc:490:replace_alu$2419 [0] $auto$alumacc.cc:490:replace_alu$2419 [1] $auto$alumacc.cc:490:replace_alu$2419 [2] $auto$alumacc.cc:490:replace_alu$2419 [3] $auto$alumacc.cc:490:replace_alu$2419 [4] $auto$alumacc.cc:490:replace_alu$2419 [5] $auto$alumacc.cc:490:replace_alu$2419 [6] $auto$alumacc.cc:490:replace_alu$2419 [7] $auto$alumacc.cc:490:replace_alu$2419 [8] $auto$alumacc.cc:490:replace_alu$2419 [9] $auto$alumacc.cc:490:replace_alu$2419 [10] $auto$alumacc.cc:490:replace_alu$2419 [11] $auto$alumacc.cc:490:replace_alu$2419 [12] $auto$alumacc.cc:490:replace_alu$2419 [13] $auto$alumacc.cc:490:replace_alu$2419 [14] $auto$alumacc.cc:490:replace_alu$2419 [15] $auto$alumacc.cc:490:replace_alu$2419 [16] $auto$alumacc.cc:490:replace_alu$2419 [17] $auto$alumacc.cc:490:replace_alu$2419 [18] $auto$alumacc.cc:490:replace_alu$2419 [19] $auto$alumacc.cc:490:replace_alu$2419 [20] $auto$alumacc.cc:490:replace_alu$2419 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2410: { $auto$alumacc.cc:490:replace_alu$2408 [0] $auto$alumacc.cc:490:replace_alu$2408 [1] $auto$alumacc.cc:490:replace_alu$2408 [2] $auto$alumacc.cc:490:replace_alu$2408 [3] $auto$alumacc.cc:490:replace_alu$2408 [4] $auto$alumacc.cc:490:replace_alu$2408 [5] $auto$alumacc.cc:490:replace_alu$2408 [6] $auto$alumacc.cc:490:replace_alu$2408 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2461: { $auto$alumacc.cc:490:replace_alu$2457 [0] $auto$alumacc.cc:490:replace_alu$2457 [1] $auto$alumacc.cc:490:replace_alu$2457 [2] $auto$alumacc.cc:490:replace_alu$2457 [3] $auto$alumacc.cc:490:replace_alu$2457 [4] $auto$alumacc.cc:490:replace_alu$2457 [5] $auto$alumacc.cc:490:replace_alu$2457 [6] $auto$alumacc.cc:490:replace_alu$2457 [7] $auto$alumacc.cc:490:replace_alu$2457 [8] $auto$alumacc.cc:490:replace_alu$2457 [9] $auto$alumacc.cc:490:replace_alu$2457 [10] $auto$alumacc.cc:490:replace_alu$2457 [11] $auto$alumacc.cc:490:replace_alu$2457 [12] $auto$alumacc.cc:490:replace_alu$2457 [13] $auto$alumacc.cc:490:replace_alu$2457 [14] $auto$alumacc.cc:490:replace_alu$2457 [15] $auto$alumacc.cc:490:replace_alu$2457 [16] $auto$alumacc.cc:490:replace_alu$2457 [17] $auto$alumacc.cc:490:replace_alu$2457 [18] $auto$alumacc.cc:490:replace_alu$2457 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2439: { $auto$alumacc.cc:490:replace_alu$2435 [0] $auto$alumacc.cc:490:replace_alu$2435 [1] $auto$alumacc.cc:490:replace_alu$2435 [2] $auto$alumacc.cc:490:replace_alu$2435 [3] $auto$alumacc.cc:490:replace_alu$2435 [4] $auto$alumacc.cc:490:replace_alu$2435 [5] $auto$alumacc.cc:490:replace_alu$2435 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2446: { $auto$alumacc.cc:490:replace_alu$2444 [0] $auto$alumacc.cc:490:replace_alu$2444 [1] $auto$alumacc.cc:490:replace_alu$2444 [2] $auto$alumacc.cc:490:replace_alu$2444 [3] $auto$alumacc.cc:490:replace_alu$2444 [4] $auto$alumacc.cc:490:replace_alu$2444 [5] $auto$alumacc.cc:490:replace_alu$2444 [6] $auto$alumacc.cc:490:replace_alu$2444 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2359: { $auto$alumacc.cc:490:replace_alu$2357 [0] $auto$alumacc.cc:490:replace_alu$2357 [1] $auto$alumacc.cc:490:replace_alu$2357 [2] $auto$alumacc.cc:490:replace_alu$2357 [3] $auto$alumacc.cc:490:replace_alu$2357 [4] $auto$alumacc.cc:490:replace_alu$2357 [5] $auto$alumacc.cc:490:replace_alu$2357 [6] $auto$alumacc.cc:490:replace_alu$2357 [7] $auto$alumacc.cc:490:replace_alu$2357 [8] $auto$alumacc.cc:490:replace_alu$2357 [9] $auto$alumacc.cc:490:replace_alu$2357 [10] $auto$alumacc.cc:490:replace_alu$2357 [11] $auto$alumacc.cc:490:replace_alu$2357 [12] $auto$alumacc.cc:490:replace_alu$2357 [13] $auto$alumacc.cc:490:replace_alu$2357 [14] $auto$alumacc.cc:490:replace_alu$2357 [15] $auto$alumacc.cc:490:replace_alu$2357 [16] $auto$alumacc.cc:490:replace_alu$2357 [17] $auto$alumacc.cc:490:replace_alu$2357 [18] $auto$alumacc.cc:490:replace_alu$2357 [19] $auto$alumacc.cc:490:replace_alu$2357 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2374: { $auto$alumacc.cc:490:replace_alu$2368 [0] $auto$alumacc.cc:490:replace_alu$2368 [1] $auto$alumacc.cc:490:replace_alu$2368 [2] $auto$alumacc.cc:490:replace_alu$2368 [3] $auto$alumacc.cc:490:replace_alu$2368 [4] $auto$alumacc.cc:490:replace_alu$2368 [5] $auto$alumacc.cc:490:replace_alu$2368 [6] $auto$alumacc.cc:490:replace_alu$2368 [7] $auto$alumacc.cc:490:replace_alu$2368 [8] $auto$alumacc.cc:490:replace_alu$2368 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2383: { $auto$alumacc.cc:490:replace_alu$2379 [0] $auto$alumacc.cc:490:replace_alu$2379 [1] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2394: { $auto$alumacc.cc:490:replace_alu$2388 [0] $auto$alumacc.cc:490:replace_alu$2388 [1] $auto$alumacc.cc:490:replace_alu$2388 [2] $auto$alumacc.cc:490:replace_alu$2388 [3] $auto$alumacc.cc:490:replace_alu$2388 [4] $auto$alumacc.cc:490:replace_alu$2388 [5] $auto$alumacc.cc:490:replace_alu$2388 [6] $auto$alumacc.cc:490:replace_alu$2388 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2403: { $auto$alumacc.cc:490:replace_alu$2399 [0] $auto$alumacc.cc:490:replace_alu$2399 [1] $auto$alumacc.cc:490:replace_alu$2399 [2] $auto$alumacc.cc:490:replace_alu$2399 [3] $auto$alumacc.cc:490:replace_alu$2399 [4] $auto$alumacc.cc:490:replace_alu$2399 [5] $auto$alumacc.cc:490:replace_alu$2399 [6] $auto$alumacc.cc:490:replace_alu$2399 [7] $auto$alumacc.cc:490:replace_alu$2399 [8] $auto$alumacc.cc:490:replace_alu$2399 [9] $auto$alumacc.cc:490:replace_alu$2399 [10] $auto$alumacc.cc:490:replace_alu$2399 [11] $auto$alumacc.cc:490:replace_alu$2399 [12] $auto$alumacc.cc:490:replace_alu$2399 [13] $auto$alumacc.cc:490:replace_alu$2399 [14] $auto$alumacc.cc:490:replace_alu$2399 [15] $auto$alumacc.cc:490:replace_alu$2399 [16] $auto$alumacc.cc:490:replace_alu$2399 [17] $auto$alumacc.cc:490:replace_alu$2399 [18] $auto$alumacc.cc:490:replace_alu$2399 [19] $auto$alumacc.cc:490:replace_alu$2399 [20] }
  Optimizing cells in module \top.
Performed a total of 47 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \reg168 [15:2] = 14'xxxxxxxxxxxxxx to constant driver in module module95.
Promoted 1 init specs to constant drivers.

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 9 unused cells and 94 unused wires.
<suppressed ~16 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
Optimizing module top.

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module177..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module80..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module95..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~174 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module13.
  Optimizing cells in module \module177.
  Optimizing cells in module \module26.
  Optimizing cells in module \module4.
  Optimizing cells in module \module80.
  Optimizing cells in module \module95.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
Optimizing module top.

2.13.16. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.reg224 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
Optimizing module top.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
<suppressed ~1 debug messages>
Optimizing module module177.
<suppressed ~57 debug messages>
Optimizing module module26.
<suppressed ~58 debug messages>
Optimizing module module4.
<suppressed ~23 debug messages>
Optimizing module module80.
<suppressed ~11 debug messages>
Optimizing module module95.
<suppressed ~192 debug messages>
Optimizing module top.
<suppressed ~151 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
<suppressed ~3 debug messages>
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 8 unused cells and 137 unused wires.
<suppressed ~22 debug messages>

2.18.5. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
<suppressed ~1 debug messages>
Optimizing module top.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module177..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module80..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module95..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~170 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module13.
  Optimizing cells in module \module177.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:545$456:
      Old ports: A=28'0000000000000000000010011101, B={ 8'10100001 \wire181 }, Y=$ternary$rtl.v:545$456_Y
      New ports: A=21'000000000000010011101, B={ 1'1 \wire181 }, Y=$ternary$rtl.v:545$456_Y [20:0]
      New connections: $ternary$rtl.v:545$456_Y [27:21] = { $ternary$rtl.v:545$456_Y [20] 1'0 $ternary$rtl.v:545$456_Y [20] 4'0000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:546$459:
      Old ports: A={ 7'0000000 \wire179 }, B={ \wire183 [10:8] 8'10100110 }, Y=$ternary$rtl.v:546$459_Y
      New ports: A={ 4'0000 \wire179 }, B={ \wire183 [10:8] 5'10110 }, Y={ $ternary$rtl.v:546$459_Y [10:8] $ternary$rtl.v:546$459_Y [5] $ternary$rtl.v:546$459_Y [3:0] }
      New connections: { $ternary$rtl.v:546$459_Y [7:6] $ternary$rtl.v:546$459_Y [4] } = { $ternary$rtl.v:546$459_Y [5] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:595$530:
      Old ports: A=7'1000010, B={ 3'000 \wire189 }, Y=$ternary$rtl.v:595$530_Y
      New ports: A=5'10010, B={ 1'0 \wire189 }, Y={ $ternary$rtl.v:595$530_Y [6] $ternary$rtl.v:595$530_Y [3:0] }
      New connections: $ternary$rtl.v:595$530_Y [5:4] = 2'00
    Consolidated identical input bits for $mux cell $ternary$rtl.v:599$545:
      Old ports: A={ 3'000 \wire189 }, B=7'1000100, Y=$auto$wreduce.cc:455:run$1703 [6:0]
      New ports: A={ 1'0 \wire189 }, B=5'10100, Y={ $auto$wreduce.cc:455:run$1703 [6] $auto$wreduce.cc:455:run$1703 [3:0] }
      New connections: $auto$wreduce.cc:455:run$1703 [5:4] = 2'00
  Optimizing cells in module \module177.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:595$533:
      Old ports: A=$ternary$rtl.v:595$530_Y, B=7'0000000, Y=$auto$wreduce.cc:455:run$1701 [6:0]
      New ports: A={ $ternary$rtl.v:595$530_Y [6] $ternary$rtl.v:595$530_Y [3:0] }, B=5'00000, Y={ $auto$wreduce.cc:455:run$1701 [6] $auto$wreduce.cc:455:run$1701 [3:0] }
      New connections: $auto$wreduce.cc:455:run$1701 [5:4] = 2'00
  Optimizing cells in module \module177.
  Optimizing cells in module \module26.
  Optimizing cells in module \module4.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:393$357:
      Old ports: A=8'00000001, B=8'10101110, Y=\wire12
      New ports: A=2'01, B=2'10, Y=\wire12 [1:0]
      New connections: \wire12 [7:2] = { \wire12 [1] 1'0 \wire12 [1] 1'0 \wire12 [1] \wire12 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:401$368:
      Old ports: A={ 7'0000000 \wire11 }, B=8'10101100, Y=$ternary$rtl.v:401$368_Y [7:0]
      New ports: A={ 1'0 \wire11 }, B=2'10, Y={ $ternary$rtl.v:401$368_Y [2] $ternary$rtl.v:401$368_Y [0] }
      New connections: { $ternary$rtl.v:401$368_Y [7:3] $ternary$rtl.v:401$368_Y [1] } = { $ternary$rtl.v:401$368_Y [2] 1'0 $ternary$rtl.v:401$368_Y [2] 1'0 $ternary$rtl.v:401$368_Y [2] 1'0 }
  Optimizing cells in module \module4.
  Optimizing cells in module \module80.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:342$299:
      Old ports: A=3'001, B=3'100, Y=$auto$wreduce.cc:455:run$1737 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$1737 [2] $auto$wreduce.cc:455:run$1737 [0] }
      New connections: $auto$wreduce.cc:455:run$1737 [1] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:343$304:
      Old ports: A={ 1'0 $ternary$rtl.v:343$302_Y }, B={ 9'000010101 $auto$wreduce.cc:455:run$1737 [2:0] }, Y=$auto$wreduce.cc:455:run$1738 [11:0]
      New ports: A=$ternary$rtl.v:343$302_Y, B={ 8'00010101 $auto$wreduce.cc:455:run$1737 [2:0] }, Y=$auto$wreduce.cc:455:run$1738 [10:0]
      New connections: $auto$wreduce.cc:455:run$1738 [11] = 1'0
  Optimizing cells in module \module80.
  Optimizing cells in module \module95.
    Consolidated identical input bits for $mux cell $procmux$1169:
      Old ports: A={ \reg102 [8] \reg102 [8] \reg102 [8] \reg102 [8] \reg102 [8] \reg102 [8] \reg102 [8] \reg102 [8] \reg102 }, B={ 4'0000 $auto$wreduce.cc:455:run$1840 [12:0] }, Y=$procmux$1169_Y
      New ports: A={ \reg102 [8] \reg102 [8] \reg102 [8] \reg102 [8] \reg102 [8] \reg102 }, B={ 1'0 $auto$wreduce.cc:455:run$1840 [12:0] }, Y=$procmux$1169_Y [13:0]
      New connections: $procmux$1169_Y [16:14] = { $procmux$1169_Y [13] $procmux$1169_Y [13] $procmux$1169_Y [13] }
    Consolidated identical input bits for $mux cell $procmux$1178:
      Old ports: A={ 20'00000000000000000000 $ne$rtl.v:1007$903_Y }, B={ $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y }, Y=$procmux$1178_Y
      New ports: A={ 1'0 $ne$rtl.v:1007$903_Y }, B={ $reduce_or$rtl.v:994$890_Y $reduce_or$rtl.v:994$890_Y }, Y=$procmux$1178_Y [1:0]
      New connections: $procmux$1178_Y [20:2] = { $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] $procmux$1178_Y [1] }
    Consolidated identical input bits for $mux cell $procmux$1187:
      Old ports: A={ 6'000000 \reg110 }, B={ 17'00000000000000000 $and$rtl.v:996$891_Y [3:0] }, Y=$procmux$1187_Y
      New ports: A=\reg110, B={ 11'00000000000 $and$rtl.v:996$891_Y [3:0] }, Y=$procmux$1187_Y [14:0]
      New connections: $procmux$1187_Y [20:15] = 6'000000
    Consolidated identical input bits for $mux cell $procmux$1196:
      Old ports: A={ \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15] \reg124 [15:12] }, B={ 15'000000000000000 \reg139 [2] }, Y=$procmux$1196_Y
      New ports: A=\reg124 [15:12], B={ 3'000 \reg139 [2] }, Y=$procmux$1196_Y [3:0]
      New connections: $procmux$1196_Y [15:4] = { $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] $procmux$1196_Y [3] }
    Consolidated identical input bits for $mux cell $procmux$1228:
      Old ports: A={ 16'0000000000000000 $and$rtl.v:1086$1017_Y [0] }, B={ \reg115 [1:0] 14'00000000000000 \wire125 }, Y=$procmux$1228_Y
      New ports: A={ 2'00 $and$rtl.v:1086$1017_Y [0] }, B={ \reg115 [1:0] \wire125 }, Y={ $procmux$1228_Y [16:15] $procmux$1228_Y [0] }
      New connections: $procmux$1228_Y [14:1] = 14'00000000000000
    Consolidated identical input bits for $mux cell $procmux$1240:
      Old ports: A=20'00000000000010111110, B={ $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y }, Y=$procmux$1240_Y
      New ports: A=9'010111110, B={ $ternary$rtl.v:1078$1008_Y [7] $ternary$rtl.v:1078$1008_Y }, Y=$procmux$1240_Y [8:0]
      New connections: $procmux$1240_Y [19:9] = { $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] $procmux$1240_Y [8] }
    Consolidated identical input bits for $mux cell $procmux$1268:
      Old ports: A=6'101011, B={ 5'00000 $auto$wreduce.cc:455:run$1786 [0] }, Y=$auto$wreduce.cc:455:run$1797 [5:0]
      New ports: A=2'11, B={ 1'0 $auto$wreduce.cc:455:run$1786 [0] }, Y=$auto$wreduce.cc:455:run$1797 [1:0]
      New connections: $auto$wreduce.cc:455:run$1797 [5:2] = { $auto$wreduce.cc:455:run$1797 [1] 1'0 $auto$wreduce.cc:455:run$1797 [1] 1'0 }
    Consolidated identical input bits for $mux cell $procmux$1280:
      Old ports: A=12'111110111110, B={ 11'00000000000 $auto$wreduce.cc:455:run$1776 [0] }, Y=$procmux$1280_Y
      New ports: A=2'10, B={ 1'0 $auto$wreduce.cc:455:run$1776 [0] }, Y=$procmux$1280_Y [1:0]
      New connections: $procmux$1280_Y [11:2] = { $procmux$1280_Y [1] $procmux$1280_Y [1] $procmux$1280_Y [1] $procmux$1280_Y [1] $procmux$1280_Y [1] 1'0 $procmux$1280_Y [1] $procmux$1280_Y [1] $procmux$1280_Y [1] $procmux$1280_Y [1] }
    Consolidated identical input bits for $mux cell $procmux$1345:
      Old ports: A={ 9'000000000 $logic_not$rtl.v:832$648_Y }, B=10'1110101111, Y=$procmux$1345_Y
      New ports: A={ 1'0 $logic_not$rtl.v:832$648_Y }, B=2'11, Y=$procmux$1345_Y [1:0]
      New connections: $procmux$1345_Y [9:2] = { $procmux$1345_Y [1] $procmux$1345_Y [1] $procmux$1345_Y [1] 1'0 $procmux$1345_Y [1] 1'0 $procmux$1345_Y [1] $procmux$1345_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1034$945:
      Old ports: A={ 10'0000000000 \reg158 [6:0] }, B={ 2'00 $auto$wreduce.cc:455:run$1813 [14:0] }, Y=$auto$wreduce.cc:455:run$1814 [16:0]
      New ports: A={ 8'00000000 \reg158 [6:0] }, B=$auto$wreduce.cc:455:run$1813 [14:0], Y=$auto$wreduce.cc:455:run$1814 [14:0]
      New connections: $auto$wreduce.cc:455:run$1814 [16:15] = 2'00
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1039$957:
      Old ports: A={ 8'11111111 $auto$opt_expr.cc:189:group_cell_inputs$2644 }, B={ 9'000000000 \reg124 [4] }, Y=$ternary$rtl.v:1039$957_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$2644 }, B={ 2'00 \reg124 [4] }, Y=$ternary$rtl.v:1039$957_Y [2:0]
      New connections: $ternary$rtl.v:1039$957_Y [9:3] = { $ternary$rtl.v:1039$957_Y [2] $ternary$rtl.v:1039$957_Y [2] $ternary$rtl.v:1039$957_Y [2] $ternary$rtl.v:1039$957_Y [2] $ternary$rtl.v:1039$957_Y [2] $ternary$rtl.v:1039$957_Y [2] $ternary$rtl.v:1039$957_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1056$978:
      Old ports: A={ 7'0000000 $auto$wreduce.cc:455:run$1816 [14:0] }, B={ 19'0000000000000000000 \reg127 [2:0] }, Y=$ternary$rtl.v:1056$978_Y
      New ports: A=$auto$wreduce.cc:455:run$1816 [14:0], B={ 12'000000000000 \reg127 [2:0] }, Y=$ternary$rtl.v:1056$978_Y [14:0]
      New connections: $ternary$rtl.v:1056$978_Y [21:15] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1066$995:
      Old ports: A={ 3'000 \wire99 }, B=8'10111001, Y=$ternary$rtl.v:1066$995_Y
      New ports: A={ 1'0 \wire99 }, B=6'111001, Y=$ternary$rtl.v:1066$995_Y [5:0]
      New connections: $ternary$rtl.v:1066$995_Y [7:6] = { $ternary$rtl.v:1066$995_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1089$1025:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$1819 [10:0] }, B={ 9'000000000 \reg111 }, Y=$ternary$rtl.v:1089$1025_Y
      New ports: A={ 2'00 $auto$wreduce.cc:455:run$1819 [10:0] }, B=\reg111, Y=$ternary$rtl.v:1089$1025_Y [12:0]
      New connections: $ternary$rtl.v:1089$1025_Y [21:13] = 9'000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:782$594:
      Old ports: A={ 8'00000000 $auto$wreduce.cc:455:run$1804 [0] }, B={ \wire100 [0] 8'10100110 }, Y=$auto$wreduce.cc:455:run$1820 [8:0]
      New ports: A={ 2'00 $auto$wreduce.cc:455:run$1804 [0] }, B={ \wire100 [0] 2'10 }, Y={ $auto$wreduce.cc:455:run$1820 [8] $auto$wreduce.cc:455:run$1820 [1:0] }
      New connections: $auto$wreduce.cc:455:run$1820 [7:2] = { $auto$wreduce.cc:455:run$1820 [1] 1'0 $auto$wreduce.cc:455:run$1820 [1] 2'00 $auto$wreduce.cc:455:run$1820 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:783$598:
      Old ports: A={ 5'00000 \wire97 }, B=8'10101101, Y=$ternary$rtl.v:783$598_Y
      New ports: A={ 1'0 \wire97 }, B=4'1101, Y=$ternary$rtl.v:783$598_Y [3:0]
      New connections: $ternary$rtl.v:783$598_Y [7:4] = { $ternary$rtl.v:783$598_Y [3] 1'0 $ternary$rtl.v:783$598_Y [3] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:822$639:
      Old ports: A=8'10100010, B={ 5'00000 \reg105 [7:5] }, Y=$ternary$rtl.v:822$639_Y
      New ports: A=4'1010, B={ 1'0 \reg105 [7:5] }, Y={ $ternary$rtl.v:822$639_Y [5] $ternary$rtl.v:822$639_Y [2:0] }
      New connections: { $ternary$rtl.v:822$639_Y [7:6] $ternary$rtl.v:822$639_Y [4:3] } = { $ternary$rtl.v:822$639_Y [5] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:914$791:
      Old ports: A={ 16'1111111111111111 $auto$opt_expr.cc:189:group_cell_inputs$2632 }, B={ 16'0000000000000000 $auto$rtlil.cc:1836:ReduceOr$2263 }, Y=$ternary$rtl.v:914$791_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$2632 }, B={ 1'0 $auto$rtlil.cc:1836:ReduceOr$2263 }, Y=$ternary$rtl.v:914$791_Y [1:0]
      New connections: $ternary$rtl.v:914$791_Y [16:2] = { $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] $ternary$rtl.v:914$791_Y [1] }
  Optimizing cells in module \module95.
    New input vector for $reduce_and cell $reduce_and$rtl.v:822$640: 1'0
    New input vector for $reduce_and cell $reduce_and$rtl.v:783$599: 1'0
    Consolidated identical input bits for $mux cell $procmux$1171:
      Old ports: A=$auto$wreduce.cc:455:run$1814 [16:0], B=$procmux$1169_Y, Y=$0\reg151[16:0]
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$1814 [14:0] }, B={ $procmux$1169_Y [13] $procmux$1169_Y [13] $procmux$1169_Y [13:0] }, Y=$0\reg151[16:0] [15:0]
      New connections: $0\reg151[16:0] [16] = $0\reg151[16:0] [15]
    Consolidated identical input bits for $mux cell $procmux$1189:
      Old ports: A={ 7'0000000 $auto$wreduce.cc:455:run$1794 [13:0] }, B=$procmux$1187_Y, Y=$0\reg153[20:0]
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$1794 [13:0] }, B=$procmux$1187_Y [14:0], Y=$0\reg153[20:0] [14:0]
      New connections: $0\reg153[20:0] [20:15] = 6'000000
    Consolidated identical input bits for $mux cell $procmux$1198:
      Old ports: A={ 15'000000000000000 $auto$wreduce.cc:455:run$1795 [0] }, B=$procmux$1196_Y, Y=$0\reg154[15:0]
      New ports: A={ 3'000 $auto$wreduce.cc:455:run$1795 [0] }, B=$procmux$1196_Y [3:0], Y=$0\reg154[15:0] [3:0]
      New connections: $0\reg154[15:0] [15:4] = { $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] $0\reg154[15:0] [3] }
    Consolidated identical input bits for $mux cell $procmux$1231:
      Old ports: A=$procmux$1228_Y, B={ 16'0000000000000000 $auto$rtlil.cc:1832:Not$2093 }, Y=$0\reg159[16:0]
      New ports: A={ $procmux$1228_Y [16:15] $procmux$1228_Y [0] }, B={ 2'00 $auto$rtlil.cc:1832:Not$2093 }, Y={ $0\reg159[16:0] [16:15] $0\reg159[16:0] [0] }
      New connections: $0\reg159[16:0] [14:1] = 14'00000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:782$595:
      Old ports: A={ 4'0000 \wire99 }, B=$auto$wreduce.cc:455:run$1820 [8:0], Y=$auto$wreduce.cc:455:run$1821 [8:0]
      New ports: A={ 2'00 \wire99 }, B={ $auto$wreduce.cc:455:run$1820 [8] $auto$wreduce.cc:455:run$1820 [1] 2'00 $auto$wreduce.cc:455:run$1820 [1] $auto$wreduce.cc:455:run$1820 [1:0] }, Y={ $auto$wreduce.cc:455:run$1821 [8] $auto$wreduce.cc:455:run$1821 [5:0] }
      New connections: $auto$wreduce.cc:455:run$1821 [7:6] = { $auto$wreduce.cc:455:run$1821 [5] 1'0 }
  Optimizing cells in module \module95.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:783$602:
      Old ports: A={ 8'00000000 $auto$wreduce.cc:455:run$1800 [0] }, B=$auto$wreduce.cc:455:run$1821 [8:0], Y=$auto$wreduce.cc:455:run$1822 [8:0]
      New ports: A={ 6'000000 $auto$wreduce.cc:455:run$1800 [0] }, B={ $auto$wreduce.cc:455:run$1821 [8] $auto$wreduce.cc:455:run$1821 [5:0] }, Y={ $auto$wreduce.cc:455:run$1822 [8] $auto$wreduce.cc:455:run$1822 [5:0] }
      New connections: $auto$wreduce.cc:455:run$1822 [7:6] = { $auto$wreduce.cc:455:run$1822 [5] 1'0 }
  Optimizing cells in module \module95.
    Consolidated identical input bits for $mux cell $procmux$1306:
      Old ports: A={ \wire100 [2] \wire100 [2] \wire100 [2] \wire100 [2] \wire100 [2] \wire100 [2] \wire100 [2:0] }, B=$auto$wreduce.cc:455:run$1822 [8:0], Y=$0\reg102[8:0]
      New ports: A={ \wire100 [2] \wire100 [2] \wire100 [2] \wire100 [2] \wire100 [2] \wire100 [2:0] }, B={ $auto$wreduce.cc:455:run$1822 [8] 1'0 $auto$wreduce.cc:455:run$1822 [5:0] }, Y={ $0\reg102[8:0] [8] $0\reg102[8:0] [6:0] }
      New connections: $0\reg102[8:0] [7] = $0\reg102[8:0] [5]
  Optimizing cells in module \module95.
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $reduce_and$rtl.v:139$68: { \wire45 [13] \wire45 [14] \wire45 [15] \wire45 [16] \wire45 [17] \wire45 [18] \wire45 [19] \wire45 [20] $auto$opt_expr.cc:189:group_cell_inputs$2675 [0] $auto$opt_expr.cc:189:group_cell_inputs$2675 [1] $auto$opt_expr.cc:189:group_cell_inputs$2675 [2] $auto$opt_expr.cc:189:group_cell_inputs$2675 [3] $auto$opt_expr.cc:189:group_cell_inputs$2675 [4] $auto$opt_expr.cc:189:group_cell_inputs$2675 [5] $auto$opt_expr.cc:189:group_cell_inputs$2675 [6] $auto$opt_expr.cc:189:group_cell_inputs$2675 [7] $auto$opt_expr.cc:189:group_cell_inputs$2675 [8] $auto$opt_expr.cc:189:group_cell_inputs$2675 [9] $auto$opt_expr.cc:189:group_cell_inputs$2675 [10] $auto$opt_expr.cc:189:group_cell_inputs$2675 [11] $auto$opt_expr.cc:189:group_cell_inputs$2675 [12] }
    Consolidated identical input bits for $mux cell $procmux$1537:
      Old ports: A={ 8'10101000 $auto$opt_expr.cc:189:group_cell_inputs$2667 }, B={ 8'00000000 $auto$rtlil.cc:1836:ReduceOr$2464 }, Y=$0\reg49[11:0]
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$2667 }, B={ 1'0 $auto$rtlil.cc:1836:ReduceOr$2464 }, Y={ $0\reg49[11:0] [4] $0\reg49[11:0] [0] }
      New connections: { $0\reg49[11:0] [8:5] $0\reg49[11:0] [3:1] } = { $0\reg49[11:0] [4] 1'0 $0\reg49[11:0] [4] 4'0000 }
    Consolidated identical input bits for $mux cell $procmux$1549:
      Old ports: A={ \reg54 [5] \reg54 [5] \reg54 [5] \reg54 [5] \reg54 }, B={ $shr$rtl.v:136$61_Y [3] $shr$rtl.v:136$61_Y [3] $shr$rtl.v:136$61_Y [3] $shr$rtl.v:136$61_Y [3] $shr$rtl.v:136$61_Y [3] $shr$rtl.v:136$61_Y [3] $shr$rtl.v:136$61_Y }, Y=$procmux$1549_Y
      New ports: A=\reg54, B={ $shr$rtl.v:136$61_Y [3] $shr$rtl.v:136$61_Y [3] $shr$rtl.v:136$61_Y }, Y=$procmux$1549_Y [5:0]
      New connections: $procmux$1549_Y [9:6] = { $procmux$1549_Y [5] $procmux$1549_Y [5] $procmux$1549_Y [5] $procmux$1549_Y [5] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:132$53:
      Old ports: A=8'10111111, B={ 5'00000 \reg47 [2:0] }, Y=$ternary$rtl.v:132$53_Y [7:0]
      New ports: A=4'1111, B={ 1'0 \reg47 [2:0] }, Y=$ternary$rtl.v:132$53_Y [3:0]
      New connections: $ternary$rtl.v:132$53_Y [7:4] = { $ternary$rtl.v:132$53_Y [3] 1'0 $ternary$rtl.v:132$53_Y [3] $ternary$rtl.v:132$53_Y [3] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:132$56:
      Old ports: A={ 14'00000000000000 $eq$rtl.v:132$54_Y [0] }, B={ 7'0000000 $ternary$rtl.v:132$53_Y [7:0] }, Y=$ternary$rtl.v:132$56_Y
      New ports: A={ 7'0000000 $eq$rtl.v:132$54_Y [0] }, B=$ternary$rtl.v:132$53_Y [7:0], Y=$ternary$rtl.v:132$56_Y [7:0]
      New connections: $ternary$rtl.v:132$56_Y [14:8] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:194$125:
      Old ports: A={ 9'000000000 $auto$wreduce.cc:455:run$1871 [5:0] }, B={ 14'00000000000000 \reg64 [4] }, Y=$ternary$rtl.v:194$125_Y
      New ports: A=$auto$wreduce.cc:455:run$1871 [5:0], B={ 5'00000 \reg64 [4] }, Y=$ternary$rtl.v:194$125_Y [5:0]
      New connections: $ternary$rtl.v:194$125_Y [14:6] = 9'000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:201$137:
      Old ports: A=8'10111111, B={ 4'0000 \reg60 [3:0] }, Y=$ternary$rtl.v:201$137_Y [7:0]
      New ports: A=5'11111, B={ 1'0 \reg60 [3:0] }, Y=$ternary$rtl.v:201$137_Y [4:0]
      New connections: $ternary$rtl.v:201$137_Y [7:5] = { $ternary$rtl.v:201$137_Y [4] 1'0 $ternary$rtl.v:201$137_Y [4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:207$154:
      Old ports: A={ 5'00000 $auto$wreduce.cc:455:run$1868 [0] }, B=6'111110, Y=$auto$wreduce.cc:455:run$1874 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$1868 [0] }, B=2'10, Y=$auto$wreduce.cc:455:run$1874 [1:0]
      New connections: $auto$wreduce.cc:455:run$1874 [5:2] = { $auto$wreduce.cc:455:run$1874 [1] $auto$wreduce.cc:455:run$1874 [1] $auto$wreduce.cc:455:run$1874 [1] $auto$wreduce.cc:455:run$1874 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:208$159:
      Old ports: A={ 20'00000000000000000000 $auto$rtlil.cc:1836:ReduceOr$2397 }, B={ 17'00000000000000000 \reg63 [7:4] }, Y=$0\reg66[20:0]
      New ports: A={ 3'000 $auto$rtlil.cc:1836:ReduceOr$2397 }, B=\reg63 [7:4], Y=$0\reg66[20:0] [3:0]
      New connections: $0\reg66[20:0] [20:4] = 17'00000000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:215$177:
      Old ports: A={ 6'000000 \reg61 [1:0] }, B=8'10110101, Y=$ternary$rtl.v:215$177_Y
      New ports: A={ 1'0 \reg61 [1:0] }, B=3'101, Y=$ternary$rtl.v:215$177_Y [2:0]
      New connections: $ternary$rtl.v:215$177_Y [7:3] = { $ternary$rtl.v:215$177_Y [2] 1'0 $ternary$rtl.v:215$177_Y [2] $ternary$rtl.v:215$177_Y [2] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:231$195:
      Old ports: A={ 8'10101000 \wire48 }, B={ 2'00 \reg70 }, Y=$auto$wreduce.cc:455:run$1879 [8:0]
      New ports: A={ 7'1101000 \wire48 }, B={ 1'0 \reg70 }, Y={ $auto$wreduce.cc:455:run$1879 [8] $auto$wreduce.cc:455:run$1879 [6:0] }
      New connections: $auto$wreduce.cc:455:run$1879 [7] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:235$203:
      Old ports: A={ \reg61 11'00010101000 \wire48 }, B={ 12'000000000000 \reg70 }, Y=$ternary$rtl.v:235$203_Y
      New ports: A={ \reg61 7'1101000 \wire48 }, B={ 8'00000000 \reg70 }, Y={ $ternary$rtl.v:235$203_Y [18:12] $ternary$rtl.v:235$203_Y [8] $ternary$rtl.v:235$203_Y [6:0] }
      New connections: { $ternary$rtl.v:235$203_Y [11:9] $ternary$rtl.v:235$203_Y [7] } = 4'0000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:253$215:
      Old ports: A={ 8'10101000 \wire48 }, B={ 2'00 \reg61 }, Y=$auto$wreduce.cc:455:run$1881 [8:0]
      New ports: A={ 7'1101000 \wire48 }, B={ 1'0 \reg61 }, Y={ $auto$wreduce.cc:455:run$1881 [8] $auto$wreduce.cc:455:run$1881 [6:0] }
      New connections: $auto$wreduce.cc:455:run$1881 [7] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:132$56:
      Old ports: A={ 7'0000000 $eq$rtl.v:132$54_Y [0] }, B=$ternary$rtl.v:132$53_Y [7:0], Y=$ternary$rtl.v:132$56_Y [7:0]
      New ports: A={ 3'000 $eq$rtl.v:132$54_Y [0] }, B=$ternary$rtl.v:132$53_Y [3:0], Y=$ternary$rtl.v:132$56_Y [3:0]
      New connections: $ternary$rtl.v:132$56_Y [7:4] = { $ternary$rtl.v:132$56_Y [3] 1'0 $ternary$rtl.v:132$56_Y [3] $ternary$rtl.v:132$56_Y [3] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:215$179:
      Old ports: A={ 7'0000000 $auto$rtlil.cc:1836:ReduceOr$2386 }, B=$ternary$rtl.v:215$177_Y, Y=$ternary$rtl.v:215$179_Y
      New ports: A={ 2'00 $auto$rtlil.cc:1836:ReduceOr$2386 }, B=$ternary$rtl.v:215$177_Y [2:0], Y=$ternary$rtl.v:215$179_Y [2:0]
      New connections: $ternary$rtl.v:215$179_Y [7:3] = { $ternary$rtl.v:215$179_Y [2] 1'0 $ternary$rtl.v:215$179_Y [2] $ternary$rtl.v:215$179_Y [2] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:232$198:
      Old ports: A={ 5'00000 \reg53 [4:2] $reduce_and$rtl.v:232$196_Y }, B=$auto$wreduce.cc:455:run$1879 [8:0], Y=$auto$wreduce.cc:455:run$1880 [8:0]
      New ports: A={ 4'0000 \reg53 [4:2] $reduce_and$rtl.v:232$196_Y }, B={ $auto$wreduce.cc:455:run$1879 [8] $auto$wreduce.cc:455:run$1879 [6:0] }, Y={ $auto$wreduce.cc:455:run$1880 [8] $auto$wreduce.cc:455:run$1880 [6:0] }
      New connections: $auto$wreduce.cc:455:run$1880 [7] = 1'0
  Optimizing cells in module \top.
Performed a total of 52 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
<suppressed ~3 debug messages>
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
<suppressed ~9 debug messages>
Optimizing module module26.
Optimizing module module4.
<suppressed ~8 debug messages>
Optimizing module module80.
Optimizing module module95.
<suppressed ~10 debug messages>
Optimizing module top.
<suppressed ~13 debug messages>

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module177..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module80..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module95..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~168 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module13.
  Optimizing cells in module \module177.
  Optimizing cells in module \module26.
  Optimizing cells in module \module4.
  Optimizing cells in module \module80.
  Optimizing cells in module \module95.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~4 debug messages>

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
Optimizing module top.

2.20.16. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xnor.
Using template $paramod$constmap:983a12e9a4207b69a3b7b072176b2d23797f70e8$paramod$397dd4e0c8247bbdefd509c988e6cc9426749e9e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:4655e266c8835af237ac3589cb1b3353614d0a2e$paramod$2f7d6653bea9cfd338be9e945be77905f74d541d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$constmap:65fbb2f65e26e8683cf755a9e46c342ba91b13cb$paramod$9c1b4e4ec610daecec41f3e852550155ce65aeff\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:974fac99f694e4b6f4740956c7e56acbffb2406d$paramod$b37f8dc0d65fc55c016c2230cb3d0038b8e842ec\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:bd2849a781e59b436b1e1f4adb3bec37ed28b533$paramod$2199b11d7d0aad66e97600a40dba7272e7d133d9\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod$constmap:c82b0d4e641fab7874bacef426fa5a451f5c0367$paramod$fe54126cfa340f31adbaabf8ba39cddee95575e3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $reduce_xnor.
Using template $paramod$constmap:3e3cc0ab331d2b60cc071f254b2fcafa4cc3930e$paramod$2859f60b4b7a8f343becb30ce6ca842ce6811f50\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$constmap:ae654833b14d6509e43f1c3b2d7424ddb0685bce$paramod$21dbc142504c6ecc0c86d16025a06234d7125503\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:b5233d63927a6f8e88fe2190895df871ce8c70c4$paramod$5b8fd47072ffb961545d72b8a32e4eef330e7652\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=7\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=6\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add { 17'00000000000000000 \reg60 [3:0] } * { $ternary$rtl.v:201$137_Y [7] 1'0 $ternary$rtl.v:201$137_Y [7] $ternary$rtl.v:201$137_Y [7] $ternary$rtl.v:201$137_Y [3:0] } (21x8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=17\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=3\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=21 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=22 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=18 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=13 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=20 for cells of type $lcu.
Using template $paramod$constmap:9146bff705ee9a485356dff88734e9184bc12cce$paramod$4d5c0d644c5168e9616dfcea6e1c7e67f92acf0f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=18\Y_WIDTH=21 for cells of type $alu.
Using template $paramod$constmap:7f2d214324c94981551584a93475ff07efce6782$paramod$816fe24871a8034773a7e9b5a370f8f90723aed2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:72d6c30ae11afa53c0b26bab82afeba9756c1451$paramod$5d896ac6b613fcac880a9ca6ad7ea5cd04a624f1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=31 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=16 for cells of type $lcu.
  sub { \reg19 [9] \reg19 [9] \reg19 [9] \reg19 [9] \reg19 [9] \reg19 [9:0] \wire17 } * \wire17 (25x10 bits, unsigned)
  add $sshr$rtl.v:458$424_Y * $auto$wreduce.cc:455:run$1689 (21x16 bits, unsigned)
Using template $paramod$constmap:a8775524fb442b98883f8b5d9f5fbb756e6db2b8$paramod$b088743fcb7e10d7f0cf960504faa19d331fea0e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:8e4ca0247477afdc992cfb719dbad111f591a41b$paramod$60704ee6db155e68f62969e7bbd708f3221de48c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=28\Y_WIDTH=28 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=10 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=21 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=28 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=23\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=4\B_WIDTH=34\Y_WIDTH=34 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=13\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod$constmap:70f135bc01e94533964efdefbf64ca566cbb1a3f$paramod$53d0ffbd58d1516fb80cc68b86dbdc54b2a447d0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=10\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=12\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod$constmap:68070ef0ee88d5b1a2a6c46c4fef9bf1bff835a9$paramod$70c58d5c42ea9a1ca130ed74e456221e4c2ac37b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:84bf927042c517ce809a0fee0af32b53639b0256$paramod$3b56ae0efd58675f550dc00311f22a0dd0e3acc0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=41\Y_WIDTH=41 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=6\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=10\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod$constmap:8c23048f416a306bed83f548d19ca679a929bcb9$paramod$e70c49fe79bdf8cb61d15ee8f8e7596293f64919\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:994464948eb3785fdf3a5ade260805926dbacfad$paramod$155e2707cf421e5d92fbeb0106d2d6dc96f3aa85\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:6f3dbb5049cccc2e1c3a08be97d7ee9d66a875f1$paramod$5178d403ca9208d449380ee6f54eed9d5da1f999\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:6cc9b907108eb10d3791aaaee1b18790027430f4$paramod$fe5715e896608afe6ec80368a161ff81ee806b54\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:5c61188b540930e12819d99ae5648577462897cb$paramod$7af1f79a3d1e58a707e18358d824a4d573e006f5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=27\B_WIDTH=41\Y_WIDTH=41 for cells of type $alu.
Using template $paramod$constmap:d14a77ed4f2c4bda3a981af9b48ebe71ed0da3eb$paramod$b690cd324a747a0b503c23defa215e046032ee4c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
  add $ternary$rtl.v:1030$927_Y * \reg105 (16x10 bits, unsigned)
  add $auto$wreduce.cc:455:run$1828 [10:0] * $sshr$rtl.v:861$709_Y (11x22 bits, unsigned)
  add \reg116 (12 bits, unsigned)
  sub \reg116 (12 bits, unsigned)
  add bits \reg104 [2] (1 bits)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$constmap:4313706da5f03b8aa887c270ce3ff4156f9c8526$paramod$fbbd1315454f96b6efc1d1d9c2ebadde52d0537a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
  add { \reg106 \reg114 } * \wire100 [2] (16x1 bits, unsigned)
Using template $paramod$constmap:8f771ecb19176548fd1b3b34191acc2244ea0866$paramod$b6e9ed9e2454de0139086a6d1dae93fa95fae3ca\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:343d5bf964fbde3314566bd95cd7027785ed71af$paramod$7eae757a73069a414a59a89e6e5fc8df7189799f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:7e4875d24f897b1796a15b5399f24781a1d28e41$paramod$b4c9d45bc5cb515f03180c48f7a06fdbe85b1cb0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
  add \reg113 * 8'10101011 (16x8 bits, unsigned)
  sub $auto$rtlil.cc:1836:ReduceOr$2122 (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$constmap:0256e7d75f71c34f44cf6ab884e4e5b576509e08$paramod$ab4aaa11265672b23a725287fa009c65d7c8a902\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:6137bd8b34f3aea2cebcdc26e787cdaa07d6874f$paramod$f6d5e64571c9f57a4655515d2deb907ae02491ca\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:83a0eddae9e7766b44405f67cda0117f3c5e9cc0$paramod$109016f60fdd5c2f1aa9cf6cdbcdc166a6dbf87f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4ef5c2b923c39ccfabe53bccf51cd1dc5d61a55d$paramod$ce5536d9cf91da95c00c95d1b40b45516c71b768\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:4d55eb8594c47aeb5e261291562560ac4a948111$paramod$8b6ed840e81fa57af88cb1b7430ac07e4fa6efd7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=12\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod$constmap:903449805a581d7a5245e571223b373d126780f1$paramod$3f66e8ed45c767400356f23a58d1928b9b9018a4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:05c77d4a5ee7eaf2e46a755bf8e8d44f664cf5fd$paramod$0eec5b19fe613118dd3a5e59ced72023d50b64ed\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_lcu\WIDTH=23 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=34 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=19 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=15 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=12 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=41 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=16 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=11 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=12 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod$constmap:9f50e68ad1b8d267304c2aa50d3fd2d095474188$paramod$8124faaa719a96e90b4352cdad572229c3f7e9eb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:a36b431c7003ffd44bc3d96d395a6bb38741d335$paramod$2976654b1bf8d890b316e914a075df591a79a2bc\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:ed4fd64d5369c594dc3e20b732e95a5dfd8be209$paramod$07707ff95254b64fe0b91c18eb47c93777db6b3e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=28\Y_WIDTH=28 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod$constmap:64a421333b5fa2787d111db889976883c72207fb$paramod$e77a8d5950edc8f70a2ee227fe008f426faf3a52\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:ef283c872dc00a37a5895087d82bb8eda90a5ebb$paramod$64540bb2db786c7263d6a2fd49810060bf3cdf98\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
  add $shl$rtl.v:435$419_Y * $auto$wreduce.cc:455:run$1711 [0] (10x1 bits, unsigned)
  add \wire28 * $auto$wreduce.cc:455:run$1708 [0] (21x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=30 for cells of type $lcu.
No more expansions possible.
<suppressed ~18237 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
<suppressed ~2459 debug messages>
Optimizing module module177.
<suppressed ~247 debug messages>
Optimizing module module26.
<suppressed ~188 debug messages>
Optimizing module module4.
<suppressed ~264 debug messages>
Optimizing module module80.
<suppressed ~581 debug messages>
Optimizing module module95.
<suppressed ~4039 debug messages>
Optimizing module top.
<suppressed ~1475 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
<suppressed ~294 debug messages>
Finding identical cells in module `\module177'.
<suppressed ~198 debug messages>
Finding identical cells in module `\module26'.
<suppressed ~225 debug messages>
Finding identical cells in module `\module4'.
<suppressed ~54 debug messages>
Finding identical cells in module `\module80'.
<suppressed ~156 debug messages>
Finding identical cells in module `\module95'.
<suppressed ~1749 debug messages>
Finding identical cells in module `\top'.
<suppressed ~762 debug messages>
Removed a total of 1146 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$35061 ($_DFF_P_) from module module177.
Removing $auto$simplemap.cc:420:simplemap_dff$25773 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25495 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25494 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25493 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25492 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25491 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25490 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25488 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25487 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25486 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25485 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25484 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25483 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25482 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25481 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25480 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25479 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25478 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25477 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25476 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25460 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$25489 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$6775 ($_DFF_P_) from module top.
Replaced 24 DFF cells.

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 2240 unused cells and 5796 unused wires.
<suppressed ~2247 debug messages>

2.22.5. Rerunning OPT passes. (Removed registers in this run.)

2.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
<suppressed ~1 debug messages>
Optimizing module module177.
<suppressed ~8 debug messages>
Optimizing module module26.
<suppressed ~7 debug messages>
Optimizing module module4.
<suppressed ~3 debug messages>
Optimizing module module80.
Optimizing module module95.
<suppressed ~157 debug messages>
Optimizing module top.
<suppressed ~65 debug messages>

2.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
<suppressed ~33 debug messages>
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 13 cells.

2.22.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$25151 ($_DFF_P_) from module module95.
Removing $auto$simplemap.cc:420:simplemap_dff$6564 ($_DFF_P_) from module top.
Promoting init spec \reg224 [18:1] = 18'000000000000000000 to constant driver in module top.
Promoted 1 init specs to constant drivers.
Replaced 2 DFF cells.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 151 unused cells and 126 unused wires.
<suppressed ~156 debug messages>

2.22.10. Rerunning OPT passes. (Removed registers in this run.)

2.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
Optimizing module module177.
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
Optimizing module module95.
Optimizing module top.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
Finding identical cells in module `\module177'.
Finding identical cells in module `\module26'.
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..

2.22.15. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\module13' to `<abc-temp-dir>/input.blif'..
Extracted 900 gates and 997 wires to a netlist network with 95 inputs and 27 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       29
ABC RESULTS:            ANDNOT cells:      102
ABC RESULTS:              AOI3 cells:       29
ABC RESULTS:              AOI4 cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               MUX cells:       87
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               NOT cells:       30
ABC RESULTS:              OAI3 cells:       30
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      112
ABC RESULTS:             ORNOT cells:       62
ABC RESULTS:              XNOR cells:       28
ABC RESULTS:               XOR cells:       94
ABC RESULTS:        internal signals:      875
ABC RESULTS:           input signals:       95
ABC RESULTS:          output signals:       27
Removing temp directory.

2.23.2. Extracting gate netlist of module `\module177' to `<abc-temp-dir>/input.blif'..
Extracted 512 gates and 563 wires to a netlist network with 49 inputs and 41 outputs.

2.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:       63
ABC RESULTS:              AOI3 cells:       21
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:       40
ABC RESULTS:              NAND cells:       28
ABC RESULTS:               NOR cells:       14
ABC RESULTS:               NOT cells:       45
ABC RESULTS:              OAI3 cells:       31
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:       88
ABC RESULTS:             ORNOT cells:       29
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:       48
ABC RESULTS:        internal signals:      473
ABC RESULTS:           input signals:       49
ABC RESULTS:          output signals:       41
Removing temp directory.

2.23.3. Extracting gate netlist of module `\module26' to `<abc-temp-dir>/input.blif'..
Extracted 580 gates and 647 wires to a netlist network with 64 inputs and 20 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:       51
ABC RESULTS:              AOI3 cells:       13
ABC RESULTS:              AOI4 cells:        5
ABC RESULTS:               MUX cells:      127
ABC RESULTS:              NAND cells:       16
ABC RESULTS:               NOR cells:       14
ABC RESULTS:               NOT cells:       40
ABC RESULTS:              OAI3 cells:       20
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:      136
ABC RESULTS:             ORNOT cells:       23
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               XOR cells:       37
ABC RESULTS:        internal signals:      563
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       20
Removing temp directory.

2.23.4. Extracting gate netlist of module `\module4' to `<abc-temp-dir>/input.blif'..
Extracted 195 gates and 252 wires to a netlist network with 56 inputs and 26 outputs.

2.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:       31
ABC RESULTS:              AOI3 cells:        5
ABC RESULTS:               MUX cells:       25
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:       11
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:       59
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        7
ABC RESULTS:               XOR cells:       15
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       56
ABC RESULTS:          output signals:       26
Removing temp directory.

2.23.5. Extracting gate netlist of module `\module80' to `<abc-temp-dir>/input.blif'..
Extracted 238 gates and 299 wires to a netlist network with 59 inputs and 5 outputs.

2.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:              AOI3 cells:        8
ABC RESULTS:               MUX cells:       18
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        6
ABC RESULTS:              OAI3 cells:        3
ABC RESULTS:                OR cells:       56
ABC RESULTS:             ORNOT cells:       14
ABC RESULTS:              XNOR cells:       14
ABC RESULTS:               XOR cells:       29
ABC RESULTS:        internal signals:      235
ABC RESULTS:           input signals:       59
ABC RESULTS:          output signals:        5
Removing temp directory.

2.23.6. Extracting gate netlist of module `\module95' to `<abc-temp-dir>/input.blif'..
Extracted 6052 gates and 6668 wires to a netlist network with 614 inputs and 591 outputs.

2.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      144
ABC RESULTS:            ANDNOT cells:      980
ABC RESULTS:              AOI3 cells:      248
ABC RESULTS:              AOI4 cells:        6
ABC RESULTS:               MUX cells:     1076
ABC RESULTS:              NAND cells:      140
ABC RESULTS:               NOR cells:      202
ABC RESULTS:               NOT cells:      394
ABC RESULTS:              OAI3 cells:      163
ABC RESULTS:              OAI4 cells:        5
ABC RESULTS:                OR cells:     1039
ABC RESULTS:             ORNOT cells:       99
ABC RESULTS:              XNOR cells:      212
ABC RESULTS:               XOR cells:      541
ABC RESULTS:        internal signals:     5463
ABC RESULTS:           input signals:      614
ABC RESULTS:          output signals:      591
Removing temp directory.

2.23.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 2487 gates and 2849 wires to a netlist network with 360 inputs and 297 outputs.

2.23.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       83
ABC RESULTS:            ANDNOT cells:      377
ABC RESULTS:              AOI3 cells:       83
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      400
ABC RESULTS:              NAND cells:       81
ABC RESULTS:               NOR cells:       70
ABC RESULTS:               NOT cells:      119
ABC RESULTS:              OAI3 cells:       51
ABC RESULTS:              OAI4 cells:        7
ABC RESULTS:                OR cells:      435
ABC RESULTS:             ORNOT cells:       64
ABC RESULTS:              XNOR cells:       46
ABC RESULTS:               XOR cells:      205
ABC RESULTS:        internal signals:     2192
ABC RESULTS:           input signals:      360
ABC RESULTS:          output signals:      297
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module13.
<suppressed ~70 debug messages>
Optimizing module module177.
<suppressed ~10 debug messages>
Optimizing module module26.
Optimizing module module4.
Optimizing module module80.
<suppressed ~1 debug messages>
Optimizing module module95.
<suppressed ~168 debug messages>
Optimizing module top.
<suppressed ~168 debug messages>

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module13'.
<suppressed ~15 debug messages>
Finding identical cells in module `\module177'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module26'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module4'.
Finding identical cells in module `\module80'.
Finding identical cells in module `\module95'.
<suppressed ~33 debug messages>
Finding identical cells in module `\top'.
Removed a total of 18 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module177..
Finding unused cells or wires in module \module26..
Finding unused cells or wires in module \module4..
Finding unused cells or wires in module \module80..
Finding unused cells or wires in module \module95..
Finding unused cells or wires in module \top..
Removed 14 unused cells and 5002 unused wires.
<suppressed ~21 debug messages>

2.24.5. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== module13 ===

   Number of wires:                623
   Number of wire bits:            813
   Number of public wires:          11
   Number of public wire bits:     201
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                647
     $_ANDNOT_                     101
     $_AND_                         27
     $_AOI3_                        29
     $_AOI4_                         3
     $_DFF_P_                       10
     $_MUX_                         87
     $_NAND_                        18
     $_NOR_                         18
     $_NOT_                         28
     $_OAI3_                        30
     $_OAI4_                         2
     $_ORNOT_                       62
     $_OR_                         111
     $_XNOR_                        28
     $_XOR_                         93

=== module177 ===

   Number of wires:                421
   Number of wire bits:           1061
   Number of public wires:          33
   Number of public wire bits:     645
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                442
     $_ANDNOT_                      63
     $_AND_                          8
     $_AOI3_                        21
     $_AOI4_                         2
     $_DFF_P_                       16
     $_MUX_                         39
     $_NAND_                        28
     $_NOR_                         14
     $_NOT_                         45
     $_OAI3_                        31
     $_OAI4_                         2
     $_ORNOT_                       29
     $_OR_                          88
     $_XNOR_                         8
     $_XOR_                         48

=== module26 ===

   Number of wires:                491
   Number of wire bits:            683
   Number of public wires:          13
   Number of public wire bits:     205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                498
     $_ANDNOT_                      51
     $_AND_                          6
     $_AOI3_                        13
     $_AOI4_                         5
     $_MUX_                        127
     $_NAND_                        15
     $_NOR_                         14
     $_NOT_                         40
     $_OAI3_                        20
     $_OAI4_                         1
     $_ORNOT_                       23
     $_OR_                         136
     $_XNOR_                        10
     $_XOR_                         37

=== module4 ===

   Number of wires:                162
   Number of wire bits:            544
   Number of public wires:          15
   Number of public wire bits:     286
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                173
     $_ANDNOT_                      31
     $_AND_                          3
     $_AOI3_                         5
     $_MUX_                         25
     $_NAND_                         7
     $_NOR_                          3
     $_NOT_                         11
     $_OAI3_                         2
     $_ORNOT_                        3
     $_OR_                          59
     $_XNOR_                         7
     $_XOR_                         15
     module13                        1
     module26                        1

=== module80 ===

   Number of wires:                202
   Number of wire bits:           1625
   Number of public wires:          20
   Number of public wire bits:     356
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                187
     $_ANDNOT_                      15
     $_AND_                          4
     $_AOI3_                         8
     $_DFF_P_                        1
     $_MUX_                         18
     $_NAND_                         8
     $_NOR_                          9
     $_NOT_                          6
     $_OAI3_                         3
     $_ORNOT_                       14
     $_OR_                          56
     $_XNOR_                        14
     $_XOR_                         29
     module177                       1
     module95                        1

=== module95 ===

   Number of wires:               4773
   Number of wire bits:           7002
   Number of public wires:          79
   Number of public wire bits:    1741
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5840
     $_ANDNOT_                     980
     $_AND_                        144
     $_AOI3_                       248
     $_AOI4_                         6
     $_DFF_P_                      608
     $_MUX_                       1076
     $_NAND_                       139
     $_NOR_                        198
     $_NOT_                        388
     $_OAI3_                       163
     $_OAI4_                         5
     $_ORNOT_                       99
     $_OR_                        1035
     $_XNOR_                       212
     $_XOR_                        539

=== top ===

   Number of wires:               1800
   Number of wire bits:           3570
   Number of public wires:          50
   Number of public wire bits:    1157
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2307
     $_ANDNOT_                     377
     $_AND_                         83
     $_AOI3_                        83
     $_AOI4_                         2
     $_DFF_P_                      287
     $_MUX_                        400
     $_NAND_                        81
     $_NOR_                         70
     $_NOT_                        113
     $_OAI3_                        51
     $_OAI4_                         7
     $_ORNOT_                       64
     $_OR_                         435
     $_XNOR_                        46
     $_XOR_                        205
     module13                        1
     module4                         1
     module80                        1

2.27. Executing CHECK pass (checking for obvious problems).
checking module module13..
checking module module177..
checking module module26..
checking module module4..
checking module module80..
checking module module95..
checking module top..
found and reported 0 problems.

3. Executing Verilog backend.
Dumping module `\module13'.
Dumping module `\module177'.
Dumping module `\module26'.
Dumping module `\module4'.
Dumping module `\module80'.
Dumping module `\module95'.
Dumping module `\top'.

Warnings: 26 unique messages, 26 total
End of script. Logfile hash: 9e38a1f3ec
CPU: user 12.16s system 0.04s, MEM: 116.01 MB total, 102.62 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 25% 65x proc (3 sec), 17% 2x techmap (2 sec), ...
